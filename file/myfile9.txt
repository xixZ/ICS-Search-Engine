##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Contemporary-Mathematics.html
##-----------------TITLE------------------------##
Contemporary Mathematics
##------------------TEXT------------------------##
Contemporary Mathematics

			
				Advances in Discrete and Computational Geometry – Proc. 1996 AMS-IMS-SIAM Joint Summer Research Conf. Discrete and Computational Geometry: Ten Years LaterTowards a Theory of Geometric Graphs

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Advances-in-Discrete-and-Computational-Geometry-Proc-1996-AMS-IMS-SIAM-Joint-Summer-Research-Conf-Discrete-and-Computational-Geometry-Ten-Years-Later.html
##-----------------TITLE------------------------##
Advances in Discrete and Computational Geometry – Proc. 1996 AMS-IMS-SIAM Joint Summer Research Conf. Discrete and Computational Geometry: Ten Years Later
##------------------TEXT------------------------##
Advances in Discrete and Computational Geometry – Proc. 1996 AMS-IMS-SIAM Joint Summer Research Conf. Discrete and Computational Geometry: Ten Years Later

			
				Application challenges to computational geometry, CGITF-ADCG-99Computational topology, DeyEdeGuh-ADCG-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/IMA-J-Numerical-Analysis.html
##-----------------TITLE------------------------##
IMA J. Numerical Analysis
##------------------TEXT------------------------##
IMA J. Numerical Analysis

			
				Gradient superconvergence on uniform simplicial partitions of polytopes , BraKri-IMANA-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-ALCOM-Spring-School-on-Parallel-Computation.html
##-----------------TITLE------------------------##
Proc. ALCOM Spring School on Parallel Computation
##------------------TEXT------------------------##
Proc. ALCOM Spring School on Parallel Computation

			
				General purpose parallel computing, McC-ALCOM-93

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-IEEERSJ-Int-Conf-Intelligent-Robots-and-Systems-(IROS-2003).html
##-----------------TITLE------------------------##
Proc. IEEE/RSJ Int. Conf. Intelligent Robots and Systems (IROS 2003)
##------------------TEXT------------------------##
Proc. IEEE/RSJ Int. Conf. Intelligent Robots and Systems (IROS 2003)

			
				ShareCam part II: approximate and distributed algorithms for a collaboratively controlled robotic webcam, SonGolPas-IROS-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Worksh-Synchronizing-Automata-Turku-(WSA-2004).html
##-----------------TITLE------------------------##
Proc. Worksh. Synchronizing Automata, Turku (WSA 2004)
##------------------TEXT------------------------##
Proc. Worksh. Synchronizing Automata, Turku (WSA 2004)

			
				Synchronizing generalized monotonic automata, AnaVol-WSA-04{\v{C}}erný's conjecture: retrospects and prospects, Rys-WSA-04{\v{C}}erný conjecture for DFA accepting star-free languages, Tra-WSA-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-3rd-Int-Cong-Industrial-+-Applied-Mathematics.html
##-----------------TITLE------------------------##
Proc. 3rd Int. Cong. Industrial & Applied Mathematics
##------------------TEXT------------------------##
Proc. 3rd Int. Cong. Industrial & Applied Mathematics

			
				Optimal triangulation problems, Tan-ICIAM-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Machine-Learning-Worksh-(FGML-2003).html
##-----------------TITLE------------------------##
Proc. Machine Learning Worksh. (FGML 2003)
##------------------TEXT------------------------##
Proc. Machine Learning Worksh. (FGML 2003)

			
				Effective rule induction from molecular structures represented by labeled graphs, HocHorWro-FGML-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-6th-CGC-Worksh-Computational-Geometry.html
##-----------------TITLE------------------------##
Proc. 6th CGC Worksh. Computational Geometry
##------------------TEXT------------------------##
Proc. 6th CGC Worksh. Computational Geometry

			
				Dynamic rectilinear point location using hashing, Iac-CGC-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/IFIP-Conference-Proceedings.html
##-----------------TITLE------------------------##
IFIP Conference Proceedings
##------------------TEXT------------------------##
IFIP Conference Proceedings

			
				Proc. 2nd IFIP Int. Conf. Theoretical Computer Science (TCS 2002)

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Australian-Computer-Science-Communications.html
##-----------------TITLE------------------------##
Australian Computer Science Communications
##------------------TEXT------------------------##
Australian Computer Science Communications

			
				Proc. 17th Computer Science Conf.

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Discrete-Mathematics-+-Theoretical-Computer-Science.html
##-----------------TITLE------------------------##
Discrete Mathematics & Theoretical Computer Science
##------------------TEXT------------------------##
Discrete Mathematics & Theoretical Computer Science

			
				Stacks, queues and tracks: layouts of graph subdivisions, DujWoo-DMTCS-05

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-8th-Eur-Conf-Mathematics-of-Oil-Recovery-(ECMOR-2002).html
##-----------------TITLE------------------------##
Proc. 8th Eur. Conf. Mathematics of Oil Recovery (ECMOR 2002)
##------------------TEXT------------------------##
Proc. 8th Eur. Conf. Mathematics of Oil Recovery (ECMOR 2002)

			
				Atomic meshes: from seismic images to reservoir simulation, Hal-ECMOR-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-8th-Eur-Worksh-Natural-Language-Generation.html
##-----------------TITLE------------------------##
Proc. 8th Eur. Worksh. Natural Language Generation
##------------------TEXT------------------------##
Proc. 8th Eur. Worksh. Natural Language Generation

			
				A meta-algorithm for the generation of referring expressions, KraErkVer-EWNLG-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-7th-Int-Conf-in-Central-Europe-on-Computer-Graphics-Visualization-and-Interactive-Digital-Media-(WSCG-1999).html
##-----------------TITLE------------------------##
Proc. 7th Int. Conf. in Central Europe on Computer Graphics, Visualization and Interactive Digital Media (WSCG 1999)
##------------------TEXT------------------------##
Proc. 7th Int. Conf. in Central Europe on Computer Graphics, Visualization and Interactive Digital Media (WSCG 1999)

			
				Analysis of the quasi-Monte Carlo integration of the rendering equation, SziPur-WSCG-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Int-Worksh-Semigroups-and-Languages.html
##-----------------TITLE------------------------##
Proc. Int. Worksh. Semigroups and Languages
##------------------TEXT------------------------##
Proc. Int. Worksh. Semigroups and Languages

			
				Some results on {\v{C}}erný type problems for transformation semigroups, AnaVol-IWSL-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Technical-report.html
##-----------------TITLE------------------------##
Technical report
##------------------TEXT------------------------##
Technical report

			
				Proc. 6th Nordic Worksh. Secure IT Systems

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Assembly-Automation.html
##-----------------TITLE------------------------##
Assembly Automation
##------------------TEXT------------------------##
Assembly Automation

			
				Aligning parts for micro assemblies, MolGolErd-AA-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/IPSJ-SiG-Notes.html
##-----------------TITLE------------------------##
IPSJ SiG Notes
##------------------TEXT------------------------##
IPSJ SiG Notes

			
				On the NP-completeness of the Slither Link Puzzle, Yat-IPSJSN-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Satisfiability-Problem-Theory-and-Applications.html
##-----------------TITLE------------------------##
Satisfiability Problem: Theory and Applications
##------------------TEXT------------------------##
Satisfiability Problem: Theory and Applications

			
				Worst-case analysis, 3-SAT decision and lower bounds: approaches for improved SAT algorithms, Kul-SPTA-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-10th-Canad-Conf-Computational-Geometry.html
##-----------------TITLE------------------------##
Proc. 10th Canad. Conf. Computational Geometry
##------------------TEXT------------------------##
Proc. 10th Canad. Conf. Computational Geometry

			
				On the multiple label placement problem, KakTol-CCCG-98Subexponential-time algorithms for minimum-weight triangulation and related problems, Lin-CCCG-98Computational investigations of the optimality of two- and three-dimensional triangulations under several criteria, TajIma-CCCG-98

				Proceedings are available only electronically, at http://cgm.cs.mcgill.ca/cccg98/proceedings/

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Telematic.html
##-----------------TITLE------------------------##
Telematic
##------------------TEXT------------------------##
Telematic

			
				Points and combinatorics, AicAurKra-TM-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Annales-Societatis-Mathematicae-Polonae-ser-IV.html
##-----------------TITLE------------------------##
Annales Societatis Mathematicae Polonae, ser. IV
##------------------TEXT------------------------##
Annales Societatis Mathematicae Polonae, ser. IV

			
				Fundamenta Informaticae

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-5th-Worksh-Algorithm-Engineering-(WAE-2001).html
##-----------------TITLE------------------------##
Proc. 5th Worksh. Algorithm Engineering (WAE 2001)
##------------------TEXT------------------------##
Proc. 5th Worksh. Algorithm Engineering (WAE 2001)

			
				Using PRAM algorithms on a uniform-memory-access shared-memory architecture, BadIllMor-WAE-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-10th-Int-Meshing-Roundtable.html
##-----------------TITLE------------------------##
Proc. 10th Int. Meshing Roundtable
##------------------TEXT------------------------##
Proc. 10th Int. Meshing Roundtable

			
				Flipping cubical meshes{}, BerEpp-IMR-01Sample shuffling for quality hierarchic surface meshing, DeyGieHud-IMR-01Local optimization-based untangling algorithms for quadrilateral meshes, FrePla-IMR-01Atomic images – a method for meshing digital images, Hal-IMR-01Preconditioners for indefinite linear systems arising in surface parameterization, LieStuShe-IMR-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-2nd-SIAM-Worksh-Combinatorial-Scientific-Computing-(CSC-2004).html
##-----------------TITLE------------------------##
Proc. 2nd SIAM Worksh. Combinatorial Scientific Computing (CSC 2004)
##------------------TEXT------------------------##
Proc. 2nd SIAM Worksh. Combinatorial Scientific Computing (CSC 2004)

			
				Combinatorial aspects of dual-based hexahedral mesh modification , Tau-CSC-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/New-Results-and-Trends-in-Computer-Science-on-occasion-of-H-Maurers-50th-birthday.html
##-----------------TITLE------------------------##
New Results and Trends in Computer Science: on occasion of H. Maurer's 50th birthday
##------------------TEXT------------------------##
New Results and Trends in Computer Science: on occasion of H. Maurer's 50th birthday

			
				On the zone theorem for hyperplane arrangements, EdeSeiSha-NRT-91

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Numerical-Methods-for-Partial-Differential-Equations.html
##-----------------TITLE------------------------##
Numerical Methods for Partial Differential Equations
##------------------TEXT------------------------##
Numerical Methods for Partial Differential Equations

			
				Finite volume methods on Voronoi meshes, Mic-NMPDE-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/ALCOM-Report.html
##-----------------TITLE------------------------##
ALCOM Report
##------------------TEXT------------------------##
ALCOM Report

			
				Efficient sequential and parallel algorithms for computing recovery points in trees and paths, ChrEppIta-TR-91

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Image-and-Video-Communications-and-Processing-(IVCP-2003).html
##-----------------TITLE------------------------##
Proc. Image and Video Communications and Processing (IVCP 2003)
##------------------TEXT------------------------##
Proc. Image and Video Communications and Processing (IVCP 2003)

			
				Recognition of user-defined video object models using weighted graph homomorphisms , FarWitEff-IVCP-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-3rd-Int-Colloq-Words-Languages-and-Combinatorics-(ICWLC-2000).html
##-----------------TITLE------------------------##
Proc. 3rd Int. Colloq. Words, Languages and Combinatorics (ICWLC 2000)
##------------------TEXT------------------------##
Proc. 3rd Int. Colloq. Words, Languages and Combinatorics (ICWLC 2000)

			
				Words guaranteeing minimal image, MarPinVol-ICWLC-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-1st-Int-Worksh-Mining-Graphs-Trees-+-Sequences-(MGTS-2003).html
##-----------------TITLE------------------------##
Proc. 1st Int. Worksh. Mining Graphs, Trees & Sequences (MGTS 2003)
##------------------TEXT------------------------##
Proc. 1st Int. Worksh. Mining Graphs, Trees & Sequences (MGTS 2003)

			
				Effective rule induction from molecular structures represented by labeled graphs, HocHorWro-MGTS-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-16th-Int-Coll-Automata-Languages-and-Programming-(ICALP-1989).html
##-----------------TITLE------------------------##
Proc. 16th Int. Coll. Automata, Languages, and Programming (ICALP 1989)
##------------------TEXT------------------------##
Proc. 16th Int. Coll. Automata, Languages, and Programming (ICALP 1989)

			
				Parallel algorithmic techniques for combinatorial computation, EppGal-ICALP-89Parallel retrieval of scattered information, HagNow-ICALP-89

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-17th-Canad-Conf-Computational-Geometry-(CCCG-2005).html
##-----------------TITLE------------------------##
Proc. 17th Canad. Conf. Computational Geometry (CCCG 2005)
##------------------TEXT------------------------##
Proc. 17th Canad. Conf. Computational Geometry (CCCG 2005)

			
				Approximation algorithms for maximum cliques in 3D unit-disk graphs, AfsCha-CCCG-05Staying in the middle: exact and approximate medians in $R^1$ and $R^2$ for moving points, AgaBerGao-CCCG-05The translation-scale-rotation diagram for point-containing placements of a convex polygon, BarSch-CCCG-05Drawing planar bipartite graphs with small area, BieBra-CCCG-05Space-efficient algorithms for Klee's measure problem, CheCha-CCCG-05A fast algorithm for point labeling problem, RoyBhaDas-CCCG-05Finding a triangular mesh with a constant number of different edge lengths, TanKat-CCCG-05

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Advances-in-Neural-Information-Processing-Systems.html
##-----------------TITLE------------------------##
Advances in Neural Information Processing Systems
##------------------TEXT------------------------##
Advances in Neural Information Processing Systems

			
				Proc. 15th Conf. Neiral Information Processing Systems

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-6th-Nordic-Worksh-Secure-IT-Systems.html
##-----------------TITLE------------------------##
Proc. 6th Nordic Worksh. Secure IT Systems
##------------------TEXT------------------------##
Proc. 6th Nordic Worksh. Secure IT Systems

			
				An expert system for analyzing firewall rules, EroZit-NordSec-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Information-Science-+-Engineering.html
##-----------------TITLE------------------------##
J. Information Science & Engineering
##------------------TEXT------------------------##
J. Information Science & Engineering

			
				Parallel decomposition of generalized series-parallel graphs, HoHsiChe-JISE-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-6th-Scandinavian-Worksh-Algorithm-Theory-(SWAT-1998).html
##-----------------TITLE------------------------##
Proc. 6th Scandinavian Worksh. Algorithm Theory (SWAT 1998)
##------------------TEXT------------------------##
Proc. 6th Scandinavian Worksh. Algorithm Theory (SWAT 1998)

			
				Constrained square center problems, KatKedSeg-SWAT-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-8th-Canad-Conf-Computational-Geometry.html
##-----------------TITLE------------------------##
Proc. 8th Canad. Conf. Computational Geometry
##------------------TEXT------------------------##
Proc. 8th Canad. Conf. Computational Geometry

			
				Maintaining visibility of a polygon with a moving point of view, CheDae-CCCG-96Viewing a set of spheres while moving on a linear flightpath, Fol-CCCG-96Enclosing $k$ points in the smallest axis parallel rectangle, SegKed-CCCG-96

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-IEEEIFIP-8th-Int-Symp-Integrated-Network-Management-(IM-2003).html
##-----------------TITLE------------------------##
Proc. IEEE/IFIP 8th Int. Symp. Integrated Network Management (IM 2003)
##------------------TEXT------------------------##
Proc. IEEE/IFIP 8th Int. Symp. Integrated Network Management (IM 2003)

			
				Firewall policy advisor for anomaly detection and rule editing, AlSHam-IM-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-3rd-Int-ConfWorksh-Integrating-GIS-and-Environmental-Modeling.html
##-----------------TITLE------------------------##
Proc. 3rd Int. Conf./Worksh. Integrating GIS and Environmental Modeling
##------------------TEXT------------------------##
Proc. 3rd Int. Conf./Worksh. Integrating GIS and Environmental Modeling

			
				Applications of 3D Delaunay triangulation algorithms in geoscientific modelling, LatRap-IGEM-96

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-25th-Conf-Eur-Assoc-for-Computer-Graphics-(EuroGraphics-04).html
##-----------------TITLE------------------------##
Proc. 25th Conf. Eur. Assoc. for Computer Graphics (EuroGraphics '04)
##------------------TEXT------------------------##
Proc. 25th Conf. Eur. Assoc. for Computer Graphics (EuroGraphics '04)

			
				Single-strip triangulation of manifolds with arbitrary topology, GopEpp-EG-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Encyclopaedia-of-Mathematical-Sciences.html
##-----------------TITLE------------------------##
Encyclopaedia of Mathematical Sciences
##------------------TEXT------------------------##
Encyclopaedia of Mathematical Sciences

			
				Probability on Discrete Structures

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Licentiate-thesis.html
##-----------------TITLE------------------------##
Licentiate thesis
##------------------TEXT------------------------##
Licentiate thesis

			
				Data Structures for Bandwidth Reservations and Quality of Service on the Internet, Nil-Lic-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-17th-Int-Coll-Automata-Languages-and-Programming-(ICALP-1990).html
##-----------------TITLE------------------------##
Proc. 17th Int. Coll. Automata, Languages, and Programming (ICALP 1990)
##------------------TEXT------------------------##
Proc. 17th Int. Coll. Automata, Languages, and Programming (ICALP 1990)

			
				On-line graph algorithms with SPQR-trees, diBTam-ICALP-90On parallel hashing and integer sorting, MatVis-ICALP-90

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-1st-Int-Conf-Computing-+-Information.html
##-----------------TITLE------------------------##
Proc. 1st Int. Conf. Computing & Information
##------------------TEXT------------------------##
Proc. 1st Int. Conf. Computing & Information

			
				Probabilistic and unambiguous computation are incomparable, EppHemTis-ICCI-89

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-21st-Symp-Theoretical-Aspects-of-Computer-Science-(STACS-2004).html
##-----------------TITLE------------------------##
Proc. 21st Symp. Theoretical Aspects of Computer Science (STACS 2004)
##------------------TEXT------------------------##
Proc. 21st Symp. Theoretical Aspects of Computer Science (STACS 2004)

			
				A simple and fast approach for solving problems on planar graphs, FomThi-STACS-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Jenaer-Schriften-zur-Mathematik-und-Informatik.html
##-----------------TITLE------------------------##
Jenaer Schriften zur Mathematik und Informatik
##------------------TEXT------------------------##
Jenaer Schriften zur Mathematik und Informatik

			
				Decision Support Systems With Multiple Choice Structure, Alt-TR-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Electronic-J-Combinatorics.html
##-----------------TITLE------------------------##
Electronic J. Combinatorics
##------------------TEXT------------------------##
Electronic J. Combinatorics

			
				Cubic partial cubes from simplicial arrangements, Epp-EJC-06Oriented matroids today, Zie-EJC-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-35th-Mtg-AAS-Division-on-Dynamical-Astronomy.html
##-----------------TITLE------------------------##
Proc. 35th Mtg. AAS Division on Dynamical Astronomy
##------------------TEXT------------------------##
Proc. 35th Mtg. AAS Division on Dynamical Astronomy

			
				Orbit determination with very short arcs: admissible regions, MilGrodeM-AASDDA-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-17th-Int-Worksh-Graph-Theoretic-Concepts-in-Computer-Science-(WG-1991).html
##-----------------TITLE------------------------##
Proc. 17th Int. Worksh. Graph-Theoretic Concepts in Computer Science (WG 1991)
##------------------TEXT------------------------##
Proc. 17th Int. Worksh. Graph-Theoretic Concepts in Computer Science (WG 1991)

			
				Dynamic algorithms for shortest paths in planar graphs, FeuMar-WG-91

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Computer-Science-Today-Recent-Trends-and-Developments.html
##-----------------TITLE------------------------##
Computer Science Today: Recent Trends and Developments
##------------------TEXT------------------------##
Computer Science Today: Recent Trends and Developments

			
				Algorithmic techniqes for geometric optimization, AgaSha-CST-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-5th-Worksh-Algorithms-and-Data-Structures-(WADS-1997).html
##-----------------TITLE------------------------##
Proc. 5th Worksh. Algorithms and Data Structures (WADS 1997)
##------------------TEXT------------------------##
Proc. 5th Worksh. Algorithms and Data Structures (WADS 1997)

			
				Maintaining the extent of a geometric point set, AgaGuiHer-WADS-97Offset-polygon annulus placement problems, BarBriDic-WADS-97An efficient algorithm for shortest paths in vertical and horizontal segments, EppHar-WADS-97Geometric applications of posets, SegKed-WADS-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-1st-Int-Conf-Computing-+-Combinatorics-(COCOON-1995).html
##-----------------TITLE------------------------##
Proc. 1st Int. Conf. Computing & Combinatorics (COCOON 1995)
##------------------TEXT------------------------##
Proc. 1st Int. Conf. Computing & Combinatorics (COCOON 1995)

			
				Three dimensional weak visibility: complexity and applications, WanZhu-COCOON-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-7th-Symp-Combinatorial-Pattern-Matching-(CPM-1996).html
##-----------------TITLE------------------------##
Proc. 7th Symp. Combinatorial Pattern Matching (CPM 1996)
##------------------TEXT------------------------##
Proc. 7th Symp. Combinatorial Pattern Matching (CPM 1996)

			
				Approximation algorithms for maximum two-dimensional pattern matching, AriDesLin-CPM-96

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-13th-Int-Conf-Rewriting-Techniques-+-Applications-(RTA-2002).html
##-----------------TITLE------------------------##
Proc. 13th Int. Conf. Rewriting Techniques & Applications (RTA 2002)
##------------------TEXT------------------------##
Proc. 13th Int. Conf. Rewriting Techniques & Applications (RTA 2002)

			
				Rewrite games, Wal-RTA-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-10th-Scand-Worksh-Algorithm-Theory-(SWAT-2006).html
##-----------------TITLE------------------------##
Proc. 10th Scand. Worksh. Algorithm Theory (SWAT 2006)
##------------------TEXT------------------------##
Proc. 10th Scand. Worksh. Algorithm Theory (SWAT 2006)

			
				The weighted maximum-mean subtree and other bicriterion subtree problems, CarEpp-SWAT-06

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-28th-Int-Coll-Automata-Languages-and-Programming-(ICALP-2001).html
##-----------------TITLE------------------------##
Proc. 28th Int. Coll. Automata, Languages, and Programming (ICALP 2001)
##------------------TEXT------------------------##
Proc. 28th Int. Coll. Automata, Languages, and Programming (ICALP 2001)

			
				Approximating the minimum spanning tree weight in sublinear time, ChaRubTre-ICALP-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Pure-and-Applied-Mathematics.html
##-----------------TITLE------------------------##
Pure and Applied Mathematics
##------------------TEXT------------------------##
Pure and Applied Mathematics

			
				Discrete Geometry: In honor of W. Kuperberg's 60th birthday

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Mitteilungen-des-Bundesamtes-fuer-Kartographie-und-Geodaesie.html
##-----------------TITLE------------------------##
Mitteilungen des Bundesamtes für Kartographie und Geodäsie
##------------------TEXT------------------------##
Mitteilungen des Bundesamtes für Kartographie und Geodäsie

			
				Neue Untersuchungen zur Integration von DGM und DSM mittels Triangulationen zur Berechnung integrierter 2.5D-Landschaftsmodelle, LenHei-MBKG-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Int-J-Circuit-Theory-+-Applications.html
##-----------------TITLE------------------------##
Int. J. Circuit Theory & Applications
##------------------TEXT------------------------##
Int. J. Circuit Theory & Applications

			
				Generation of color-constrained spanning trees with application in symbolic circuit analysis, YuSec-IJCTA-96

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Voronois-Impact-on-Modern-Sciences-II.html
##-----------------TITLE------------------------##
Voronoi's Impact on Modern Sciences II
##------------------TEXT------------------------##
Voronoi's Impact on Modern Sciences II

			
				Straight skeletons for general polygonal figures in the plane, AicAur-VIMS-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Synthesis-of-Parallel-Algorithms.html
##-----------------TITLE------------------------##
Synthesis of Parallel Algorithms
##------------------TEXT------------------------##
Synthesis of Parallel Algorithms

			
				The Complexity of Computation on the Parallel Random Access Machine, Fic-SPA-93

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-2003-Winter-Simulation-Conference-(WSC-2003).html
##-----------------TITLE------------------------##
Proc. 2003 Winter Simulation Conference (WSC 2003)
##------------------TEXT------------------------##
Proc. 2003 Winter Simulation Conference (WSC 2003)

			
				An algorithm for fully reversible optimistic parallel simulation, PetCar-WSC-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Algorithms-and-Computation-in-Mathematics.html
##-----------------TITLE------------------------##
Algorithms and Computation in Mathematics
##------------------TEXT------------------------##
Algorithms and Computation in Mathematics

			
				Graphs, Networks, and Algorithms, Jun-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Jahrbuechern-fuer-Nationaloekonomie-und-Statistik.html
##-----------------TITLE------------------------##
Jahrbüchern für Nationalökonomie und Statistik
##------------------TEXT------------------------##
Jahrbüchern für Nationalökonomie und Statistik

			
				Zufall und Quasi-Monte Carlo Ansätze: Einige Anmerkungen zu Grundlagen und Anwendungen in Statistik und Ökonometrie, WinFan-JNOS-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/IEICE-Trans-Electronics.html
##-----------------TITLE------------------------##
IEICE Trans. Electronics
##------------------TEXT------------------------##
IEICE Trans. Electronics

			
				Mesh generation for application in technology CAD, FlePykSel-IEICE-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/AIAA-J.html
##-----------------TITLE------------------------##
AIAA J.
##------------------TEXT------------------------##
AIAA J.

			
				Efficient massively parallel Euler solver for two-dimensional unstructured grids, HamBar-AIAA-92

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-3rd-Int-Worksh-Efficient-and-Experimental-Algorithms-(WEA-2004).html
##-----------------TITLE------------------------##
Proc. 3rd Int. Worksh. Efficient and Experimental Algorithms (WEA 2004)
##------------------TEXT------------------------##
Proc. 3rd Int. Worksh. Efficient and Experimental Algorithms (WEA 2004)

			
				A dynamic algorithm for topologically sorting directed acyclic graphs, PeaKel-WEA-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Mathematical-Systems-Theory.html
##-----------------TITLE------------------------##
Mathematical Systems Theory
##------------------TEXT------------------------##
Mathematical Systems Theory

			
				Simultaneous strong separations of probabilistic and unambiguous complexity classes, EppHemTis-MST-92Strong self-reducibility precludes strong immunity, HemZim-MST-96Selection and sorting in totally monotone arrays, KraPar-MST-91

				Now known as Theory of Computing Systems.

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Inst-Math-Nat-Acad-Sci-Ukraine.html
##-----------------TITLE------------------------##
Proc. Inst. Math. Nat. Acad. Sci. Ukraine
##------------------TEXT------------------------##
Proc. Inst. Math. Nat. Acad. Sci. Ukraine

			
				Voronoi's Impact on Modern Sciences II

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-10th-Conf-Pattern-Languages-of-Programs-(PLoP-2003).html
##-----------------TITLE------------------------##
Proc. 10th Conf. Pattern Languages of Programs (PLoP 2003)
##------------------TEXT------------------------##
Proc. 10th Conf. Pattern Languages of Programs (PLoP 2003)

			
				Additional patterns for parallel application programs, MasMatSan-PLoP-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Eurographics-Book-Series.html
##-----------------TITLE------------------------##
Eurographics Book Series
##------------------TEXT------------------------##
Eurographics Book Series

			
				Proc. 7th Int. Worksh. Computer Animation and Simulation

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Chicago-J-Theoretical-Computer-Science.html
##-----------------TITLE------------------------##
Chicago J. Theoretical Computer Science
##------------------TEXT------------------------##
Chicago J. Theoretical Computer Science

			
				On limited versus polynomial nondeterminism, FeiKil-CJTCS-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Australian-Computer-J.html
##-----------------TITLE------------------------##
Australian Computer J.
##------------------TEXT------------------------##
Australian Computer J.

			
				Basic parallel algorithmic techniques for shared-memory machines, Alb-ACJ-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Computing.html
##-----------------TITLE------------------------##
Computing
##------------------TEXT------------------------##
Computing

			
				Polynomially solvable cases of the traveling salesman problem and a new exponential neighborhood, BurDei-Comp-95Computing bounds for the star discrepancy, Thi-Comp-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-8th-Scandinavian-Worksh-Algorithm-Theory-(SWAT-2002).html
##-----------------TITLE------------------------##
Proc. 8th Scandinavian Worksh. Algorithm Theory (SWAT 2002)
##------------------TEXT------------------------##
Proc. 8th Scandinavian Worksh. Algorithm Theory (SWAT 2002)

			
				Time and space efficient multi-method dispatching, AlsBroGor-SWAT-02A factor-2 approximation for labeling points with maximum sliding labels, QinZhu-SWAT-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-1st-Joint-Conf-Computer-Vision-Virtual-Reality-and-Robotics-in-Medecine-(CVRMed-MRCAS-1997).html
##-----------------TITLE------------------------##
Proc. 1st Joint Conf. Computer Vision, Virtual Reality, and Robotics in Medecine (CVRMed-MRCAS 1997)
##------------------TEXT------------------------##
Proc. 1st Joint Conf. Computer Vision, Virtual Reality, and Robotics in Medecine (CVRMed-MRCAS 1997)

			
				Decimation of isosurfaces with deformable models, Del-CVRMed-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Annals-of-Statistics.html
##-----------------TITLE------------------------##
Annals of Statistics
##------------------TEXT------------------------##
Annals of Statistics

			
				Smallest nonparametric tolerance regions, BucEinMus-AS-01On depth and deep points: A calculus, Miz-AS-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Int-J-Computer-Vision.html
##-----------------TITLE------------------------##
Int. J. Computer Vision
##------------------TEXT------------------------##
Int. J. Computer Vision

			
				General object reconstruction based on simplex meshes, Del-IJCV-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Springer-Tracts-in-Advanced-Robotics.html
##-----------------TITLE------------------------##
Springer Tracts in Advanced Robotics
##------------------TEXT------------------------##
Springer Tracts in Advanced Robotics

			
				Proc. 5th Int. Worksh. Algorithmic Foundations of Robotics (WAFR 2002)

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-26th-Conf-Eur-Assoc-for-Computer-Graphics-(EuroGraphics-05).html
##-----------------TITLE------------------------##
Proc. 26th Conf. Eur. Assoc. for Computer Graphics (EuroGraphics '05)
##------------------TEXT------------------------##
Proc. 26th Conf. Eur. Assoc. for Computer Graphics (EuroGraphics '05)

			
				Hierarchyless simplification, stripification and compression of triangulated two-manifolds, DiaGopPaj-EG-05

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Atomization-and-Sprays.html
##-----------------TITLE------------------------##
Atomization and Sprays
##------------------TEXT------------------------##
Atomization and Sprays

			
				Direct interface tracking of droplet deformation, SchDaiWan-AS-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/KSME-Int-J.html
##-----------------TITLE------------------------##
KSME Int. J.
##------------------TEXT------------------------##
KSME Int. J.

			
				Unstructured tetrahedral meshing by an edge-based advancing front method, KimKwoCha-KIJ-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-13th-AIAA-Computational-Fluid-Dynamics-Conf.html
##-----------------TITLE------------------------##
Proc. 13th AIAA Computational Fluid Dynamics Conf.
##------------------TEXT------------------------##
Proc. 13th AIAA Computational Fluid Dynamics Conf.

			
				A computational study of the effect of unstructured mesh quality on solution efficiency, BatFreOll-AIAA-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Discrete-Geometry-In-honor-of-W-Kuperbergs-60th-birthday.html
##-----------------TITLE------------------------##
Discrete Geometry: In honor of W. Kuperberg's 60th birthday
##------------------TEXT------------------------##
Discrete Geometry: In honor of W. Kuperberg's 60th birthday

			
				Vertex-unfoldings of simplicial manifolds, DemEppEri-WK-03Fat 4-polytopes and fatter 3-spheres, EppKupZie-WK-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Bachelors-thesis.html
##-----------------TITLE------------------------##
Bachelor's thesis
##------------------TEXT------------------------##
Bachelor's thesis

			
				Alternatives to Traditional 3d Modelling Methods, Syn-BE-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-5th-Worksh-Computational-Geometry.html
##-----------------TITLE------------------------##
Proc. 5th Worksh. Computational Geometry
##------------------TEXT------------------------##
Proc. 5th Worksh. Computational Geometry

			
				Choosing subsets with maximum weighted average, EppHir-MSI-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Sequences-Combinatorics-Compression-Security-Transmission.html
##-----------------TITLE------------------------##
Sequences: Combinatorics, Compression, Security, Transmission
##------------------TEXT------------------------##
Sequences: Combinatorics, Compression, Security, Transmission

			
				Efficient algorithms with applications to molecular biology, EppGalGia-Seq-90

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-2nd-Int-Worksh-Distributed-Algorithms-(WDAG-1988).html
##-----------------TITLE------------------------##
Proc. 2nd Int. Worksh. Distributed Algorithms (WDAG 1988)
##------------------TEXT------------------------##
Proc. 2nd Int. Worksh. Distributed Algorithms (WDAG 1988)

			
				Experience with a new distributed termination detection algorithm, Mat-IWDA-88

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Physica-D.html
##-----------------TITLE------------------------##
Physica D
##------------------TEXT------------------------##
Physica D

			
				Upper bound on the products of particle interactions in cellular automata, HorShaCru-PD-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Photogrammetrische-Woche-2001.html
##-----------------TITLE------------------------##
Proc. Photogrammetrische Woche 2001
##------------------TEXT------------------------##
Proc. Photogrammetrische Woche 2001

			
				City models — automation in research and practice, Bre-PW-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-IEEE-Symp-BioInformatics-and-BioEngineering-(BIBE-2004).html
##-----------------TITLE------------------------##
Proc. IEEE Symp. BioInformatics and BioEngineering (BIBE 2004)
##------------------TEXT------------------------##
Proc. IEEE Symp. BioInformatics and BioEngineering (BIBE 2004)

			
				Identifying projected clusters from gene expression profiles, YipCheNg-BIBE-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Computers-+-Graphics-UK.html
##-----------------TITLE------------------------##
Computers & Graphics — UK
##------------------TEXT------------------------##
Computers & Graphics — UK

			
				Hierarchical back-face computation, KumManGar-CGUK-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Discrete-and-Computational-Geometry-Papers-from-the-DIMACS-Special-Year.html
##-----------------TITLE------------------------##
Discrete and Computational Geometry: Papers from the DIMACS Special Year
##------------------TEXT------------------------##
Discrete and Computational Geometry: Papers from the DIMACS Special Year

			
				Horizon theorems for lines and polygons, BerEppPla-DCG-91

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Computational-Support-for-Discrete-Mathematics.html
##-----------------TITLE------------------------##
Computational Support for Discrete Mathematics
##------------------TEXT------------------------##
Computational Support for Discrete Mathematics

			
				Rectilinear Steiner tree minimization on a workstation, ThoAlpCar-CSDM-94

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/ACI-Materials-J.html
##-----------------TITLE------------------------##
ACI Materials J.
##------------------TEXT------------------------##
ACI Materials J.

			
				Micromechanical modeling of concrete response under static loading I: Model development and validation, MohHan-AMJ-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-12th-Int-Meshing-Roundtable.html
##-----------------TITLE------------------------##
Proc. 12th Int. Meshing Roundtable
##------------------TEXT------------------------##
Proc. 12th Int. Meshing Roundtable

			
				Multilevel accelerated optimization for problems in grid generation, BerSha-IMR-03BSP-assisted constrained tetrahedralization, JosOur-IMR-03A new algorithm for generating quadrilateral meshes and its application to FE-based image registration, RamSiqSun-IMR-03A mesh warping algorithm based on weighted Laplacian smoothing, ShoVav-IMR-03Topology modification of hexahedral meshes using atomic dual-based operations, TauKno-IMR-03Increasing the number and volume of hexahedral and prism elements in a hex-dominant mesh by topological transformations, YamShi-IMR-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-7th-Eurographics-Worksh-Rendering.html
##-----------------TITLE------------------------##
Proc. 7th Eurographics Worksh. Rendering
##------------------TEXT------------------------##
Proc. 7th Eurographics Worksh. Rendering

			
				Hierarchical back-face computation, KumManGar-EWR-96

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Worksh-Embedded-System-Codesign-(ESCODES-02).html
##-----------------TITLE------------------------##
Proc. Worksh. Embedded System Codesign (ESCODES '02)
##------------------TEXT------------------------##
Proc. Worksh. Embedded System Codesign (ESCODES '02)

			
				Reference caching using unit distance redundant codes for activity reduction on address buses, EppGiv-ESCODES-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Cybernetics-+-Systems-Analysis.html
##-----------------TITLE------------------------##
Cybernetics & Systems Analysis
##------------------TEXT------------------------##
Cybernetics & Systems Analysis

			
				Estimation of the length of reset words for automata with simple idempotents, Rys-CSA-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Visual-Data-Exploration-and-Analysis-VI.html
##-----------------TITLE------------------------##
Visual Data Exploration and Analysis VI
##------------------TEXT------------------------##
Visual Data Exploration and Analysis VI

			
				Piecewise linear hypersurfaces using the marching cubes algorithm, RobHil-VDEA-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-IASTED-Int-Conf-Visualization-Imaging-and-Image-Processing.html
##-----------------TITLE------------------------##
Proc. IASTED Int. Conf. Visualization, Imaging and Image Processing
##------------------TEXT------------------------##
Proc. IASTED Int. Conf. Visualization, Imaging and Image Processing

			
				Improvement of mesh quality using a statistical approach, EgoKojHag-VIIP-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-1st-Latin-American-Symp-Theoretical-Informatics-(LATIN-1992).html
##-----------------TITLE------------------------##
Proc. 1st Latin American Symp. Theoretical Informatics (LATIN 1992)
##------------------TEXT------------------------##
Proc. 1st Latin American Symp. Theoretical Informatics (LATIN 1992)

			
				Edge insertion for optimal triangulation, BerEdeEpp-LATIN-92

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Int-Worksh-Visualization-and-Animation-of-Reality-Based-3D-Models.html
##-----------------TITLE------------------------##
Proc. Int. Worksh. Visualization and Animation of Reality-Based 3D Models
##------------------TEXT------------------------##
Proc. Int. Worksh. Visualization and Animation of Reality-Based 3D Models

			
				From point cloud to surface: the modeling and visualization problem, Fab-VARM-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-7th-Int-Conf-Numerical-Grid-Generation-in-Computational-Field-Simulations.html
##-----------------TITLE------------------------##
Proc. 7th Int. Conf. Numerical Grid Generation in Computational Field Simulations
##------------------TEXT------------------------##
Proc. 7th Int. Conf. Numerical Grid Generation in Computational Field Simulations

			
				Parameterization of CAD surfaces for meshing by triangulation flattening, ShedeS-NGG-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-11th-Int-Symp-Algorithms-+-Computation-(ISAAC-2000).html
##-----------------TITLE------------------------##
Proc. 11th Int. Symp. Algorithms & Computation (ISAAC 2000)
##------------------TEXT------------------------##
Proc. 11th Int. Symp. Algorithms & Computation (ISAAC 2000)

			
				Optimal polygon cover problems and applications, CheHuWu-ISAAC-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-20th-Int-Coll-Automata-Languages-and-Programming-(ICALP-1993).html
##-----------------TITLE------------------------##
Proc. 20th Int. Coll. Automata, Languages, and Programming (ICALP 1993)
##------------------TEXT------------------------##
Proc. 20th Int. Coll. Automata, Languages, and Programming (ICALP 1993)

			
				Fault-tolerance and complexity, Hem-ICALP-93

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Computer-Integrated-Manufacturing-Systems.html
##-----------------TITLE------------------------##
Computer Integrated Manufacturing Systems
##------------------TEXT------------------------##
Computer Integrated Manufacturing Systems

			
				Synthesis of design concepts from a design for assembly perspective, HsuFuhZha-CIMS-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Geombinatorics.html
##-----------------TITLE------------------------##
Geombinatorics
##------------------TEXT------------------------##
Geombinatorics

			
				Heesch tiles with surround numbers 3 and 4, Fri-G-99No-net polyhedra, Gru-Geo-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-17th-Computer-Science-Conf.html
##-----------------TITLE------------------------##
Proc. 17th Computer Science Conf.
##------------------TEXT------------------------##
Proc. 17th Computer Science Conf.

			
				Efficient parallel algorithms for manipulating sorted sets, Kat-ACSC-94

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Annals-of-Operations-Research.html
##-----------------TITLE------------------------##
Annals of Operations Research
##------------------TEXT------------------------##
Annals of Operations Research

			
				Data structures for topological and geometric operations on networks, ChrBadSha-AOR-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Information-+-Computation.html
##-----------------TITLE------------------------##
Information & Computation
##------------------TEXT------------------------##
Information & Computation

			
				Improved deterministic parallel integer sorting, BhaDikHag-IC-91Incremental convex planarity testing, DiBTamVis-IC-01Parallel recognition of series parallel graphs, Epp-IC-92Optimal parallel algorithms on planar graphs, Hag-IC-90Parallel approximation schemes for a class of planar and near planar combinatorial optimization problems, HunMarRad-IC-02How hard is computing the edit distance?, Pig-IC-01

				Previously known as Information & Control.

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/The-Essence-of-Computation-Complexity-Analysis-Transformation-Essays-Dedicated-to-Neil-D-Jones-on-occasion-of-his-60th-birthday.html
##-----------------TITLE------------------------##
The Essence of Computation, Complexity, Analysis, Transformation: Essays Dedicated to Neil D. Jones on occasion of his 60th birthday
##------------------TEXT------------------------##
The Essence of Computation, Complexity, Analysis, Transformation: Essays Dedicated to Neil D. Jones on occasion of his 60th birthday

			
				Principles of inverse computation and the universal resolving algorithm, AbrGlu-ECCAT-02Synchronization of finite automata: contributions to an old problem, Sal-EC-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-12th-Int-Worksh-Functional-and-Constraint-Logic-Programming-(WFLP-2003).html
##-----------------TITLE------------------------##
Proc. 12th Int. Worksh. Functional and Constraint Logic Programming (WFLP 2003)
##------------------TEXT------------------------##
Proc. 12th Int. Worksh. Functional and Constraint Logic Programming (WFLP 2003)

			
				Graphical representations and infinite virtual worlds in a logic and functional programming course, Lab-WFLP-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/SIAM-Review.html
##-----------------TITLE------------------------##
SIAM Review
##------------------TEXT------------------------##
SIAM Review

			
				Well-solvable special cases of the traveling salesman problem: A survey, BurDeiVan-SR-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/BIT.html
##-----------------TITLE------------------------##
BIT
##------------------TEXT------------------------##
BIT

			
				Finding the $k$ smallest spanning trees, Epp-BIT-92A framework for advancing front techniques of finite element mesh generation, FarSim-BIT-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/CVGIP-Image-Understanding.html
##-----------------TITLE------------------------##
CVGIP: Image Understanding
##------------------TEXT------------------------##
CVGIP: Image Understanding

			
				Image analysis and computer vision: 1990, Ros-CVGIP-91

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-27th-Int-Coll-Automata-Languages-and-Programming-(ICALP-2000).html
##-----------------TITLE------------------------##
Proc. 27th Int. Coll. Automata, Languages and Programming (ICALP 2000)
##------------------TEXT------------------------##
Proc. 27th Int. Coll. Automata, Languages and Programming (ICALP 2000)

			
				Computing the girth of a planar graph, Dji-ICALP-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Discrete-Mathematics-+-Theoretical-Computer-Science-Proceedings.html
##-----------------TITLE------------------------##
Discrete Mathematics & Theoretical Computer Science Proceedings
##------------------TEXT------------------------##
Discrete Mathematics & Theoretical Computer Science Proceedings

			
				Proc. Conf.  Discrete Models: Combinatorics, Computation, & Geometry (DM-CCG 2001)

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Calculating-the-Secrets-of-Life-Contributions-of-the-Mathematical-Sciences-to-Molecular-Biology.html
##-----------------TITLE------------------------##
Calculating the Secrets of Life: Contributions of the Mathematical Sciences to Molecular Biology
##------------------TEXT------------------------##
Calculating the Secrets of Life: Contributions of the Mathematical Sciences to Molecular Biology

			
				Seeing conserved signals: Using algorithms to detect similarities between biosequences, Mye-NAS-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Graphs-+-Combinatorics.html
##-----------------TITLE------------------------##
Graphs & Combinatorics
##------------------TEXT------------------------##
Graphs & Combinatorics

			
				Diagonal flips in labelled planar triangulations, GaoUrrWan-GC-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-5th-Int-Worksh-Algorithmic-Foundations-of-Robotics-(WAFR-2002).html
##-----------------TITLE------------------------##
Proc. 5th Int. Worksh. Algorithmic Foundations of Robotics (WAFR 2002)
##------------------TEXT------------------------##
Proc. 5th Int. Worksh. Algorithmic Foundations of Robotics (WAFR 2002)

			
				A near-quadratic algorithm for fence design, AgaBerCol-WAFR-02A Delaunay approach to interactive cutting in triangulated surfaces, NieSta-WAFR-02Exact and distributed algorithms for collaborative camera control, SonStaGol-WAFR-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/The-Hydrographic-J.html
##-----------------TITLE------------------------##
The Hydrographic J.
##------------------TEXT------------------------##
The Hydrographic J.

			
				Multibeam data processing: data reduction, adaptive triangular meshing and comments resulting from Brouns et al. (THJ No. 101, 2001), Len-THJ-01Multibeam data processing: a detailed algorithm to compute (adaptive) triangulations and potential indicators of data quality, Len-THJ-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Annual-Reviews-in-Computer-Science.html
##-----------------TITLE------------------------##
Annual Reviews in Computer Science
##------------------TEXT------------------------##
Annual Reviews in Computer Science

			
				Parallel algorithmic techniques for combinatorial computation, EppGal-AR-88

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-4th-Scandinavian-Worksh-Algorithm-Theory-(SWAT-1994).html
##-----------------TITLE------------------------##
Proc. 4th Scandinavian Worksh. Algorithm Theory (SWAT 1994)
##------------------TEXT------------------------##
Proc. 4th Scandinavian Worksh. Algorithm Theory (SWAT 1994)

			
				Lower bounds for dynamic algorithms, Fre-SWAT-94

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-8th-Int-Symp-Spatial-and-Temporal-Databases-(SSTD-2003).html
##-----------------TITLE------------------------##
Proc. 8th Int. Symp. Spatial and Temporal Databases (SSTD 2003)
##------------------TEXT------------------------##
Proc. 8th Int. Symp. Spatial and Temporal Databases (SSTD 2003)

			
				Categorical range queries in large databases, NanBoz-SSTD-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-22nd-Int-Conf-Very-Large-Data-Bases.html
##-----------------TITLE------------------------##
Proc. 22nd Int. Conf. Very Large Data Bases
##------------------TEXT------------------------##
Proc. 22nd Int. Conf. Very Large Data Bases

			
				Constructing efficient decision trees by using optimized numeric association rules, FukMorMor-VLDB-96

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Int-J-Computer-Mathematics.html
##-----------------TITLE------------------------##
Int. J. Computer Mathematics
##------------------TEXT------------------------##
Int. J. Computer Mathematics

			
				Minimum area polygons with two reflex angles enclosing $k$ points, KriSri-IJCM-01Computing the smallest T-shaped polygon containing $k$ points, SmiSri-IJCM-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-2nd-Worksh-Algorithms-in-Bioinformatics-(WABI-2002).html
##-----------------TITLE------------------------##
Proc. 2nd Worksh. Algorithms in Bioinformatics (WABI 2002)
##------------------TEXT------------------------##
Proc. 2nd Worksh. Algorithms in Bioinformatics (WABI 2002)

			
				$K$-ary clustering with optimal leaf ordering for gene expression data, BarDemGif-WABI-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-2001-Australian-Conf-Robotics-and-Automation.html
##-----------------TITLE------------------------##
Proc. 2001 Australian Conf. Robotics and Automation
##------------------TEXT------------------------##
Proc. 2001 Australian Conf. Robotics and Automation

			
				3d terrain mapping: a stochastic approach, LeaSchDis-ACRA-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-3rd-Int-Conf-Artificial-Intelligence-and-Symbolic-Mathematical-Computation-(AISMC-3).html
##-----------------TITLE------------------------##
Proc. 3rd Int. Conf. Artificial Intelligence and Symbolic Mathematical Computation (AISMC-3)
##------------------TEXT------------------------##
Proc. 3rd Int. Conf. Artificial Intelligence and Symbolic Mathematical Computation (AISMC-3)

			
				A new approach on solving 3-satisfiability, Rod-AISMC-96

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-7th-Int-Conf-Computer-Graphics-Visualization-and-Interactive-Digital-Media-(WSCG-99).html
##-----------------TITLE------------------------##
Proc. 7th Int. Conf. Computer Graphics, Visualization and Interactive Digital Media (WSCG '99)
##------------------TEXT------------------------##
Proc. 7th Int. Conf. Computer Graphics, Visualization and Interactive Digital Media (WSCG '99)

			
				Local approach to dynamic visibility in the plane, NecTob-WSCG-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Adhesion-Science-+-Technology.html
##-----------------TITLE------------------------##
J. Adhesion Science & Technology
##------------------TEXT------------------------##
J. Adhesion Science & Technology

			
				Physical vapor-deposited thin hard films on polymers: sample preparation for SEM analysis, RieLecHil-JAST-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-9th-Canad-Conf-Computational-Geometry.html
##-----------------TITLE------------------------##
Proc. 9th Canad. Conf. Computational Geometry
##------------------TEXT------------------------##
Proc. 9th Canad. Conf. Computational Geometry

			
				Biased search and $k$-point clustering, BhaElG-CCCG-97The visibility graph contains a bounded degree spanner, Das-CCCG-97Analysis of a class of $k$-dimensional merge procedures, with an application to 2D Delaunay triangulation in expected linear time after two-directional sorting, LemMor-CCCG-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Zeitschrift-fuer-Angewandte-Mathematik-und-Mechanik.html
##-----------------TITLE------------------------##
Zeitschrift für Angewandte Mathematik und Mechanik
##------------------TEXT------------------------##
Zeitschrift für Angewandte Mathematik und Mechanik

			
				Optimal triangulation problems, Tan-ZAMM-96

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-6th-Worksh-Algorithms-and-Data-Structures-(WADS-1999).html
##-----------------TITLE------------------------##
Proc. 6th Worksh. Algorithms and Data Structures (WADS 1999)
##------------------TEXT------------------------##
Proc. 6th Worksh. Algorithms and Data Structures (WADS 1999)

			
				Rectilinear static and dynamic discrete 2-center problems, BesSeg-WADS-99A parallel algorithm for finding the constrained Voronoi diagram of line segments in the plane, ChiLeeWan-WADS-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Towards-a-Theory-of-Geometric-Graphs.html
##-----------------TITLE------------------------##
Towards a Theory of Geometric Graphs
##------------------TEXT------------------------##
Towards a Theory of Geometric Graphs

			
				Separating thickness from geometric thickness, Epp-TTGG-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-28th-Int-Symp-Mathematical-Foundations-of-Computer-Science-(MFCS-2003).html
##-----------------TITLE------------------------##
Proc. 28th Int. Symp. Mathematical Foundations of Computer Science (MFCS 2003)
##------------------TEXT------------------------##
Proc. 28th Int. Symp. Mathematical Foundations of Computer Science (MFCS 2003)

			
				Match-bounded string rewriting systems, GesHofWal-MFCS-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-21st-Int-Worksh-Graph-Theoretic-Concepts-in-Computer-Science-(WG-1995).html
##-----------------TITLE------------------------##
Proc. 21st Int. Worksh. Graph-Theoretic Concepts in Computer Science (WG 1995)
##------------------TEXT------------------------##
Proc. 21st Int. Worksh. Graph-Theoretic Concepts in Computer Science (WG 1995)

			
				A dynamic algorithm for line graph recognition, DegSim-WG-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-19th-Brazilian-Symp-Computer-Graphics-and-Image-Processing-(SIBGRAPI-2006).html
##-----------------TITLE------------------------##
Proc. 19th Brazilian Symp. Computer Graphics and Image Processing (SIBGRAPI 2006)
##------------------TEXT------------------------##
Proc. 19th Brazilian Symp. Computer Graphics and Image Processing (SIBGRAPI 2006)

			
				Single triangle strip and loop on manifolds with boundaries, BhuDiaEpp-SIBGRAPI-06

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-24th-ACM-SIGACT-SIGOPS-Symp-Principles-of-Distributed-Computing-(PODC-2005).html
##-----------------TITLE------------------------##
Proc. 24th ACM SIGACT-SIGOPS Symp. Principles of Distributed Computing (PODC 2005)
##------------------TEXT------------------------##
Proc. 24th ACM SIGACT-SIGOPS Symp. Principles of Distributed Computing (PODC 2005)

			
				Skip-webs: efficient distributed data structures for multi-dimensional data sets, ArgEppGoo-PODC-05

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-2nd-Eur-Conf-Distributed-Memory-Computing-(EDMCC2).html
##-----------------TITLE------------------------##
Proc. 2nd Eur. Conf. Distributed Memory Computing (EDMCC2)
##------------------TEXT------------------------##
Proc. 2nd Eur. Conf. Distributed Memory Computing (EDMCC2)

			
				OAL: an implementation of an actor language on a massively parallel message-passing architecture, GiaGerFow-ECDMC-91

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-10th-Int-Symp-Algorithms-+-Computation-(ISAAC-1999).html
##-----------------TITLE------------------------##
Proc. 10th Int. Symp. Algorithms & Computation (ISAAC 1999)
##------------------TEXT------------------------##
Proc. 10th Int. Symp. Algorithms & Computation (ISAAC 1999)

			
				Upper bounds for MaxSat: Further improved, BanRam-ISAAC-99Efficient approximation algorithms for multi-label map labeling, ZhuPoo-ISAAC-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-4th-Worksh-Computational-Geometry.html
##-----------------TITLE------------------------##
Proc. 4th Worksh. Computational Geometry
##------------------TEXT------------------------##
Proc. 4th Worksh. Computational Geometry

			
				Translating a convex polygon to contain a maximum number of points, BarDicPau-MSI-94

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-10th-Symp-Theoretical-Aspects-of-Computer-Science-(STACS-1993).html
##-----------------TITLE------------------------##
Proc. 10th Symp. Theoretical Aspects of Computer Science (STACS 1993)
##------------------TEXT------------------------##
Proc. 10th Symp. Theoretical Aspects of Computer Science (STACS 1993)

			
				Limits on the power of parallel random-access machines with weak forms of write conflict resolution, FicImpKap-STACS-93

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Amer-Control-Conf.html
##-----------------TITLE------------------------##
Proc. Amer. Control Conf.
##------------------TEXT------------------------##
Proc. Amer. Control Conf.

			
				Dynamic inverse optimization, GenSalFer-ACC-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Computational-Mathematics.html
##-----------------TITLE------------------------##
J. Computational Mathematics
##------------------TEXT------------------------##
J. Computational Mathematics

			
				Optimal Delaunay triangulations, CheXu-JCM-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-9th-Int-Worksh-Algorithms-and-Data-Structures-(WADS-2005).html
##-----------------TITLE------------------------##
Proc. 9th Int. Worksh. Algorithms and Data Structures (WADS 2005)
##------------------TEXT------------------------##
Proc. 9th Int. Worksh. Algorithms and Data Structures (WADS 2005)

			
				The minimum-area spanning tree problem, CarKatMit-WADS-05All-pairs shortest paths with real weights in $O(n^3/\log n)$ time, Cha-WADS-05Hinged dissection of polypolyhedra, DemDemLin-WADS-05Improved combinatorial group testing for real-world problem sizes, EppGooHir-WADS-05

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Integration.html
##-----------------TITLE------------------------##
Integration
##------------------TEXT------------------------##
Integration

			
				Parallel algorithms for VLSI routing, JaJ-Int-91

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-7th-Int-Parallel-Processing-Symp.html
##-----------------TITLE------------------------##
Proc. 7th Int. Parallel Processing Symp.
##------------------TEXT------------------------##
Proc. 7th Int. Parallel Processing Symp.

			
				An efficient parallel algorithm for min-cost flow on directed series-parallel graphs, JaiCha-IPPS-93

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-26th-Int-Coll-Automata-Languages-and-Programming-(ICALP-1999).html
##-----------------TITLE------------------------##
Proc. 26th Int. Coll. Automata, Languages, and Programming (ICALP 1999)
##------------------TEXT------------------------##
Proc. 26th Int. Coll. Automata, Languages, and Programming (ICALP 1999)

			
				Deciding first-order properties of locally tree-decomposable graphs, FriGro-ICALP-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Theory-and-Applications-of-Recent-Robust-Methods.html
##-----------------TITLE------------------------##
Theory and Applications of Recent Robust Methods
##------------------TEXT------------------------##
Theory and Applications of Recent Robust Methods

			
				Computational geometry and statistical depth measures, RafSou-TARRM-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Studia-Informatica-Universalis.html
##-----------------TITLE------------------------##
Studia Informatica Universalis
##------------------TEXT------------------------##
Studia Informatica Universalis

			
				Proc. 6th Int. Conf. Principles of Distributed Systems (OPODIS 2002)

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-20th-Int-Worksh-Graph-Theoretic-Concepts-in-Computer-Science-(WG-1994).html
##-----------------TITLE------------------------##
Proc. 20th Int. Worksh. Graph-Theoretic Concepts in Computer Science (WG 1994)
##------------------TEXT------------------------##
Proc. 20th Int. Worksh. Graph-Theoretic Concepts in Computer Science (WG 1994)

			
				Prefix graphs and their applications, ChaHag-WG-94On-line convex planarity testing, DiBTamVis-WG-94

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Graphics-Interface-93.html
##-----------------TITLE------------------------##
Proc. Graphics Interface '93
##------------------TEXT------------------------##
Proc. Graphics Interface '93

			
				Conservative visibility preprocessing for efficient walkthroughs of 3D scenes, Pla-GI-93

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/TUGboat.html
##-----------------TITLE------------------------##
TUGboat
##------------------TEXT------------------------##
TUGboat

			
				Trees in \TeX, Epp-Tb-85

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Konstanzer-Schriften-in-Mathematik-und-Informatik.html
##-----------------TITLE------------------------##
Konstanzer Schriften in Mathematik und Informatik
##------------------TEXT------------------------##
Konstanzer Schriften in Mathematik und Informatik

			
				On the discrete core of quadrilateral mesh refinement, MueWei-TR-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/DIMACS-Ser-Discrete-Math-and-Theoretical-Computer-Science.html
##-----------------TITLE------------------------##
DIMACS Ser. Discrete Math. and Theoretical Computer Science
##------------------TEXT------------------------##
DIMACS Ser. Discrete Math. and Theoretical Computer Science

			
				Computational Support for Discrete MathematicsDiscrete and Computational Geometry: Papers from the DIMACS Special YearSatisfiability Problem: Theory and Applications

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Computer-J.html
##-----------------TITLE------------------------##
Computer J.
##------------------TEXT------------------------##
Computer J.

			
				Improved methods for signature-tree construction, TouNanMan-CJ-00Applying Cilk in provably efficient task scheduling, VeeHsu-CJ-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-4th-AGILE-Conf-Geographic-Science.html
##-----------------TITLE------------------------##
Proc. 4th AGILE Conf. Geographic Science
##------------------TEXT------------------------##
Proc. 4th AGILE Conf. Geographic Science

			
				Multi-objective optimisation on transportation networks, CosMooWin-ACGS-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-24th-Symp-Mathematical-Foundations-of-Computer-Science-(MFCS-1999).html
##-----------------TITLE------------------------##
Proc. 24th Symp. Mathematical Foundations of Computer Science (MFCS 1999)
##------------------TEXT------------------------##
Proc. 24th Symp. Mathematical Foundations of Computer Science (MFCS 1999)

			
				An efficient exact algorithm for constraint bipartite vertex cover, FerNie-MFCS-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Worksh-Advances-in-Data-Structures.html
##-----------------TITLE------------------------##
Proc. Worksh. Advances in Data Structures
##------------------TEXT------------------------##
Proc. Worksh. Advances in Data Structures

			
				Cell probe complexity — a survey, Mil-ADS-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-20th-Conf-Eur-Assoc-for-Computer-Graphics-(EuroGraphics-99).html
##-----------------TITLE------------------------##
Proc. 20th Conf. Eur. Assoc. for Computer Graphics (EuroGraphics '99)
##------------------TEXT------------------------##
Proc. 20th Conf. Eur. Assoc. for Computer Graphics (EuroGraphics '99)

			
				Improved Laplacian smoothing of noisy surface meshes, VolMenMol-EG-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Senior-thesis.html
##-----------------TITLE------------------------##
Senior thesis
##------------------TEXT------------------------##
Senior thesis

			
				The Complexities of Puzzles, Cross Sum and their Another Solution Problems (ASP), Set-Thesis-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-29th-Int-Worksh-Graph-Theoretic-Concepts-in-Computer-Science-(WG-2003).html
##-----------------TITLE------------------------##
Proc. 29th Int. Worksh. Graph-Theoretic Concepts in Computer Science (WG 2003)
##------------------TEXT------------------------##
Proc. 29th Int. Worksh. Graph-Theoretic Concepts in Computer Science (WG 2003)

			
				Short cycles in planar graphs, Kow-WG-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Propulsion-+-Power.html
##-----------------TITLE------------------------##
J. Propulsion & Power
##------------------TEXT------------------------##
J. Propulsion & Power

			
				Three-dimensional hybrid mesh generation for turbomachinery airfoils, KimCiz-JPP-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Int-Conf-Computational-Sciences-(ICCS-2001)-part-I.html
##-----------------TITLE------------------------##
Proc. Int. Conf. Computational Sciences (ICCS 2001), part I
##------------------TEXT------------------------##
Proc. Int. Conf. Computational Sciences (ICCS 2001), part I

			
				On the efficiency of nearest neighbor searching with data Clustered in lower dimensions, ManMou-ICCS-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/American-Scientist.html
##-----------------TITLE------------------------##
American Scientist
##------------------TEXT------------------------##
American Scientist

			
				On the threshold, Hay-AS-03Unwed numbers, Hay-AS-06

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Int-Conf-The-Humanistic-Renaissance-in-Mathematics-Education.html
##-----------------TITLE------------------------##
Proc. Int. Conf. The Humanistic Renaissance in Mathematics Education
##------------------TEXT------------------------##
Proc. Int. Conf. The Humanistic Renaissance in Mathematics Education

			
				Simple linear regression: a PAPIRIS example, ShaBosMor-HRME-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-11th-Int-Symp-Graph-Drawing-(GD-2003).html
##-----------------TITLE------------------------##
Proc. 11th Int. Symp. Graph Drawing (GD 2003)
##------------------TEXT------------------------##
Proc. 11th Int. Symp. Graph Drawing (GD 2003)

			
				Graph drawing contest report, BraBraEad-GD-03Selected open problems in graph drawing, BraEppGoo-GD-03Confluent drawings: visualizing non-planar diagrams in a planar way, DicEppGoo-GD-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-1st-Int-Worksh-Parameterized-and-Exact-Computation-(IWPEC-2004).html
##-----------------TITLE------------------------##
Proc. 1st Int. Worksh. Parameterized and Exact Computation (IWPEC 2004)
##------------------TEXT------------------------##
Proc. 1st Int. Worksh. Parameterized and Exact Computation (IWPEC 2004)

			
				Space and time complexity of exact algorithms: some open problems, Woe-IWPEC-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/IEEE-Trans-Knowledge-and-Data-Engineering.html
##-----------------TITLE------------------------##
IEEE Trans. Knowledge and Data Engineering
##------------------TEXT------------------------##
IEEE Trans. Knowledge and Data Engineering

			
				Scalable algorithms for association mining, Zak-TKDE-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/ICGA-J.html
##-----------------TITLE------------------------##
ICGA J.
##------------------TEXT------------------------##
ICGA J.

			
				Gradual abstract proof search, Caz-ICGA-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-4th-Worksh-Algorithms-and-Data-Structures-(WADS-1995).html
##-----------------TITLE------------------------##
Proc. 4th Worksh. Algorithms and Data Structures (WADS 1995)
##------------------TEXT------------------------##
Proc. 4th Worksh. Algorithms and Data Structures (WADS 1995)

			
				Quadrangulations of planar sets, Tou-WADS-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Preprintreihe-des-Fachbereichs-Mathematik-Serie-B.html
##-----------------TITLE------------------------##
Preprintreihe des Fachbereichs Mathematik, Serie B
##------------------TEXT------------------------##
Preprintreihe des Fachbereichs Mathematik, Serie B

			
				On the number of arrangements of pseudolines, Fel-TR-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/GAOTenBlatt.html
##-----------------TITLE------------------------##
GAOTenBlatt
##------------------TEXT------------------------##
GAOTenBlatt

			
				Programmierwettbewerb Philosophen-Fußball, Wal-GAOS-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Geographic-Information-Systems-Principles-Techniques-Managament-and-Applications.html
##-----------------TITLE------------------------##
Geographic Information Systems: Principles, Techniques, Managament and Applications
##------------------TEXT------------------------##
Geographic Information Systems: Principles, Techniques, Managament and Applications

			
				Intervisibility on terrains, DeFMag-GIS-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Message-to-scimathresearch-bulletin-board.html
##-----------------TITLE------------------------##
Message to sci.math.research bulletin board
##------------------TEXT------------------------##
Message to sci.math.research bulletin board

			
				Re: Geometry problem: Optimal direction. Known results?, Epp-smr-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-1st-Japan-Conf-Discrete-+-Computational-Geometry-(JCDCG-1998).html
##-----------------TITLE------------------------##
Proc. 1st Japan Conf. Discrete & Computational Geometry (JCDCG 1998)
##------------------TEXT------------------------##
Proc. 1st Japan Conf. Discrete & Computational Geometry (JCDCG 1998)

			
				Folding and cutting paper, DemDemLub-JDCG-98Folding and unfolding in computational geometry, ORo-JCDCG-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Acta-Chromatographica.html
##-----------------TITLE------------------------##
Acta Chromatographica
##------------------TEXT------------------------##
Acta Chromatographica

			
				Comparison of image-transformation methods used in matching 2d gel electrophoresis images, KacWaldeJ-AC-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Astronomy-+-Astrophysics.html
##-----------------TITLE------------------------##
Astronomy & Astrophysics
##------------------TEXT------------------------##
Astronomy & Astrophysics

			
				Axisymmetric dynamical models for SAURON and OASIS observations of NGC  3377, CopCreEms-AA-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Combinatorial-and-Computational-Geometry.html
##-----------------TITLE------------------------##
Combinatorial and Computational Geometry
##------------------TEXT------------------------##
Combinatorial and Computational Geometry

			
				A survey of folding and unfolding in computational geometry, DemOro-MSRI-05Quasiconvex programming, Epp-MSRI-05On the complexity of visibility problems with moving viewpoints, GriThe-MSRI-05

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Discrete-Mathematics-and-its-Applications.html
##-----------------TITLE------------------------##
Discrete Mathematics and its Applications
##------------------TEXT------------------------##
Discrete Mathematics and its Applications

			
				Handbook of Discrete & Computational Geometry

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Mathematics-of-Computation.html
##-----------------TITLE------------------------##
Mathematics of Computation
##------------------TEXT------------------------##
Mathematics of Computation

			
				Efficient algorithms for computing the $L_2$ discrepancy, Hei-MC-96A monotone finite element scheme for convection-diffusion equations, XuZik-MC-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Combinatorial-Theory-Series-A.html
##-----------------TITLE------------------------##
J. Combinatorial Theory, Series A
##------------------TEXT------------------------##
J. Combinatorial Theory, Series A

			
				Improved bounds for intersecting triangles and halving planes, Epp-JCT-93Crossing patterns of segments, PacSol-JCTA-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/SFB-Report-Series.html
##-----------------TITLE------------------------##
SFB Report Series
##------------------TEXT------------------------##
SFB Report Series

			
				Optimal graph orientation with storage applications, AicAurRot-TR-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-2nd-Int-Symp-Graph-Drawing-(GD-1994).html
##-----------------TITLE------------------------##
Proc. 2nd Int. Symp. Graph Drawing (GD 1994)
##------------------TEXT------------------------##
Proc. 2nd Int. Symp. Graph Drawing (GD 1994)

			
				Characterization and recognition of point-halfspace and related orders, TanGooSch-GD-94

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Computers-+-Mathematics-with-Applications.html
##-----------------TITLE------------------------##
Computers & Mathematics with Applications
##------------------TEXT------------------------##
Computers & Mathematics with Applications

			
				The computation of simplicial approximations of implicitly defined $p$-dimensional manifolds, Bro-CMA-98The computation of simplicial approximations of implicitly defined two-dimensional manifolds, BroRhe-CMA-94Parametrization of Newton iteration for computations with structured matrices and applications, Pan-CMA-92

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-4th-Int-Worksh-Algorithmic-Foundations-of-Robotics-(WAFR-2000).html
##-----------------TITLE------------------------##
Proc. 4th Int. Worksh. Algorithmic Foundations of Robotics (WAFR 2000)
##------------------TEXT------------------------##
Proc. 4th Int. Worksh. Algorithmic Foundations of Robotics (WAFR 2000)

			
				Deformable free space tilings for kinetic collision detection, AgaBasGui-WAFR-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-1st-Asian-Symp-Programming-Languages-and-Systems-(APLAS-2003).html
##-----------------TITLE------------------------##
Proc. 1st Asian Symp. Programming Languages and Systems (APLAS 2003)
##------------------TEXT------------------------##
Proc. 1st Asian Symp. Programming Languages and Systems (APLAS 2003)

			
				A program inverter for a functional language with equality and constructors, GluKaw-APLAS-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-15th-Conf-Neiral-Information-Processing-Systems.html
##-----------------TITLE------------------------##
Proc. 15th Conf. Neiral Information Processing Systems
##------------------TEXT------------------------##
Proc. 15th Conf. Neiral Information Processing Systems

			
				An impossibility theorem for clustering, Kle-NIPS-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Handbook-of-Discrete-+-Computational-Geometry.html
##-----------------TITLE------------------------##
Handbook of Discrete & Computational Geometry
##------------------TEXT------------------------##
Handbook of Discrete & Computational Geometry

			
				Triangulations, Ber-HDCG-97Computer graphics, DobTel-HDCG-97Linear programming in low dimensions, DyeMeg-HDCG-97Arrangements, Hal-HDCG-97Shortest paths and networks, Mit-HDCG-97Visibility, ORo-HDCG-97Ray shooting and lines in space, Pel-HDCG-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Fundamenta-Informaticae.html
##-----------------TITLE------------------------##
Fundamenta Informaticae
##------------------TEXT------------------------##
Fundamenta Informaticae

			
				Compatible tetrahedralizations, Ber-FI-95A deterministic linear time algorithm for geometric separators and its applications, EppMilTen-FI-95Tentative prune-and-search for computing Voronoi vertices, KirSno-FI-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proceedings-in-Informatics.html
##-----------------TITLE------------------------##
Proceedings in Informatics
##------------------TEXT------------------------##
Proceedings in Informatics

			
				Proc. Int. Conf. Fun with Algorithms, Elba, 1998

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Spezialforschungsbereich-Optimierung-und-Kontrolle.html
##-----------------TITLE------------------------##
Spezialforschungsbereich “Optimierung und Kontrolle”
##------------------TEXT------------------------##
Spezialforschungsbereich “Optimierung und Kontrolle”

			
				Perspectives of Monge properties in optimization, BurKliRud-TR-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Distributed-Computing.html
##-----------------TITLE------------------------##
Distributed Computing
##------------------TEXT------------------------##
Distributed Computing

			
				Efficient parallel algorithms can be made robust, KanShv-DC-92

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Int-Conf-Imaging-Science-Systems-and-Technology-(CISST-2002).html
##-----------------TITLE------------------------##
Proc. Int. Conf. Imaging Science, Systems, and Technology (CISST 2002)
##------------------TEXT------------------------##
Proc. Int. Conf. Imaging Science, Systems, and Technology (CISST 2002)

			
				Algebraic relational approach for geospatial feature correlation, KovSch-CISST-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-SPIE.html
##-----------------TITLE------------------------##
Proc. SPIE
##------------------TEXT------------------------##
Proc. SPIE

			
				Proc. Conf. Visual Communications & Image ProcessingProc. Image and Video Communications and Processing (IVCP 2003)Visual Data Exploration and Analysis VI

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-19th-Int-Conf-Foundations-of-Software-Technology-and-Theoretical-Computer-Science-(FSTTCS-1999).html
##-----------------TITLE------------------------##
Proc. 19th Int. Conf. Foundations of Software Technology and Theoretical Computer Science (FSTTCS 1999)
##------------------TEXT------------------------##
Proc. 19th Int. Conf. Foundations of Software Technology and Theoretical Computer Science (FSTTCS 1999)

			
				Dynamic compressed hyperoctrees with application to the $N$-body problem, AluSev-FSTTCS-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Annals-of-Mathematics-+-Artificial-Intelligence.html
##-----------------TITLE------------------------##
Annals of Mathematics & Artificial Intelligence
##------------------TEXT------------------------##
Annals of Mathematics & Artificial Intelligence

			
				On maximal frequent and minimal infrequent sets in binary matrices, BorGurKha-AMAI-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Topics-in-Cryptology-Cryptographers-Track-at-RSA-Conf-2003.html
##-----------------TITLE------------------------##
Topics in Cryptology: Cryptographers' Track at RSA Conf. 2003
##------------------TEXT------------------------##
Topics in Cryptology: Cryptographers' Track at RSA Conf. 2003

			
				Authenticated data structures for graph and geometric searching, GooTamTri-RSA-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Macromolecules.html
##-----------------TITLE------------------------##
Macromolecules
##------------------TEXT------------------------##
Macromolecules

			
				Numerical identification of the potential of whisker- and platelet-filled polymers, Gus-MM-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-8th-Int-Conf-Computing-+-Combinatorics-(COCOON-2002).html
##-----------------TITLE------------------------##
Proc. 8th Int. Conf. Computing & Combinatorics (COCOON 2002)
##------------------TEXT------------------------##
Proc. 8th Int. Conf. Computing & Combinatorics (COCOON 2002)

			
				Algorithms for normal curves and surfaces, SchSedSte-COCOON-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Signal-Processing-Image-Communication.html
##-----------------TITLE------------------------##
Signal Processing – Image Communication
##------------------TEXT------------------------##
Signal Processing – Image Communication

			
				Disparity map coding based on adaptive triangular surface modelling, FanNga-SPIC-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-8th-Int-Symp-Algorithms-+-Computation-(ISAAC-1997).html
##-----------------TITLE------------------------##
Proc. 8th Int. Symp. Algorithms & Computation (ISAAC 1997)
##------------------TEXT------------------------##
Proc. 8th Int. Symp. Algorithms & Computation (ISAAC 1997)

			
				A branch-and-cut approach for minimum weight triangulation, KyoImaTak-ISAAC-97Complexity and modeling aspects of mesh refinement into quadrilaterals, MohMue-ISAAC-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-7th-Int-Conf-Developments-in-Language-Theory-(DLT-2003).html
##-----------------TITLE------------------------##
Proc. 7th Int. Conf. Developments in Language Theory (DLT 2003)
##------------------TEXT------------------------##
Proc. 7th Int. Conf. Developments in Language Theory (DLT 2003)

			
				Synchronizing monotonic automata, AnaVol-DLT-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Computing-with-Bio-Molecules-Theory-and-Experiments.html
##-----------------TITLE------------------------##
Computing with Bio-Molecules: Theory and Experiments
##------------------TEXT------------------------##
Computing with Bio-Molecules: Theory and Experiments

			
				Circuit evaluation: thoughts on a killer application in DNA computing, OgiRay-CwBM-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Parallel-Algorithms-Appl.html
##-----------------TITLE------------------------##
Parallel Algorithms Appl.
##------------------TEXT------------------------##
Parallel Algorithms Appl.

			
				On the power of some PRAM models, AklChe-PAA-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Mathematical-Programming.html
##-----------------TITLE------------------------##
Mathematical Programming
##------------------TEXT------------------------##
Mathematical Programming

			
				Efficiently solvable special cases of hard combinatorial optimization problems, Bur-MP-97Dynamic trees as search trees via Euler tours, applied to the network simplex algorithm, Tar-MP-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-9th-Eur-Symp-Algorithms-(ESA-2001).html
##-----------------TITLE------------------------##
Proc. 9th Eur. Symp. Algorithms (ESA 2001)
##------------------TEXT------------------------##
Proc. 9th Eur. Symp. Algorithms (ESA 2001)

			
				Smallest color-spanning objects, AbeHurIck-ESA-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-12th-Int-Symp-Algorithms-+-Computation-(ISAAC-2001).html
##-----------------TITLE------------------------##
Proc. 12th Int. Symp. Algorithms & Computation (ISAAC 2001)
##------------------TEXT------------------------##
Proc. 12th Int. Symp. Algorithms & Computation (ISAAC 2001)

			
				Small strictly convex quadrilateral meshes of point sets, BreHurRam-ISAAC-01Topological peeling and implementation, CheLuaXu-ISAAC-01Tree-approximations for the weighted Cost-Distance problem, SchWeb-ISAAC-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/IEEE-Trans-Network-and-Service-Management.html
##-----------------TITLE------------------------##
IEEE Trans. Network and Service Management
##------------------TEXT------------------------##
IEEE Trans. Network and Service Management

			
				Modeling and management of firewall policies, AlSHam-TNSM-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Advanced-Compilers-Architectures-+-Parallel-Systems-Technical-Memo.html
##-----------------TITLE------------------------##
Advanced Compilers, Architectures & Parallel Systems Technical Memo
##------------------TEXT------------------------##
Advanced Compilers, Architectures & Parallel Systems Technical Memo

			
				Automatic partitioning techniques for solving partial differential equations on irregular adaptive meshes, Gal-ACAPS-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-4th-CGC-Worksh-Computational-Geometry.html
##-----------------TITLE------------------------##
Proc. 4th CGC Worksh. Computational Geometry
##------------------TEXT------------------------##
Proc. 4th CGC Worksh. Computational Geometry

			
				Ununfoldable polyhedra with triangular faces, BerDemEpp-WCG-99An optimal algorithm for hyperplane depth in the plane, LanSte-WCG-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Computer-+-Telecommunications-Networking.html
##-----------------TITLE------------------------##
J. Computer & Telecommunications Networking
##------------------TEXT------------------------##
J. Computer & Telecommunications Networking

			
				Fast and scalable conflict detection for packet classifiers, BabVar-JCTN-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Preprintreihe-des-Instituts-fuer-Mathematik.html
##-----------------TITLE------------------------##
Preprintreihe des Instituts für Mathematik
##------------------TEXT------------------------##
Preprintreihe des Instituts für Mathematik

			
				Qualitative visualization of distance information, Hei-PP-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-3rd-Int-Symp-Computing-in-Object-oriented-Parallel-Environments.html
##-----------------TITLE------------------------##
Proc. 3rd Int. Symp. Computing in Object-oriented Parallel Environments
##------------------TEXT------------------------##
Proc. 3rd Int. Symp. Computing in Object-oriented Parallel Environments

			
				SIFFEA: scalable integrated framework for finite element method, JiaLiMa-ISCOPE-99

				http://www.acl.lanl.gov/iscope99/

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-2nd-Int-Symp-Logical-Foundations-of-Computer-Science.html
##-----------------TITLE------------------------##
Proc. 2nd Int. Symp. Logical Foundations of Computer Science
##------------------TEXT------------------------##
Proc. 2nd Int. Symp. Logical Foundations of Computer Science

			
				Banishing robust Turing completeness, HemJaiVer-LFCS-92

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-American-Statistical-Assoc.html
##-----------------TITLE------------------------##
J. American Statistical Assoc.
##------------------TEXT------------------------##
J. American Statistical Assoc.

			
				Comment on Location-Scale Depth, Epp-JASA-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Int-Advanced-Worksh-on-Sequences-Positano.html
##-----------------TITLE------------------------##
Int. Advanced Worksh. on Sequences, Positano
##------------------TEXT------------------------##
Int. Advanced Worksh. on Sequences, Positano

			
				Efficient algorithms for sequence analysis, EppGalGia-IAWS-91

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Chemical-Information-+-Computer-Sciences.html
##-----------------TITLE------------------------##
J. Chemical Information & Computer Sciences
##------------------TEXT------------------------##
J. Chemical Information & Computer Sciences

			
				Ties in proximity and clustering compounds , MacNicMac-JCICS-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Selected-Readings-in-Vision-and-Graphics.html
##-----------------TITLE------------------------##
Selected Readings in Vision and Graphics
##------------------TEXT------------------------##
Selected Readings in Vision and Graphics

			
				IVORY — An Object-Oriented Framework for Physics-Based Information Visualization, Spr-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Graph-Theory.html
##-----------------TITLE------------------------##
J. Graph Theory
##------------------TEXT------------------------##
J. Graph Theory

			
				Connectivity, graph minors, and subgraph multiplicity, Epp-JGT-93

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Computational-+-Applied-Math.html
##-----------------TITLE------------------------##
J. Computational & Applied Math.
##------------------TEXT------------------------##
J. Computational & Applied Math.

			
				Heuristic allocation based on a dynamic programming state-space representation, Dra-JCAM-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Acta-Informatica.html
##-----------------TITLE------------------------##
Acta Informatica
##------------------TEXT------------------------##
Acta Informatica

			
				Stacks, queues, and deques with order-statistic operations, RicSal-AI-92

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-25th-Int-Worksh-Graph-Theoretic-Concepts-in-Computer-Science-(WG-1999).html
##-----------------TITLE------------------------##
Proc. 25th Int. Worksh. Graph-Theoretic Concepts in Computer Science (WG 1999)
##------------------TEXT------------------------##
Proc. 25th Int. Worksh. Graph-Theoretic Concepts in Computer Science (WG 1999)

			
				Vertex cover: further observations and further improvements, CheKanJia-WG-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/2nd-Int-Worksh-Web-Dynamics.html
##-----------------TITLE------------------------##
2nd Int. Worksh. Web Dynamics
##------------------TEXT------------------------##
2nd Int. Worksh. Web Dynamics

			
				A steady state model for graph power laws, EppWan-WWW-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-14th-Int-Symp-Graph-Drawing.html
##-----------------TITLE------------------------##
Proc. 14th Int. Symp. Graph Drawing
##------------------TEXT------------------------##
Proc. 14th Int. Symp. Graph Drawing

			
				Trees with convex faces and optimal angles, CarEpp-GD-06Choosing colors for geometric graphs via color space embeddings, DilEppGoo-GD-06Upright-quad drawing of $st$-planar learning spaces, Epp-GD-06

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Int-Parallel-and-Distributed-Processing-Symp-(IPDPS-1997).html
##-----------------TITLE------------------------##
Proc. Int. Parallel and Distributed Processing Symp. (IPDPS 1997)
##------------------TEXT------------------------##
Proc. Int. Parallel and Distributed Processing Symp. (IPDPS 1997)

			
				An efficient parallel strategy for computing $K$-terminal reliability and finding most vital edges in 2-trees and partial 2-trees, HoHsiChe-IPDPS-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-37th-IEEEACM-Design-Automation-Conf-(DAC-2000).html
##-----------------TITLE------------------------##
Proc. 37th IEEE/ACM Design Automation Conf. (DAC 2000)
##------------------TEXT------------------------##
Proc. 37th IEEE/ACM Design Automation Conf. (DAC 2000)

			
				Interactive co-design of high-throughput multimedia, OmnFraCat-DAC-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-4th-Eur-Symp-Algorithms-(ESA-1996).html
##-----------------TITLE------------------------##
Proc. 4th Eur. Symp. Algorithms (ESA 1996)
##------------------TEXT------------------------##
Proc. 4th Eur. Symp. Algorithms (ESA 1996)

			
				On minimum-area hulls, ArkChiHel-ESA-96Parallel algorithms for series parallel graphs, BodFlu-ESA-96

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/IEEE-Signal-Processing-Mag.html
##-----------------TITLE------------------------##
IEEE Signal Processing Mag.
##------------------TEXT------------------------##
IEEE Signal Processing Mag.

			
				Sensing, tracking, and reasoning with relations, Gui-SPM-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Eur-J-Combinatorics.html
##-----------------TITLE------------------------##
Eur. J. Combinatorics
##------------------TEXT------------------------##
Eur. J. Combinatorics

			
				The lattice dimension of a graph, Epp-EJC-05A note on the bounded fragmentation property and its applications in network reliability, HajHaj-EJC-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-10th-Int-Symp-Graph-Drawing-(GD-2002).html
##-----------------TITLE------------------------##
Proc. 10th Int. Symp. Graph Drawing (GD 2002)
##------------------TEXT------------------------##
Proc. 10th Int. Symp. Graph Drawing (GD 2002)

			
				Separating thickness from geometric thickness, Epp-GD-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-13th-Eur-Worksh-Computational-Geometry.html
##-----------------TITLE------------------------##
Proc. 13th Eur. Worksh. Computational Geometry
##------------------TEXT------------------------##
Proc. 13th Eur. Worksh. Computational Geometry

			
				Approximate center points in dense point sets, Ver-EWCG-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-SIGGRAPHEurographics-Graphics-Hardware-Worksh.html
##-----------------TITLE------------------------##
Proc. SIGGRAPH/Eurographics Graphics Hardware Worksh.
##------------------TEXT------------------------##
Proc. SIGGRAPH/Eurographics Graphics Hardware Worksh.

			
				Low-latency photon mapping via block hashing, MaMcC-GHW-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/10th-Int-Conf-Random-Structures-+-Algorithms.html
##-----------------TITLE------------------------##
10th Int. Conf. Random Structures & Algorithms
##------------------TEXT------------------------##
10th Int. Conf. Random Structures & Algorithms

			
				The minimum expectation selection problem, EppLue-RSA-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-3rd-Worksh-Algorithms-and-Data-Structures-(WADS-1993).html
##-----------------TITLE------------------------##
Proc. 3rd Worksh. Algorithms and Data Structures (WADS 1993)
##------------------TEXT------------------------##
Proc. 3rd Worksh. Algorithms and Data Structures (WADS 1993)

			
				Parallel construction of quadtrees and quality triangulations, BerEppTen-WADS-93Static and dynamic algorithms for $k$-point clustering problems, DatLenSch-WADS-93Computing the smallest $k$-enclosing circle and related problems, EfrShaZiv-WADS-93Minimum weight Euclidean matching and weighted relative neighborhood graphs, Mir-WADS-93Repetitive hidden surface removal for polyhedra, Pel-WADS-93

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Discrete-Mathematics.html
##-----------------TITLE------------------------##
Discrete Mathematics
##------------------TEXT------------------------##
Discrete Mathematics

			
				On halving line arrangements, BeyRad-DM-02Chordal embeddings of planar graphs, BouMazTod-DM-03Equipartitions of graphs, EppFeiLi-DM-91Three-colourability and forbidden subgraphs, II: Polynomial algorithms, RanSchTew-DM-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Statistics-for-Industry-and-Technology.html
##-----------------TITLE------------------------##
Statistics for Industry and Technology
##------------------TEXT------------------------##
Statistics for Industry and Technology

			
				Theory and Applications of Recent Robust Methods

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Experimental-Mechanics.html
##-----------------TITLE------------------------##
Experimental Mechanics
##------------------TEXT------------------------##
Experimental Mechanics

			
				Accurate integration of surface profile data with quantitative error analysis , LiCheSut-EM-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/IEEE-Micro.html
##-----------------TITLE------------------------##
IEEE Micro
##------------------TEXT------------------------##
IEEE Micro

			
				Sorting and searching using ternary CAMs, PanSha-Micro-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/ACM-Trans-Softw-Eng-Meth.html
##-----------------TITLE------------------------##
ACM Trans. Softw. Eng. Meth.
##------------------TEXT------------------------##
ACM Trans. Softw. Eng. Meth.

			
				Software process validation: quantitatively measuring the correspondence of a process to a model using event-based data, CooWol-TSEM-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-15th-Spring-Conf-Computer-Graphics.html
##-----------------TITLE------------------------##
Proc. 15th Spring Conf. Computer Graphics
##------------------TEXT------------------------##
Proc. 15th Spring Conf. Computer Graphics

			
				Dynamic visibility in the plane, NecTob-SCCG-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Encyclopedia-of-Computer-Science.html
##-----------------TITLE------------------------##
Encyclopedia of Computer Science
##------------------TEXT------------------------##
Encyclopedia of Computer Science

			
				Computational geometry, Sha-ECS-92

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Annals-of-Applied-Probability.html
##-----------------TITLE------------------------##
Annals of Applied Probability
##------------------TEXT------------------------##
Annals of Applied Probability

			
				Weak laws of large numbers in geometric probability, PenYuk-AAP-03Asymptotics for the length of a minimal triangulation on a random sample, Yuk-AAP-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Tutorial-at-10th-Int-Meshing-Roundtable.html
##-----------------TITLE------------------------##
Tutorial at 10th Int. Meshing Roundtable
##------------------TEXT------------------------##
Tutorial at 10th Int. Meshing Roundtable

			
				Global optimization of mesh quality, Epp-IMR-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Management-Science.html
##-----------------TITLE------------------------##
Management Science
##------------------TEXT------------------------##
Management Science

			
				Fast solution and detection of minimal forecast horizons in dynamic programs with a single indicator of the future – applications to dynamic lot-sizing models, FedTzu-MS-95

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-19th-Int-Coll-Automata-Languages-and-Programming-(ICALP-1992).html
##-----------------TITLE------------------------##
Proc. 19th Int. Coll. Automata, Languages, and Programming (ICALP 1992)
##------------------TEXT------------------------##
Proc. 19th Int. Coll. Automata, Languages, and Programming (ICALP 1992)

			
				Maintenance of triconnected components of graphs, LaP-ICALP-92

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Computational-Physics.html
##-----------------TITLE------------------------##
J. Computational Physics
##------------------TEXT------------------------##
J. Computational Physics

			
				Numerical schemes for the Hamilton-Jacobi and level set equations on triangulated domains, BarSet-JCP-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-1st-Heinz-Nixdorf-Symp-Parallel-Architectures-and-Their-Efficient-Use-State-of-the-Art-and-Perspectives.html
##-----------------TITLE------------------------##
Proc. 1st Heinz Nixdorf Symp. Parallel Architectures and Their Efficient Use: State of the Art and Perspectives
##------------------TEXT------------------------##
Proc. 1st Heinz Nixdorf Symp. Parallel Architectures and Their Efficient Use: State of the Art and Perspectives

			
				A case for the PRAM as a standard programmer's model, Vis-WPAEU-93

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Operations-Research-Letters.html
##-----------------TITLE------------------------##
Operations Research Letters
##------------------TEXT------------------------##
Operations Research Letters

			
				Enumerating maximal independent sets with applications to graph colouring, Bys-ORL-04Finding minimum area simple pentagons, HecLie-ORL-97Structured $p$-facility location problems on the line solvable in polynomial time, HsuLowTam-ORL-97Monge strikes again: optimal placement of web proxies in the Internet, Woe-ORL-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-43rd-Eur-Cong-Regional-Science-Assoc-(ERSA-2003).html
##-----------------TITLE------------------------##
Proc. 43rd Eur. Cong. Regional Science Assoc. (ERSA 2003)
##------------------TEXT------------------------##
Proc. 43rd Eur. Cong. Regional Science Assoc. (ERSA 2003)

			
				An alternative method to the scrambled Halton sequence for removing correlation between standard Halton sequences in high dimensions, HesPol-ERSA-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-2nd-Worksh-Randomized-Parallel-Computing.html
##-----------------TITLE------------------------##
Proc. 2nd Worksh. Randomized Parallel Computing
##------------------TEXT------------------------##
Proc. 2nd Worksh. Randomized Parallel Computing

			
				Faster finding of simple cycles in planar graphs on a randomized EREW PRAM, DorWir-WRPC-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-7th-Int-Symp-Graph-Drawing-(GD-1999).html
##-----------------TITLE------------------------##
Proc. 7th Int. Symp. Graph Drawing (GD 1999)
##------------------TEXT------------------------##
Proc. 7th Int. Symp. Graph Drawing (GD 1999)

			
				The anatomy of a geometric algorithm, Mat-GD-99

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-2001-IEEE-Int-Conf-Robotics-+-Automation-(ICRA-2001).html
##-----------------TITLE------------------------##
Proc. 2001 IEEE Int. Conf. Robotics & Automation (ICRA 2001)
##------------------TEXT------------------------##
Proc. 2001 IEEE Int. Conf. Robotics & Automation (ICRA 2001)

			
				Orienting parts by inside-out pulling, BerGolOve-ICRA-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Int-Congress-of-Mathematicians-Berlin.html
##-----------------TITLE------------------------##
Proc. Int. Congress of Mathematicians, Berlin
##------------------TEXT------------------------##
Proc. Int. Congress of Mathematicians, Berlin

			
				Halving point sets, AndWel-ICM-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-7th-Int-Worksh-Computer-Animation-and-Simulation.html
##-----------------TITLE------------------------##
Proc. 7th Int. Worksh. Computer Animation and Simulation
##------------------TEXT------------------------##
Proc. 7th Int. Worksh. Computer Animation and Simulation

			
				Incremental update of the visibility map as seen by a moving viewpoint in two dimensions, GhaSte-EWCAS-96

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-GraphiCon-2002.html
##-----------------TITLE------------------------##
Proc. GraphiCon 2002
##------------------TEXT------------------------##
Proc. GraphiCon 2002

			
				Surface reconstruction from problem point clouds, EmeSka-GC-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Int-Archives-of-Photogrammetry-Remote-Sensing-and-Spatial-Information-Sciences.html
##-----------------TITLE------------------------##
Int. Archives of Photogrammetry, Remote Sensing and Spatial Information Sciences
##------------------TEXT------------------------##
Int. Archives of Photogrammetry, Remote Sensing and Spatial Information Sciences

			
				Proc. Int. Worksh. Visual Techniques for Digital Architectural and Archaeological ArchivesProc. Int. Worksh. Visualization and Animation of Reality-Based 3D ModelsProc. XIX ISPRS Cong.

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Approximation-Algorithms-for-NP-hard-Problems.html
##-----------------TITLE------------------------##
Approximation Algorithms for NP-hard Problems
##------------------TEXT------------------------##
Approximation Algorithms for NP-hard Problems

			
				Approximation algorithms for geometric problems, BerEpp-AA-96

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Intelligent-+-Robotic-Systems.html
##-----------------TITLE------------------------##
J. Intelligent & Robotic Systems
##------------------TEXT------------------------##
J. Intelligent & Robotic Systems

			
				Convex translation estimation, Kam-JIRS-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Multivariate-Analysis.html
##-----------------TITLE------------------------##
J. Multivariate Analysis
##------------------TEXT------------------------##
J. Multivariate Analysis

			
				The deepest regression method, AelRouHub-JMA-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Universal-Computer-Science.html
##-----------------TITLE------------------------##
J. Universal Computer Science
##------------------TEXT------------------------##
J. Universal Computer Science

			
				Computational geometry - Some easy questions and their recent solutions, Aur-JUCS-01The edge-flipping distance of triangulations, HanOttSch-JUCS-96

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/J-Microprocessors-and-Microsystems.html
##-----------------TITLE------------------------##
J. Microprocessors and Microsystems
##------------------TEXT------------------------##
J. Microprocessors and Microsystems

			
				Memory reference caching for activity reduction on address buses, GivEpp-MICPRO-05

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Tribute-to-a-Mathemagician.html
##-----------------TITLE------------------------##
Tribute to a Mathemagician
##------------------TEXT------------------------##
Tribute to a Mathemagician

			
				Fold-and-cut magic{}, DemDem-T2MM-05Polyform patterns, Peg-T2MM-05

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Kuenstliche-Intelligenz.html
##-----------------TITLE------------------------##
Künstliche Intelligenz
##------------------TEXT------------------------##
Künstliche Intelligenz

			
				Automatische Gebäudeerfassung aus digitalen Oberflächenmodellen und Grundrissen, Bre-KI-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-27th-Int-Conf-Very-Large-Data-Bases-(VLDB-2001).html
##-----------------TITLE------------------------##
Proc. 27th Int. Conf. Very Large Data Bases (VLDB 2001)
##------------------TEXT------------------------##
Proc. 27th Int. Conf. Very Large Data Bases (VLDB 2001)

			
				C$^2$P: clustering based on closest pairs, NanTheMan-VLDB-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-12th-Int-Conf-in-Central-Europe-on-Computer-Graphics-Visualization-and-Computer-Vision-(WSCG-2004).html
##-----------------TITLE------------------------##
Proc. 12th Int. Conf. in Central Europe on Computer Graphics, Visualization and Computer Vision (WSCG 2004)
##------------------TEXT------------------------##
Proc. 12th Int. Conf. in Central Europe on Computer Graphics, Visualization and Computer Vision (WSCG 2004)

			
				Voxelization of solids using simplicial coverings, RueSegFei-WSCG-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-19th-Int-Symp-Theoretical-Aspects-of-Computer-Science-(STACS-2002).html
##-----------------TITLE------------------------##
Proc. 19th Int. Symp. Theoretical Aspects of Computer Science (STACS 2002)
##------------------TEXT------------------------##
Proc. 19th Int. Symp. Theoretical Aspects of Computer Science (STACS 2002)

			
				Computing the maximum detour and spanning ratio of planar paths,  trees and cycles, LanMorSos-STACS-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Abs-DIMACS-Worksh-Comp-Geom.html
##-----------------TITLE------------------------##
Abs. DIMACS Worksh. Comp. Geom.
##------------------TEXT------------------------##
Abs. DIMACS Worksh. Comp. Geom.

			
				Exact algorithms for computing the locatino depth and the $k$-th depth regions based on parallel arrangement constructions, FukRos-DIMACS-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-17th-Eur-Worksh-Computational-Geometry.html
##-----------------TITLE------------------------##
Proc. 17th Eur. Worksh. Computational Geometry
##------------------TEXT------------------------##
Proc. 17th Eur. Worksh. Computational Geometry

			
				The farthest color Voronoi diagram and related problems, AbeHurIck-EWCG-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-WMC-2002.html
##-----------------TITLE------------------------##
Proc. WMC 2002
##------------------TEXT------------------------##
Proc. WMC 2002

			
				Practical issues and algorithms for analyzing terrorist networks, CarKarSha-WMC-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-Conf-Visual-Communications-+-Image-Processing.html
##-----------------TITLE------------------------##
Proc. Conf. Visual Communications & Image Processing
##------------------TEXT------------------------##
Proc. Conf. Visual Communications & Image Processing

			
				A segmentation system with model assisted completion of video objects, FarWitEff-VCIM-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-7th-Int-Symp-Functional-and-Logic-Programming-(FLOPS-2004).html
##-----------------TITLE------------------------##
Proc. 7th Int. Symp. Functional and Logic Programming (FLOPS 2004)
##------------------TEXT------------------------##
Proc. 7th Int. Symp. Functional and Logic Programming (FLOPS 2004)

			
				Derivation of deterministic inverse programs based on LR parsing, GluKaw-FLOPS-04

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/UMAP-J.html
##-----------------TITLE------------------------##
UMAP J.
##------------------TEXT------------------------##
UMAP J.

			
				The iron laws of air traffic control, ArnGibHor-UMAP-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-13th-Int-Symp-Graph-Drawing-(GD-2005).html
##-----------------TITLE------------------------##
Proc. 13th Int. Symp. Graph Drawing (GD 2005)
##------------------TEXT------------------------##
Proc. 13th Int. Symp. Graph Drawing (GD 2005)

			
				Delta-confluent drawings, EppGooMen-GD-05Two trees which are self-intersecting when drawn simultaneously, GeyKauVrt-GD-05Complexity results for three-dimensional orthogonal graph drawing, Pat-GD-05-c3doOn extending a partial straight-line drawing, Pat-GD-05-xpslNo-bend orthogonal drawings of series-parallel graphs, RahEgiNis-GD-05

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-5th-Color-Imaging-Conf.html
##-----------------TITLE------------------------##
Proc. 5th Color Imaging Conf.
##------------------TEXT------------------------##
Proc. 5th Color Imaging Conf.

			
				Color printer characterization using a computational geometry approach, HarSch-CIC-97

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Physical-Review-E.html
##-----------------TITLE------------------------##
Physical Review E
##------------------TEXT------------------------##
Physical Review E

			
				Random geometric graphs, DalChr-PRE-02Quasistatic scale-free networks, MukMan-PRE-03

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Butlleti-de-la-Soc-Catalana-de-Matematiques.html
##-----------------TITLE------------------------##
Butlletí de la Soc. Catalana de Matemátiques
##------------------TEXT------------------------##
Butlletí de la Soc. Catalana de Matemátiques

			
				Els sistemes de representació dels nombres reals (I), ViaParMir-BSCM-01

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-3rd-Conf-Computer-Science-+-Electrical-Engineering-(CSEE-2002).html
##-----------------TITLE------------------------##
Proc. 3rd Conf. Computer Science & Electrical Engineering (CSEE 2002)
##------------------TEXT------------------------##
Proc. 3rd Conf. Computer Science & Electrical Engineering (CSEE 2002)

			
				An efficient data structure for advance bandwidth reservations on  the internet, BroNil-CSEE-02

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-14th-Worksh-Discrete-Optimization.html
##-----------------TITLE------------------------##
Proc. 14th Worksh. Discrete Optimization
##------------------TEXT------------------------##
Proc. 14th Worksh. Discrete Optimization

			
				$K$-alternative algorithms for sum type problems, Alt-WDO-00

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://fano.ics.uci.edu/cites/Location/Proc-15th-Symp-Theoretical-Aspects-of-Computer-Science-(STACS-1998).html
##-----------------TITLE------------------------##
Proc. 15th Symp. Theoretical Aspects of Computer Science (STACS 1998)
##------------------TEXT------------------------##
Proc. 15th Symp. Theoretical Aspects of Computer Science (STACS 1998)

			
				Searching constant width mazes captures the AC$^0$-hierarchy, BarLuMil-STACS-98

				
					[D. Eppstein publications]
					[Citation database]
					[Locations]
				
			

			
				Fano Experimental Web Server,
				D. Eppstein,
				School of Information & Computer Science,
				UC Irvine
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/265/
##-----------------TITLE------------------------##
Graph Algorithms
##------------------TEXT------------------------##
ICS 265, Spring 2002:
Graph Algorithms


General Course Information

Coursework will consist of biweekly homeworks, including a
homework due in finals week. There will be no exams. Group work on
homeworks is permitted; each student should turn in his or her own
copy of the homeworks. The course texts will be Network
Flows (Ahuja, Magnanti, and Orlin) and Graph Drawing (Di
Battista, Eades, Tamassia, and Tollis). The course meets Tuesdays
and Thursdays, 2:00 - 3:20 in ICF 101.

Tentative Schedule

Week 1: Introduction, review, and basic concepts. [NF 1-5]Week 2: Maximum flow. [NF 6-8]
    Homework due Thurs. April 18th: NF 6.9, 7.3,
7.4Week 3: Variations of the flow problem. [NF 1.2, 6.2, 9-10, 15,
17]Week 4: Matching. [NF 12]
    Homework due Thurs. May 2nd: NF 6.2, 9.14, 12.1Week 5: Planar graph properties. [GD 1,4]Week 6: Planar graph recognition.
Straight-line
embedding algorithm. [GD 3,4]
    Homework due Thurs. May 16th: GD 3.13, 4.4Weeks 7-8: Additional graph drawing topics. [GD 5-11]
    Homework due Thurs. May 30th: GD 4.5, 5.3, 5.4, 7.1Week 9: Dynamic graph algorithms.Week 10: Exponential-time graph algorithms.
    Homework due Thurs. June 13th:
online assignment


David Eppstein, Dept.
Information & Computer Science, UC Irvine, 11 Apr 2002
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120529/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120529
##------------------TEXT------------------------##
Index of /~eppstein/163/20120529
NameLast modifiedSizeDescriptionParent Directory   -  IMG_0034.jpg29-May-2012 16:47   68K IMG_0035.jpg29-May-2012 16:47   67K IMG_0036.jpg29-May-2012 16:47   70K IMG_0037.jpg29-May-2012 16:47   68K IMG_0038.jpg29-May-2012 16:47   74K IMG_0039.jpg29-May-2012 16:47   69K IMG_0040.jpg29-May-2012 16:47   78K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120501/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120501
##------------------TEXT------------------------##
Index of /~eppstein/163/20120501
NameLast modifiedSizeDescriptionParent Directory   -  IMG_9948.jpg01-May-2012 15:36   73K IMG_9949.jpg01-May-2012 15:36   77K IMG_9950.jpg01-May-2012 15:36   72K IMG_9951.jpg01-May-2012 15:36   76K IMG_9952.jpg01-May-2012 15:36   67K IMG_9953.jpg01-May-2012 15:36   68K IMG_9954.jpg01-May-2012 15:36   75K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120419/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120419
##------------------TEXT------------------------##
Index of /~eppstein/163/20120419
NameLast modifiedSizeDescriptionParent Directory   -  IMG_9928.jpg19-Apr-2012 14:21   75K IMG_9929.jpg19-Apr-2012 14:21   76K IMG_9930.jpg19-Apr-2012 14:21   75K IMG_9931.jpg19-Apr-2012 14:21   75K IMG_9932.jpg19-Apr-2012 14:21   73K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/s12-hw2.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
CS 163, Spring 2012, Homework 2, due Thursday, April 19
When the DFS-based topological ordering algorithm described in class is given an input graph that is not acyclic, it outputs the vertices that belong to a single cycle in the graph, and it ignores any other cycles that might exist. Suppose that, instead, we want to list all the vertices that belong to at least one cycle. Describe how to do this efficiently using a different DFS-based algorithm. (If it helps simplify the problem, you may assume that every cycle has at least two vertices.)How many different topological orderings does the graph shown below have? List them all.
What is the minimum number of layers needed in a layered drawing of the graph shown below? Draw the graph with this many layers.How many layers would be needed if we limited the number of vertices in each layer to two? Again, draw the graph with this many layers.
Find a directed acyclic graph G on four vertices with the property that G, the transitive closure of G, and the transitive reduction of G are all different from each other. Draw all three of these graphs.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/s12-hw3.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
CS 163, Spring 2012, Homework 3, due Thursday, April 26
Draw a directed graph, with a specified starting vertex, that has negative-length edges but no negative-length cycles, and for which Dijkstra's algorithm does not produce the correct distances to all other nodes. For which vertices in your graph does Dijkstra's algorithm give the wrong answers?Suppose you are given as input a directed graph together with a starting vertex and the correct set of distances from the starting vertex to all the other vertices, but you are not given any information about where the shortest paths go. Describe an algorithm that finds the set of all edges that belong to at least one shortest path, in linear time, from this information. (Hint: for each edge, compare the distances for its two endpoints.)Suppose that we wish to apply Johnson's algorithm to find all pairwise distances in the following graph. List for each vertex v in the graph the distance from the new node q (added by Johnson's algorithm) to v. Also list for each edge in the graph the new edge length computed by Johnson's algorithm for that edge.
In the same graph drawn above, suppose we are using the Bellman-Ford algorithm to find the shortest paths from a to every other vertex. If we relax the edges in alphabetical order (that is, the edges out of vertex a first, the edges out of vertex b second, etc) then what are the tentative distances after the first iteration of the algorithm? (That is, after each edge has been relaxed exactly once.)Suppose we wish to find shortest paths from a start vertex to a goal vertex in a road network, where the length of each edge is measured by the physical length of the corresponding segment of road (not travel time). Then, the straight-line distance from a vertex v to the goal can be used as a heuristic underestimate h(v) of the road distance. But instead of using h(v) as part of the A* algorithm, we use it in a simpler way, to direct each edge of the road network from the endpoint with a larger value of h(v) to the endpoint with a smaller value. (Intuitively, we are making each segment of road one-way, in the direction that leads towards the goal.) If we use the DAG shortest path algorithm on the resulting directed graph, will it be guaranteed to find the correct shortest path in the original undirected road network? Why or why not?
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120424/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120424
##------------------TEXT------------------------##
Index of /~eppstein/163/20120424
NameLast modifiedSizeDescriptionParent Directory   -  IMG_9934.jpg24-Apr-2012 15:21   99K IMG_9935.jpg24-Apr-2012 15:21   90K IMG_9936.jpg24-Apr-2012 15:21   88K IMG_9937.jpg24-Apr-2012 15:21   94K IMG_9938.jpg24-Apr-2012 15:21   81K IMG_9939.jpg24-Apr-2012 15:21   75K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120531/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120531
##------------------TEXT------------------------##
Index of /~eppstein/163/20120531
NameLast modifiedSizeDescriptionParent Directory   -  IMG_0041.jpg31-May-2012 15:14   70K IMG_0042.jpg31-May-2012 15:14   75K IMG_0043.jpg31-May-2012 15:14   74K IMG_0044.jpg31-May-2012 15:14   77K IMG_0045.jpg31-May-2012 15:14   73K IMG_0046.jpg31-May-2012 15:14   72K IMG_0047.jpg31-May-2012 15:14   74K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120508/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120508
##------------------TEXT------------------------##
Index of /~eppstein/163/20120508
NameLast modifiedSizeDescriptionParent Directory   -  IMG_9981.jpg08-May-2012 17:26   78K IMG_9982.jpg08-May-2012 17:26   70K IMG_9983.jpg08-May-2012 17:26   77K IMG_9984.jpg08-May-2012 17:26   70K IMG_9985.jpg08-May-2012 17:26   76K IMG_9986.jpg08-May-2012 17:26   74K IMG_9987.jpg08-May-2012 17:26   94K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/s12-hw5.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
CS 163, Spring 2012, Homework 5, due Thursday, May 17
For the preferences listed below, find a solution to the stable marriage problem that, among all possible solutions, finds the most highly preferred partner for each woman.

Men's preferences:
Adam: Wanda, Xanthippe, Yasmin, Zelda
Bob: Xanthippe, Wanda, Yasmin, Zelda
Carl: Yasmin, Wanda, Xanthippe, Zelda
Don: Zelda, Wanda, Xanthippe, Yasmin


Women's preferences:
Wanda: Bob, Adam, Carl, Don
Xanthippe: Carl, Adam, Bob, Don
Yasmin: Bob, Adam, Carl, Don
Zelda: Carl, Adam, Don, Bob
Find a partition of the polygon shown below into the minimum possible number of rectangles.

Give an example of a graph that is not bipartite but that nevertheless satisfies the equation |M| + |I| = |V| where M is a maximum matching, I is a maximum independent set, and V is the set of all vertices. Show the maximum matching and maximum independent set for your example.Find an alternating path starting at t and ending at u in the graph shown below.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/s12-hw7.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
CS 163, Spring 2012, Homework 7, due Thursday, May 31
Draw a graph that has exactly one maximum clique and exactly one clique that is maximal but not maximum.Suppose we are applying the pivoting version of the Bron-Kerbosch algorithm to the graph shown below.
Which vertex would be picked as the pivot in the topmost recursive call to the algorithm?What recursive calls to the algorithm would be made directly from this topmost call? List the arguments to each of these recursive calls.
Suppose we are using the same graph shown above as a seed graph for the Barabasi-Albert model. What is the probability that the first edge added by the model connects a new vertex to vertex a?What is the clustering coefficient of the graph shown above?
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/s12-hw8.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
CS 163, Spring 2012, Homework 8, due Thursday, June 8
Find a set of intervals such that the graph below is the interval graph for your set.
Let C6 be a graph with six vertices, connected into a single cycle.
How many colors are needed in an optimal coloring of C6?Find an ordering of the vertices of C6 for which the greedy coloring uses more than the optimal number of colors. What is the coloring that the greedy algorithm finds in this case?Draw the planar dual of the graph shown below.
The proof given in class for Euler's formula V − E + F = 2 assumes that the given planar graph is connected (because otherwise it would not have any spanning trees). Is the formula still valid for planar graphs that are not connected? Why or why not?
What is the worst-case running time of the Bellman–Ford algorithm when its input is a planar graph? You should express your answer in O-notation as a function only of the number n of vertices; do not include the number m of edges in your answer.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/s12-hw1.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
CS 163, Spring 2012, Homework 1, due Thursday, April 12
Describe the sequence of recursive calls made by the depth first
 search algorithm for the graph shown below,
starting from vertex A. (When the algorithm has a choice of more than one vertex, order the choices alphabetically.)
(From http://commons.wikimedia.org/wiki/File:Directed_graph,_cyclic.svg.)

Describe the sequence in which the vertices of the same graph would be processed by a breadth first search starting at A.Write down an adjacency matrix for this graph.What are the strongly connected components of this graph?For your depth first ordering from question 1, write down the
    depth first search index numbers and the lowlink numbers for each
    vertex, as computed by Tarjan's strongly connected component
    algorithm. (Vertex A should have index 0.)
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120515/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120515
##------------------TEXT------------------------##
Index of /~eppstein/163/20120515
NameLast modifiedSizeDescriptionParent Directory   -  1.jpg15-May-2012 16:15   75K 2.jpg15-May-2012 16:15   81K 3.jpg15-May-2012 16:15   73K 4.jpg15-May-2012 16:15   79K 5.jpg15-May-2012 16:15   68K 6.jpg15-May-2012 16:15   74K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120510/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120510
##------------------TEXT------------------------##
Index of /~eppstein/163/20120510
NameLast modifiedSizeDescriptionParent Directory   -  IMG_9989.jpg10-May-2012 17:23   75K IMG_9990.jpg10-May-2012 17:23   76K IMG_9991.jpg10-May-2012 17:23   78K IMG_9992.jpg10-May-2012 17:23   81K IMG_9993.jpg10-May-2012 17:23   84K IMG_9994.jpg10-May-2012 17:23   76K IMG_9995.jpg10-May-2012 17:23   71K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120412/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120412
##------------------TEXT------------------------##
Index of /~eppstein/163/20120412
NameLast modifiedSizeDescriptionParent Directory   -  IMG_9897.JPG12-Apr-2012 14:57   78K IMG_9898.JPG12-Apr-2012 14:57   73K IMG_9899.JPG12-Apr-2012 14:57   85K IMG_9900.JPG12-Apr-2012 14:57  120K IMG_9901.JPG12-Apr-2012 14:57   68K IMG_9902.JPG12-Apr-2012 14:57   76K IMG_9903.JPG12-Apr-2012 14:57   52K IMG_9904.JPG12-Apr-2012 14:57   47K IMG_9905.JPG12-Apr-2012 14:57   68K IMG_9906.JPG12-Apr-2012 14:57   74K IMG_9907.JPG12-Apr-2012 14:57   60K IMG_9908.JPG12-Apr-2012 14:57   51K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/s12-hw4.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
CS 163, Spring 2012, Homework 4, due Thursday, May 3
Draw an undirected graph with eight vertices, for which Borůvka's algorithm uses three rounds to find the minimum spanning tree. Is this possible for graphs with seven vertices? Why or why not?Suppose that a three-way election is held between three candidates named Sarkozy, Merkel, and Putin. Among the voters,
45% prefer Sarkozy first, Merkel second, and Putin last,
35% prefer Putin first, Merkel second, and Sarkozy last, and
20% prefer Merkel first, Putin second, and Sarkozy last.
Who would win in an election using the Borda count?Who would win in an election using instant runoff?Who would win in an election using the Schulze widest-path system?Is there a Condorcet winner? If so, who is it? If not, why not?List the edges of the minimum spanning tree for the graph shown below, in the order that Kruskal's algorithm would add them to the tree.

What is the running time for each of the three algorithms,
Prim-Dijkstra-Jarnik, Borůvka, and Kruskal, when used to build a maze
from a k-by-k grid of squares? For Prim-Dijkstra-Jarnik, use the
analysis for the variant of the algorithm that uses binary heaps, and
for Kruskal's algorithm, assume that the sorting stage of the algorithm
is done using a comparison sorting algorithm.  Express your answers in
O-notation, as a function of k.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120517/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120517
##------------------TEXT------------------------##
Index of /~eppstein/163/20120517
NameLast modifiedSizeDescriptionParent Directory   -  IMG_0003.jpg17-May-2012 15:00   70K IMG_0004.jpg17-May-2012 15:00   76K IMG_0005.jpg17-May-2012 15:00   65K IMG_0006.jpg17-May-2012 15:00   74K IMG_0007.jpg17-May-2012 15:00   81K IMG_0008.jpg17-May-2012 15:00   66K IMG_0009.jpg17-May-2012 15:00   70K IMG_0010.jpg17-May-2012 15:00   72K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120417/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120417
##------------------TEXT------------------------##
Index of /~eppstein/163/20120417
NameLast modifiedSizeDescriptionParent Directory   -  IMG_9920.JPG17-Apr-2012 15:22   74K IMG_9921.JPG17-Apr-2012 15:22   82K IMG_9923.JPG17-Apr-2012 15:22   63K IMG_9924.JPG17-Apr-2012 15:22   94K IMG_9925.JPG17-Apr-2012 15:22   77K IMG_9926.JPG17-Apr-2012 15:22   85K IMG_9927.JPG17-Apr-2012 15:22   80K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120522/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120522
##------------------TEXT------------------------##
Index of /~eppstein/163/20120522
NameLast modifiedSizeDescriptionParent Directory   -  IMG_0011.jpg22-May-2012 17:05   70K IMG_0012.jpg22-May-2012 17:05   92K IMG_0013.jpg22-May-2012 17:05   75K IMG_0014.jpg22-May-2012 17:05   84K IMG_0015.jpg22-May-2012 17:05   85K IMG_0016.jpg22-May-2012 17:05   74K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120410/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120410
##------------------TEXT------------------------##
Index of /~eppstein/163/20120410
NameLast modifiedSizeDescriptionParent Directory   -  2012-04-10 12.38.33.jpg11-Apr-2012 10:21  2.0M 2012-04-10 12.47.14.jpg11-Apr-2012 10:21  2.0M 2012-04-10 12.55.50.jpg11-Apr-2012 10:22  2.0M 2012-04-10 13.22.25.jpg11-Apr-2012 10:22  2.1M 2012-04-10 13.29.42.jpg11-Apr-2012 10:23  2.1M 2012-04-10 13.42.46.jpg11-Apr-2012 10:24  2.1M 2012-04-10_12-39-20_304.jpg10-Apr-2012 13:57  830K 2012-04-10_12-39-30_984.jpg10-Apr-2012 13:57  839K 2012-04-10_12-48-12_749.jpg10-Apr-2012 13:57  859K 2012-04-10_12-56-33_218.jpg10-Apr-2012 13:57  803K 2012-04-10_13-23-09_836.jpg10-Apr-2012 13:57  848K 2012-04-10_13-23-18_375.jpg10-Apr-2012 13:57  880K 2012-04-10_13-30-18_368.jpg10-Apr-2012 13:57  880K 2012-04-10_13-30-27_31.jpg10-Apr-2012 13:57  834K 2012-04-10_13-46-21_347.jpg10-Apr-2012 13:57  877K 2012-04-10_13-46-34_546.jpg10-Apr-2012 13:57  945K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/s12-hw6.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
CS 163, Spring 2012, Homework 6, due Thursday, May 24
Suppose that an undirected and weighted graph G has the property that its minimum spanning tree is a path.
How will the cycle found by Christofides' heuristic differ from this path?In this case, is it always true that the cycle found by Christofides' heuristic is the optimal traveling salesman tour? If so, explain why; if not, draw a counterexample.In the lecture we looked at two algorithms for finding the optimal solution to the traveling salesman problem: a brute force search algorithm that takes time O(n − 1)! on n-vertex graphs and a dynamic programming algorithm that takes time O(n2 × 2n).Assuming the constant factors within the O-notation are the same for both algorithms, for which values of n will the brute force search be faster, and for which values of n will the dynamic program be faster?Suppose more precisely that the brute force algorithm takes (n − 1)!/109 seconds and that the dynamic program takes (n2 × 2n) /109 seconds to run. You are willing to spend one hour of processing time to get an answer. What is the largest n for which each algorithm will run within that time limit?Supposing that we store tour lengths as 64-bit floating point numbers, the dynamic programming algorithm needs 8n2n bytes of memory to store the intermediate results of the algorithm. For your answer in part b, how many bytes is that?

Draw a flow problem that is equivalent to finding a maximum matching in the bipartite graph shown below. You do not have to solve the flow problem.
In the following network, the vertices represent countries that might be involved in smuggling nuclear weapons from China to Iran, and the edge capacities represent how expensive it would be (in billions of dollars) to shut down all smuggling between the two countries connected by the edge. In this network, find a minimum cut separating China from Iran (representing the cheapest set of borders to target in order to prevent the weapons from getting to Iran) and a maximum flow with the same value as your minimum cut. For the flow you found, show also the residual graph.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120426/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120426
##------------------TEXT------------------------##
Index of /~eppstein/163/20120426
NameLast modifiedSizeDescriptionParent Directory   -  IMG_9940.jpg26-Apr-2012 14:28   84K IMG_9941.jpg26-Apr-2012 14:28   72K IMG_9942.jpg26-Apr-2012 14:28   70K IMG_9943.jpg26-Apr-2012 14:28   82K IMG_9945.jpg26-Apr-2012 14:28   83K IMG_9947.jpg26-Apr-2012 14:28   81K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20120524/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20120524
##------------------TEXT------------------------##
Index of /~eppstein/163/20120524
NameLast modifiedSizeDescriptionParent Directory   -  IMG_0017.jpg24-May-2012 16:24   84K IMG_0018.jpg24-May-2012 16:24   77K IMG_0019.jpg24-May-2012 16:24   63K IMG_0020.jpg24-May-2012 16:24   84K IMG_0021.jpg24-May-2012 16:24   78K IMG_0022.jpg24-May-2012 16:24   78K IMG_0023.jpg24-May-2012 16:24   71K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/pick.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 10: Pick's Theorem



We have translated our
sum-of-angles proof to 
spherical trigonometry, in the process
obtaining formulas in terms of sums of areas of faces.
Now we examine similar formulas for sums of areas in planar geometry,
following a suggestion of
Wells.


The basic tool here is Pick's Theorem:
in any polygon P drawn so that it's vertices are on points (x,y)
where x and y are both integers, the area of P can be expressed
as N + B/2 - 1, where N is the number of integer interior points, 
and B is the number of integer points on the edges and vertices of P.
This can be proven in a number of ways, for instance by choosing
a horizontal line L passing below the polygon and partitioning the polygon's area
into the sum of signed areas of trapezoids from L
to each edge.  These proofs do not require Euler's formula so there is
no danger of circular reasoning.


First draw the planar graph corresponding to the polygon, with straight
line segment edges.  It is possible to choose a sufficiently small
radius r, such that if we move each vertex somewhere within a circle of
that radius centered on its original location, the resulting graph will
remain planar; scale the graph so that r=1.
Then move every vertex to the nearest integer vertex; the result is an
equivalent planar graph drawn in the grid.

The outer face of the graph is covered exactly once by the remaining faces,
so the sum of the areas of the remaining faces should equal the area of
the outer faces.  This sum of areas is, by Pick's Theorem,
I+X+B/2+S/2-(F-1), where I is the number of points interior to one of the faces,
X is the number of points on an interior edge (each of which counts 1/2
in each of two faces), S is the sum (over all vertices) of the number of
interior faces the vertex belongs to, and the (F-1) term comes from
adding the -1 term in each of F-1 applications of Pick's theorem.

A vertex interior to the graph contributes a term to S equal to its degree,
whereas a vertex on the outer face contributes only its degree minus one.
Therefore S=2E-K where K is the number of vertices on the outer face.
Further, by Pick's Theorem, the area of the outer face is
(I+X+V-K)+(B+K)/2-1.
Combining the two equations S=2E-K and
I+X+B/2+S/2-(F-1)=(I+X+V-K)+(B+K)/2-1 yields the result.


Unfortunately Pick's theorem
does not generalize to higher dimensions, so this approach seems
unlikely to work for proving higher-dimensional forms of Euler's formula.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/propp.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
From:           propp@math.mit.edu (Jim Propp)
Newsgroups:     sci.math.research
Subject:        Euler characteristic (again)
Date:           6 Jul 1995 16:53:56 -0400
Organization:   MIT Department of Mathematics

Let X be the direct sum (not the direct product!) of countably many copies 
of the interval [0,1]; that is, X is the set of infinite sequences  
			(x_1, x_2, x_3, ...)
such that x_i is in [0,1] for all i, and such that all but finitely many 
of the x_i's vanish.

I am trying to develop (or find in the literature) a theory of "infinite-
dimensional polytopes" like X.  In particular, I would like to be able to 
show that in at least one natural sense (and more likely in several natural
senses), the Euler characteristic of X is 1.

Define X_n as the subset of X containing all sequences (x_1, x_2, ...) 
for which all terms past the nth term vanish (so that X is the union of
the X_n's), define a 0-cell in X as a point in X, and for k > 1 define a 
k-cell in X as a regular open subset of some X_n that is homeomorphic to the 
interior of a k-ball.  Suppose X is written as a disjoint union of 0-cells, 
1-cells, 2-cells, etc., such that for all k > 0, the boundary of any k-cell 
in the decomposition can be written as a union of the 0-cells, 1-cells, ...,
and (k-1)-cells in the decomposition.  Define the Poincare series associated
with this decomposition as the power series in t in which the coefficient 
of t^k is the number of k-cells in the decomposition.  

* Must this Poincare series have an analytic continuation to a neighborhood 
* of t=-1, taking the value 1 at the point itself?

Example: Let D_n denote the boundary of X_n and I_n denote the interior of
X_n.  We can decompose X into X_0, D_1-X_0, I_1, D_2-X_1, I_2, D_3-X_2, I_3,
etc., yielding a decomposition with 2 0-cells, 2 1-cells, 2 2-cells, etc.
The Poincare series is thus 2 + 2t + 2t^2 + ..., whose analytic extension
to the plane (punctured at t=+1) takes the value 1 at t=-1.

I have framed my question somewhat narrowly, but I'm interested in other 
questions of the same sort, and I'd like to know about any relevant work 
that's been done.

Jim Propp
Department of Mathematics
MIT


From:           propp@math.mit.edu (Jim Propp)
Date:           27 Jan 1997 12:24:59 -0500
Newsgroups:     sci.math.research
Subject:        a loopy calculation

Here's a somewhat screwy way to calculate the Euler characteristic of the
loop space of the sphere.  Does anyone know of a theory that explains why
this calculation gives the right answer (1), and that explains under what 
circumstances the low-tech combinatorial/analytical approach sketched below 
gives the correct Euler characteristic for other mapping-spaces?

1) Let X be the sphere, written as a disjoint union of 2 points, 2 open 
intervals, and 2 open disks; the closures of these six sets will be called 
cells.  The cells are ordered by inclusion, forming a finite poset that 
we'll call P.  We put the order topology on P so that the closed subsets 
of P are just the order-ideals of P; that is, the closure of an element 
of P is the set of all cells that are subsets of that cell.  (Motivation: 
we will look at the loop space of P instead of the loop space of X, which 
is a win since P is finite.)

2) Write S^1 as [0,1] with its endpoints identified.  Choose a point x in 
one of the open disks in X, and let F be the set of smooth maps from S^1 
to X that take 0 to x.  We want to calculate the Euler characteristic of F,
but F is too complicated.  So...

3) Consider the map c that sends each point in X to the smallest closed cell 
containing it.  If we compose any map f in F with the map c, we get a map
g from S^1 to P (a simpler sort of map than f, since the range is a finite 
set).  Moreover, the new map g is continuous relative to the order topology 
on P.  The map from F to G is sort of a retraction, so we "reason" that the 
Euler characteristic of F equals the Euler characteristic of G. 

4) Say that a map in G has a jump at t (0 < t < 1) if the map is not
constant on any neighborhood of t.  Each map in G has only finitely many 
jumps (because each map in F was smooth).  Let G_n(t_1,t_2,...,t_n)  
(with t_1 < t_2 < ... < t_n) be the set of maps in G that have jumps at 
t_1,t_2,...,t_n and no other points; this is a finite set whose cardinality 
(call it a_n) depends only on n, not on the t_i's.  (To specify a map with 
jumps at certain locations, one need only specify the value of the map at 
the jumps and between the jumps, subject to the continuity constraint and 
to the condition that there be genuine jumps at those locations.)

5) Let G_n be the set of maps in G with exactly n jumps (the union of the 
aforementioned sets as the t_i's vary, with n fixed).  Then G_n fibers over 
an open n-simplex (namely the set of all (t_1,t_2,...,t_n) with t_1 < t_2 
< ... < t_n), and the open simplex has combinatorial Euler characteristic 
(-1)^n; since all the fibers have cardinality (and Euler characteristic) 
a_n, it is reasonable to say that G_n has Euler characteristic (-1)^n a_n.

6) The sum a_0 - a_1 + a_2 - a_3 + ... does not converge.  However, if
one determines the a_n's explicitly one finds that the power series 
a_0 - a_1 t + a_2 t^2 - a_3 t^3 + ... is the Taylor series of the 
rational function (1+8t-8t^2)/(1+12t-12t^2); and, plugging in the value 
t=1, we get the final answer 1, as expected.

Jim Propp
Department of Mathematics
MIT
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/ipe.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 19: Integer-Point Enumeration


If we are given some shape S in the plane, let
pS(n) denote the number of points with integer coordinates
in a copy of S scaled by the positive integer factor n.  We can compute a formula for p(n) in many simple cases:

If S is a single integer point, then pS(n) = 1
If S is an open line segment with integer endpoints,
containing k integer points, then pS(n) = (k+1)n - 1.
If it's a closed line segment, then pS(n) = (k-1)n + 1.
If S is the interior of a polygon with integer vertices, area A, and k
boundary points, then by Pick's theorem
pS(n) = An2 - (k/2)n + 1.
If instead S is the closure of such a polygon, then instead we get
pS(n) = An2 + (k/2)n + 1.


Note that in all these cases p is a polynomial, with degree equal to the dimension of S, and abs(p(0)) = 1.

Now, as in the other proof via Pick's theorem,
we draw our planar graph with integer coordinates in the plane.
We can calculate the number of integer points covered by scaled copies
of our drawing in two ways: one as pS(n) for the closed
polygon bounded by the drawing's outer face, and one as the sum of
pS(n) over all other vertices, open edges, and interiors of
interior faces of the drawing.

That is,

sumv in V pv(n) +
sume in E pint(e)(n) +
sumf in F pint(f)(n)
=
pcl(outer face)(n) + 
pint(outer face)(n).


(The term on the right hand side for the interior of the outer face
is included to cancel that face from the sum on the left hand side,
since we really wanted to sum only the interior faces of the drawing
but the sum as written includes all faces.)

Evaluating these polynomials at n=0 doesn't change this equality:

sumv in V pv(0) +
sume in E pint(e)(0) +
sumf in F pint(f)(0)
=
pcl(outer face)(0) + 
pint(outer face)(0).


But the left hand side of this equality has +1 for each vertex and
face of the graph, and -1 for each edge, while the right hand side is 2,
so Euler's formula follows.

The Ehrhart-Macdonald Theorem lets us conclude that abs(p(0))=1 for
higher-dimensional relatively open convex polytopes, allowing this proof
to be generalized to any convex polytope in Rd with
integer or rational vertex coordinates (Beck
and Robins, Theorem 5.2).  All polyhedra in R3 can
be realized with integer coordinates but this is not true for all higher
dimensional polytopes.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/interdig.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 1: Interdigitating Trees


For any connected embedded planar graph G define the dual graph G* by
drawing a vertex in the middle of each face of G,
and connecting the vertices from two adjacent faces by a curve e* through
their shared edge e.  Note that G**=G.
Any cycle in G disconnects G* by the Jordan curve theorem.
Any acyclic subgraph F of G is a forest and does not disconnect G*
(you can get from any face to any other face by detouring around
trees in F).  So connectedness and acyclicity are dual to each other.
This duality forms the basis of the following proof:


Choose any spanning tree T in G; this is by definition a connected
acyclic subgraph.  The dual edges of its complement, (G-T)*,
form an acyclic connected subgraph of G* which is therefore also
a spanning tree.
The two trees together have (V-1)+(F-1) edges.


This is my favorite proof, and is the one I use when teaching graph theory.
Sommerville attributes it to Von Staudt.
It fits in well with other topics of planar duality such as the fact that
every planar graph with all faces even is bipartite (by duality from Euler tours).
Several other proofs of the Euler formula have two versions, one
in the original graph and one in its dual, but this proof is self-dual
as is the Euler formula itself.



The idea of decomposing a graph into interdigitating trees has proven
useful in a number of algorithms, including work of myself and others on
dynamic
minimum spanning trees as well as work of Goodrich and Tamassia
on point location.  It also has obvious connections to power-ground
routing in VLSI design and to watershed analysis.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/harr.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 18: Hyperplane Arrangements


This proof comes from a 1997 paper by Jim Lawrence.  It applies to convex polytopes in Rd,
and resembles in some ways the valuation proof.

If A is a finite set of hyperplanes in Rd,
it partitions Rd into faces, sets of points
that are all contained within the same set of hyperplanes, and that are on the same side of all hyperplanes that do not contain them.  Lawrence defines an A-polyhedron to be any union of faces, and he defines a function χ
from A-polyhedra to integers, where if f is a face then χ(f)=(-1)dim f, and if P is an A-polyhedron composed of faces fi
then χ(P)=sum χ(fi).

It is not difficult to see that χ has the same value for P in an
arrangement A for which P is an A-polytope; for, adding any superfluous
hyperplane to the arrangement merely splits some faces into two
same-dimension faces and one face of one lesser dimension, which does
not change the total value of χ for those faces, and removing any
hyerplane merely reverses this process.  Consequentially, if P is any
nonempty intersection of finitely many open halfspaces then
χ(P)=(-1)dim P, for A can be assumed to be the arrangement
of boundary hyperplanes of the halfspaces defining P, for which P is a face.
In particular, from the intersection of zero halfspaces we obtain
χ(Rd)=(-1)d. Also, it is obvious from the construction that the value of χ
on a disjoint union of polyhedra is simply the sums of its values on the individual polyhedra making up the union.

We can now calculate the Euler characteristic of a closed
d-dimensional convex polyhedron P, by embedding P on a hyperplane missing the
origin in Rd+1, forming the infinite cone C of
positive scalar multiples of points in P, and computing X(P)=χ(C).  This
valuation (when viewed in terms of the arrangement of hyperplanes
through the facets of this cone) includes a term of the form
(-1)k for every k-dimensional face of P,
including 1 for the empty face (corresponding to the apex of the cone),
-1 for the vertices (rays forming edges of the cone, which are
1-dimensional faces of the arrangement), etc.

By additivity,


X(P) = χ(Rd+1) - χ(Rd+1\C)
= (-1)d+1 - χ(union Hi),


where Hi is the open halfspace bounded by the i'th hyperplane
on the side of that hyperplane away from C.
We already know the value of the first of these two terms,
and the second can be calculated by inclusion-exclusion as


-sumS subset [1,n] (-1)|S|χ(intersectioni in S H_i)


summed over all nonempty subsets of the halfspaces Hi.
But all such subsets have nonempty intersection (they contain the cone complementary to C) and are open convex polyhedra, so we can simplify the sum above to


-sumi=1n (-1)i (n choose i) (-1)d+1
= (-1)d+1,


which exactly cancels the χ(Rd+1) term
leaving X(C)=0.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/iedge.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 4: Induction on Edges


By combining the two previous proofs we get an induction
with a much simpler base case.


If the connected planar graph G has no edges, it is an isolated vertex
and V+F-E=1+1-0=2.  Otherwise, choose any edge e.  If e
connects two vertices,
contract it, reducing V and E by one.  Otherwise, it is a Jordan curve
and separates two faces; remove it and reduce F and E by one.
In either case the result follows by induction.


This is the proof used by van Lint and Wilson.
Other variants are possible -- if e connects two vertices and
separates two faces,
we may choose in various ways whether to delete or contract e.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/all.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Proof 1: Interdigitating Trees


For any connected embedded planar graph G define the dual graph G* by
drawing a vertex in the middle of each face of G,
and connecting the vertices from two adjacent faces by a curve e* through
their shared edge e.  Note that G**=G.
Any cycle in G disconnects G* by the Jordan curve theorem.
Any acyclic subgraph F of G is a forest and does not disconnect G*
(you can get from any face to any other face by detouring around
trees in F).  So connectedness and acyclicity are dual to each other.
This duality forms the basis of the following proof:


Choose any spanning tree T in G; this is by definition a connected
acyclic subgraph.  The dual edges of its complement, (G-T)*,
form an acyclic connected subgraph of G* which is therefore also
a spanning tree.
The two trees together have (V-1)+(F-1) edges.


This is my favorite proof, and is the one I use when teaching graph theory.
Sommerville attributes it to Von Staudt.
It fits in well with other topics of planar duality such as the fact that
every planar graph with all faces even is bipartite (by duality from Euler tours).
Several other proofs of the Euler formula have two versions, one
in the original graph and one in its dual, but this proof is self-dual
as is the Euler formula itself.



The idea of decomposing a graph into interdigitating trees has proven
useful in a number of algorithms, including work of myself and others on
dynamic
minimum spanning trees as well as work of Goodrich and Tamassia
on point location.  It also has obvious connections to power-ground
routing in VLSI design and to watershed analysis.

Proof 2: Induction on Faces


We can prove the formula for all connected planar graphs, by
induction on the number of faces of G.


If G has only one face, it is acyclic
(by the Jordan curve theorem) and connected, so it is a tree
and E=V-1.  Otherwise, choose an edge e connecting two
different faces of G, and remove it; e can then only appear once in the
boundary of each face, so the graph remains connected -- any path
involving e can be replaced by a path around the other side of one of
the two faces.  This removal decreases both the number of faces and
edges by one, and the result then holds by induction.


This proof commonly appears in graph theory textbooks
(for instance Bondy and Murty)
but is my least favorite: it is to my mind unnecessarily complicated
and inelegant; the full justification for some of the steps seems to be
just as much work as all of the first proof.
It doesn't generalize very well,
and there are some critical details that textbook authors often omit.

Proof 3: Induction on Vertices


This argument is the planar dual to the proof by
induction on faces.


If G has only one vertex, each edge is a Jordan curve,
so there are E+1 faces and F+V-E=(E+1)+1-E=2.
Otherwise, choose an edge e connecting two
different vertices of G, and contract it.  This decreases both the
number of vertices and
edges by one, and the result then holds by induction.


Proof 4: Induction on Edges


By combining the two previous proofs we get an induction
with a much simpler base case.


If the connected planar graph G has no edges, it is an isolated vertex
and V+F-E=1+1-0=2.  Otherwise, choose any edge e.  If e
connects two vertices,
contract it, reducing V and E by one.  Otherwise, it is a Jordan curve
and separates two faces; remove it and reduce F and E by one.
In either case the result follows by induction.


This is the proof used by van Lint and Wilson.
Other variants are possible -- if e connects two vertices and
separates two faces,
we may choose in various ways whether to delete or contract e.

Proof 5: Divide and Conquer


This proof was sent to me by Alex Bogomolny, who found it in a Russian
translation (1958) of the 7th edition of
J. Hadamard's Elementary Geometry (vol 2).  It
is closely related to the proof by
ear decomposition.


The proof is by induction on the number of faces.  First of all, you
remove one face and prove the formula V-E+F=1 for open polyhedral
surfaces. For a single face the formula obviously holds. Assume the
formula holds for a smaller than F number of faces and consider a
surface with number of faces equal to F. Pick two vertices on the
boundary (left by the removed face) of the surface and connect them by a
chain of internal edges. (The existence of such a chain follows by a
form of the Jordan curve theorem.) Now cut along this chain. You get two
surfaces for which the formula V-E+F=1 holds.  For the first let it be
V1-E1+F1=1 and for the second V2-E2+F2=1.  Assume the chain contains L
edges hence (L+1) vertices.  It then follows that E1+E2=E+L and
V1+V2=V+L+1. Of course F1+F2=F.  Summing (algebraically) up gives the
desired result.


One can also use a dual version of the proof, in which an open disk
(initially formed by removing a vertex from the polyhedron) is
decomposed by finding alternating sequences of edges and faces.

Proof 6: Electrical Charge


This proof is due to Thurston.
He writes:

Arrange the polyhedron in space so that no edge is horizontal -- in
particular, so there is exactly one uppermost vertex U and lowermost
vertex L.

Put a unit + charge at each vertex, a unit - charge at the center of
each edge, and a unit + charge in the middle of each face.  We will show
that the charges all cancel except for those at L and at U.  To do this,
we displace all the vertex and edge charges into a neighboring face, and
then group together all the charges in each face.  The direction of
movement is determined by the rule that each charge moves horizontally,
counterclockwise as viewed from above.





In this way, each face receives the net charge from an open interval
along its boundary.  This open interval is decomposed into edges and
vertices, which alternate.  Since the first and last are edges, there is
a surplus of one -; therefore, the total charge in each face is zero.
All that is left is +2, for L and for U.


Thurston goes on to generalize this idea to a proof that the
Euler characteristic
is an invariant of any triangulated differentiable manifold.

Proof 7: Dual Electrical Charge


Rather than grouping charges in faces of the graph, we can give a dual argument
that groups charges at vertices.  This proof works best with the convex
planar embedding of the graph of a polyhedron.

Rotate the graph if necessary so that no edge is vertical.
As in the previous proof,
put a unit + charge at each vertex, a unit - charge at the center of
each edge, and a unit + charge in the middle of each face.
We will show that all but two + charges cancel.
To do this, displace the charge on each edge to its right endpoint;
displace the charge on each face (except the outer face) to its rightmost vertex.
Each vertex (except the leftmost vertex)
receives the charges from an alternating sequence of edges and faces,
cancelling its initial charge.  The only remaining uncancelled charges
are one + charge on the outer face and one + charge on the leftmost vertex.





Proof 8: Sum of Angles


This proof uses the fact that the planar graph formed by the polyhedron
can be embedded so all edges form straight line segments.


Sum up the angles in each face of a straight line drawing of the graph
(including the outer face); the sum of angles in a k-gon is
(k-2)pi, and each edge contributes to two faces, so the total sum
is (2E-2F)pi.

Now let's count the same angles the other way.
Each interior vertex is surrounded by triangles and contributes a total
angle of 2 pi to the sum.
The vertices on the outside face contribute 2(pi - theta(v)).
where theta denotes the exterior angle of the polygon.
The total exterior angle of any polygon is 2 pi,
so the total angle is 2 pi V - 4 pi.

Combining these two formulas and dividing through by 2 pi,
we see that V - 2 = E - F, or equivalently V-E+F=2.


This is the method used by Descartes in 1630.
Sommerville attributes this proof to
Lhuilier and
Steiner.
Hilton and Pederson use angles in a similar way
to relate the Euler characteristic of a polyhedral surface
to its total angular defect.

Proof 9: Spherical Angles


The proof by sums of angles works more cleanly in terms of spherical triangulations,
largely because in this formulation there is no distinguished "outside face"
to cause complications in the proof.

We need the following basic fact from spherical trigonometry:
if we normalize the surface area of a sphere to 4 pi,
and look at any triangle defined by great circle arcs on the sphere,
the sum of the three interior angles is pi+a where a (the excess
of the triangle, is equal to the surface area of the triangle.
(E.g. see Wells, p. 238).


To translate our question on polyhedra to one of spherical geometry,
first triangulate the polyhedron; each new edge increases E and F by one each,
so V-E+F is left unchanged.  Now perform a similar
light-shining experiment to the one described on the index page:
place a light source at an interior point of the polyhedron,
and place a spherical screen outside the polyhedron
having the light source as its centerpoint.
The shadows cast on the screen by the polyhedron edges will form
a spherical triangulation.  Since every edge is on two triangles
and every triangle has three edges, 2E=3F.

We now add up the angles of all the triangles; by the spherical trigonometry described above, the sum is (4+F) pi.  Adding the same angles another way, in terms of the vertices, gives a total of 2 V pi.  Since these two sums measure the same set of angles,
F=2V-4 and combining this with the other equation 2E=3F yields the result.


Sommerville attributes this proof to
Legendre.
Because of its connections with
geometric
topology, this is the proof used by
Weeks,
who also gives an elegant proof of the spherical angle-area relationship
based on inclusion-exclusion of great-circular double wedges.

The relation A*k = 2 pi (V-E+F)
on a surface of constant curvature k such as the sphere
is a form of the Gauss-Bonnet formula from differential geometry.

Proof 10: Pick's Theorem



We have translated our
sum-of-angles proof to 
spherical trigonometry, in the process
obtaining formulas in terms of sums of areas of faces.
Now we examine similar formulas for sums of areas in planar geometry,
following a suggestion of
Wells.


The basic tool here is Pick's Theorem:
in any polygon P drawn so that it's vertices are on points (x,y)
where x and y are both integers, the area of P can be expressed
as N + B/2 - 1, where N is the number of integer interior points, 
and B is the number of integer points on the edges and vertices of P.
This can be proven in a number of ways, for instance by choosing
a horizontal line L passing below the polygon and partitioning the polygon's area
into the sum of signed areas of trapezoids from L
to each edge.  These proofs do not require Euler's formula so there is
no danger of circular reasoning.


First draw the planar graph corresponding to the polygon, with straight
line segment edges.  It is possible to choose a sufficiently small
radius r, such that if we move each vertex somewhere within a circle of
that radius centered on its original location, the resulting graph will
remain planar; scale the graph so that r=1.
Then move every vertex to the nearest integer vertex; the result is an
equivalent planar graph drawn in the grid.

The outer face of the graph is covered exactly once by the remaining faces,
so the sum of the areas of the remaining faces should equal the area of
the outer faces.  This sum of areas is, by Pick's Theorem,
I+X+B/2+S/2-(F-1), where I is the number of points interior to one of the faces,
X is the number of points on an interior edge (each of which counts 1/2
in each of two faces), S is the sum (over all vertices) of the number of
interior faces the vertex belongs to, and the (F-1) term comes from
adding the -1 term in each of F-1 applications of Pick's theorem.

A vertex interior to the graph contributes a term to S equal to its degree,
whereas a vertex on the outer face contributes only its degree minus one.
Therefore S=2E-K where K is the number of vertices on the outer face.
Further, by Pick's Theorem, the area of the outer face is
(I+X+V-K)+(B+K)/2-1.
Combining the two equations S=2E-K and
I+X+B/2+S/2-(F-1)=(I+X+V-K)+(B+K)/2-1 yields the result.


Unfortunately Pick's theorem
does not generalize to higher dimensions, so this approach seems
unlikely to work for proving higher-dimensional forms of Euler's formula.

Proof 11: Ear Decomposition


A graph is two-edge-connected if removing any edge leaves a connected subgraph.
Two-edge-connectivity is equivalent to the existence of an ear decomposition:
a partition of the edges of the graph into a sequence of ears
(simple paths and cycles), with the first ear being a single vertex; the
start and
end of each successive ear should be vertices occurring in previous
ears, but all
other vertices in an ear should be new.  Such a decomposition can be
found one ear at a time: start each ear by any unused edge e from an
already-explored vertex, and continue by a shortest path back to another
already-explored vertex (such a path must exist because e cannot
disconnect the graph).

We can use such a decomposition in a proof of the Euler formula for polyhedra:

The graph G of a polyhedron is two-edge-connected, since if we remove an edge e
we can still connect its endpoints by a path around the other side of one of the
two faces of G containing e.

Find an ear decomposition of G, and consider the process of forming G by
adding ears one at a time starting
from a single vertex.  Initially there is one vertex, one face, and no edges.
Each new ear forms a path connecting two vertices on the boundary of a face,
splitting the face in two; the path has one more edge than it has vertices.
So if the ear has k edges, its addition increases V by
k-1, E by k, and F by 1,
and the result follows by induction on the number of ears.

Ear decompositions have been especially useful in the design of parallel algorithms,
since they are easier to find in parallel than are other structural decompositions
of graphs such as depth first search trees.
For an example of this see my work on
recognizing
series parallel graphs.

Proof 12: Shelling


Ziegler
interprets a polyhedron or polytope as a complex of polyhedral
faces of varying dimensions.  He lets fi denote the number
of faces of dimension i, so f0=V,
f1=E, and f2=F,
but he also adds faces of dimension d (the whole polytope)
and -1 (the empty face); f-1=fd=1.

Ziegler
defines a shelling of a complex of polyhedral faces
to be a linear ordering on the maximal-dimension faces (facets)
such that, if the facets are of dimension at least one,
the ordering satisfies the following properties:
The boundary of the first facet F0 has a shelling.
The intersection of each facet Fj (j > 0) with the
union of previous
facets is nonempty and forms the prefix of a shelling of Fj.


Every convex polytope has a shelling found by traveling in a straight line
from some point near one face of the polyhedron, and ordering the faces
by the sequence of points at which the line crosses the plane of a face
and the face becomes visible.  (The line must be imagined to pass
"to infinity and beyond" through to the other side of the polyhedron.)
The intersection of a facet Fj with previous facets
can be found
geometrically as the portion of the boundary of the facet
visible from the intersection point of the viewing line with the plane
of the facet; this shows that the lower-dimensional shelling required by
property 2 is of the same geometric type.

Ziegler then proves that any polytope
has Euler characteristic
X(P)=Sum(-1i fi)=0,
by an induction on dimension and shelling length:

The base case, in which f-1=f0=1, is clear.
Now if P is a d-polytope with shelling order
F1,F2,... then we have
more precisely that
X(F1 u F2 u ... u Fj)
is 0 for j < fd-1
and 1 for j = fd-1
which follows by induction on j, 
since the facets we add in are (d-1)-polytopes, the Euler
characteristic is additive, and the intersection of Fj with
previous facets is a shellable part of, but (for j <
fd-1)
not the whole boundary of
Fj (Ziegler shows that this last observation is true
in general, but it is evident geometrically for the
shelling defined above).

Removing the two "extra" faces f-1 and
f3 from this sum
gives us the usual Euler formula.

Proof 13: Triangle Removal


This proof is really just a variation on shelling,
but is included here for its historical significance: it was
used by Cauchy, and was examined at length by Lakatos.


Begin with a convex planar drawing of the polyhedron's edges.
If there is a non-triangular face, add a diagonal to a face,
dividing it in two and adding one to the numbers of edges and faces;
the result then follows by induction.

So suppose we have any planar graph with all interior faces
triangular, with at least two such faces, and with the further property
that one can get from any interior point to any other
by a path that avoids the boundary of the graph's outer face.
(The triangulation of the convex drawing of our polyhedron clearly
satisfies these properties.)
Then there are always at least two triangles having edges on this boundary,
such that the removal of either one leaves a single triangle or a
smaller graph of the same type;
this can be proved by an induction on the number of triangles,
for if some boundary triangle disconnects the interior points,
the two disconnected components on its two non-boundary edges
must either be single triangles
(which are removable) or have (by induction)
two removable boundary triangles, at least one of which
will be removable in the overall graph.

So remove boundary triangles one by one; at each step we remove
either one edge and one face, or two edges, a face, and a vertex.
In all cases V-E+F remains unchanged.  Eventually we reach
a graph formed by a single triangle at which point
V-E+F=3-3+2=2.


The case analysis occurring in higher dimensional
versions of this proof is closely related to Radon's theorem
that any d+2 points can be partitioned into two
subsets with intersecting convex hulls,
and to "flipping" based algorithms for constructing
Delaunay triangulations and convex hulls.

Proof 14: Noah's Ark


Portions of this proof are from Bishop and
Goldberg.


Define a height function on the surface of the polyhedron as follows:
Choose arbitrary heights for each vertex.
In each edge, choose a height for one interior point greater
than that of the two endpoints, and interpolate the remainder
of the edge linearly between the chosen point and the endpoints.
In each face, choose a height for one interior point, greater
than all heights on its boundary; interpolate the heights in the rest
of the face linearly on line segments from the chosen point to the boundary.
The result is a continuous function with V+F+E critical points:
V local minima at the vertices, E saddles at the chosen points of edges,
and F local maxima at chosen points of faces.

Now view the surface as an initially bone dry earth on which there is
about to fall a deluge which ultimately covers the highest peak.  We
count the number of lakes and connected land masses formed and destroyed
in this rainstorm to obtain the result.

For each local minimum there will be one lake formed.
For each saddle there will either be two lakes joined or a single lake
doubling back on itself and disconnecting one land mass from another
(let J and D denote the number of times these events happen respectively).
For each peak a land mass will be eliminated.
Initially there is one land mass, and in the final sitation there is one global lake.
Thus we have 1+D-F=0 and 0+V-J=1.
Combining these two equations with the fact that D+J=E yields the result.


One can either view the rainfall as (unnaturally) causing the global water levels
to always be at the same height, so that two lakes reach a saddle at the same time;
or one can take a more realistic viewpoint and say that the rainfall may
vary arbitrarily over the globe, but when one lake reaches a saddle the water will
spill over it (and the lake will not rise) until the lake on the other
side of the saddle reaches the same height.

This proof is close to self-dual, the biggest asymmetry being in the
definition of the height function.
As usual, the Jordan curve theorem is involved, in the fact that a lake
doubling back on itself creates an island. The principle of classifying the singular points (peaks, saddles, and valleys) for a height function defined on a surface is the main idea behind Morse theory, but this proof dates back much earlier than Morse, to an 1863 publication of Möbius.

Proof 15: Binary Homology


Portions of the following proof are described by
Lakatos (who credits it to Poincaré)
however Lakatos omits any detailed justification for the properties 
of the map b defined below, instead treating them as axioms
(so the theorem he ends up proving is that
that Euler's formula is true of any polyhedron satisfying these axioms,
but he doesn't prove that this is true of convex polyhedra).

Like the shelling proof,
this proof
interprets a polyhedron or polytope as a complex of polyhedral
faces of varying dimensions, with fi denoting the number
of faces of dimension i.  And like that proof,
we add two "extra" cells, one for the whole polytope
and one for the "empty face", so f-1=fd=1.

We interpret the subsets of faces of dimension i
as a vector space over the two-element field GF(2),
with vector addition being performed by symmetric difference
of subsets (also known as exclusive or).
In this way we get d+1 vector spaces Vi,
with dimensions equal to fi.
The sets of faces of the polytope can be interpreted as forming
bases for these vector spaces.

These spaces also come equipped with a linear mapping b taking
each space Vi to the next lower dimensional space,
defined on each face to be the set of its facets.
When v is a sum of faces, b(v) is the sum of the corresponding
sets of facets.
(The empty face has no facets, and a vertex is defined
to have the empty face as its only facet.)
This mapping has two very important properties:
Boundaries have no boundaries.  In other words,
for any vector v, b(b(v))=0.
If v is a basis vector, corresponding to a single face of the polytope,
this is true because any ridge (face two dimensions lower than v)
forms the boundary between two facets of v, and is therefore
cancelled out in the calculation of b(b(v)).
In the special case of the empty face, b(v)=0 already and for any linear
map b(0)=0.  In the special case of a vertex, b(v) is the empty face
and again b(b(v))=0.
The result follows as well for vectors other than the bases
by linearity.

Any vector without a boundary is itself a boundary.
In other words, for any vector v, if b(v)=0, then v=b(w) for some w.
If v=0 then we can choose w=0 as well; for nonzero v
we prove this by analyzing the vectors of each dimension separately.
If v is in V-1, it must be the empty face itself
and is the boundary of some vertex.
If v is in V0, it must consist of an even number of vertices
for b(v) to be zero.  These vertices can be paired up
and connected by paths; then w can be taken to be the vector sum of
these paths.
If v is in V1, it forms a set of edges meeting an even number of
times at each vertex; these edges can be grouped into Jordan curves
and w can be taken to be the vector sum of regions bounded by these curves.
If v is in V2, it must be the whole set of facets of the polyhedron,
since we can find a path on the polyhedron boundary from any facet to
any other facet (avoiding vertices), and none of the edges
crossed by this path can be in b(v).
So we can take w to be the single cell corresponding to the whole polyhedron.
Finally, if v is a nonzero vector in V3, b(v) cannot be zero.


With these preliminaries out of the way we are ready to
begin the proof that
Sum(-1i fi)=0.

Let Bi denote the subspace of Vi consisting
of those vectors for which b(v)=0.
Then the map b takes Vi to Bi-1.
Whenever we have a linear map of vector spaces,
we can use it to decompose the original space into
its nullspace (the set of vectors mapped to zero,
here Bi) and its orthogonal complement,
which is mapped one-to-one onto the image of the map.
This tells us that
dim(Vi)=dim(Bi)+dim(Bi-1).
Plugging this expansion into the sum we are trying to evaluate
gives

Sum(-1i fi)

= Sum(-1i (dim(Bi) +
dim(Bi-1)))

which equals zero, because each term Bi
appears twice with opposite signs.

Cancelling the two extra parameters f-1 and
f3 from
the sum gives the usual Euler formula.
I suspect there is a more direct, dimensionless way of proving
that boundaryless vectors are themselves boundaries, but I don't see it
and Lakatos doesn't describe it.

Homology theory, one of the foundation stones of
algebraic topology, is devoted to defining similar vector spaces and
understanding
the extent to which the key equation
dim(Vi)=dim(Bi)+dim(Bi-1)
fails to be true in other topological spaces.

Proof 16: Binary Space Partition


A binary space partition
is a data structure commonly used for computer
graphics and other geometric searching problems.  It's formed by cutting
space by a hyperplane, then recursively partitioning each of the two
resulting halfspaces.  The result is a hierarchical decomposition of
space into convex cells.

In 1974, Helge Tverberg showed that, given
any convex polytope K, one can find a binary space partition that decomposes
K into simplices.  This is obvious for two dimensional polytopes (just
repeatedly cut along polygon diagonals); the general proof proceeds by
induction on dimension and number of faces:


We assume K is not a simplex or we would already be done.

If K has a vertex P incident to more than d facets, then (by induction on dimension) we can partition K by hyperplanes through P into smaller polytopes
each of which has exactly d facets incident to P.
The number of facets not incident to P in each of these polytopes
is at most the same as in K, so each smaller polytope has fewer facets than K.
By induction on number of facets, we can recursively partition the smaller polytopes into simplices.

On the other hand suppose that each vertex of K has only d incident facets.
Let P be a vertex of K that is not adjacent to some two facets F1 and F2
(we can find P, F1, and F2 by induction on dimension if K has a non-simplicial facet; if all facets of K are simplices, let F1 and F2 be two adjacent facets and P be any vertex other than the d+1 vertices shared by F1 and F2).
Let L be the hyperline contained in the hyperplanes through F1 and F2,
and cut K by a hyperplane through P and L.
Then each of the two pieces avoids one of the facets Fi, but has a new facet
on the cut plane, so its number of facets is not increased.
One can show that each piece either has more than d facets at P
(in which case we can apply the previous case), or avoids an additional
facet of K (in which case we can apply induction on the number of
facets), so either way we can partition each piece recursively.


The number of cuts in this partition may be exponential in the number of facets,
but this seems unavoidable due to examples like the hypercube which have few facets but require many cuts.

Tverberg then proves that the Euler characteristic X(K)
(as defined more precisely for the
shelling proof) is always zero,
by induction on dimension and on the number of cuts in the binary space
partition:


If K is a simplex, the number of faces of any dimension is
counted by a binomial coefficient, and the identity X(K)=0
is just the application of the binomial theorem to
the evaluation of (1+x)d at x = -1.

Otherwise, let the top level cut of the
binary space partition split K into
two polytopes K1 and K2.  Let K3 be the convex hull of
the set of vertices of K that are contained in the cutting hyperplane,
and let K4 be the intersection of K with the cutting hyperplane.
Then we have the formula


X(K) = X(K1) + X(K2) + 2 X(K3) - 3 X(K4),


since each face of K is either contained in the cutting hyperplane
(contributing to all four terms X(Ki)), split by the cutting hyperplane
(forming a face of one lower dimension in K1, K2, and K4, and
contributing a negated term to each of these three polytopes' Euler
characteristics), or is contained in one of the two halfspaces (and
contributes only to X(K1) or X(K2)).

K1 and K2 have smaller binary space partitions, and K3 and K4 have lower dimension, so by induction all have zero Euler characteristic.
Therefore, X(K) is also zero.


Proof 17: Valuations


This proof comes from
Klain and Rota,
who develop it as part of a more general theory of
invariant measures on Euclidean spaces.
Thanks also to Robin Chapman for helping explain it to me.

Let Ud be the vector space of functions from Rd
to R, and Vd be the subspace of Ud
generated by characteristic functions of compact convex sets
in Rd.
We define a function χd that maps Vd to real numbers,
as follows:
If d=1, for any function f in Vd, let


D f(x) = f(x) - limy->x+f(y),

χ1(f) = sum D f(x)


(Note that this sum always has only a finite number of nonzero terms.)

If d>1, partition the coordinates of Rd into sets
of d-1 and 1 coordinate:


Rd = Rd-1 × R.

Thus we can represent any point in Rd as a pair
(x,z) where x in Rd-1 and z in R.
For any function f in Vd,
and any z in R, let fz denote the restriction of f to
a (d-1)-dimensional cross-section:
fz(x) = f(x,z),
so fz is a function in Vd-1.
We then define


χd(f) = sum D χd-1(fz).


Because D and Sum are linear operators, χ is a linear function from V
to R.  It can also be shown by a simple induction on dimension
that, if f is the characteristic function of a compact convex set K,
then χ(f) = 1: By induction, χ(fz) is the
characteristic function of a closed interval, from which it is clear
from the definition that sum D χ(fz) is 1.
Thus also (since V has the characteristic
functions of convex compact sets as its basis) χ is well defined
independently of the choice of coordinates for Rd.

If
g is the characteristic function of the relative interior of a polytope
K, it is in Vd (by inclusion-exclusion of lower-dimensional
faces) and a similar induction shows that
χ(g) = (-1)m, where m is the dimension of K:
Because of the independence of χ from the coordinate system, we can assume m=d.  Each cross-section of K is itself a polytope, so by induction
χ(gz) is (-1)m-1 times the characteristic function of an open interval, and the effect of the sum and D operators is to multiply by another factor of -1.

Now we let K be a convex polytope, and evaluate χ on its characteristic function in two different ways, by partitioning K into the disjoint union of the relative interiors of its faces.  By linearity of χ, the sum of its values on these relative interiors must be the same as its value on all of K, that is,


1 = sum (-1)^m


where the sum is over the set of faces of K (including K itself).
Grouping the faces by their dimensions, we get a form of Euler's formula:


1 = sum (-1)i fi


where the sum runs from i=1 to the dimension of K.

Proof 18: Hyperplane Arrangements


This proof comes from a 1997 paper by Jim Lawrence.  It applies to convex polytopes in Rd,
and resembles in some ways the valuation proof.

If A is a finite set of hyperplanes in Rd,
it partitions Rd into faces, sets of points
that are all contained within the same set of hyperplanes, and that are on the same side of all hyperplanes that do not contain them.  Lawrence defines an A-polyhedron to be any union of faces, and he defines a function χ
from A-polyhedra to integers, where if f is a face then χ(f)=(-1)dim f, and if P is an A-polyhedron composed of faces fi
then χ(P)=sum χ(fi).

It is not difficult to see that χ has the same value for P in an
arrangement A for which P is an A-polytope; for, adding any superfluous
hyperplane to the arrangement merely splits some faces into two
same-dimension faces and one face of one lesser dimension, which does
not change the total value of χ for those faces, and removing any
hyerplane merely reverses this process.  Consequentially, if P is any
nonempty intersection of finitely many open halfspaces then
χ(P)=(-1)dim P, for A can be assumed to be the arrangement
of boundary hyperplanes of the halfspaces defining P, for which P is a face.
In particular, from the intersection of zero halfspaces we obtain
χ(Rd)=(-1)d. Also, it is obvious from the construction that the value of χ
on a disjoint union of polyhedra is simply the sums of its values on the individual polyhedra making up the union.

We can now calculate the Euler characteristic of a closed
d-dimensional convex polyhedron P, by embedding P on a hyperplane missing the
origin in Rd+1, forming the infinite cone C of
positive scalar multiples of points in P, and computing X(P)=χ(C).  This
valuation (when viewed in terms of the arrangement of hyperplanes
through the facets of this cone) includes a term of the form
(-1)k for every k-dimensional face of P,
including 1 for the empty face (corresponding to the apex of the cone),
-1 for the vertices (rays forming edges of the cone, which are
1-dimensional faces of the arrangement), etc.

By additivity,


X(P) = χ(Rd+1) - χ(Rd+1\C)
= (-1)d+1 - χ(union Hi),


where Hi is the open halfspace bounded by the i'th hyperplane
on the side of that hyperplane away from C.
We already know the value of the first of these two terms,
and the second can be calculated by inclusion-exclusion as


-sumS subset [1,n] (-1)|S|χ(intersectioni in S H_i)


summed over all nonempty subsets of the halfspaces Hi.
But all such subsets have nonempty intersection (they contain the cone complementary to C) and are open convex polyhedra, so we can simplify the sum above to


-sumi=1n (-1)i (n choose i) (-1)d+1
= (-1)d+1,


which exactly cancels the χ(Rd+1) term
leaving X(C)=0.

Proof 19: Integer-Point Enumeration


If we are given some shape S in the plane, let
pS(n) denote the number of points with integer coordinates
in a copy of S scaled by the positive integer factor n.  We can compute a formula for p(n) in many simple cases:

If S is a single integer point, then pS(n) = 1
If S is an open line segment with integer endpoints,
containing k integer points, then pS(n) = (k+1)n - 1.
If it's a closed line segment, then pS(n) = (k-1)n + 1.
If S is the interior of a polygon with integer vertices, area A, and k
boundary points, then by Pick's theorem
pS(n) = An2 - (k/2)n + 1.
If instead S is the closure of such a polygon, then instead we get
pS(n) = An2 + (k/2)n + 1.


Note that in all these cases p is a polynomial, with degree equal to the dimension of S, and abs(p(0)) = 1.

Now, as in the other proof via Pick's theorem,
we draw our planar graph with integer coordinates in the plane.
We can calculate the number of integer points covered by scaled copies
of our drawing in two ways: one as pS(n) for the closed
polygon bounded by the drawing's outer face, and one as the sum of
pS(n) over all other vertices, open edges, and interiors of
interior faces of the drawing.

That is,

sumv in V pv(n) +
sume in E pint(e)(n) +
sumf in F pint(f)(n)
=
pcl(outer face)(n) + 
pint(outer face)(n).


(The term on the right hand side for the interior of the outer face
is included to cancel that face from the sum on the left hand side,
since we really wanted to sum only the interior faces of the drawing
but the sum as written includes all faces.)

Evaluating these polynomials at n=0 doesn't change this equality:

sumv in V pv(0) +
sume in E pint(e)(0) +
sumf in F pint(f)(0)
=
pcl(outer face)(0) + 
pint(outer face)(0).


But the left hand side of this equality has +1 for each vertex and
face of the graph, and -1 for each edge, while the right hand side is 2,
so Euler's formula follows.

The Ehrhart-Macdonald Theorem lets us conclude that abs(p(0))=1 for
higher-dimensional relatively open convex polytopes, allowing this proof
to be generalized to any convex polytope in Rd with
integer or rational vertex coordinates (Beck
and Robins, Theorem 5.2).  All polyhedra in R3 can
be realized with integer coordinates but this is not true for all higher
dimensional polytopes.

Proof 20: Euler tours


Given the similarity of names between an Euler tour (a closed walk in a
graph that visits every edge exactly once) and Euler's formula, it is
surprising that a strong connection between the two came so recently.
The proof below is based on a relation between repetitions and face
counts in Eulerian planar graphs observed by Red Burton, a version of the Graffiti software
system for making conjectures in graph theory.

A planar graph G has an Euler tour if and only if the degree of every
vertex in G is even. Given such a tour, let R denote the number of times
the tour reaches a vertex that has already been seen earlier in the
tour. For instance, this repetition count would equal one for a graph in
the form of a single cycle: only the starting vertex is repeated. As Red
Burton observed, it is always the case that
F = R+ 1. For, if one draws the edges of the graph in the
order given by the tour, then the drawing starts out with one face, and
every repeated vertex closes off one more face. But we also have
R = E − V + 1, because there are
E + 1 vertices visited in the tour from start to end, of which
V are not repetitions. Putting these two equations for R together and
eliminating R gives
Euler's formula, but only for Eulerian graphs.

Now, given an arbitrary planar graph G, draw two
parallel copies of each edge, separated by a thin two-sided face. This
modification doesn't change the value of the formula
V − E + F for graph G, because it adds the
same quantity (E) to both the number of edges and the number of faces,
which cancel each other in the formula. But the new graph is Eulerian,
so the repetition count argument for Eulerian graphs applies to it, and
shows that in it E − V + F = 2.
The same must be true in the original graph.

The idea of proving Euler's formula by transforming an arbitrary
planar graph to make it
Eulerian was found by University of Houston chemical engineering
sophomore Stephanie Mathew, under the supervision of Siemion Fajtlowicz,
who used this idea to find the above proof. Fajtlowicz also supplies two
different variants of the proof, in which one repeatedly connects pairs
of odd vertices either by an arc in the plane that avoids all the
existing vertices or by by doubling paths in the given graph. Both of
these alternative versions of the Euler tour proof use the fact that
every graph has an even number of odd vertices, which was proven by
Euler.


Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/sphere.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 9: Spherical Angles


The proof by sums of angles works more cleanly in terms of spherical triangulations,
largely because in this formulation there is no distinguished "outside face"
to cause complications in the proof.

We need the following basic fact from spherical trigonometry:
if we normalize the surface area of a sphere to 4 pi,
and look at any triangle defined by great circle arcs on the sphere,
the sum of the three interior angles is pi+a where a (the excess
of the triangle, is equal to the surface area of the triangle.
(E.g. see Wells, p. 238).


To translate our question on polyhedra to one of spherical geometry,
first triangulate the polyhedron; each new edge increases E and F by one each,
so V-E+F is left unchanged.  Now perform a similar
light-shining experiment to the one described on the index page:
place a light source at an interior point of the polyhedron,
and place a spherical screen outside the polyhedron
having the light source as its centerpoint.
The shadows cast on the screen by the polyhedron edges will form
a spherical triangulation.  Since every edge is on two triangles
and every triangle has three edges, 2E=3F.

We now add up the angles of all the triangles; by the spherical trigonometry described above, the sum is (4+F) pi.  Adding the same angles another way, in terms of the vertices, gives a total of 2 V pi.  Since these two sums measure the same set of angles,
F=2V-4 and combining this with the other equation 2E=3F yields the result.


Sommerville attributes this proof to
Legendre.
Because of its connections with
geometric
topology, this is the proof used by
Weeks,
who also gives an elegant proof of the spherical angle-area relationship
based on inclusion-exclusion of great-circular double wedges.

The relation A*k = 2 pi (V-E+F)
on a surface of constant curvature k such as the sphere
is a form of the Gauss-Bonnet formula from differential geometry.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/d-n-c.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 5: Divide and Conquer


This proof was sent to me by Alex Bogomolny, who found it in a Russian
translation (1958) of the 7th edition of
J. Hadamard's Elementary Geometry (vol 2).  It
is closely related to the proof by
ear decomposition.


The proof is by induction on the number of faces.  First of all, you
remove one face and prove the formula V-E+F=1 for open polyhedral
surfaces. For a single face the formula obviously holds. Assume the
formula holds for a smaller than F number of faces and consider a
surface with number of faces equal to F. Pick two vertices on the
boundary (left by the removed face) of the surface and connect them by a
chain of internal edges. (The existence of such a chain follows by a
form of the Jordan curve theorem.) Now cut along this chain. You get two
surfaces for which the formula V-E+F=1 holds.  For the first let it be
V1-E1+F1=1 and for the second V2-E2+F2=1.  Assume the chain contains L
edges hence (L+1) vertices.  It then follows that E1+E2=E+L and
V1+V2=V+L+1. Of course F1+F2=F.  Summing (algebraically) up gives the
desired result.


One can also use a dual version of the proof, in which an open disk
(initially formed by removing a vertex from the polyhedron) is
decomposed by finding alternating sequences of edges and faces.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/angle.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 8: Sum of Angles


This proof uses the fact that the planar graph formed by the polyhedron
can be embedded so all edges form straight line segments.


Sum up the angles in each face of a straight line drawing of the graph
(including the outer face); the sum of angles in a k-gon is
(k-2)pi, and each edge contributes to two faces, so the total sum
is (2E-2F)pi.

Now let's count the same angles the other way.
Each interior vertex is surrounded by triangles and contributes a total
angle of 2 pi to the sum.
The vertices on the outside face contribute 2(pi - theta(v)).
where theta denotes the exterior angle of the polygon.
The total exterior angle of any polygon is 2 pi,
so the total angle is 2 pi V - 4 pi.

Combining these two formulas and dividing through by 2 pi,
we see that V - 2 = E - F, or equivalently V-E+F=2.


This is the method used by Descartes in 1630.
Sommerville attributes this proof to
Lhuilier and
Steiner.
Hilton and Pederson use angles in a similar way
to relate the Euler characteristic of a polyhedral surface
to its total angular defect.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/val.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 17: Valuations


This proof comes from
Klain and Rota,
who develop it as part of a more general theory of
invariant measures on Euclidean spaces.
Thanks also to Robin Chapman for helping explain it to me.

Let Ud be the vector space of functions from Rd
to R, and Vd be the subspace of Ud
generated by characteristic functions of compact convex sets
in Rd.
We define a function χd that maps Vd to real numbers,
as follows:
If d=1, for any function f in Vd, let


D f(x) = f(x) - limy->x+f(y),

χ1(f) = sum D f(x)


(Note that this sum always has only a finite number of nonzero terms.)

If d>1, partition the coordinates of Rd into sets
of d-1 and 1 coordinate:


Rd = Rd-1 × R.

Thus we can represent any point in Rd as a pair
(x,z) where x in Rd-1 and z in R.
For any function f in Vd,
and any z in R, let fz denote the restriction of f to
a (d-1)-dimensional cross-section:
fz(x) = f(x,z),
so fz is a function in Vd-1.
We then define


χd(f) = sum D χd-1(fz).


Because D and Sum are linear operators, χ is a linear function from V
to R.  It can also be shown by a simple induction on dimension
that, if f is the characteristic function of a compact convex set K,
then χ(f) = 1: By induction, χ(fz) is the
characteristic function of a closed interval, from which it is clear
from the definition that sum D χ(fz) is 1.
Thus also (since V has the characteristic
functions of convex compact sets as its basis) χ is well defined
independently of the choice of coordinates for Rd.

If
g is the characteristic function of the relative interior of a polytope
K, it is in Vd (by inclusion-exclusion of lower-dimensional
faces) and a similar induction shows that
χ(g) = (-1)m, where m is the dimension of K:
Because of the independence of χ from the coordinate system, we can assume m=d.  Each cross-section of K is itself a polytope, so by induction
χ(gz) is (-1)m-1 times the characteristic function of an open interval, and the effect of the sum and D operators is to multiply by another factor of -1.

Now we let K be a convex polytope, and evaluate χ on its characteristic function in two different ways, by partitioning K into the disjoint union of the relative interiors of its faces.  By linearity of χ, the sum of its values on these relative interiors must be the same as its value on all of K, that is,


1 = sum (-1)^m


where the sum is over the set of faces of K (including K itself).
Grouping the faces by their dimensions, we get a form of Euler's formula:


1 = sum (-1)i fi


where the sum runs from i=1 to the dimension of K.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/shell.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 12: Shelling


Ziegler
interprets a polyhedron or polytope as a complex of polyhedral
faces of varying dimensions.  He lets fi denote the number
of faces of dimension i, so f0=V,
f1=E, and f2=F,
but he also adds faces of dimension d (the whole polytope)
and -1 (the empty face); f-1=fd=1.

Ziegler
defines a shelling of a complex of polyhedral faces
to be a linear ordering on the maximal-dimension faces (facets)
such that, if the facets are of dimension at least one,
the ordering satisfies the following properties:
The boundary of the first facet F0 has a shelling.
The intersection of each facet Fj (j > 0) with the
union of previous
facets is nonempty and forms the prefix of a shelling of Fj.


Every convex polytope has a shelling found by traveling in a straight line
from some point near one face of the polyhedron, and ordering the faces
by the sequence of points at which the line crosses the plane of a face
and the face becomes visible.  (The line must be imagined to pass
"to infinity and beyond" through to the other side of the polyhedron.)
The intersection of a facet Fj with previous facets
can be found
geometrically as the portion of the boundary of the facet
visible from the intersection point of the viewing line with the plane
of the facet; this shows that the lower-dimensional shelling required by
property 2 is of the same geometric type.

Ziegler then proves that any polytope
has Euler characteristic
X(P)=Sum(-1i fi)=0,
by an induction on dimension and shelling length:

The base case, in which f-1=f0=1, is clear.
Now if P is a d-polytope with shelling order
F1,F2,... then we have
more precisely that
X(F1 u F2 u ... u Fj)
is 0 for j < fd-1
and 1 for j = fd-1
which follows by induction on j, 
since the facets we add in are (d-1)-polytopes, the Euler
characteristic is additive, and the intersection of Fj with
previous facets is a shellable part of, but (for j <
fd-1)
not the whole boundary of
Fj (Ziegler shows that this last observation is true
in general, but it is evident geometrically for the
shelling defined above).

Removing the two "extra" faces f-1 and
f3 from this sum
gives us the usual Euler formula.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/triangle.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 13: Triangle Removal


This proof is really just a variation on shelling,
but is included here for its historical significance: it was
used by Cauchy, and was examined at length by Lakatos.


Begin with a convex planar drawing of the polyhedron's edges.
If there is a non-triangular face, add a diagonal to a face,
dividing it in two and adding one to the numbers of edges and faces;
the result then follows by induction.

So suppose we have any planar graph with all interior faces
triangular, with at least two such faces, and with the further property
that one can get from any interior point to any other
by a path that avoids the boundary of the graph's outer face.
(The triangulation of the convex drawing of our polyhedron clearly
satisfies these properties.)
Then there are always at least two triangles having edges on this boundary,
such that the removal of either one leaves a single triangle or a
smaller graph of the same type;
this can be proved by an induction on the number of triangles,
for if some boundary triangle disconnects the interior points,
the two disconnected components on its two non-boundary edges
must either be single triangles
(which are removable) or have (by induction)
two removable boundary triangles, at least one of which
will be removable in the overall graph.

So remove boundary triangles one by one; at each step we remove
either one edge and one face, or two edges, a face, and a vertex.
In all cases V-E+F remains unchanged.  Eventually we reach
a graph formed by a single triangle at which point
V-E+F=3-3+2=2.


The case analysis occurring in higher dimensional
versions of this proof is closely related to Radon's theorem
that any d+2 points can be partitioned into two
subsets with intersecting convex hulls,
and to "flipping" based algorithms for constructing
Delaunay triangulations and convex hulls.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/ear.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 11: Ear Decomposition


A graph is two-edge-connected if removing any edge leaves a connected subgraph.
Two-edge-connectivity is equivalent to the existence of an ear decomposition:
a partition of the edges of the graph into a sequence of ears
(simple paths and cycles), with the first ear being a single vertex; the
start and
end of each successive ear should be vertices occurring in previous
ears, but all
other vertices in an ear should be new.  Such a decomposition can be
found one ear at a time: start each ear by any unused edge e from an
already-explored vertex, and continue by a shortest path back to another
already-explored vertex (such a path must exist because e cannot
disconnect the graph).

We can use such a decomposition in a proof of the Euler formula for polyhedra:

The graph G of a polyhedron is two-edge-connected, since if we remove an edge e
we can still connect its endpoints by a path around the other side of one of the
two faces of G containing e.

Find an ear decomposition of G, and consider the process of forming G by
adding ears one at a time starting
from a single vertex.  Initially there is one vertex, one face, and no edges.
Each new ear forms a path connecting two vertices on the boundary of a face,
splitting the face in two; the path has one more edge than it has vertices.
So if the ear has k edges, its addition increases V by
k-1, E by k, and F by 1,
and the result follows by induction on the number of ears.

Ear decompositions have been especially useful in the design of parallel algorithms,
since they are easier to find in parallel than are other structural decompositions
of graphs such as depth first search trees.
For an example of this see my work on
recognizing
series parallel graphs.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/charges.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 6: Electrical Charge


This proof is due to Thurston.
He writes:

Arrange the polyhedron in space so that no edge is horizontal -- in
particular, so there is exactly one uppermost vertex U and lowermost
vertex L.

Put a unit + charge at each vertex, a unit - charge at the center of
each edge, and a unit + charge in the middle of each face.  We will show
that the charges all cancel except for those at L and at U.  To do this,
we displace all the vertex and edge charges into a neighboring face, and
then group together all the charges in each face.  The direction of
movement is determined by the rule that each charge moves horizontally,
counterclockwise as viewed from above.





In this way, each face receives the net charge from an open interval
along its boundary.  This open interval is decomposed into edges and
vertices, which alternate.  Since the first and last are edges, there is
a surplus of one -; therefore, the total charge in each face is zero.
All that is left is +2, for L and for U.


Thurston goes on to generalize this idea to a proof that the
Euler characteristic
is an invariant of any triangulated differentiable manifold.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/binary.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 15: Binary Homology


Portions of the following proof are described by
Lakatos (who credits it to Poincaré)
however Lakatos omits any detailed justification for the properties 
of the map b defined below, instead treating them as axioms
(so the theorem he ends up proving is that
that Euler's formula is true of any polyhedron satisfying these axioms,
but he doesn't prove that this is true of convex polyhedra).

Like the shelling proof,
this proof
interprets a polyhedron or polytope as a complex of polyhedral
faces of varying dimensions, with fi denoting the number
of faces of dimension i.  And like that proof,
we add two "extra" cells, one for the whole polytope
and one for the "empty face", so f-1=fd=1.

We interpret the subsets of faces of dimension i
as a vector space over the two-element field GF(2),
with vector addition being performed by symmetric difference
of subsets (also known as exclusive or).
In this way we get d+1 vector spaces Vi,
with dimensions equal to fi.
The sets of faces of the polytope can be interpreted as forming
bases for these vector spaces.

These spaces also come equipped with a linear mapping b taking
each space Vi to the next lower dimensional space,
defined on each face to be the set of its facets.
When v is a sum of faces, b(v) is the sum of the corresponding
sets of facets.
(The empty face has no facets, and a vertex is defined
to have the empty face as its only facet.)
This mapping has two very important properties:
Boundaries have no boundaries.  In other words,
for any vector v, b(b(v))=0.
If v is a basis vector, corresponding to a single face of the polytope,
this is true because any ridge (face two dimensions lower than v)
forms the boundary between two facets of v, and is therefore
cancelled out in the calculation of b(b(v)).
In the special case of the empty face, b(v)=0 already and for any linear
map b(0)=0.  In the special case of a vertex, b(v) is the empty face
and again b(b(v))=0.
The result follows as well for vectors other than the bases
by linearity.

Any vector without a boundary is itself a boundary.
In other words, for any vector v, if b(v)=0, then v=b(w) for some w.
If v=0 then we can choose w=0 as well; for nonzero v
we prove this by analyzing the vectors of each dimension separately.
If v is in V-1, it must be the empty face itself
and is the boundary of some vertex.
If v is in V0, it must consist of an even number of vertices
for b(v) to be zero.  These vertices can be paired up
and connected by paths; then w can be taken to be the vector sum of
these paths.
If v is in V1, it forms a set of edges meeting an even number of
times at each vertex; these edges can be grouped into Jordan curves
and w can be taken to be the vector sum of regions bounded by these curves.
If v is in V2, it must be the whole set of facets of the polyhedron,
since we can find a path on the polyhedron boundary from any facet to
any other facet (avoiding vertices), and none of the edges
crossed by this path can be in b(v).
So we can take w to be the single cell corresponding to the whole polyhedron.
Finally, if v is a nonzero vector in V3, b(v) cannot be zero.


With these preliminaries out of the way we are ready to
begin the proof that
Sum(-1i fi)=0.

Let Bi denote the subspace of Vi consisting
of those vectors for which b(v)=0.
Then the map b takes Vi to Bi-1.
Whenever we have a linear map of vector spaces,
we can use it to decompose the original space into
its nullspace (the set of vectors mapped to zero,
here Bi) and its orthogonal complement,
which is mapped one-to-one onto the image of the map.
This tells us that
dim(Vi)=dim(Bi)+dim(Bi-1).
Plugging this expansion into the sum we are trying to evaluate
gives

Sum(-1i fi)

= Sum(-1i (dim(Bi) +
dim(Bi-1)))

which equals zero, because each term Bi
appears twice with opposite signs.

Cancelling the two extra parameters f-1 and
f3 from
the sum gives the usual Euler formula.
I suspect there is a more direct, dimensionless way of proving
that boundaryless vectors are themselves boundaries, but I don't see it
and Lakatos doesn't describe it.

Homology theory, one of the foundation stones of
algebraic topology, is devoted to defining similar vector spaces and
understanding
the extent to which the key equation
dim(Vi)=dim(Bi)+dim(Bi-1)
fails to be true in other topological spaces.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/bsp.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 16: Binary Space Partition


A binary space partition
is a data structure commonly used for computer
graphics and other geometric searching problems.  It's formed by cutting
space by a hyperplane, then recursively partitioning each of the two
resulting halfspaces.  The result is a hierarchical decomposition of
space into convex cells.

In 1974, Helge Tverberg showed that, given
any convex polytope K, one can find a binary space partition that decomposes
K into simplices.  This is obvious for two dimensional polytopes (just
repeatedly cut along polygon diagonals); the general proof proceeds by
induction on dimension and number of faces:


We assume K is not a simplex or we would already be done.

If K has a vertex P incident to more than d facets, then (by induction on dimension) we can partition K by hyperplanes through P into smaller polytopes
each of which has exactly d facets incident to P.
The number of facets not incident to P in each of these polytopes
is at most the same as in K, so each smaller polytope has fewer facets than K.
By induction on number of facets, we can recursively partition the smaller polytopes into simplices.

On the other hand suppose that each vertex of K has only d incident facets.
Let P be a vertex of K that is not adjacent to some two facets F1 and F2
(we can find P, F1, and F2 by induction on dimension if K has a non-simplicial facet; if all facets of K are simplices, let F1 and F2 be two adjacent facets and P be any vertex other than the d+1 vertices shared by F1 and F2).
Let L be the hyperline contained in the hyperplanes through F1 and F2,
and cut K by a hyperplane through P and L.
Then each of the two pieces avoids one of the facets Fi, but has a new facet
on the cut plane, so its number of facets is not increased.
One can show that each piece either has more than d facets at P
(in which case we can apply the previous case), or avoids an additional
facet of K (in which case we can apply induction on the number of
facets), so either way we can partition each piece recursively.


The number of cuts in this partition may be exponential in the number of facets,
but this seems unavoidable due to examples like the hypercube which have few facets but require many cuts.

Tverberg then proves that the Euler characteristic X(K)
(as defined more precisely for the
shelling proof) is always zero,
by induction on dimension and on the number of cuts in the binary space
partition:


If K is a simplex, the number of faces of any dimension is
counted by a binomial coefficient, and the identity X(K)=0
is just the application of the binomial theorem to
the evaluation of (1+x)d at x = -1.

Otherwise, let the top level cut of the
binary space partition split K into
two polytopes K1 and K2.  Let K3 be the convex hull of
the set of vertices of K that are contained in the cutting hyperplane,
and let K4 be the intersection of K with the cutting hyperplane.
Then we have the formula


X(K) = X(K1) + X(K2) + 2 X(K3) - 3 X(K4),


since each face of K is either contained in the cutting hyperplane
(contributing to all four terms X(Ki)), split by the cutting hyperplane
(forming a face of one lower dimension in K1, K2, and K4, and
contributing a negated term to each of these three polytopes' Euler
characteristics), or is contained in one of the two halfspaces (and
contributes only to X(K1) or X(K2)).

K1 and K2 have smaller binary space partitions, and K3 and K4 have lower dimension, so by induction all have zero Euler characteristic.
Therefore, X(K) is also zero.


Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/ivertex.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 3: Induction on Vertices


This argument is the planar dual to the proof by
induction on faces.


If G has only one vertex, each edge is a Jordan curve,
so there are E+1 faces and F+V-E=(E+1)+1-E=2.
Otherwise, choose an edge e connecting two
different vertices of G, and contract it.  This decreases both the
number of vertices and
edges by one, and the result then holds by induction.


Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/refs.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula
References
M. Beck and S. Robins,
"Computing the Continuous Discretely: Integer-Point Enumeration in Polyhedra".
To appear in the Springer Undergraduate Texts in Mathematics series.
Theorem 5.2 uses the integer point enumeration method
to prove Euler's formula for rational polytopes in any dimension.


Bishop and Goldberg,
"Tensor Analysis on Manifolds", Dover 1980,
prove the formula p_1-p_2+p_3=2 where the values p_i denote
the numbers of local minima, saddles, and local maxima on a spherical surface.
I have adapted their proof, based on rainfall and
flooding, to Euler's formula.


J. A. Bondy and U. S. R. Murty, "Graph Theory with
Applications", Elsevier 1976.  Uses the induction
on faces.


L. Euler, "Elementa doctrinae solidorum.---Demonstratio
nonnullarum insignium proprietatum, quibus solida hedris
planis inclusa sunt praedita", Novi comment
acad. sc. imp. Petropol., 4, 1752-3, 109-140-160.


J. Hadamard, "Elementary Geometry".
According to Alex Bogomolny, a 1958 Russian translation
contains the divide and conquer proof.
I haven't checked whether other editions do as well.


Henle, "A Combinatorial Approach to Topology",
Freeman 1979.  This book was used in the undergraduate topology course I
once took, so it may have been the first place I saw a proof of Euler's
formula.  Now I'm not so sure about it.  It gives some history of the
Euler formula, which follows common folklore (erroneously, according to
Malkevitch) in attributing the formula to Descartes,
and muffs the proof -- Henle gives the triangle
removal proof without any mention of what is required of the removal
sequence or how to find such a sequence.  

Hilton and Pederson, "The Euler Characteristic
and Pólya's Dream", Amer. Math. Monthly 103, 1996, 121-131.
This article provides some speculation on how Euler might have found
his formula, relating it to Pólya's theories of mathematical discovery.
It also gives a proof of equivalence of the Euler characteristic
and total angular defect closely related to the
sum of angles proof presented here.


D. A. Klain and G.-C. Rota,
"Introduction to Geometric Probability", Lezioni Lincee,
Cambridge Univ. Press, 1997.  Shows that
the Euler characteristic can be viewed (along with e.g. volume and surface area) as one of the fundamental translation-invariant functions on unions of convex sets.
The
valuation-based proof is from section 5.2;
the other key sections related to the Euler characteristic are 3.2 (showing that the characteristic is well defined for simplicial complexes) and 7.3 (generalizing Euler's formula to other intrinsic volumes).


I. Lakatos, "Proofs and Refutations: The Logic of
Mathematical Discovery", Cambridge 1976.  Uses the
triangle removal proof of
Euler's formula as a key
example for an investigation of what mathematical proof means.
He also describes a proof based on binary homology
theory.


J. Lawrence,
A short
proof of Euler's relation for convex polytopes,
Can. Math. Bull. 40(4):471-474, 1997.
The source of the hyperplane arrangement proof.


A. M. Legendre, "Élements de
géométrie", Paris, 1794.
Credited by Sommerville as source
of the proof by
spherical sum of angles.


S. A. J. Lhuilier, "Mémoir sur la
polyédrométrie, contenant une démonstration directe du
théorème d'Euler sur les polyèdres, et un
examen de diverses exceptions auxquelles ce théorème
est assujetti", Gergonne Ann. Math. 3, 1812, p. 169.
Credited by Sommerville as co-source
(with Steiner) of the proof by
sum of angles.


J. H. van Lint and R. M. Wilson, "A Course in
Combinatorics", Cambridge 1992.  Proves Euler's formula via
induction on edges.
They also mention but do not prove a generalization to
higher dimensional polytopes in their section on Möbius inversion.


J. Malkevitch, "The first proof of Euler's formula",
Mitteilungen aus dem Mathem. Seminar Giessen, Heft 165, Teil III
(Coxeter Festschrift), pp. 77-82.  Describes the early history of the
formula, including its discovery by Euler and proof by Legendre,
rebutting the folklore theory that the formula was instead discovered
by Descartes and proven by Hirsch.


D. M. Y. Sommerville, "An Introduction to the Geometry of N Dimensions", Dover 1958.  Includes a chapter on Euler's formula including proofs by
shelling,
sum of angles,
spherical sum of angles,
and interdigitating trees.


J. Steiner, "Leichter Beweis eines
stereometrischen Satzes von Euler", Crelle J. 1, 1826, pp. 364-367.
Credited by Sommerville as co-source
(with Lhuilier) of the proof by
sum of angles.


W. P. Thurston, "The Geometry and Topology of
Three-Dimensional Manifolds".  These unpublished lecture notes
(distributed as samizdat within the topology community)
include a proof of Euler's formula based on
electrical charge.


G. K. C. Von Staudt, "Geometrie der Lage",
Nürnberg, 1847.
Credited by Sommerville as source
of the proof by
interdigitating trees.


H. Tverberg, "How to cut a convex polytope into
simplices", Geometriae Dedicata 3(2):239-240, 1974.
Proves that any polytope can be cut into simplices by a
binary space partition and uses this
as the basis for a proof of Euler's formula.


J. Weeks, "The Shape of Space: How to Visualize
Surfaces and Three-Dimensional Manifolds", Dekker, 1985.
Proves the excess=area formula for spheres and uses it
in the spherical sum of angles proof
of the Euler formula.


D. Wells, "The Penguin Dictionary of Curious and
Interesting Geometry", Penguin, 1991.  Includes a description of the
excess=area property of spherical trigonometry used in the spherical sum of angles proof, as well as a quick
mention that Pick's Theorem is equivalent to
Euler's formula.  Curiously, there is no entry for Euler's formula
itself.


G. Ziegler, "Lectures on Polytopes", Springer, 1995,
gives a shelling based proof of
Euler's formula that avoids case analysis and
extends without change to any higher dimensional convex
polytope.




In addition, the following look very interesting,
but I haven't found time to read them yet:
Chen,
"On the Euler characteristic of finite unions of convex sets",
Disc. Comput. Geom. 10, 1993, 79-93.

Abstract: The Euler characteristic plays an important role in many
subjects of discrete and continuous mathematics. For noncompact spaces,
its homological definition, being a homotopy invariant, seems not as
important as its role for compact spaces. However, its combinatorial
definition, as a finitely additive measure, proves to be more applicable
in the study of singular spaces such as semialgebraic sets finitely
subanalytic sets, etc.  The author introduces an interesting integral by
means of which the combinatorial Euler characteristic can be defined
without the necessity of decomposition and extension as in the
traditional treatment for polyhedra and finite unions of compact convex
sets. Since finite unions of closed convex sets cannot be obtained by
cutting convex sets as in the polyhedral case, a separate treatment of
the Euler characteristic for functions generated by indicator functions
of closed convex sets and relatively open convex sets is necessary, and
this forms the content of this paper.

Levitt,
"The Euler characteristic is the unique locally determined numerical
homotopy invariant of finite complexes",
Disc. Comput. Geom. 7, 1992, 59-67.

Abstract: The author shows that if a numerical homotopy invariant of finite
simplicial complexes has a local formula, then, up to multiplication by an
obvious constant, the invariant is the Euler characteristic. Moreover, the
Euler characteristic itself has a unique local formula.

Rocek and Williams,
"On the Euler characteristic of piecewise linear manifolds",
Phys. Lett. B, 273, 1991, 95-99.

Abstract: The Dehn-Sommerville relations and the corresponding equations for
the angle sums are used to derive two expressions for the Euler
characteristic of a simplicial manifold, firstly in terms of the numbers
of even dimensional subsimplices, and secondly in terms of
even-dimensional deficit angles. In each case the coefficients involved
are related to the Bernoulli numbers.

Peter Hilton and Jean Pedersen.  "Euler's theorem for polyhedra:
a topologist and geometer respond". Comment to: "A new look at Euler's
theorem for polyhedra" [Amer. Math. Monthly 101 (1994), no. 2, 109-128;
MR 95c:52032] by B. Grunbaum and G. C. Shephard. With a response by
Grunbaum and Shephard. Amer. Math. Monthly 101 (1994), no. 10, 959-962.

Krzysztof Przeslawski.  "Linear algebra of convex sets and 
the Euler characteristic".  Linear and Multilinear Algebra 31 (1992), 
no. 1-4, 153-191.

G. Thomas Sallee.  "Euler's relation and where it led".
Convexity and related combinatorial geometry (Norman, Okla., 1980), 
pp. 45--55, Lecture Notes in Pure and Appl. Math., 76, Dekker, New York,
1982.



Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/euler.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 20: Euler tours


Given the similarity of names between an Euler tour (a closed walk in a
graph that visits every edge exactly once) and Euler's formula, it is
surprising that a strong connection between the two came so recently.
The proof below is based on a relation between repetitions and face
counts in Eulerian planar graphs observed by Red Burton, a version of the Graffiti software
system for making conjectures in graph theory.

A planar graph G has an Euler tour if and only if the degree of every
vertex in G is even. Given such a tour, let R denote the number of times
the tour reaches a vertex that has already been seen earlier in the
tour. For instance, this repetition count would equal one for a graph in
the form of a single cycle: only the starting vertex is repeated. As Red
Burton observed, it is always the case that
F = R+ 1. For, if one draws the edges of the graph in the
order given by the tour, then the drawing starts out with one face, and
every repeated vertex closes off one more face. But we also have
R = E − V + 1, because there are
E + 1 vertices visited in the tour from start to end, of which
V are not repetitions. Putting these two equations for R together and
eliminating R gives
Euler's formula, but only for Eulerian graphs.

Now, given an arbitrary planar graph G, draw two
parallel copies of each edge, separated by a thin two-sided face. This
modification doesn't change the value of the formula
V − E + F for graph G, because it adds the
same quantity (E) to both the number of edges and the number of faces,
which cancel each other in the formula. But the new graph is Eulerian,
so the repetition count argument for Eulerian graphs applies to it, and
shows that in it E − V + F = 2.
The same must be true in the original graph.

The idea of proving Euler's formula by transforming an arbitrary
planar graph to make it
Eulerian was found by University of Houston chemical engineering
sophomore Stephanie Mathew, under the supervision of Siemion Fajtlowicz,
who used this idea to find the above proof. Fajtlowicz also supplies two
different variants of the proof, in which one repeatedly connects pairs
of odd vertices either by an arc in the plane that avoids all the
existing vertices or by by doubling paths in the given graph. Both of
these alternative versions of the Euler tour proof use the fact that
every graph has an even number of odd vertices, which was proven by
Euler.


Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/iface.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 2: Induction on Faces


We can prove the formula for all connected planar graphs, by
induction on the number of faces of G.


If G has only one face, it is acyclic
(by the Jordan curve theorem) and connected, so it is a tree
and E=V-1.  Otherwise, choose an edge e connecting two
different faces of G, and remove it; e can then only appear once in the
boundary of each face, so the graph remains connected -- any path
involving e can be replaced by a path around the other side of one of
the two faces.  This removal decreases both the number of faces and
edges by one, and the result then holds by induction.


This proof commonly appears in graph theory textbooks
(for instance Bondy and Murty)
but is my least favorite: it is to my mind unnecessarily complicated
and inelegant; the full justification for some of the steps seems to be
just as much work as all of the first proof.
It doesn't generalize very well,
and there are some critical details that textbook authors often omit.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/dualcharge.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 7: Dual Electrical Charge


Rather than grouping charges in faces of the graph, we can give a dual argument
that groups charges at vertices.  This proof works best with the convex
planar embedding of the graph of a polyhedron.

Rotate the graph if necessary so that no edge is vertical.
As in the previous proof,
put a unit + charge at each vertex, a unit - charge at the center of
each edge, and a unit + charge in the middle of each face.
We will show that all but two + charges cancel.
To do this, displace the charge on each edge to its right endpoint;
displace the charge on each face (except the outer face) to its rightmost vertex.
Each vertex (except the leftmost vertex)
receives the charges from an alternating sequence of edges and faces,
cancelling its initial charge.  The only remaining uncancelled charges
are one + charge on the outer face and one + charge on the leftmost vertex.





Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/junkyard/euler/noah.html
##-----------------TITLE------------------------##
Euler's Formula
##------------------TEXT------------------------##
Euler's Formula,
Proof 14: Noah's Ark


Portions of this proof are from Bishop and
Goldberg.


Define a height function on the surface of the polyhedron as follows:
Choose arbitrary heights for each vertex.
In each edge, choose a height for one interior point greater
than that of the two endpoints, and interpolate the remainder
of the edge linearly between the chosen point and the endpoints.
In each face, choose a height for one interior point, greater
than all heights on its boundary; interpolate the heights in the rest
of the face linearly on line segments from the chosen point to the boundary.
The result is a continuous function with V+F+E critical points:
V local minima at the vertices, E saddles at the chosen points of edges,
and F local maxima at chosen points of faces.

Now view the surface as an initially bone dry earth on which there is
about to fall a deluge which ultimately covers the highest peak.  We
count the number of lakes and connected land masses formed and destroyed
in this rainstorm to obtain the result.

For each local minimum there will be one lake formed.
For each saddle there will either be two lakes joined or a single lake
doubling back on itself and disconnecting one land mass from another
(let J and D denote the number of times these events happen respectively).
For each peak a land mass will be eliminated.
Initially there is one land mass, and in the final sitation there is one global lake.
Thus we have 1+D-F=0 and 0+V-J=1.
Combining these two equations with the fact that D+J=E yields the result.


One can either view the rainfall as (unnaturally) causing the global water levels
to always be at the same height, so that two lakes reach a saddle at the same time;
or one can take a more realistic viewpoint and say that the rainfall may
vary arbitrarily over the globe, but when one lake reaches a saddle the water will
spill over it (and the lake will not rise) until the lake on the other
side of the saddle reaches the same height.

This proof is close to self-dual, the biggest asymmetry being in the
definition of the height function.
As usual, the Jordan curve theorem is involved, in the fact that a lake
doubling back on itself creates an island. The principle of classifying the singular points (peaks, saddles, and valleys) for a height function defined on a surface is the main idea behind Morse theory, but this proof dates back much earlier than Morse, to an 1863 publication of Möbius.

Proofs of Euler's Formula.
From the Geometry Junkyard,
computational
and recreational geometry pointers.
David Eppstein,
Theory Group,
ICS,
UC Irvine.
Semi-automatically
filtered
from a common source file.
Last update: .
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20130109/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20130109
##------------------TEXT------------------------##
Index of /~eppstein/163/20130109
NameLast modifiedSizeDescriptionParent Directory   -  IMG_1399.jpg09-Jan-2013 17:15   98K IMG_1400.jpg09-Jan-2013 17:15   95K IMG_1401.jpg09-Jan-2013 17:15   95K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/163/20130107/
##-----------------TITLE------------------------##
Index of /~eppstein/163/20130107
##------------------TEXT------------------------##
Index of /~eppstein/163/20130107
NameLast modifiedSizeDescriptionParent Directory   -  IMG_1393.jpg07-Jan-2013 17:26   91K IMG_1394.jpg07-Jan-2013 17:26   84K IMG_1395.jpg07-Jan-2013 17:26   89K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/180a/index.html
##-----------------TITLE------------------------##
Game Programming
##------------------TEXT------------------------##
ICS 180, Winter 1999:
Strategy and board game programming

Tuesdays and Thursdays at 11:00, CS 243

IBM's chess program "Deep Blue" gained national headlines
when it beat the world champion, Gary Kasparov, in a
six-game match.  How did it do it?  How can you program a computer to
play chess, go, or other board games, if not well enough to beat
Kasparov, at least well enough to beat other strong humans?

This class attempts to answer these questions, by describing the
techniques and programming tricks used to build efficient game-playing
programs.
There will be no homeworks or exams.  However, students
will be expected to do a programming project.

Some world-wide web links

Schedule

Project proposal requirements and suggestions

Final project report requirements

Completed projects


David Eppstein,
Dept. Information & Computer Science,
UC Irvine,
.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/180a/proposal.html
##-----------------TITLE------------------------##
Game Programming
##------------------TEXT------------------------##
ICS 180: Strategy and board game programming

Project Proposal

The first task required of each programming team is to submit a proposal,
naming the project members, describing the game to be programmed, and
assigning responsibilities for programming and other project tasks to the
project members.

The Game

Choose a game to program.
The game should be complicated enough that a heuristic search is
necessary to solve it (so tic-tac-toe programs will not be allowed).
It should not involve chance (i.e., no card games or backgammon).
Its rules should be simple, since I'd prefer you spend more time on
evaluation and search and less time on just getting your program running
(chess is borderline, I'd prefer you chose other games, and besides you
need to use all the tricks in the book to match
the performance of existing chess programs).
Both players should be able to know the whole board situation
(so no hiding information from each other as in battleship).
Finally, I'd suggest you stay away from Go, even though it fits all
these other criteria, because the number of different moves that can be
made at each step makes it very difficult for computer search algorithms
to make good Go players.

With all these negatives, what are some good
games that you could propose to program? I've listed them on
a separate web page.

Project tasks

Your proposal should list the software
components that will be included in your project,
and determine which team members are responsible for
which components.

Search complexity

Your proposal should say how many different legal moves are available
at a typical position in your game (this number is known as the
branching factor).  If there are b legal moves, and you perform
minimax search to a depth of k moves, you should search roughly
bk positions.  Assuming you can search 100,000 positions/second
(a pretty typical number), how large can k be if you want your search to
finish in one second?

(Note, the actual search depth will likely be better than this estimate.
Alpha-beta pruning will roughly double the depth you can reach, but other
pruning techniques are available and
may turn out to be necessary depending on the branching factor of your game.)

Evaluation terms

Your proposal should make a preliminary guess at
what sort of information needs to be included in the
evaluation function,
and describe how you will go about computing that information.
Probably this will not end up describing how your final product
works, but you need to start with something here.

Platforms

Your proposal should state what kind of machine you use and what
language you will program in.
My preference would be Java (due to its portability and ease of setting
up user interfaces) but you may use other languages 
such as C, C++, etc. 
If you use a Mac, Linux-based PC, Windows '98, or other platform not generally
available in the ICS labs, you should make sure that
a portable machine will be available for project demonstrations.

If you wish to have your code preserved on a web site,
I will make room available for this on the course web page.
This may give you another reason for choosing Java over other languages.

Using other people's code

You may use user interface code written by people other than project
members, as long as the code is available for such use and you give full
credit for it in your project documentation.
All components of the game engine itself, including the board
representation, search code, move generation, and position evaluation,
should be written yourselves.


David Eppstein,
Dept. Information & Computer Science,
UC Irvine,
.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/180a/990202b.html
##-----------------TITLE------------------------##
ICS 180, February 2, 1999
##------------------TEXT------------------------##
ICS 180, Winter 1999:
Strategy and board game programming

Lecture notes for February 2, 1999
Variants of Alpha-Beta Search

Although the basic alpha-beta search discussed already is simple and works 
well, there have been several attempts to search game trees even more 
efficiently.  The basic idea behind most of these is that, if we consider 
the scores in the range from alpha to beta as being "interesting" and all 
other scores to be "uninteresting", then alpha-beta gets its 
efficiency by cutting off the search quickly at nodes with uninteresting 
scores.  If we narrow the gap between alpha and beta, fewer scores will be 
interesting and more cutoffs will happen.

First, let's quickly review the original alpha-beta search,
omitting details like hashing or
adjust winning scores for the current ply.


    // basic alpha-beta search
    int alphabeta(int depth, int alpha, int beta)
    {
        move bestmove;
        if (game over or depth = alpha) { alpha = score; bestmove = m; }
            unmake move m;
            if (alpha >= beta) break;
        }
        return alpha;
    }


Fail-Soft Alpha-Beta

The code above always returns alpha, beta, or a number between alpha and 
beta.  In other words, when a score is uninteresting, no extra information 
is returned about that score.  The reason for this is that the current 
score is kept in the variable alpha, which starts at the bottom of the 
window of interesting scores, and always increases from there, so it is not 
possible to return a score less than alpha.
One of the simplest improvements to 
alpha-beta is to keep the current score and alpha in separate variables.
The following pseudocode uses the constant "WIN" to denote the maximum 
score that can be returned by any call to alpha-beta search.


    // fail-soft alpha-beta search
    int alphabeta(int depth, int alpha, int beta)
    {
        move bestmove;
        int current = -WIN;
        if (game over or depth = current) {
                current = score;
                bestmove = m;
                if (score >= alpha) alpha = score;
                if (score >= beta) break;
            }
        }
        return current;
    }


With this change, one can determine a little more information than before 
about a position.  If the returned value x is less than or equal to alpha, 
then we still don't know the true value of the position (because we may 
have pruned away some important lines of the search), but we do know that 
the true value is at most x.  Similarly, if x is greater than or equal to 
beta, we know that the true search value is at least x.
These slightly tighter upper and lower bounds don't improve the search 
itself, but they could lead to a greater number of successful hash probes.
The use of fail-soft alpha-beta is also essential in the MTD(f) algorithm 
described below.

Aspiration Search

This is not a replacement for alpha-beta, it is just a change to the way 
the outermost call to the search is made.
Normally, when using alpha-beta to choose the best move, one calls 

    alphabeta(depth, -WIN, WIN)

where the huge range between -WIN and 
WIN indicates that we don't know what the true search value will be, so
all possible scores should be considered interesting.
Then, the move one makes should be the one set in the variable bestmove at 
the outer level of the search.

Instead, it is often helpful to call alpha-beta with an artificially 
narrow window centered around the previous search value.  If the result is 
a score within that window, you've saved time and found the correct search 
value.  But if the search fails, you must widen the window and search 
again:

    // aspiration search
    int alpha = previous - WINDOW;
    int beta = previous + WINDOW;
    for (;;) {
        score = alphabeta(depth, alpha, beta)
        if (score = beta) beta = WIN;
        else break;
    }


The constant WINDOW should be set in a way that balances the time savings 
from a narrower search with the time lost from repeating an unsuccessful 
search.  A typical value in chess might be around half a pawn.
Variants of aspiration search include widening the window more gradually 
in the event of an unsuccessful search, or using an initial search window 
that is not necessarily centered around the previous search result.

MTD(f)

This technique, like aspiration search, is just a modification to the 
initial call to alpha-beta.  If a narrower search window leads to faster 
searches, the idea here is to make the search window as narrow as possible:
it always calls alpha-beta with beta=alpha+1.  The effect of such a 
"zero-width" search is to compare the true score with alpha: if the search 
returns a value at most alpha, then the true score is itself at most alpha,
and otherwise the true score is greater than alpha.

One could use this idea to perform a binary search for the true score:

    int alpha = -WIN;
    int beta = +WIN;
    while (beta > alpha+1) {
        int test = (alpha+beta)/2;
        if (alphabeta(depth, test, test+1) 

However, this will lead to a large number of searches
(the logarithm of the difference between WIN and -WIN).
The MTD(f) idea is to instead use fail-soft alpha-beta to 
control the search: each call to fail-soft alpha-beta returns a search 
value which is closer to the final score, so if we use that search value as 
the start of the next test, we should eventually converge.

    // MTD(f)
    int test = 0;
    for (;;) {
        score = alphabeta(depth, test,test+1);
        if (test == score) break;
        test = score;
    }


Unfortunately, complicated interactions with the hash table can cause this 
routine to get into an infinite loop, so one needs additional code to halt 
the search if too many iterations have been made without any convergence.

One big advantage of MTD(f) is that we can simplify the code to the 
alpha-beta search, since it only really has two parameters (depth and alpha)
rather than three.

PVS

Probably the best of the alpha-beta variants, this goes by several names: 
Negascout, Principal Variation Search, or PVS for short.
The idea is that alpha-beta search works best if
the first recursive search is likely to be 
the one with the best score.  Techniques such as sorting the move list or 
using a best move stored in the hash table make it especially likely that 
the first move is best.  If it is, we can search the other moves more 
quickly by using the assumption that they are not likely to be as good.

So PVS performs that first search with a normal 
window, but on subsequent searches uses a zero-width window to test each 
successive move against the first move.  Only if the zero-width search 
fails does it do a normal search.


    // principal variation search (fail-soft version)
    int alphabeta(int depth, int alpha, int beta)
    {
        move bestmove, current;
        if (game over or depth  alpha && score < beta)
                score = -alphabeta(depth - 1, -beta, -alpha)
            unmake move m;
            if (score >= current) {
                current = score;
                bestmove = m;
                if (score >= alpha) alpha = score;
                if (score >= beta) break;
            }
        }
        return current;
    }


This shares the advantage with MTD(f) that most nodes in the search tree 
have zero-width windows, and can use a simpler two-parameter form of 
alpha-beta.  Since there are very few calls with beta > alpha+1,
one can do extra work in those calls (such as saving the best move for 
later use) without worrying much about the extra time it takes.

Recommendations

My own program uses a combination of aspiration search (for the outermost 
call to the search routines) and PVS (for the inner calls).
However, different games behave differently.  These searches are not so 
hard to implement; as with most aspects of game programming, the best way 
to choose between them, and to tune their parameters, is to implement them 
all and to try some experiments.  All of them should return the same 
search value (or nearly the same, if influenced by the hash table), but 
with different numbers of nodes searched.  Pick the one that leads to the 
smallest search trees in typical positions from your game.


David Eppstein,
Dept. Information & Computer Science,
UC Irvine.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/180a/990202a.html
##-----------------TITLE------------------------##
ICS 180, February 2, 1999
##------------------TEXT------------------------##
ICS 180, Winter 1999:
Strategy and board game programming

Lecture notes for February 2, 1999
Forcing progress in Winning Positions

If the game reaches a point where a win can be forced,
alpha-beta search will find it.  But, paradoxically, making a winning move at each turn 
is not always enough to win the game.  The problem is in games like 
checkers or chess, one can make a sequence of moves that each lead to a 
forced win, but that don't cause the win to get any closer.

For example, consider the following chess position:


White to move can win immediately by moving the queen to square e7,
checkmating the black queen.  But white also has other moves that win more 
slowly; in fact there is only one move white can make that does not win.
For instance, suppose white moves his king to e6; black's only moves are d8 
and f8, after either of which white still has a checkmate possible.
If black moves to d8, white can still win by moving back to d6.
But after the sequence of moves 1. Ke6 Kd8 2. Kd6 Ke8 we are back where we 
started!  White is making winning moves, but he isn't making progress to a 
win.

If an alpha-beta search gives the same evaluation to any winning 
position, it can easily fall into this trap.  To prevent this, we need to 
change the evaluation of winning positions, so that a win in fewer moves 
is counted slightly better than a delayed win.  The code is 
straightforward: if we keep a variable "ply" denoting how far the current 
position is from the root of the search, we can adjust the score for a 
winning position by subtracting the ply.  The following pseudocode assumes 
that we have defined a constant "WIN" which refers to the maximum score 
possible in a game (in chess, a typical value for WIN would be 100 or 1000 times 
the value of a pawn).


    // Alpha-beta search with WIN scores adjusted for ply

    int ply;    // global variable initialized to zero at start of search
    int alphabeta(int depth, int alpha, int beta)
    {
        if (game over and current player has won) return WIN - ply;
        else if (game over and current player has lost) return -WIN + ply;
        else if (depth = beta) break;
        }
        ply--;
        return alpha;
    }


Now in the example above, the immediate checkmate is seen at ply=1,
and gets a score of 999 (WIN-1), while moving the king to e8 forces a win 
at ply=3, with a score of 997.  The program will move to the position 
maximizing its score, and take the immediate checkmate.

For some games, such as Othello, there is a natural limit to the length of 
the game: each move adds a piece to the board, so there can be at most 64 
moves before the game finishes.  For those games, there is no way to get 
into the same sort of infinite loop, and we can just use a score of WIN 
or -WIN without worrying about the ply adjustment.


There is one further complication with this ply adjustment trick: how does 
it interact with the hash table?  The problem is that the ply may differ 
between the time we store a move in the hash table, and the time we 
retrieve it. In order to make the retrieved score's ply adjustment correct, 
we should store scores in the hash table adjusted relative to the 
current position, rather than the position at the root of the 
search.

That is, when storing a position in the hash table,
use something like the following pseudocode,
where MAX_PLY is a constant defined to be greater than the maximum depth 
possible in a search (WIN=1000 and MAX_PLY=100 might be reasonable).
The variable x is just the index of the current position in the hash table.

    if (score > WIN - MAX_PLY) hash[x].score = score + ply;
    else if (score < -WIN + MAX_PLY) hash[x].score = score - ply;
    else hash[x].score = score;


When retrieving a position from the hash table, the opposite adjustment 
needs to be made:

    if (hash[x].score > WIN - MAX_PLY) score = hash[x].score - ply;
    else if (hash[x].score < -WIN + MAX_PLY) score = hash[x].score + ply;
    else score = hash[x].score;



David Eppstein,
Dept. Information & Computer Science,
UC Irvine.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/180a/970401.html
##-----------------TITLE------------------------##
ICS 180, April 1, 1997
##------------------TEXT------------------------##
ICS 180A, Spring 1997:
Strategy and board game programming

Lecture notes for April 1, 1997
A brief history of computer game programs

Sources: most of the earlier stuff comes from papers in the books "Computer 
Chess Compendium" and "Computer Games" (both Springer-Verlag), consisting 
of reprints of many original papers including Shannon's.  Some of the 
recent material on Deep Blue is reworded from material on IBM's web site.  Other sources include 
web sites linked to by this page.

1950

Claude E. Shannon writes the first article on computer chess: "Programming a computer 
for playing chess", Philosophical Magazine 41:256-275. 
He writes "Although perhaps of no practical importance, 
the question is of theoretical interest, and it is 
hoped that a satisfactory solution of this problem 
will act as a wedge in attacking other problems of 
a similar nature and of greater significance". 
 Modern chess programs still follow the lines laid 
out by Shannon.


Shannon notes the theoretical existence of a perfect solution 
to chess and 
the practical impossibility of finding it.  He describes 
two general strategies, both based an a heuristic "evaluation 
function" for guessing whether a position is in 
favor of one person or the other:


Shannon Type A - 
expand all sequences of possible moves out to a fixed 
"horizon" (number of levels), combine the 
evaluations of these sequences in a simple tree computation 
("minimax"), use the combined evaluation 
to choose the best move.

Shannon Type B - only perform 
selective expansion of certain lines, using knowledge 
to prune uninteresting branches. For example, Turing's 1951 program only 
expanded lines involving captures.


Shannon thought that 
type B was clearly better but debate still continues 
today (you can find proponents of both sides on 
rec.games.chess.computer).  Shannon's evaluation combines 
terms for material (P=1, N=B=3, R=5, Q=9) and positional 
advantages, similar to modern evaluation functions.


1951

Alan Turing describes and hand-simulates a computer 
chess program of type B. Play best described as "aimless"; 
loses to weak player.


1956

Type A program (for simplified 6x6 chess variant) 
implemented on MANIAC-1 (11Khz, 600 words of mem) computer 
at Los Alamos. Does 4-ply search in 12 min. Beats weak 
players.


1957

Type B program implemented on IBM 704 (42Khz, 
7K words). Does full chess 4-ply in 8 min. Passable 
amateur.


1958

Newell, Simon and Shaw introduce alpha-beta pruning, a general game-search 
technique which effectively doubles the length of move sequences one 
can examine.


1959

Arthur Samuel begins experimenting with automatic 
learning techniques to improve the play of a checkers 
program.


1962

Alan Kotok's B.S. thesis project from M.I.T., a program called MacHack 
for IBM 7090 computers, examines 1100 positions/minute.


1967

Greenblatt chess program (MacHack 6) on DEC PDP-6 
(200Khz) evaluates about 10 positions/second. It competes 
in 4 amateur chess tournaments, wins 3 games, draws 
3, loses 12.


1968

Zobrist writes the first Go program. It plays like 
a complete beginner.


1971

The "Technology" chess program wins 10 pts out of 26 in six tournaments.  
Is this the first chess program written in a high-level prgramming 
language?  It runs on a PDP-10 (1Mhz), and examines 120 positions/second.


1973

Until this point, most or all chess programs have been of type B.
Programmers Slate and Atkin, revising their overly complicated chess 
program in preparation for the 1973 Computer Chess Championships,
return to a type A search routine.  Their program
Chess 4.0 wins, and
other programmers start to switch from type B to type 
A. On a CDC 6400 a later version (Chess 4.5) processes 
from 270 to 600 positions/second.


1975

Robert 
Hyatt begins developing Cray Blitz, for a long time the fastest program 
and from 1983-1989 the world computer chess champion.  As of 1983 it was 
searching 40-50K positions/second, only a little slower than current 
programs on fast pentiums.  Hyatt is still very active today in computer 
chess with his free program
Crafty.


1977

Belle, first special-purpose chess hardware, 
built by Condon & Thompson at Bell Labs.

Chess 4.6 beats a grandmaster (Stean) at speed chess.


1979

BKG, written by Hans Berliner, beats the world backgammon champion 
in a match.


1982

IAGO plays Othello at world-championship level 
(according to then-human champion Jonathan Cerf) but does not actually 
play against championship-level human competition.


1988

Deep Thought, predecessor of Deep Blue, created 
by a team of Carnegie-Mellon U. graduate students. 
The basic version of Deep Thought's chess engine contained 
250 chips and two processors on a single circuit board 
and was capable of analyzing 750,000 positions per 
second or 10 half moves ahead. That same year Deep 
Thought became the first computer to defeat a Grandmaster 
in a tournament (Bent Larsen, who had at one time been 
a contender for world champion, being defeated by Bobby 
Fischer in a preliminary championship round).


1989

An experimental six-processor version of Deep 
Thought, searching more than two million 
positions/second, played a two-game exhibition match against Gary 
Kasparov, the reigning world champion, and was beaten.


1992

Chinook checkers program 
loses a match to the human world champion, Marion Tinsley, 4-2 (with 33 draws).


1993

Deep Thought defeated Judit Polgar, at the time 
the youngest Grandmaster in history and still the strongest
female player in the world (ranked in the top 20 grandmasters), 
in another two-game exhibition match.


1994

Tinsley forfeits match to Chinook due to illness. 
Chinook becomes world checkers champion.


1996

IBM's new chess machine Deep Blue (a 32-processor 
parallel computer with 256 VLSI chess engines searching 
2-400M moves/second) beats reigning world champion 
Gary Kasparov in the first game of a six-game match, 
but loses the match.


1997

Kasparov - Deep Blue rematch to be held this quarter.



David Eppstein,
Dept. Information & Computer Science,
UC Irvine,
.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/180a/970408.html
##-----------------TITLE------------------------##
ICS 180, April 8, 1997
##------------------TEXT------------------------##
ICS 180A, Spring 1997:
Strategy and board game programming

Lecture notes for April 8, 1997
Board representations

In order to operate, any
game program needs to be able to store and manipulate two kinds of objects: 
game positions, and game moves. These representations need to allow the 
program to perform the following operations:
Make a given move (not just when user requests, but as part of search)
Undo a move (not just for user interface, needed in search)
Display board to user
Generate a list of all possible moves
Evaluate a board position

Everything except displaying the board must be fast since it happens in the 
inner loops of the search routine.
(Board display can be slower since it doesn't happen often.)

The internal representation of moves should be very concise (since 
we don't want to spend too much time generating long lists of moves) and quickly 
decodable.  But (very important) it should also able to represent all 
possible moves!  E.g.  for chess, a typical computer move representation is 
to store the starting square and ending square of the piece being moved; 
for instance the common beginning move of the king's pawn forward two 
squares would be represented "e2e4" where e2 is the name for the initial 
position of the pawn and e4 is the name for its final position.  The piece 
being captured (if any) does not need to be stored as part of the move 
since it is determined by the final position.  In the 
computer, these positions can be represented as 6-bit values, so the whole 
move could be stored internally as two bytes.  But (even though some 
programs are based on it) this representation is not quite capable of 
representing all moves!  In castling, two pieces move, a king and a rook, but we can handle 
this as a special case in which we list only the king movement. More 
importantly, if a pawn moves from the seventh rank to the eighth, it can be 
replaced by any of four pieces: queen, rook, knight, and bishop. The 
representation above doesn't allow us to specify which replacement is 
happening. So when designing a move representation, one should be careful 
to make sure that it covers all the special cases that might happen in 
your game.

The onternal representation of board can be less concise but should still not 
be too huge.  It must represent all relevant information, not just all 
visible information, but not including irrelevant information.  E.g.  in 
chess, we need to know the positions of pieces on the board (the obvious 
visible information), but we also need to know some invisible information: 
who's on move, whether either player can castle, whether an en passant 
capture is possible, and how many moves it's been since the last capture or 
pawn move.  We also need to know something about what positions have 
occurred in the past (because of triple repetition) but don't need to know 
the entire list of past moves.

Example of  Multiple Representation Possibilities: Chess

There are many possible ways of representing even something with as 
clearly defined a structure as a chessboard in a computer.  Here are some 
of the methods that have been used by chess programs.

Representation 1: 8x8 array of squares.
Within each square, keep a value indicating which piece is present in the 
square
(e.g. enum { empty, wK, wN, wB, wR, wQ, wP, bK, bN, bR, bQ, bP }).  
Advantages: (1) simple. (2) easy to compute material scores:

    for  (i=0;i<8;i++)
        for(j=0;j<8;j++)
            score += value[square[i,j]];

It's a little messy but not really hard to compute possible moves; you can loop through the 
squares finding pieces of appropriate color and branch according to piece 
type:

    for  (i=0;i<8;i++)
        for(j=0;j<8;j++)
            switch (board[i,j]) {
            case wP:
                if (board[i+1,j] empty) generate move to (i+1,j)
                if (i==2 && board[i+1,j] empty && board[i+2,j] empty)
                    generate move to (i+2,j)
                if (j > 0 && board[i+1,j-1] contains black piece)
                    generate capture of (i+1,j-1)
                if (j < 7 && board[i+1,j+1] contains black piece)
                    generate capture of (i+1,j+1)
                break;
            ...
            }

however there are various annoying boundary conditions to 
check (e.g. a pawn on rook-file shouldn't try to capture to one side) making 
this code complicated and slower than necessary.

Representation 2: extended array. 10x10, containing extra boundary squares 
containing a special "boundary" value added to the enum.  This simpifies 
some of the cases (reduces number of conditions in the if-statements above) 
at the expense of a little space.

Representation 3: 0x88.  The name of this representation comes 
from a trick for testing whether a square is a valid move involving the 
binary representation of the number 136 (which in hexadecimal is 0x88).
We give each square of the board a number (a single byte), of 
which the high 4 bits are the row and the low 4 bits are the column:

    112 113 114 115 116 117 118 119
    96  97  98  99  100 101 102 103
    80  81  82  83  84  85  86  87
    64  65  66  67  68  69  70  71
    48  49  50  51  52  53  54  55
    32  33  34  35  36  37  38  39
    16  17  18  19  20  21  22  23
    0   1   2   3   4   5   6   7

Then the square left of i is i-1, right is i+1, up is i+16, down is i-16 
etc.  Then represent the board as an 
array of 128 squares (of which 64 correspond to actual squares on the 
board).  The advantages of this representation are (1) it speeds up the 
program a little by using only one index instead of two in the array 
references, and (2) you can test really 
quickly and easily whether a move stays on the board: i is a legal board position if 
and only if (i&0x88)==0.  [Work it out, moving off the board either 
overflows the column giving i&0x08 nonzero, or overflows the row giving 
i&0x80 nonzero.]  This is a pretty commonly used technique.

Representation 4: bitboards.  I'll go into this in a lot more 
length than the other representations because it's probably more 
unfamiliar, but I think it's also likely to work better.  Instead of having 
an array of squares, each containing a piece types, have an array of piece 
types, each of which stores a packed array of bits listing the squares 
containing that piece.  Since there are 64 possible squares, each of these 
packed arrays can be stored in a 64-bit number (two 32-bit words).  The big 
advantage is that you can perform certain evaluation and move generation 
operations very quickly using bitwise Boolean operations.  Think of it as a 
way of getting your computer to do massively parallel computations by 
packing things into long words.  For example, in the following position:



The bitboard for the white pawns (call this 64-bit value "wP") would 
consist of the bits

    0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0
    0 0 0 0 0 1 0 0
    0 0 0 0 0 1 0 0
    0 0 0 0 1 0 0 0
    0 0 0 0 0 0 0 0
    1 1 1 0 0 0 0 1
    0 0 0 0 0 0 0 0

Then the bitboard squares occupied by black can be computed by a formula

    bOcc = bP | bN | bB | bR | bQ | bK

(where bP etc are bitboards for the different kinds of black pieces).
Similarly we can compute the white occupied squares, and or these two 
bitboards together to get all occupied squares.
The bitboard of possible white pawn one-square move destinations can then 
be computed by a formula:

    single_pawn_moves = (wP << 8) & ~occupied

Let's look at this in slow motion.
Shifting wP by 8 produces a bitboard of positions one place in front of 
each pawn:

    0 0 0 0 0 0 0 0
    0 0 0 0 0 1 0 0
    0 0 0 0 0 1 0 0
    0 0 0 0 1 0 0 0
    0 0 0 0 0 0 0 0
    1 1 1 0 0 0 0 1
    0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0

The negation of occupied gives a bitboard of empty squares:

    0 0 1 1 0 0 1 0
    1 0 1 0 1 0 0 0
    1 1 1 0 0 0 1 1
    1 0 1 1 1 0 1 1
    1 0 1 1 0 1 1 1
    1 0 1 1 1 0 1 1
    0 0 0 1 1 1 1 0
    0 1 0 1 0 0 1 0

The bitwise and of these two bitboards then gives the positions in front 
of a pawn, that are not already occupied:

    0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0
    0 0 0 0 1 0 0 0
    0 0 0 0 0 0 0 0
    1 0 1 0 0 0 0 1
    0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0

Similarly you can find two-square pawn moves by taking the bitboard of 
one-square moves, shifting it another 8 bits, anding it with the 
non-occupied squares again, and anding it with a constant bitboard (shown 
below) of the 
squares on the fourth row (the only row onto which pawns are allowed to 
move two squares):

    0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0
    1 1 1 1 1 1 1 1
    0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0

Note that this constant bitboard can be generated at compile time rather 
than each time we want to generate moves.
Pawn captures are similar (shift by seven or nine, and with a constant to 
eliminate captures off the left and right side of the board, and with bOcc).

The point of this technique is not that your code is simpler when you 
program with bitboards (it's a little more complicated) but that you 
generate the pawn moves all at once rather than one at a time.  Also, a lot 
of the intermediate expressions you need (such as bOcc) get used over and 
over, and only need to be computed once. So bitboards end up being very 
efficient, and I think would be even better for games other than chess in 
which there are fewer types of pieces.

One complication arises: it's often important to count the number of 
nonzero bits in a bitboard, or to find a nonzero bit (e.g. to turn the 
bitboard of possible pawn moves into an explicit list of moves).
Counting can be done one byte at a time, looking up in a 256-entry table 
the number of nonzero bits in each byte. There's a cute trick for finding 
a single nonzero bit: x^(x-1) (where the uparrow is C notation for 
exclusive or) gives a binary number 
...000111... where the first one of x^(x-1) is the last nonzero bit of  x.  If you need to 
turn this into an actual bit, take the result modulo some carefully chosen 
number M (for which the numbers ...000111... are all different mod M), and 
look the result up in a table.  As a simple example, the following code 
finds the index of the last nonzero bit of a byte:

    int T = { -1, 0, 7, 1, 3, -1, 6, 2, 5, 4, -1, -1 };
    int last_bit(unsigned char b) { return T[(b^(b-1)) % 11]; }


How to Undo?

Remember we said our board representation needed to handle undo operations.
There are
two possible methods: (1) Keep a stack in which each stack item holds a 
whole board representation; to make a move push it on the stack and to undo 
a move pop the stack. Probably this is too slow...
(2) Keep a stack storing only the move itself together with enough extra 
information to undo the move and restore all the information in the board 
position.  E.g. in chess you would need to store the identity of a 
captured piece (if any) and enough information to restore castling 
and en passant capturing privileges.

Repetition Detection

Some games e.g. Go, Chess have special rules about what happens when the 
same position is repeated (in chess, third repetition of a position gives 
the player making the repetition the right to declare a draw).  How to 
tell?  Short answer: make a hash function translating the position to a 
reasonably large number (we'll talk more about this later because this is 
also very important for speeding up the search). Then keep a list of the 
hash codes for previous game positions and test if your position shows up 
in it.  Typical hash function: make 64*13 table of  large random numbers; 
when piece x is on position y, look up table[x,y] and add it to hash 
ignoring overflow [Zobrist].  Note that, when making a move of a piece y
from positions x to z, you can update the hash very quickly:
just subtract table[x,y] and add table[z,y].


David Eppstein,
Dept. Information & Computer Science,
UC Irvine,
.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/180a/970424.html
##-----------------TITLE------------------------##
ICS 180, April 24, 1997
##------------------TEXT------------------------##
ICS 180A, Spring 1997:
Strategy and board game programming

Lecture notes for April 24, 1997
Hashing and Move Ordering

I didn't really finish describing alpha-beta -- my pseudocode included a 
mysterious "sort list of moves" step that I didn't explain.  I'll continue 
to leave that dangling while I talk about hashing; we'll connect it up 
in a little while.

The idea of hashing is very simple.  Many games allow 
transpositions of moves, meaning different sequences of moves that 
end up leading to the same position.  For instance, in chess, the opening 
moves 1. d4 Nf6 2. c4 and 1. c4 Nf6 2. d4 both give the same position 
(known as an Indian defense).  White's two pawn moves could be made in 
either order without changing the result.  As an example of a more complicated 
transposition, the moves 1. e4 c6 2. d4 d5 3. ed Qxd5 4. Nc3 Qd6 (Caro-Kann 
defense), 1. e4 d5 2. ed Qxd5 3. Nc3 Qd6 4. d4 c6 (Scandinavian opening), 
and 1. e4 Nf6 2. e5 Ng8 3. d4 d6 4. ed Qxd6 5. Nc3 c6 (Alekhine defense)
all lead to the same position, after different numbers of moves.

Because of transpositions, the
same positions can show up many places in the alpha-beta search tree.  If 
we store a data structure that remembers what the results of searching each 
position were, we can look it up rather than searching it again.  But...we 
don't have enough memory to store all the positions we search.  And, 
lookups must be very fast to make it save time over just searching.  
Fortunately, we have one advantage: it's ok if we sometimes don't find the 
results from a position we already searched, and search the same position 
again, as long as it doesn't happen too often.

The answer: hash tables.  Make a big array: as large as 
possible without blowing out your physical memory (you don't want to eat 
into virtual memory, it will be slow.)


struct {
    long checksum;	// or long long might be even better
    int depth;
    enum { exact, lower_bound, upper_bound } entry_type;
    double eval;
} hashtable[HASH_TABLE_SIZE];


For each position you search, compute a "hash value" x indexing into the 
hash table and another "hash value" y for checking whether you've found the 
right position.

Before searching a position, lookup hashtable[x].
If hashtable[x].checksum == y, hashtable[x].entry_type == exact,
and hashtable[x].depth is at least the depth you are currently searching,
return the eval stored there.

After searching the position, store y, the current depth, and the eval you 
just computed, into hashtable[x].

How to compute hash values?

Zobrist hashing technique (already mentioned before re repetition 
detection):
Before playing the game (maybe hardcode this in your source code) make an 
array Z[square,piecetype] of random numbers.  Hash(board) is then just sum(Z[s,p]) 
summed over the pieces currently on the board
combined with any extra information you might have such as castling 
ability.  Often the sum is replaced by a bitwise exclusive or (uparrow in 
C) which is a little faster and easier to work with, but arithmetic 
addition would probably work just as well.
When you move to a new position, you don't have to recompute the hash from 
scratch; instead you can update the hash really quickly by subtracting 
the old piece square value from where the moved piece was and and adding 
the new value for its new location.  Use this technique (with 
different random numbers) both for the hash value x and for the checksum y.

Some further tips for using hashing effectively:

Don't clean out the array after making a move, it only wastes time and 
some hashed positions might actually still be useful after the move.

If the same position occurs at different levels in the tree
(as in the second transposition example we listed above) this can 
actually give you deeper searches than you originally asked for; that's ok.

Don't hash the positions very near the leaves of the search tree, there 
are too many of them (they'll take away hash table space from more 
valuable positions) and you're not saving much time by avoiding searching 
them.


How does hashing interact with alpha-beta?

A large fraction of chess program bugs are related to hashing.
Partly, because it interacts in confusing ways with alpha-beta search.
But, you can't avoid dealing with the issue, because you need both hashing 
and alpha-beta to have an efficient searcher.

Recall that, when we call alphabeta(depth,alpha,beta) on a position, one of 
three things can happen: a fail high, in which we know the eval is at least 
beta but not exactly what it is; a fail low, in which we know the eval is 
at most alpha but not exactly what it is; and an exact result, 
alpha < eva < beta.  We can only store an exact 
result in the hash table if we know the exact result.  But a fail high or 
fail low result could still help us prune later.  So, along with exact 
evals, store two other kinds of eval in hash table: a lower bound stating 
that the eval is at least beta, and an upper bound stating that the eval is 
at most alpha.  We use the entry_type field of the hash table entry to 
specify what kind of eval is being stored.  If the hash lookup comes back 
with one of these, we need to see whether it's useful enough to prune 
immediately without searching the node.  If so, we return it, and otherwise 
search the node again.

Here's some pseudocode for alpha-beta search with hashing.
We maintain the hashtable index x and checksum y in global variables,
that are updated as part of the process of making and unmaking moves.


double alphabeta(int depth, double alpha, double beta)
{
    if (depth <= 0 || game is over) return evaluation();
    if (hashtable[x].checksum == y && hashtable[x].depth >= depth)
        switch (hashtable[x].entry_type) {
            case exact: return hashtable[x].eval;
            case lower_bound:
                if (hashtable[x].eval >= beta)
                    return (hashtable[x].eval);
                else break;
            case upper_bound:
                if (hashtable[x].eval <= alpha)
                    return (hashtable[x].eval);
                else break;
        }

    int eval_is_exact = 0;
    generate and sort list of moves available in the position
    for (each move m) {
        make move m;
        double val = -alphabeta(depth - 1, -beta, -alpha);
        unmake move m;
        if (val >= beta) {
            hashtable[x].checksum = y;
            hashtable[x].depth = depth;
            hashtable[x].entry_type = lower_bound;
            hashtable[x].eval = val;
            return val;
        }
        if (val > alpha) {
            alpha = val;
            eval_is_exact = 1;
        }
    }

    hashtable[x].checksum = y;
    hashtable[x].depth = depth;
    if (eval_is_exact) hashtable[x].entry_type = exact;
    else hashtable[x].entry_type = upper_bound;
    hashtable[x].eval = alpha;
    return alpha;
}


Alpha-beta and move ordering

I said we'd return to alpha-beta; here it is. We did an optimistic 
analysis last time of alpha-beta, showing that it can double your search 
depth if it prunes whenever it can.  The condition that "it prunes whenever 
it can" can be expressed more simply: good moves are searched before bad 
ones.  The moves don't have to be completely sorted, but the best one should be 
first or at least one of the best should be one of the first.  What happens 
if not?  Then we don't do any pruning and we don't search very deeply.

If we classify nodes into type A (all children get searched) and type B 
(we prune after finding a good child) then move ordering is important in 
both cases: in type B, you want to start with a child that will let 
you prune the rest.  In type A, you want to choose a first child that is 
good enough to let all the other children be type B.

Of course, finding good moves is hard: it's the whole reason we're doing 
the search in the first place.  But we have some clues: (1) we may have 
hashtable entries from previous iterations of iterated deepening that give 
approximations to search values (same positions searched less deeply). (2) 
we may have some game-specific information, e.g. in chess captures are 
often good moves, try them first.  (3) the killer heuristic: if move m was 
best in a sibling, and is valid here too, try it.

So, before searching children, add a step: sort them by expected quality.
Then do the search in the sorted order.
(Sometimes you can modify the move generator to output moves in 
roughly-sorted order e.g. captures first, and save doing an explicit sort.)

One additional trick: if you think you're going to prune, you don't need 
to sort everything, you just need to output the first few items in sorted 
order.  So you may want to use a sort that you can take items one by one 
from and stop early, e.g.  selection sort or heapsort.


David Eppstein,
Dept. Information & Computer Science,
UC Irvine,
.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/180a/990114.html
##-----------------TITLE------------------------##
ICS 180, January 14, 1999
##------------------TEXT------------------------##
ICS 180A, Spring 1997:
Strategy and board game programming

Lecture notes for April 10, 1997
Evaluation Functions

General considerations

The evaluation function is where most of the game-specific knowledge 
goes into your program. We start off with two basic assumptions:

We can represent the quality of a position as a number.  For instance, 
this number might be our estimate of the probability that we can win the 
game; but most programs don't try to make the number mean anything so 
specific, it's just a number.
The quality we measure is or should be the same as the quality our 
opponent measures (so if we think we're in a good position, our opponent 
thinks he's in a bad position and vice versa).  This is unlikely to be 
really true, but it's needed to make our search algorithms work well, and 
in practice it comes pretty close to the truth.


The evaluation can be more or less complicated, depending on how much 
knowledge you build in to it.  The more complicated it is, and the more 
knowledge it encodes, the slower it is likely to be. Typically, the 
performance of a program (how well it plays) has been estimated as behaving 
like the product of the knowledge and speed:

So, if you have a fast dumb program you can often make it better by 
adding more knowledge and slowing it down a little.  But that same 
additional knowledge and slowdown might actually make a smart slow program 
worse; there is a diminishing rate of return of performance to knowledge.
Similarly once you speed your program up past a certain point, there is a 
diminishing improvement for adding more speed, and you would be better off 
balancing speed and knowledge somewhere closer to the middle of the chart.
This balance point varies somewhat depending on what kind of opponent you 
expect to face; speed works better for defeating other computers, while 
human opponents are very good at exploiting holes in your knowledge and 
are more easily defeated by knowledge-based programs.

Implementation methods

There are two major types of evaluation function method.
The first, "end-point evaluation", is simply to evaluate each position 
independently of each other position, using your favorite evaluation 
algorithm.  This can give good results, but is slow, so some programmers 
have resorted to the following trick, known as pre-computation, first order 
evaluation, or piece-square tables.

Before we begin a search for the best move from a position, we examine 
carefully the position itself, and compute values to store in an array 
T[square,piece type].  The evaluation of any position found in the search 
will then be simply the sum of the array values for the pieces in the 
position.  We don't have to compute the sum from scratch at each step; 
instead when moving a piece from one square to another update the score 
using the formula

score += T[new square,piece] - T[old square,piece]


Examples of piece-square table values in chess: when a king is castled into 
the corner of the board, the pawns in front of it are very useful in 
defending against attacks. Their ability to defend becomes less as they 
move forward.  So, if the king is in the corner in the starting position 
of the search, we might build piece-square tables for the pawns having the 
values

    ... 1   1   1   1
    ... 1   1.1 1.1 1.1
    ... 1   1.2 1.2 1.2

on the three rows in front of the king, to encourage the pawns to stay 
close to the king by giving them a greater value than their usual one point 
when they are nearby.

Unfortunately while piece-square tables are blindingly fast, and you can 
incorporate some interesting kinds of knowledge this way, piece-square 
tables are pretty stupid in general. They can't take into account 
interactions between several moving pieces; those interactions have to be 
approximated by looking at where the pieces were when the piece-square 
table was computed. So, for instance, if we search through a long sequence 
of moves, in which the king goes to a different part of the board, the 
piece-square table values above would be inaccurate because they would be 
making the pawns defend the place the king used to be, rather than 
defending the king itself.

Programs that use piece-square tables often combine them with some 
amount of end-point evaluation. Another strategy for making 
piece-square table methods more accurate is to delay building the tables 
until later in the search; e.g. if you are searching 9-move sequences, 
build the tables after sequences of 5 moves and use them for the remaining 
4-move search.  If you do that, though, you should be careful to make the 
tables resulting from one 5-move sequence be consistent with those from 
other sequences, so that the overall evaluation scores can be compared 
meaningfully.  In class Dave O. suggested another possible improvement: 
make incremental modifications to the piece-square tables, e.g. move the 
bonuses for pawns in front of kings when the kings move; this seems like a 
good idea but I don't know whether it's been implemented or if so how well 
it worked.

How to combine evaluation terms

Typically, like the first-order evaluations above, an evaluation function 
is a sum of several terms, where each term is the result of a function that 
looks for certain specific information in a position.  Why sums?  It's a 
relatively simple way of combining information that works ok in practice.

My own feeling is that game programmers really should try more carefully 
to model their evaluation functions on probabilities:
combine terms to determine probabilities of winning soon (by carrying out 
some kind of attack), in a moderate number of moves, or in an endgame (say 
by taking advantage of a passed pawn in chess),
and combine the probabilities appropriately.
If the probability of winning soon for black is bs and for white is ws,
if the probability of winning in a moderate number of moves (assuming no 
sooner win) is bm or wm, and if the probability of winning in an endgame is 
be or we, then the overall probability of winning is

bs + (1 - bs - ws) bm + (1 - bs - ws - bm - wm) be

or

ws + (1 - bs - ws) wm + (1 - bs - ws - bm - wm) we.

I think it might be a useful idea for an evaluation function to compute 
terms estimating these individual probabilities, and combine them with 
formulas like the ones above.  How well each probability is estimated could 
be tested by comparing the program's estimates against the actual results 
in databases of games, and this would give a program the ability to do some 
rudimentary planning (judging whether to go for a certain attack based on 
how likely it is to work).  But this is purely speculation, it hasn't been 
tested in a real program, and you won't go far wrong just using sums.

What kinds of information go into evaluation functions?

Evaluation functions typically combine terms encoding knowledge of 
different types:

Material. The sum of point values in chess, the number of 
pieces of each player on the board in e.g. go or othello. This is often 
useful, but othello provides an interesting counterexample: the game is 
based at the end on the material count, but for middle-game positions it 
is a pretty bad idea to base the evaluation on material, since often the 
player with the better position will actually have fewer pieces. For some 
other games such as go-moku material is irrelevant since it a function only 
of what move it is and not of how good the board position is.

Space. For some games, one can partition the board into 
regions controlled by one player, regions controlled by the other player, 
and regions still in dispute.  For instance, this is the main idea of go.  
But it also comes up in games including chess, in which one player's region 
consists of the squares attacked or protected by his own pieces and not 
attacked or protected by the opponent's.  In Othello, if one player has a 
connected group of pieces surrounding a corner, these pieces can never be 
taken and form part of that player's territory.  The space evaluation is 
then simply the sizes of these regions, or less simply the total importance 
of these regions if there's some way of saying that one square is more 
important than another.

Mobility. How many different moves does each player have 
available? The idea is that if you have more choices of move, it's that 
much more likely that at least one of them will lead to a good position. 
This works very well in othello. It's not so useful in chess (it's been 
used, but some chess programmers have taken it out of their programs 
because it doesn't seem to help the quality of the overall evaluation).

Tempo. This is closely related to mobility,
and comes up in games like Othello and Connect-4 (and in certain chess
endgames) where it can often be a
disadvantage to be forced to move.
But unlike mobility terms, often the parity of the number of available moves
(whether it is odd or even) matters more than the total number.

For instance, consider the connect-4 position below:

Columns 1, 3, 4, and 7 are filled up, so any move must be to columns 2,
5, or 6.  Moves to column 6 are neutral -- either player can make
them without winning or losing.  Black controls column 2 --
red can not play safely there,
because that would let black win by getting four in a row.
Neither player can move safely in column 4 because the
other player would then immediately win.
If red plays next, then after three moves to column 6, black will be forced
move in column 2, giving up his control of that column,
and three moves later black will have
to move again in column 5 and red will win.
But if black is the one to play next, then three moves later
red will be forced to make a losing move.

In connect-4 endgames such as this, the columns with an even number
of spaces left are very unimportant.
The important quantity to measure is
the number of odd columns in which only one player can move.
If one player controls more odd columns, he or she is likely to win.
If the number of odd columns controlled by each player is equal,
as in the board shown (red controls none of the columns, and black only
controls an even column) then the important quantity is the number of
odd neutral columns -- if this is odd then the next player to play will win,
while if it's even the next player will lose.
Of course, this simple analysis needs to be made more sophisticated to
handle positions in which
one player controls positions higher up in the columns.

In some other games such as Go, such strict parity rules are not
important, but it still matters who has the initiative --
the player who can choose where to play, while the other player is forced
to respond in the same area of the board.  Often it is a good idea to
make a sequence of moves that each take a small amount of space
but force your opponent to respond, before making a larger move
that takes more space but allows your opponent to take the initiative.

Threats. Is the opponent about to do something bad? Are you 
about to do something good? E.g. in 
chess or go, are some pieces likely to be captured? In go-moku or 
connect-4, does either player have some number of pieces lined up?  In 
chess or checkers is some pawn about to be queened or kinged? In othello, 
is one player about to take a corner?
This sort of term should vary according to the immediacy and strength of 
the threat.

Shape. In go, connected groups of pieces are safe from 
capture if they surround two separate regions of territory (called 
"eyes"). In chess, side-by-side pawns are generally much stronger than 
pawns stacked on the same column. Shape-based terms are especially 
important because they measure long-term qualities of the position that do 
not change much in a few moves and that won't be covered by the search.
(Searching finds short-range tactics in an attempt to improve the overall 
evaluation, so the evaluation itself needs to include any more long-term 
features that the search is trying to make happen.)

Motifs. Some particular patterns of pieces are common enough 
that it's worth including special case terms to cover them.  In chess, for 
example, a bishop can often capture a pawn on the outside column, only to 
be trapped by moving another pawn forward. Once the bishop is trapped, it 
may still take many moves for the opponent to maneuver a piece into 
position to capture it, so the fact that it's trapped may not be obvious in 
the computer's search routine.  Some programs have included special 
evaluation terms to warn the computer that taking that pawn might be a 
mistake.  In othello, it's sometimes useful to "sacrifice" one corner by 
placing a stone next to the corner, so that when the opponent takes the 
corner itself one can put another stone next to the corner in a way that 
won't be taken, and that leads to the win of a different corner:

    . . O @ @ @ @ .
    . . @ @ @ @ O .
    . @ @ @ @ @ . .

White has sacrificed the bottom-left corner.Once black plays bottom-left, 
white will play next to it and win the bottom-right corner.

It might be worthwhile to have special evaluation code to examine these 
sacrifices and determine to what extent they're worthwhile to make, or to 
include in the measure of quality of a position the vulnerability of 
edge-pieces to such a sacrifice.



David Eppstein,
Dept. Information & Computer Science,
UC Irvine,
.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/180a/970415.html
##-----------------TITLE------------------------##
ICS 180, April 15, 1997
##------------------TEXT------------------------##
ICS 180A, Spring 1997:
Strategy and board game programming

Lecture notes for April 15, 1997
Tuning the evaluation function


Last time I talked about the different types of functions that evaluate 
features in a position, and how to combine them into an evaluation 
function by adding the values of many such functions.  But, where do the 
numbers come from?


E.g., in Othello, you might have say four functions:

f(pos) = material (# of my pieces - # of opponent pieces)
g(pos) = corners (# I control - # opponent controls)
h(pos) = mobility (# moves I have available)

You want to form an evaluation function by combining these (probably with 
some other terms): eval = a f + b g + c h.  For instance, you might try 
eval = -1*f + 10*g + 1*h.  But where do these numbers come from?  What 
combination of numbers gives the best performance?


There are various methods for finding numbers by hand:

Normalize. Since you only care about the ordering of 
evaluations, and (usually) not the actual evaluation values, you can 
multiply everything by the same constant without changing the results.
What this means is that you can choose some particular value
(say the material value of a pawn) and force it to be one, so that all the 
other values are expressed in terms of how many pawns that value is worth.
The net effect is that you have one fewer parameter that needs setting.

Deduce constraints. Sometimes it is possible to choose some 
of the parameters by considering what you want the machine to do in 
certain types of positions. For instance, in chess, it is usually bad to 
trade a rook for a bishop or knight, even if you also end up winning a 
single pawn, but good if you win two pawns, so the material values should satisfy 
R>B+P (to prevent the single-pawn trade) and R<B+2P (to encourage 
the double-pawn trade). The more of these inequalities you have, the 
smaller the set of weights that satisfy them.
This can sometimes help get to a reasonable 
starting approximation for the evaluation weights, but you probably still 
need to do some adjustment afterwards.

Hand tweaking. Most commonly used. Simply play your program enough 
times to get an idea of its strengths and weaknesses, guess which 
parameters would improve those the best, and pick new values for the 
parameters. Produces a reasonable answer 
quickly. Requires that you understand the game well enough to play 
reasonable games against the computer and analyze what it does wrong
(i.e. best when the computer is stupid and you are intelligent).


... and without human intervention (much of this should be review from 171, 
for those students who've taken 171 already; you probably won't have time to do 
much more than hand-tweaking):

Hill-climbing is like hand-tweaking: make 
a small change to the weights, test out performance of that change, keep 
the change only if performance improves, repeat many times.
Tends to be slow, get stuck in "local optima" in which eval weights are bad 
but any change makes them even worse.

Simulated annealing. Like hill-climbing, makes small changes 
to eval and keeps changes that improve performance. But if change doesn't 
improve performance, sometimes (randomly, with a certain probability) 
accepts the change anyway, in an attempt to escape local optima. Need to 
specify these probabilities; they should start high and gradually become 
lower.  Even slower than hill-climbing but eventually can get good values.

Genetic algorithms. Hill-climbing and simulated annealing 
maintain one good set of weights, which they change gradually.  Instead, 
genetic algorithms maintain a collection of several different good sets of 
weights, add new sets to the collection by combining pairs of existing ones 
(take some weights from one and some from another, with a little mutation 
as well), and keep the size of the collection down by killing off sets of 
weights with bad performance.

Neural networks. Really, this is more a type of evaluation 
function than a method for choosing weights: a neuron is a function of the 
form threshhold(weighted sum of inputs), and one can form networks in which the 
neurons in the first layer take as inputs some basic features of the 
position (e.g. the individual bits of a bitboard representation) and 
successive layers take as inputs the neurons from the previous layer.
So a one-layer network with only one-input neurons is the same as the 
first-order evaluation functions we talked about last time, but it's 
straightforward to build much more complicated neural networks, and 
it's not hard to use such a thing as the evaluation function (just 
recompute the outputs of neurons with changed inputs).  The question is as 
before, how to set the weights?  Along with the other methods above, there 
are some that have been developed specifically for neural networks, such 
as "temporal difference learning". The basic idea is to decide when the 
network makes a bad decision, and determine for each weight separately whether 
changing it up or down would lead to a better decision, so it's a lot like 
hill-climbing.  One advantage of neural nets is they need even less human 
intelligence than the other automatic learning methods: you don't even 
really need to understand the game well enough to program a decent 
evaluation function. However, in the time available to us (a few weeks), 
you'll get good results faster by being more intelligent yourselves and 
leaving less of the work to the machines.


All of these methods require some method of automatically evaluating the 
performance of a program.

We can run the program on a large suite of test positions (say, 
taken from high-quality human games) and see if it gets the right answers. 

We can play the program against some known opponent (say another 
program) and see how often it wins. Or, we can play the program against itself, or against other versions of 
itself; e.g. in hill-climbing the modified program can play against the 
unmodified one. Both of these have the disadvantage that, unless there is 
some randomness in the system, both programs will play exactly the same 
each time, so you only get to see the results of one game which may not be 
representative of overall play.  One possible way around this would be to 
start playing several different games at positions taken from some test 
suite.

We can compare the results of the evaluation function with the 
results of combining evaluation and search. If the eval is good, they 
should be similar, but is vice versa true?


What has actually been done in automatically learning evaluation weights?
A good source for this is Jay Scott's
"machine learning in
games" web page. He lists two experiments that I think are
particularly interesting:

John Stanback (well-known as a commercial chess programmer) tried 
using a genetic algorithm to set the weights in the evaluation function of 
his program Zarkov.  He only ran 2000-3000 games, which I think is way too 
few, and got material values that were ok but still worse than hand-tuned 
values. I think the lesson is that genetic algorithms do work, but need 
either a lot of generations or a good initial set of weights.

Risto Miikkulainen, genetic algorithms researcher at U. Texas, gave 
a talk last year on some experiments he'd done with Othello. He used a 
genetic algorithm to tune the weights in a neural net evaluation function.
Performance evaluation of a net was done by play against a fixed opponent.
If the fixed opponent played randomly, the neural net learned an evaluation
in the form of piece-square 
tables (pieces in corners are good, pieces next to corners are bad, etc) 
after which it won all the time and stopped learning.
Against an opponent combining piece-square tables with a short search,
it eventually (after weeks of computer 
time) learned a better mobility-based strategy.  But if its opponent was 
already a sophisticated mobility-based program, it lost all the time and 
never started learning.  I think the lesson is to play against programs of 
similar strength, for instance to compare different evaluations in the 
genetic algorithm's current collection by playing them against each other, 
or alternatively to play against several fixed opponents of different 
strengths.



David Eppstein,
Dept. Information & Computer Science,
UC Irvine,
.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/180a/970417.html
##-----------------TITLE------------------------##
ICS 180, April 17, 1997
##------------------TEXT------------------------##
ICS 180A, Spring 1997:
Strategy and board game programming

Lecture notes for April 17, 1997
Minimax and negamax search

Game Trees

For any game, we can define a rooted tree (the "game tree") in which the 
nodes correspond to game positions, and the children of a node are the 
positions that can be reached from it in one move.  For instance 
tic-tac-toe:



(Actually, the root of this tree should have nine children, but I've 
left out some symmetric cases. If the same board configuration arises from two different sequences of 
moves, we create two separate nodes, so this really is a tree.  We'll see 
later when we talk about hashing how to take advantage of duplicated nodes 
to speed up the search -- we only need to search one copy of a position, 
and use the same search results everywhere else that position appears in 
the tree. We also assume that the players take turns moving, with no 
multiple moves or skipped turns; these complications can be dealt with by 
treating an entire sequence of actions by a single player as forming a 
single move. Finally, we'll assume this tree is finite, so that we're not 
dealing with a game that can go on forever or has infinitely many choices 
for a single move.)

There are three kinds of nodes in the tree:
Internal nodes at even levels correspond to positions in which 
the first player is to move.
Internal nodes at odd levels correspond to positions in which 
the second player is to move.
Leaves correspond to positions at which the game has ended. One 
player or the other has won, or perhaps the game is drawn.


Game Tree Evaluation

Suppose we have an internal node for which all children are leaves, so 
that the game is certain to end in one more move.
Then we can assume that the player to move is going to pick the best move.
If there is a leaf giving a won position for him, he will move to it and 
win. If not, but some leaf gives a drawn position for him, he will move to 
it and draw. But, if all leaves give won positions for his opponent, he 
will lose no matter what happens.

So, we know what the game outcome should be from nodes one level above 
the leaves. Once we know that, we can apply the same analysis bottom up, to 
determine the correct outcome from nodes two levels above the leaves, 
three levels up, and so on, until we reach the root of the tree.
At each node, the position is won for the player on move if he can find a 
child of that node giving him a won position; it is drawn if he can find a 
child giving him a draw; and if neither of these holds then it is lost.
This gives us an algorithm for playing games perfectly if only we had 
enough computation time, but for any reasonable game we won't have enough 
computation time. The trees are too big.

This also tells thus that a "correct" evaluation function needs to only 
have three values, win lose and draw.  The evaluations we use in computer 
game programs have a wider range of real-number values only because 
they're inaccurate.  If we represent a first-player win as the value +1, a 
draw as the value 0, and a second-player win as the value -1, then the 
value of each internal node in the game tree is the maximum or minimum of 
its children's values, depending on whether the first or second player is to 
move respectively.

Partial Game Trees

In practice, our search algorithms will work by only expanding part of the 
game tree.  We use some kind of stopping rule to decide to stop 
expanding the tree at certain internal nodes, making them leaves; for 
instance, we might stop after sequences of eight moves.  Since the game 
won't have ended at those leaves, we guess at how likely it is for one or 
the other player to win, using the evaluation functions.  Then, we make 
the assumption that within the nodes we've expanded, one player will be 
trying to reach positions with large values of the evaluation function, 
while the other player will be trying to reach positions with small values.

If both players really play this way, then we can determine the value of 
the leaf they will reach by the same min-max procedure outlined above: 
compute the value of each internal node as either the maximum or minimum of 
its children's values, depending on whether the first or second player is to 
move respectively.  The path to this leaf is known as the principal 
variation.  The basic principle of minimax game search is to expand a 
partial game tree, find the principal variation, and make the move forming 
the first step in this variation.

Breadth First and Depth First Search; Negamax Code

As described above, the computation of game tree values is breadth first 
(we compute the values in the tree bottom-up, a single level in the tree at 
a time).  Instead, we can perform a depth-first (post-order) recursive 
traversal of the tree that evaluates a node by recursively evaluating its 
children and keeping track of the values seen so far.  This is much more 
space-efficient because it doesn't need to store the whole game tree, only 
a single path (which would generally be quite short, e.g. eight moves with 
the example stopping rule above).  As we'll see next time when I discuss 
alpha-beta search, depth-first traversal also has the advantage that you 
can use the information you've found so far to help decide not to visit 
certain irrelevant parts of the tree, saving a lot of time.

It's convenient to modify the game tree values slightly, so that we only 
need maximization operations rather than having to alternate between 
minima and maxima. At odd levels of the tree (nodes in which the second 
player is to move), negate the values defined above.  Then at each node,
these modified values can be found by computing the maximum of the 
negations of the node's children's values.  Maybe this will make more 
sense if I write down some source code for game tree search:


// search game tree to given depth, return evaluation of root node
double negamax(int depth)
{
    if (depth <= 0 || game is over) return eval(pos);
    else {
        double e = -infty;
        for (each move m available in pos) {
            make move m;
            e = max(e, -negamax(depth - 1));
            unmake move m;
        }
        return e;
    }
}


Note that this only finds the evaluation, but doesn't determine which move 
to actually make.  We only need to find an actual move at the root of the 
tree (although many programs return an entire principal variation).
To do this, we slightly modify the search performed at the root:


// search game tree to given depth, return evaluation of root node
move rootsearch(int depth)
{
    double e = -infty;
    move mm;
    for (each move m available in pos) {
        make move m;
        double em = -negamax(depth - 1);
        if (e < em) {
            e = em;
            mm = m;
        }
        unmake move m;
    }
    return mm;
}


Analysis of negamax: branching factor, depth

Traditionally one analyzes game tree algorithms by making some simplifying 
assumptions about what the game tree looks like.  We assume that each 
internal node has the same number of children; this number is known as 
the branching factor.  We also assume that we search the tree to 
some fixed depth (as does the algorithm above) and that the game 
doesn't end early (before this depth is reached).

With these assumptions, it's easy to write down a formula for the amount 
of time the negamax program uses: it's just proportional to the number of 
tree nodes expanded. (It may look like we should multiply by something since 
there is a loop nested within each call to negamax, but the time spent in 
this loop can be charged to the recursive calls made in it.)  If the 
branching factor is b and the depth is d, this number is
1 + b + b^2 + b^3 + ... + b^d = b^d (1 - 1/b^d)/(1 -  1/b).
The stuff in parentheses at the end of the formula is very close to one, 
so the overall time is very close to b^d.

If our game doesn't meet the strict assumptions above, we can work 
backwards and define the effective branching factor to be whatever 
value of b works to make the formula above describe our program's running 
time.  Even less formally, we'll use "branching factor" to describe the 
average number of moves available from a "typical" position in a game.

What can we say about this formula? First, it's exponential. This means 
that we won't be able to search too many nodes; if we get a computer twice 
as fast as the old one, we will only be able to increase d by some small 
number of levels.  Second, it depends very strongly on the branching factor 
b.  In a game with a small branching factor (like checkers, in which there 
may often be as few as three moves to search) we can search much deeper 
than chess (which may have 30 or so moves in a position) or go (hundreds of 
moves in a position).  So we'd like b to be as small as possible, but 
unfortunately it's more a function of what game we're working on and less a 
function of how well we can program. However, the technique I'll talk 
about next time, alpha-beta pruning, acts to reduce the effective branching 
factor considerably: if we're lucky, to the square root of its value in 
unpruned game trees, which lets us search to twice the depth we might 
without using alpha-beta.

Iterated Deepening

One question remains with the negamax code above: what do we give it for 
its depth argument?  Primitive game programs just set it to some fixed 
number, but this will result in a lot of variation in the amount of time 
the program takes per move. Instead you'd probably like something that 
chooses the search depth based on the amount of time the search will take.
Fortunately, the exponential nature of game search has one advantage: it 
makes this sort of control easy through a technique known as "iterated 
deepening": start searching very shallowly, then repeatedly increase the 
depth until you run out of time:


depth = 0
while (enough time left for another level of search) {
    depth++;
    m = rootsearch(depth);
}
make move m


It seems like we're wasting time, since all but the last search is thrown 
away. But the same analysis as before shows that the amount of time wasted 
is very small: the times for the different levels add together like 
1+b+b^2+..., a formula we've already seen to come out to very close to the 
last term b^d. So, iterated deepening is cheap and provides good 
time-based control. It's also helpful in other ways: we can use the 
results of shallower searches to help choose what order to search the moves 
in deeper searches, and as we'll see in alpha-beta searching this ordering 
is critical for fast searching.


David Eppstein,
Dept. Information & Computer Science,
UC Irvine,
.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/180a/990204.html
##-----------------TITLE------------------------##
ICS 180, February 4, 1999
##------------------TEXT------------------------##
ICS 180, Winter 1999:
Strategy and board game programming

Lecture notes for February 4, 1999
Which nodes to search?  Full-width vs. selective search

Alpha-beta tells us how to search, but we still need to know when to
expand a node (search its children) and when to just stop and call the
evaluation function.


The Horizon Effect

The pseudo-code I've shown you so far searches every move out to a given 
fixed depth (this depth is also known as the horizon.  Although this 
can be quite effective at seeing tactical threats that could be carried out 
within the horizon,
it (obviously) can't detect threats that would take effect past the 
horizon; for instance a depth-8 search (that is, a search four moves deep) 
would likely not have much or any information about a forced checkmate in 
five moves.  What it don't know, it can't defend against, and it would 
simply ignore those long-term threats.  But this sort of fixed-depth 
search can behave even worse when the position contains medium-depth 
threats in which some bad outcome is forced to occur, but where some lines 
have that outcome within the search horizon and some don't.  In that case, 
the program can play horrible pointless moves in an attempt to delay the 
bad outcome long enough that it can't be seen.  This phenomenon is known 
as the horizon effect.

Here's an example.  In the following position, black's bishop is trapped 
by the white pawns.  No matter what black does, the bishop will be taken 
in a few moves; for instance the white rook could maneuver h2-h1-a1-a2 and 
capture the bishop.  That sequence is 8 plys deep, and suppose that the 
black program is searching to a depth of 8 plys.  Probably the best move 
for black in the actual position is to trade off the bishop and pawns,
e.g. bishop x pawn, pawn x bishop.
In the remaining endgame, black's three connected passed pawns may be 
enough to win or draw against the rook.
But, a program searching 8 plys will likely instead move the black pawn 
forwards, checking the white king.  White must respond (e.g. by taking the 
pawn with his king), but that forced response delays the loss of the bishop 
long enough that the program can't see it anymore, and thinks the bishop 
is safe.  In fact, in this position, a fixed-depth program can continue 
throwing away its pawns, delaying the bishop capture a few more moves but 
probably causing the eventual loss of the game.



One way to counter the horizon effect is to add knowledge to your program: 
if it knows from the evaluation that the bishop is trapped, its search 
won't try to delay the capture by throwing away pawns.
Another is to make the search faster and deeper: the more levels your 
program searches, the less likely you are to run across a situation like 
this where it is possible to delay the loss of the bishop past the horizon.
But the most effective general solution is to make the search depth more 
flexible, so that the program searches deeper in the lines where a pawn is 
being given away and less deep in other lines where it doesn't need the 
depth.

Brute Force and Selectivity

Shannon's original paper on computer chess listed two possible 
strategies for adjusting the search depth of a game program.

The most obvious is what the pseudo-code I've shown you so far does:
a full-width, brute force search to a fixed depth.  Just pass in a
"depth" parameter
to your program, decrement it by one for each level of search, and stop
when it hits zero.  This has the advantage of seeing even wierd-looking
lines of play, as long as they remain within the search horizon.
But the high branching factor means that it doesn't search any line very 
deeply (bachelor's degree: knows nothing about everything).
And even worse, it falls prey to the horizon effect.
Suppose, in chess, we have a program searching seven levels deep,

The other method suggested by Shannon was selective pruning:
again search to some fixed depth, but to keep the branching factor down
only search some of the children of each node (avoiding the "obviously
bad" moves).  So, it can search much more deeply, but there are lines it
completely doesn't see	(ph.d.: knows everything about nothing).
Shannon thought this was a good idea because it's closer to how humans think.
Turing used a variant of this idea, only searching capturing moves.
More typically one might evaluate the children and only expand the
k best of them where k is some parameter less than the
true branching factor.
	
Unfortunately, "obviously bad" moves are often not bad at all,
but are brilliant sacrifices that win the game.  If you don't find one you
should have made, you'll have to work harder and find some other way to win.
Worse, if you don't see that your opponent is about to spring some such
move sequence on you, you'll fall into the trap and lose.

Nowadays, neither of these ideas is used in its pure form.
Instead, we use a synthesis of both: selective extension.
We search all lines to some fixed depth, but then extend
extend some lines deeper than that horizon.
Sometimes we'll also do some pruning (beyond the safe pruning done by
alpha-beta), but this is usually extremely conservative because it's too
hard to pick out only the good moves;
but we can sometimes pick out and ignore really bad moves.
For games other than chess, with higher branching factors,
it may be necessary to use more aggressive pruning techniques.

When to extend?

What is the point of extending?
To get better (more accurate) evaluations.
So, should extend
when the current evaluation is likely to be inaccurate, or
when the current line of play is a particularly important part of
the overall game tree search

(or some combination of both).

Quiescence Search

In chess or other games in which there are both capturing and 
non-capturing moves (checkers, go, fanorona), if there are captures to be made,
the evaluation will change greatly with each capture.

Quiescence search is the idea of, after reaching the main
search horizon, running a Turing-like search in which we only expand
capturing moves (or sometimes, capturing and checking) moves.  For games
other than chess, the main idea would be to only include moves which
make large changes to the evaluation.  Such a search must also include
"pass" moves in which we decide to stop capturing.
So, each call to the evaluation function in the main alpha-beta search 
would be replaced by the following, a slimmed down version of alpha-beta 
that only searches capturing moves, and that allows the search to stop if 
the current evaluation is already good enough for a fail high:


    // quiescence search
    // call this from the main alphabeta search in place of eval()

    quiesce(int alpha, int beta) {
        int score = eval();
        if (score >= beta) return score;
        for (each capturing move m) {
            make move m;
            score = -quiesce(-beta,-alpha);
            unmake move m;
            if (score >= alpha) {
                alpha = score;
                if (score >= beta) break;
            }
        }
        return score;
    }

Some people also include checks to the king inside the quiescence search, 
but you have to be careful: because there is no depth parameter, 
quiescence can search a huge number of nodes.  Captures are naturally 
limited (you can only perform 16 captures before you've run out of pieces 
to capture) but checks can go on forever and cause an infinite recursion.

Selective extensions

If the position has been active in the recent past, this may be evidence 
that further tactics are coming up, or that some of the previous moves 
were delaying tactics that prevent us from seeing deeply enough to get a 
good evaluation.
So one often increases the search depth if the search passes through
an "interesting" move such as a capture or a check.  In the alpha-beta pseudocode,
this would be accomplished by replacing the depth-1 parameter to the
recursive call to the search routine by the value
depth-1+extension.  You have to be careful not to do this too often,
though, or you could end up with a hugely expanded (even possibly
infinite!) search tree.

One trick helps make sure this extension idea terminate:
only extend by a fraction of a level.  Specifically, make the "depth"
counter record some multiple of the number of levels you really want to
search, say depth=levels*24.  Then, in recursive calls to alpha-beta
search, pass a value of depth-24+extension.  If the extension is always
strictly less than 24, the method is guaranteed to terminate, and you
can choose which situations result in larger or smaller extensions.

It may also be useful to include within the evaluation function 
knowledge about how difficult a position is to evaluate, and extend the 
search on positions that are too difficult.  My program does this: the 
program passes the current depth to the evaluation function.  If the 
position is complicated, and the depth is close to zero, the evaluation 
returns a special value telling the search to continue.  But if the depth 
reaches a large negative number, the evaluation function always succeeds, 
so that the search will eventually terminate.

How to combine accuracy with importance?

So far, we've just looked at trying to find the points at which the
evaluation may be inaccurate.  But maybe we don't care if it's
inaccurate for unimportant parts of the tree, but we really do care for
nodes on the principal variation.  How do we take importance into
account when performing selective extensions?

Don't, let alpha-beta sort out importance and just extend based on 
accuracy.

Extend lines that are part of (or near) 
the principal variation (e.g. singular extensions -- used in Deep Blue 
and/or its predecessors -- if there is one move much better than others in 
a position, extend the search on that move).

Moving away from alpha-beta...
conspiracy number search -- what is the minimum number of positions the 
value of which would have to change to force program to make a different 
move? Search those positions deeper.


Null-move search

This idea fits in with the general theme of the lecture, adjusting search 
depth in appropriate circumstances, however it works in a different 
direction.  Instead of extending the search in hard positions, we reduce 
the search in easy positions.

The idea is based on a piece of knowledge about chess: it's very rare 
(except in the endgame) for it to be a disadvantage to move.  Normally, if 
it's your turn to move, there is something you can do to make your position 
better.  Positions in which all possible moves make the position worse are 
called "zugzwang" (German for move-compulsion), and normally only happen 
in endgames.  In some other games, such as Go-Moku, zugzwang doesn't 
happen at all.  So, if you changed the rules of chess to allow a "pass" 
move, passing would usually be a mistake and the game wouldn't change much.

So, suppose you have a search node that you expect to fail high
(i.e., alphabeta will return a score of at least beta).
The idea of null-move search is to search the "pass" move first, 
even though it's usually not the best move.  If the pass move fails 
high, then the true best move is also likely to fail high, and you can 
return beta right away rather than searching it.
To make this even faster, the depth at which the passing move is searched 
should be shallower than usual.

You should be careful: this heuristic changes the result of the search,
and may cause you to miss some important lines of play.  You shouldn't use 
null moves twice in a row (because then your search will degenerate to 
just returning the evaluation), and you should be careful to only use it 
in situations that are unlikely to be zugzwang.  In chess, that means only 
positions with many pieces left.


    // alpha-beta search with null-move heuristic
    alphabeta(int depth, int alpha, int beta) {
        if (won game or depth = beta)
          return beta;
        for (each possible move m) {
            make move m;
            alpha = max(alpha, -alphabeta(depth-1, -beta, -alpha);
            unmake move m;
            if (alpha >= beta) break;
        }
        return alpha;
    }



David Eppstein,
Dept. Information & Computer Science,
UC Irvine,
Monday, 01-Feb-1999 16:58:05 PST.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/180a/970422.html
##-----------------TITLE------------------------##
ICS 180, April 22, 1997
##------------------TEXT------------------------##
ICS 180A, Spring 1997:
Strategy and board game programming

Lecture notes for April 22, 1997
Alpha-Beta Search

Shallow Pruning
Suppose you're doing a minimax search (as we described last time) of the 
following tree:



You've searched F, and found its children's evaluations to be 11, 12, 7, 
and 9; at this level of search, the first player is to move, and we expect 
him to choose the best of these values, 12.  So, the minimax value of F is 
12.

Now, you start searching G, and its first child returns a value of 
15.  When this happens, you know because of it that G's value will be at 
least 15, possibly even higher (if another of the children of G is even 
better).  What this implies is that we don't expect the second player to 
move to G; from the second player's point of view, F's value of 12 is 
always better than G's value of 15 or higher.  So, we know that G is not on 
the principal variation.  We can prune the remaining children of G, 
not evaluate them, and return immediately from searching G, since any 
further work evaluating descendants of G would just be wasted.

In general, we can prune like we did in node G when one of its children 
returns a value better (from the point of view of the player whose turn it 
is at node G) than the previously computed evaluation of one of G's 
siblings.

Deep Pruning

Other more complicated forms of pruning are possible as well.
For example, suppose in the same search tree that we've evaluated all of G, 
H, and I to be better than 12, so that 12 is the total evaluation at node 
B.  Now, we search node C, and two levels down, see an evaluation of 10 at 
node N:



We can use a more complicated line of reasoning to prune again.
We know that N will return a 10 or smaller (the second player is to move, 
and wants to choose small numbers).  We don't know whether this value of 10 
or smaller will be returned at J as well, or whether one of the other 
children of J will be better.  If a value 10 or smaller is returned from J 
to C, we can prune at C because it has a better sibling (B).
So, in this case, further exploration of the children of N is pointless.
The other case is that some other child of J returns a better value than 
10; but again, in this case, further exploration of N is pointless.
So as soon as we see 10, we can safely return from N.

Alpha-Beta Pseudocode

In general, when a returned value is better than the value of a sibling 
an even number of levels up in the tree, we can return immediately.  If we 
pass the minimum value of any of these siblings in as a parameter beta to the 
search, we can do this pruning very efficiently.  We also use another 
parameter alpha to keep track of the siblings at odd levels of the 
tree.  Pruning using these two values is very simple; code to do so is 
listed below.  Like last time, we use the negamax formulation, in 
which evaluations at alternate levels of the trees are negated.


double alphabeta(int depth, double alpha, double beta)
{
    if (depth <= 0 || game is over) return evaluation();
    generate and sort list of moves available in the position
    for (each move m) {
        make move m;
        double val = -alphabeta(depth - 1, -beta, -alpha);
        unmake move m;
        if (val >= beta) return val;
        if (val > alpha) alpha = val;
    }
    return alpha;
}


We'll explain Thursday what the sorting step is and why it's important.

Aspiration Search

What should we supply as the initial values of alpha and beta at the root 
of the tree?

Alpha and beta define an interval of the real number line 
(alpha,beta) of the evaluations we consider interesting.  If a value 
is greater than beta we prune and immediately return, because we know it's 
not part of the principal variation; we don't really care about the exact 
value, only that it's greater than beta.  If a value is less than alpha, we 
don't prune, but we still don't consider it interesting, because we know 
there's a better move somewhere else in the tree.

But at the root of the tree, we don't know
what range of evaluation values are likely to be 
interesting, and if we want to be sure of not accidentally pruning 
something important,
we have to just set alpha=-infinity and beta=infinity.

However, especially if we are using iterated deepening, it is likely 
that we have a pretty good idea what the principal variation is going to 
look like.  Suppose we guess that its value is going to be x (e.g., just 
let x be the value found when you previously searched to depth D-1), and 
let epsilon be a small number representing the amount by which we expect a 
depth-D search to vary from a depth-(D-1) search.  We can then try calling 
alphabeta(D, x-epsilon, x+epsilon).  Three different things can happen as a 
result:

The search might return a value within the interval (x-epsilon, x+epsilon). 
In this case, we know that it returned the correct value, and we can 
safely choose the move in the search tree leading to a node with that 
value.

The search might return a value v > x+epsilon.
In this case, we know that the true search value is also 
> x+epsilon, but we don't know what it is (the correct 
principal variation might have been pruned as soon as we saw some other 
move having a value greater than beta).  We have to adjust our guess x to 
be a higher value and try again (probably also with a larger value of 
epsilon).  This condition is known as a fail high.

The search might return a value v < x-epsilon.
In this case, we know that the true search value is also 
< x-epsilon, but we don't know what it is.  We have to 
adjust our guess x to be a smaller value and try again (probably also with 
a larger value of epsilon).  This condition is known as a fail low.


Even though it can fail in these two ways, using the aspiration search 
(having an initial interval (alpha,beta) smaller than (-infinity,infinity)) 
is usually an improvement overall, because it does so much more pruning.

Analysis

Let's do an analysis of alpha-beta search to see why it's such a useful 
idea.  Unlike the usual kind of analysis of algorithms, we'll do a 
best-case analysis, in which we assume that alpha-beta prunes as 
often as it possibly can.  We'll see next time what we need to do to make 
alpha-beta search behave in a way consistent with this analysis.
In class I did this analysis only considering shallow cuts, but in these 
lecture notes I'll include deep cuts as well, because it makes the analysis 
much simpler.

In the best case, each node at depth D-1 will only examine one child at 
depth D before pruning, except that one node on the principal variation 
will not prune (if it did, the overall algorithm will end up failing high 
or failing low, which would certainly not be the best case).

At depth D-2, however, nobody can prune, because all the children 
returned values greater than or equal to the values of beta they were 
passed, which at depth D-2 are negated and become less than or equal to 
alpha.

Continuing up the tree, at depth D-3 everyone (except on the principal 
variation) prunes, and at depth D-4 nobody prunes, etc.

So, if the branching factor of the tree is B, the number of nodes
increases by a factor of B at half the levels of tree, and stays pretty
much constant (ignoring the principal variation) at the other half of
the levels.  So the total size of the part of the tree that gets
searched ends up being roughly
BD/2 = sqrt(B)D.  Effectively,
alpha-beta search ends up reducing the branching factor to the square
root of its original value, and lets one search twice as deeply.  For
this reason it is an essential part of any minimax-based game-playing
program.


David Eppstein,
Dept. Information & Computer Science,
UC Irvine,
.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/bridge/
##-----------------TITLE------------------------##
Dan's bridge hand evaluator
##------------------TEXT------------------------##
This software evaluates double-dummy bridge hands.
I have made some attempts to make the system
not overly user-hostile.

This software is tricky to write correctly,
and it is hard to verify

correctness.

 EVAL:
        evaluates a bridge hand and, optionally, produces a playing tree

        This program determines whether one side
        can take the specified number of tricks against
        perfect defense and, if so, exactly how it can be done.
        Newer versions have dramatically improved
        
        performance.

    PLAY:
        uses the playing tree to play optimally

        You get to play defense against the program's perfect offense.
        In this manner, you will observe how any possible defense
        can be overcome.

    The Version 1 system uses
        
        alpha-beta search, including some
        
        amenities:
        dynamic rank equivalence, suit ordering,
        and dynamic rank ordering.
        A brief discussion of some
        
        implementation details is available.

    The Version 2 system uses
        
        node isomorphism and is an order
        of magnitude faster than Version 1.
        It also allows the user to configure memory usage.
        This version was a bit trickier to code since now there is a DAG
        (directed acyclic graph) rather than merely a tree.

    The Version 3 system uses
        
        node equivalence.
        For difficult problems it is an order of magnitude faster than
        Version 2.  Version 3 files are fundamentally different from
        and incompatible with earlier versions.


    The Version 4 system uses dynamic backtracking, some dynamic
        heuristics that are enhanced by learning techniques utilizing
        
        self-organizing lists, and some code tuning.
        Version 4 appears to be about twice as fast as Version 3.
        (For some hard hands, it is an order of magnitude faster
        than Version 3 for tree construction.)
        Optionally, the program determines the maximum number
        of tricks that are guaranteed makable, as opposed to just
        deciding the question for a specified number of tricks.


     Can you solve this
         
         devilish hand, which was described in rec.games.bridge?
         If not, EVAL can solve it for you.
     
         Here is another hand.
     This slam hand was presented
         as the Bridge Plaza Deal of the Week in April 1997.


NOTE ADDED March 2008:

     
The old EVAL software will not run on newer architectures.
   
Some year, when I have a chance, I will recompile it.



Back to my home page.


Dan Hirschberg
Computer Science Department
University of California, Irvine, CA 92697-3435

dan at ics.uci.edu
Previous modified: Nov 24, 2000
Last modified: Mar 17, 2008
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/280g/convex-decomp.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
From:           jeffe@duke.cs.duke.edu
Subject:        The last mesh generation problem
To:             David Eppstein <eppstein@ICS.UCI.EDU>
Date:           Thu, 10 Apr 1997 18:53:13 -0400 (EDT)

David --

I just found your list of problems for your mesh generation class.
Stuff is known about optimal convex decompositions of simple polygons.
If Steiner points are not allowed, an algorithm of Keil runs in time
O(r^2 n log n).  If Steiner points are allowed, an algorithm of
Chazelle -- from his PhD thesis -- runs in time O(n + r^3).  As you
guessed, both are dynamic programming algorithms.

Sounds like a fun seminar.

				-- Jeff

@article{k-dpsc-85
, author =      "J. M. Keil"
, title =       "Decomposing a polygon into simpler components"
, journal =     "SIAM J. Comput."
, volume =      14
, year =        1985
, pages =       "799--817"
, keywords =    "dynamic programming, convex, polygons, star-shaped,
		 partition, decomposition"
}

@incollection{ks-mdpo-85
, author =      "J. M. Keil and J.-R. Sack"
, title =       "Minimum decompositions of polygonal objects"
, editor =      "G. T. Toussaint"
, booktitle =   "Computational Geometry"
, publisher =   "North-Holland"
, address =     "Amsterdam, Netherlands"
, year =        1985
, pages =       "197--216"
, keywords =    "survey paper, convex, polygons, star-shaped,
		 partition, decomposition, covering"
}

@incollection{cd-ocd-85
, author =      "B. Chazelle and D. P. Dobkin"
, title =       "Optimal convex decompositions"
, editor =      "G. T. Toussaint"
, booktitle =   "Computational Geometry"
, publisher =   "North-Holland"
, address =     "Amsterdam, Netherlands"
, year =        1985
, pages =       "63--133"
, succeeds =    "cd-dpicp-79"
}
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/pubs/p-parallel-qt.html
##-----------------TITLE------------------------##
David Eppstein - Publications
##------------------TEXT------------------------##
David Eppstein - Publications



Parallel construction of quadtrees and quality triangulations.
M. Bern,
D. Eppstein, and 
S.-H. Teng.
3rd Worksh. Algorithms and Data
Structures, Montreal, 1993.
Springer, Lecture Notes in
Comp. Sci. 709, 1993, pp. 188–199.
Tech. Rep. 614, MIT Lab. for Comp. Sci., 1994.
Int. J. Comp. Geom. & Appl.
9 (6): 517–532, 1999.

A parallelization of the quadtree constructions in
"Provably good mesh generation",
in an integer model of computation, based on a technique of
sorting the input points using values formed by shuffling the binary
representations of the coordinates.
A side-effect is an efficient construction for the "fair split tree"
hierarchical clustering method used by Callahan and Kosaraju for various
nearest neighbor problems.
(BibTeX --
CiteSeer --
Citations --
ACM DL)




Publications --
David Eppstein --
Theory Group --
Inf. & Comp. Sci. --
UC Irvine

Semi-automatically filtered
from a common source file.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/161/people.html
##-----------------TITLE------------------------##
Algorithm Designers
##------------------TEXT------------------------##
ICS 161, Winter 1996:
Design and Analysis of Algorithms





Algorithm Designers

This file lists names and (sometimes) home pages of algorithm
designers whose algorithms were discussed in the lectures. 


Manuel Blum is a professor at U.C. Berkeley. He was one of
the inventors of the deterministic linear
time selection algorithm. He won the Turing award, the ACM's
highest honor, in 1995. His most recent research has been on
methods for automatically checking the correctness of programs. 


O. Boruvka. Boruvka's algorithm is one of three
classical minimum-spanning tree algorithms. 


Robert Stephen
Boyer now works with J. S. Moore on automatic theorem
proving programs at U. Texas, Austin. The Boyer-Moore string matching algorithm is
described in Baase, but I didn't say much about it in lecture. 


N. Christofides. Christofides' heuristic approximates the
minimum-length traveling salesman tour within a factor of 1.5. 



Edsger Wybe Dijkstra is Schlumberger Professor of Computer
Science and Mathematics at U. Texas, Austin. He won the Turing
award, the ACM's highest honor, in 1972. Dijkstra's algorithm finds shortest
paths from a single source to all other vertices of a graph.




Robert W. Floyd is a professor at Stanford. He never
received a Ph.D., although his many accomplishments would easily
have been enough to earn one. He won the Turing award, the ACM's
highest honor, in 1978. He was one of the inventors of the deterministic linear time selection algorithm. He
also made early improvements in 
quicksort and quickselect. 



Ronald Lewis Graham is a mathematician at Bell Labs and past
president of the American Mathematics Society. In 1972 he published
the Graham scan convex hull
algorithm.


Daniel S. Hirschberg is a professor here at UC Irvine. He
invented a space-efficient version of the longest common
subsequence dynamic programming algorithm. 


Charles Antony
Richard Hoare is James Martin Professor of Computing at
Oxford University. He won the Turing award, the ACM's highest
honor, in 1980. Hoare invented 
quicksort. 



Donald Ervin Knuth is a professor (emeritus) at Stanford. He is
most famous for inventing the TeX and Metafont typesetting systems,
and for writing "The Art of Computer Programming", a multi-volume
compendium on algorithms that is still worth reading (even though
much of it was written in the 1960's). He won the Turing award, the
ACM's highest honor, in 1974. Knuth was one of the inventors of the
Knuth-Morris-Pratt string matching
algorithm.

Joseph B. Kruskal is a researcher at Bell Labs (now
AT&T?). Kruskal's algorithm
is one of three classical minimum-spanning tree algorithms. 


J. Strother
Moore now works with R. S. Boyer on automatic theorem
proving programs at U. Texas, Austin. The Boyer-Moore string matching algorithm is
described in Baase, but I didn't say much about it in lecture. 


James H. Morris, Jr. was one of the
inventors of the Knuth-Morris-Pratt
string matching algorithm. 


John von Neumann was a mathematician of many
talents; among other works, he invented linear programming, automata theory, and game theory. He also
helped build one of the first electronic computers, ENIAC. In 1945,
he discovered merge sort. 


Leonardo of Pisa. was also known as
Fibonacci. He invented the 
Fibonacci numbers while studying the population dynamics of
rabbits. 



Vaughan Ronald Pratt is a professor at Stanford. He was one
of the inventors of the deterministic linear
time selection algorithm and the 
Knuth-Morris-Pratt string matching algorithm. 


R. C. Prim. 
Prim's algorithm is one of three classical minimum-spanning
tree algorithms. 



Ronald Linn Rivest is the Webster Professor of Electrical
Engineering and Computer Science at MIT. He was one of the
inventors of the deterministic linear time
selection algorithm. He also made an early improvement in quickselect. He is more famous
recently for his role in creating the "RSA" cryptography algorithm,
together with Adi Shamir and Leonard M. Adelman. 



Robert Endre Tarjan is a professor at Princeton. He won the
Turing award, the ACM's highest honor, in 1986. Tarjan invented the
strongly connected components
algorithm described in lecture. He was also one of the inventors of
the deterministic linear time selection
algorithm. 


John William Joseph Williams invented Heap sort.


ICS 161 -- Dept.
Information & Computer Science -- UC Irvine
Last update:
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/261/w11.html
##-----------------TITLE------------------------##
Data Structures
##------------------TEXT------------------------##
CS 261, Winter 2011: Data Structures

This course meets Monday, Wednesday, and Friday,
2:00 - 2:50 in Bren 1200. Coursework will consist of weekly homeworks,
one midterm and a comprehensive final exam. Grading will be based 20% on
homework, 35% for the midterm, and 45% for the final.

The reader assigned to the course is Leila Jalali
.

There is no required textbook; however, you may find the following helpful for some of the material:
Introduction to Algorithms, by Cormen, Leiserson, Rivest, and Stein. I don't recommend that you buy the book for this course (it is expensive and only covers part of the material) but many of you are likely to have it from undergraduate CS courses and it includes useful material on several topics from this course. Other algorithms texts are also likely to be helpful; the one I use in my undergraduate algorithms courses is "Algorithm Design" by Goodrich and Tamassia.Lecture notes from similar courses here and elsewhere:
ICS 261, UCI, Fall 20036.897, MIT, Spring 2003COS226, Princeton, Spring 2008External memory data structures, Aarhus, Fall 2000
When possible I will try to include more specific links to Wikipedia or other related online reading from the schedule of topics below.


Below is a tentative schedule of topics and readings. Dates for specific topics are subject to change, but the exam schedule is firm.

Week 1 (Jan 3-5-7):
Introduction: priority queues
in selection
sort; binary heaps.
Dijkstra's
algorithm and D-ary heaps; amortized
analysis and variable-sized arrays.Potential functions for amortization.Homework 1, due Wednesday, Jan 12 (solutions)Week 2 (Jan 10-12-14):
Fibonacci heaps.Integer priority queues.Homework 2, due Wednesday, Jan 19 (solutions)Week 3 (Jan 17-19-21):
HOLIDAY January 17 (Martin Luther King, Jr. Day).Hashing: hash
chaining, open
addressing (double
hashing, linear
probing). See also this
blog post.Cuckoo
hashing (see also: cuckoo
hashing with a stash).Homework 3, due Wednesday, Jan 26 (solutions)Week 4 (Jan 24-26-28):
Min-wise hashing,
Bloom filters,
and invertible Bloom filters.Hash
functions: cryptographic
hashing, finding collisions using cycle detection
algorithms, universal
hashing, tabulation hashing.Overview of balanced binary search trees.Homework 4, due Wednesday, Feb 2 (solutions)Week 5 (Jan 31, Feb 2-4):
Splay trees.The dynamic
optimality conjecture. (Additional reading on non-splay-tree approaches to dynamic optimality.)MIDTERM, Friday, February 4. (solutions)Week 6 (Feb 7-9-11):
Range sums, prefix
sums, and decomposable searching problems.Logarithmic lower bounds for dynamic prefix sums.Binary
search trees; augmented binary search trees and range
searching.Homework 5, due Wednesday, Feb 16 (solutions)Week 7 (Feb 14-16-18):
Succinct representation of trees and fast navigation in succinct
trees. Level ancestors.Lowest
common ancestors, range
minima, and the Bender-Farach algorithm.Homework 6, due Wednesday, Feb 23 (solutions)Week 8 (Feb 21-23-25):
HOLIDAY February 21 (Presidents' Day).Persistence. Closures and fully-persistent stacks.Persistent search trees, point location, Voronoi diagrams, and the post office problem.The node-copying and fat node techniques for making data structures persistent.Homework 7, due Wednesday, Mar 2 (solutions)Week 9 (Feb 28, Mar 2-4):
Quadtrees and approximate nearest neighborsSegment
trees and interval treesTries, compressed tries, and
suffix treesHomework 8, due Friday, Mar 11 (solutions)Week 10 (Mar 7-9-11):
Dynamic
graph algorithms and dynamic subgraph statisticsUnion-findFINAL EXAM, Friday, March 18, 1:30-3:30pm.

Several exams from past offerings of this course are online: Midterm, Winter 1999 (solutions); Final, Fall 2003; Final, Fall 2004; Midterm,
Winter 2006 (solutions); Final, Winter 2006.

For additional course-related information see the syllabus from my
previous offering in Winter 2010 and previous quarters linked from
there.



David Eppstein, 
ICS, UC Irvine.
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/f13-6B/options.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Home - Schedule



Course Info
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/f13-6B/schedule.html
##-----------------TITLE------------------------##
ICS 6B, Fall  2013
##------------------TEXT------------------------##
ICS 6B
Boolean Algebra and Logic Fall  2013





Course schedule, labs, reading assignments, homework and quizes:
All reading assignments refer to the Zyante text


Week

Dates

Quizes

Homework

Topics

Reading
BoardNotes
Week 1

Sept 30-Oct 4

-

HW Due Oct 9
HW1 Solutions

Propositional Logic

Mon: 1.1, 1.2
Wed: 1.3
Fri: 1.4

Sept 27
Sept 30
Oct 2
Oct 4

Week 2

Oct 7-11

-

HW Due Oct 16
HW2 Solutions

Quanitfiers

Mon: 1.5 and 1.6
Wed: 1.7
Fri: 1.8
Oct 7
Oct 9
Oct 11

Week 3

Oct 14-Oct 18

Fri Oct 18
Quiz 1 on
Sections 1.1-1.4

HW Due Oct 23
HW3 Solutions

Logical reasoning
Proofs

Fri: 2.1
Oct 14
Oct 16
Proofs
Oct 18
Week 4

Oct 21-Oct 25

Fri Oct 25
Quiz 2
Sections 1.5-1.7

HW Due Oct 30
HW4 Solutions

Sets

Mon: 2.2
Wed: 2.3, 2.4
Fri: 3.1
Oct 21

Oct 23

Oct 25

Week 5

Oct 28-Nov 1

Fri Nov 1
Quiz 3 
Section 1.8

HW Due Nov 6
HW5 Solutions

Relations

Mon: 3.2
Wed: 3.3
Fri: 3.4
Oct 28

Oct 30

Nov 1
Week 6

Nov 4-8

Fri Nov 8
Quiz 4
Sections 2.1-2.4

HW Due Nov 13
HW6 Solutions

Relations

Wed: 3.5
Fri: 3.6
Nov 4

Nov 6

Nov 8
Week 7

Nov 11-15
No class Mon Nov 11

Fri Nov 15
Quiz 5
Sections 3.1-3.2

HW Due Nov 20
HW7 Solutions

Relations

-Nov 13

Nov 15
Week 8

Nov 18-22

Fri  Nov 22
Quiz 6
Sections 3.3-3.5

HW Due Nov 27
HW8 Solutions

Functions

Mon: Sec 4.1 and 4.2
Wed: Sec: 4.3
Fri: Sec: 12.1
Nov 18
Nov 20
Nov 22

Week 9

Nov 25-27
No class Fri Nov 29

-

HW Due Dec 4
HW9 Solutions

Boolean algebra and circuits

Mon: Sec 12.2
Wed: Sec 12.3
Nov 25
Nov 27
Week 10

Dec 2-6

Mon Dec 2
Quiz 7
On Sec 3.6
-
Fri Dec 6
Quiz 8
On Sec 4.1-4.3

-

Finite state machines
Reading fromRosen TextDec 2
Dec 4
Dec 6
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s11_22/options.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Home - Schedule



Course Info




Code Examples from Lecture




Intro to Projects




Project 0 - in Lab


Project 1


Project 2


Project 3


Project 4


Project 5


Project 6



Style Standards




Setting Up Java




Submitting Projects
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s11_22/schedule.html
##-----------------TITLE------------------------##
ICS/CSE 23, Winter 2010
##------------------TEXT------------------------##
ICS/CSE 22  Spring 2011

   Instructor 

Prof. Sandy Irani 
Office: DBH 4042 
Office Hours: M 1-1:50, W 11-11:50, F 9-9:50
Email:  last name at ics dot uci dot edu 

   Teaching Assistant 

Kaiser Md. Nahiduzzaman
Office: DBH 4243
 
Office Hours: Thu 5:00 - 6:00 PM

Email:  kaisernahid@gmail.com 


Course schedule, labs, reading assignments and quizzes:
All reading assignments refer to the class text:
 Data Structures and Algorithms in Java, 5th. edition., by
Michael Goodrich and Roberto Tamassia.


Week

Dates

Lab
Assignment

Quizes

Reading

Topics

Week 1

March 28 - April 1

-

-

Ch 2.3

Java Review 
Exception Handling

Week 2

April 4-8

Project 1 
Due Friday, April 8

 Quiz 1 

Ch 2.5, 
Ch 3.1-3.2, 
Ch 6.3

Singly-linked lists 
Iteration and iterators 
Testing

Week 3

April 11-15

-

-

Ch 2.1-2.2, 2.4

Inheritance and Polymorphism 
The Object class 

Week 4

April 18-22

Project 2 
Due Wed, April 20

 Quiz 2 

Ch 5.1

Interfaces 
Comparability and natural orderings 
Abstract classes vs. Interfaces 
Stacks

Week 5

April 25 - 29

Project 3 
Due Friday, April 29


 Quiz 3 

Ch 5.2-5.3

Queues 
Testing with JUnit

Week 6

May 2-6

-

 Quiz 4 

Ch 4
Ch 9.1, 9.3

Algorithms and O-notation 
ArrayList vs. linked lists 
Maps: list implementations
Linear and binary search 

Week 7

May 9-13

Project 4 
Due Friday, May 13


 Quiz 5 

Ch 7.1-7.3 
Ch 10.1 
Ch 3.5

Linear and binary search, cont. 
Trees
Maps: tree implementations 
Recursion

Week 8

May 16-20

-

 Quiz 6 

Ch 3.3-3.4

Recursion, cont. 
Variations on linked lists 
Intro to Scheme

Week 9

May 23-27

Project 5 
Due Friday, May 27


 Quiz 7 

-

More recursion 
Maps: hash tables 
Scheme (cont.)

Week 10

May 30 - June 3

Project 6 
Due Friday, June 3


 Quiz 8 

-

 Monday: Memorial Day 
 Sorting 
 Review 

Finals Week

June 6-10

-

-

-

FINAL EXAM:
Monday, June 6, 10:30AM-12:30PM
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/sum14-6D/options.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Home - Schedule



Course Info
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/sum14-6D/schedule.html
##-----------------TITLE------------------------##
ICS 6D, Summer Session I  2014
##------------------TEXT------------------------##
ICS 6D
Discrete Mathematica for Computer Science Summer Session I  2014





Course schedule, reading assignments, homework and tests:
All reading assignments refer to the Zyante text


Week

Dates

Quizes

Homework

Topics

Reading

Week 1

June 23-27

No test

HW1: due June 27
HW1 Solutions

Logic
Sets
Functions

Mon: 1.1-1.6
Wed: 2.1-2.3
Fri: 3.1-3.3

Week 2

June 30-July 3

Test 1
covering:
HW1 and HW2
July 2

HW2: due June 30
HW2 Solutions

Induction
Recursion

Mon: 3.4, 7.1,7.2
Wed: 7.3, 7.4
Fri: Holiday

Week 3

July 7-11

Test 2
covering:
HW3
July 9

HW3: due July 7
HW3 Solutions
HW4: due July 11
HW4 Solutions

Properties of Integers

Mon: 8.1, 8.2
Wed: 8.3, 8.4
Fri: 8.5, 8.6

Week 4

July 14-18

Test 3
covering:
HW4 and HW5
July 16

HW5: due July 14
HW5 Solutions
HW6: due July 18
HW6 Solutions

Counting

Mon: 9.1-9.3
Wed: 9.4-9.6
Fri: 10.1, 10.2

Week 5

July 21-25

Test 4
covering:
HW6 and HW7
July  23

HW7: due July 21
HW7 Solutions
HW8: due July 25
HW8 Solutions

Counting and Probability

Mon: 10.3, 10.4
Wed: 11.1-11.3

Week 6

Jul 28-30

Final Exam
July 30
9:00-10:50AM

HW9: due July 28
HW9 Solutions

Review
Final Exam

-
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/23_GeneratingPermsSubsets.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\23_GeneratingPermsSubsets.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\23_GeneratingPermsSubsets.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/20_InclusionExclusion.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\20_InclusionExclusion.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\20_InclusionExclusion.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/15_GenProdRuleCountingPerms.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\15_GenProdRuleCountingPerms.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\15_GenProdRuleCountingPerms.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/10_DivisibilityPrimes.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\10_DivisibilityPrimes.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\10_DivisibilityPrimes.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/06_RecursiveDefinitions.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\06_RecursiveDefinitions.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\06_RecursiveDefinitions.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/24_CountingOverview.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\24_CountingOverview.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\24_CountingOverview.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/19_SubsetsWithRepeitions.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\19_SubsetsWithRepeitions.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\19_SubsetsWithRepeitions.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/03_SequencesSummations.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\03_SequencesSummations.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\03_SequencesSummations.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/07_RecursiveAlgorithms.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\07_RecursiveAlgorithms.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\07_RecursiveAlgorithms.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/08_SolvingLinearHomogeneousRecurrenceRelations.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\08_SolvingLinearHomogeneousRecurrenceRelations.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\08_SolvingLinearHomogeneousRecurrenceRelations.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/12_Cryptography.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\12_Cryptography.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\12_Cryptography.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/13_NumberRepresentation.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\13_NumberRepresentation.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\13_NumberRepresentation.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/18_PermutationsWithRepeittions.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\18_PermutationsWithRepeittions.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\18_PermutationsWithRepeittions.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/StrongInduction.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\StrongInduction.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\StrongInduction.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/21_DiscreteProbability.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\21_DiscreteProbability.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\21_DiscreteProbability.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/11_EuclidsAlgorithm.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\11_EuclidsAlgorithm.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\11_EuclidsAlgorithm.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/14_CountingIntro.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\14_CountingIntro.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\14_CountingIntro.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/22_BinomialCoefficients.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\22_BinomialCoefficients.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\22_BinomialCoefficients.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/02_SetsFunctions.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\02_SetsFunctions.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\02_SetsFunctions.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/09_ModularArithmetic.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\09_ModularArithmetic.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\09_ModularArithmetic.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/Induction.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\Induction.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\Induction.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/courseinfo.html
##-----------------TITLE------------------------##
ICS 6D Spring  2015
##------------------TEXT------------------------##
Syllabus



Course Information
ICS 6D Discrete Mathematics for Computer Science
Spring 2015


Course staff and office hours


  Instructor 

Prof. Sandy Irani 
Office: DBH 4042 
Office Hours: Tues 2:00PM-2:50PM, Friday 10:00AM=10:50AM
Email:  irani@ics.uci.edu 

  Teaching Assistants 

Zachary Destefano
Office: DBH 4059
 
Office Hours: Thurs, 12:00-12:50PM
Email:  zdestefa@uci.edu   

 
Mengfan Tang
Office: DBH 3211
 
Office Hours: Thurs, 10:00-10:50AM
Email:  mengfant@uci.edu   



  Readers 



Reza Asadi
Office: DBH 4081
 
Office Hours: Thurs 3:00PM-3:50PM
Email:  rasadi@uci.edu    

 
 Prolok Sundaresan 
 Office: TBA
  
 Office Hours: Thurs, 3:30-4:20PM
Email:  sundarep@uci.edu 

 

Xikui Wang
Office: DBH 2069
 
Office Hours: Tues, 1:00PM-1:50PM
Email:  xikuiw@uci.edu    




Meeting Places and Times

Lecture will be held MWF 2:00-2:50 in  PSLH 100.
You are responsible for anything said in class, including
class announcements. If you have to miss lecture for any
reason, please ask one of your classmates to fill you
in on what you missed.


There are four discussion sections for this class. Each section meets two hours per
week. This is an important time to get questions answered about homework
problems. No new content will be given in discussion and we do not take attendance, but you are highly encouraged to
attend as it will give valuable practice on problems.





Piazza

We will use an online question and answer service called Piazza.
You will all have an account.
The link to the to the course page on Piazza is:

 https://piazza.com/uci/spring2015/ics6d/home.
If you have a question about course content, you can go to see if it
has already been asked by another students.
If not, you can post the question yourself.
The course staff will be checking Piazza several times a day
to update answers to questions posted there.
There is also a way for students to collectively edit a response
to a question and for instructors to indicate whether the answer
is a good/correct answer.


Piazza is also a good place to post general
adnministrative questions about the class.
If you send me an email with a technical question about the class,
I am likely to refer you to Piazza.


Important class announcements will also be posted on Piazza. You are responsible
for checking for course announcements at least twice a week.
Only time ciritical announcements will generate an email.


Before posting a question on Piazza, you should look through the course
materials or previous Piazza posts
to see if you can find the answer to your question.
If your question is about the technical content of the course,
check the text. If you have an administrative question, check the
course web page (either the home page with the schedule or this course information page).


Piazza provides a way for you to
post anonymously. However, your posts will only be anonymous to other students.
The instructors will be able to see the name and uciNetID of any individual
who posts to Piazza.


 Obtaining assistance


Tbe best way to get your questions answered is by coming
to lecture, office hours or discussion and asking them there.
In particular, office hours and discussion are  the best place to ask questions that
require a longer answer or some diaglog to get resolved.



The table below shows where to go to for different kinds
of questions. Please try to follow the directions there.
 I really do want to be available for significant problems or issues that may arise.
 I also really enjoy meeting students in my office hours.
 However, with a class this size, the  amount of email generated from
 smaller, routine questions can be overwhelming, so I would like you
 to try and find that answer through other sources first.



Question type

Example

Where to go


Questions about course content

What's the difference between (x,y) and {x,y}?

Try and find the answer to your question through the course materials.
If your question is not answered, then 
Post on Piazza

General administrative questions

What topics does test 1 cover?

Check the course web page (schedule and course information) first.
If your question is not answered, then 
Post on Piazza

Questions on how your HW or test was graded.

I don't understand why I didn't get full credit on the first question.

Office hours of the reader or TA who graded that HW or test
(readers and TAs will post on Piazza who graded which test.
Office hours are listed here.)

Minor bug in the text.

Shouldn't the last line of this animation be x2 instead of x1?

Use the feedback button in the text.

Technical problem you are having with the text.

Why doesn't the text show 100% progress for Section 1.2? 
I think I did all the activities in the section.

support@zyBooks.com

Major issue reading the text.

None of the mathematical formulas are showing up in Section 1.4.

support@zyBooks.com
and cc irani@ics.uci.edu

Mistake in HW or HW solutions.

I think the answer to question 3 on HW 2 should be 56 and not 57.

irani@ics.uci.edu




Grading

The grading criteria for the course is:

Homework 5%
Reading Assignments 4%
Tests 60% (20% each)
Final 30%
Completing the Course Evaluation 1%


I am frequently asked whether I curve the grades. The answer to this question will
always be "I don't know".
First of all, no letter grades are assigned to scores until I calculate a final course
percentage for each student. I generally do aim to have the A's fall in the 90-100 range
and the B's in the 80-90 range, etc. Sometimes I am a bit more generous that that, depending
on the distribution of scores. Occasionally I give a test or final that is harder than I
expect. In those circumstances, I will sometimes make a problem count as extra credit.
The best strategy for success is not to think too much about your grade but to continually
do your best to understand the material in the class.








Tests



There will be three tests given during the quarter. Each of these covers a different topic covered
in the course. The final exam will be cumulative and will cover all the material covered during the
entire quarter. The tests will be given in class during the normal scheduled lecture time.
The dates of the three tests and the final exam are:

Week 5: Wed, April 29Week 7: Wed, May 13Week 9: Fri, May 29Final exam: Wed, June 10, 10:30AM-12:30PM


There will be assigned seating for the tests. When you arrive in the classroom, you need to get a test
from one of the course staff. Each test is marked with a row and seat number.
You are required to sit in the seat indicated on your test.
It is a violation of the academic honesty policy to swap tests with any other student after you have received
your test or to sit in a seat other than the one designated on your written test.



The only thing you need to have for tests and the final exam is a pen or pencil for writing.
All scantron forms and/or paper will be provided.
No electronic devices (inclusing calculators) are allowed in tests or exams.
There should be no visible screens during a test or exam.
Laptops should be closed and tablets should be in a closed folder or stowed in a bag.
Phones should be stowed in a bag or pocket so that they are not visible at all.


Missed tests or final exam:
 All three tests and the final exam are mandatory. If you miss a test or the final exam and do not have a valid reason, you will receive
a score of 0 on the test.
 The following policy applies if you miss a test or the final exam for a valid reason:

There are only two classes of valid reasons for missing a test or the final exam:
  An unforeseeable emergency, such as a medical emergency.
In such cases I will ask for documentation.
 An absence from an exam due to a foreseeable circumstance
that I have approved in advance.

If you miss a test due to a forseeable circumstances, I must receive notification from you a week in advance.
If the absence is due to an unforseeable emergency, I should receive an email from you as soon as you are able
to send it. In either case, I will ask you to come see me in person to discuss how I will
adapt your grade for the course. I will not give a make-up test or final.

A work conflict or a family vacation is NOT a valid reason for missing a test or the final exam.
 If I accept your reason for missing a test or the final exam, I will assign your grade on the basis
of the remaining course work that you did not miss.



Homework



Homework is due every Friday, starting in week 2.
There will be a dropbox labeled "ICS 6D" on the first floor of Bren Hall.
 You must hand it in before the start of lecture because one of the
readers will pick it up during lecture. Absolutely no late homework assignments will be accepted.



You will notice that the homework counts very little towards your grade.
It is important to do the homework because it enables you to learn the material but a missed
homework will not have a big effect on your grade. Also, I will drop the lowest homework score
in calculating your final grade.



Grades for the assignements and tests  will be posted through EEE.
If you have questions regarding grading, please see the reader or TA who graded that assignment.
The readers and TAs will be posting on Piazza when test grades and homework scores are ready so you will
know who graded which assignments.


I will post solutions to the homework so that you can use them to study for the tests.





Text


This quarter you will be using a web-based interactive, animated offering as your "textbook".
You are required to have an account for the course. The material
includes interactive
exercises which will count towards your grade.
The directions for subscribing can be found at:
 Go to https://zybooks.zyante.com/#/zybooks.
Bookmark this site - this is your site for the entire quarter.
You will need a
credit card or Paypal account to pay the subscription price of $40.
Note: a Paypal account is not required.
If you don't have a credit card or a Paypal account, contact 
support@zyBooks.com.
Contact 
support@zyBooks.com for help or with any questions regarding obtaining a subscription.


Your reading for this class is associated with your subscription for the spring offering of
ICS 6D, so  you will need a new subscription even if you have had a previous subscription
to the Discrete Math zyBook for some other class.
However, if your subscription to the Discrete Math zyBook occurred in the last year (or currently
for another class), you will get a discount code which will allow you to get your subscription
at a 50% rate. You will need to provide the zyBook code for the previous subscription and for
this class. The zyBook code for this class is UCIICS6DSpring2015.


If you drop the class in the first two weeks, you can contact support@zyBooks.com to get
a full refund for the text.





Credit for reading

Each reading assignment (except for the first two weeks) is due at 2PM the day it is assigned.
Every action through your zyBook is automatically timestamped.
When I compile grades for reading, I determine how much
of your  reading was completed by a particular day and time,
so the deadlines are automatically enforced.


You can determine how much of the reading has been completed
by looking at your zyBook dashboard.
Please familiarize yourself with this interface and make sure
that you have 100% completion by 2PM for the sections assigned each
lecture day.


The reading assigned for the first week is not for credit. You are just asked to
do the reading on your own. Also the reading for the second week is due at 2PM April 6.
After the first  two weeks, each reading assignment for each day is due at 2PM the day
it is assigned.


Board notes

After lecture, I will post the board notes generated during lecture.
The purpose of posting the notes is to the reduce the amount of
note taking you need to be doing in class. The best way to learn this material
is to attend class and concentrate on what is being said.
Having the board notes provided means that you can spend more time
thinking about the content of the lectures and less time copying down
what is being written.


The board notes are not intended to be a perfectly readable
transcript for everyting that took place in class.
You will still  have to take some additional notes
based on the discussion in class.
The board notes are definitely not a substitute for attending class.
They merely serve to reduce the amount of writing you need to
do while you are in class.
If you are sitting in lecture and you can not read something I have
written, please raise your hand and ask for clarification.


If you are unable to attend class for some reason, you should not
expect the board notes to be sufficient to decipher the material I covered.
You need to contact a fellow classmate to get his or her
notes and possibly follow up in discussion with questions.







  Academic Honesty
    The Bren School of ICS and the University have already established an academic honesty policy. Read it.
    Violators of academic honesty policies are subject to the penalties described in the Bren School of ICS policy. They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade. Also be aware that a single documented case of academic dishonesty may preclude you from switching into computing majors, registering for computing minors, joining the ICS Honors Program, and graduating from a computing major with honors.
    Guidelines to avoid plagarism:
    Do not look at another person's homework.
      Instead you should prefer to discuss the problem in plain English.
      This helps you to communicate clearly, practice technical jargon as it applies to your problem, and to identify how your solution exhibits behavior different from what you expect.
      Do not write down the solution in your notes.
      It is perfectly fine (and encouraged) to collborate on work.
      Working in a group is a rewarding experience, and definitely a necessary skill in any professional career.
      The collaboration can include drawing diagrams and perhaps solving the problem on a whiteboard.
      However, you should avoid writing the solution in your notes.
      It is very useful to rethink the problem and go through the details and logic when you solve it again on your own.
    We expect that:
    You can monitor each other and enforce these rules among yourselves. Making sure that others follow these guidelines will help to ensure that they don't pass off your work as their own.
      Your work honestly represents your efforts. The entire purpose of obtaining an education is so that you can accumulate a body of skills and experience that will help you later on. If you do not perform the work yourself, then you have cheated yourself out of the education. Employers in our field can (and do) screen applicants for skills and knowledge. You will perform poorly (and discredit UCI) if you do not practice now by doing your own work.
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/LogicOverview.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\LogicOverview.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\LogicOverview.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/s15-6D/ClassNotes/16_CountingSubsets.html
##-----------------TITLE------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\16_CountingSubsets.cp3
##------------------TEXT------------------------##
C:\Users\sandyirani\Desktop\ICS 6D\16_CountingSubsets.cp3
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/f14-6D/schedule.html
##-----------------TITLE------------------------##
ICS 6D, Fall  2014
##------------------TEXT------------------------##
ICS 6D
Discrete Mathematica for Computer Science Fall  2014





Course schedule, reading assignments, homework and quizzes:
All reading assignments refer to the Discrete Math zyBook


Week

Dates

Quizes

Homework

Topics

Reading

BoardNotes

Week 1

Oct 6-10

No quiz

HW1: 
due Wed, Oct 15
HW1 Solutions

Logic
Sets
Functions

Mon: 1.1-1.5
Wed: 2.1-2.3
Fri: 3.1 and 3.4

Mon
Wed
Fri
Week 2

Oct 13-17

No quiz

HW2: 
due Wed, Oct 22
HW2 Solutions

Induction
Recursion

Mon: 7.1
Wed: 7.2
Fri: 7.3
Mon
Wed
Fri
Week 3

Oct 20-24

Quiz 1
covering:
HW 1
Monday Oct 20

HW3: 
due Wed, Oct 29
HW3 Solutions

Induction, cont.
Modular arithmetic
Prime numbers

Mon: 7.4
Wed: 8.1
Fri: 8.2
Mon
Wed
Fri
Week 4

Oct 27-31

Quiz 2
covering:
HW 2
Monday Oct 27
Quiz 2 Solution

HW4: 
due Wed, Nov 5
HW4 Solutions

GDC/Euclid's Algorithm
Number representation
Cryptography/RSA

Mon: 8.3
Wed: 8.4
Fri: 8.5, 8.6

Mon
Wed
Fri
Week 5

Nov 3-7

Quiz 3
covering:
HW 3
Monday Nov 3

HW5: 
due Wed, Nov 12
HW5 Solutions

Sum and Product Rules
Combinations
Permutations

Mon: 9.1, 9.2
Wed: 9.3
Fri: 9.4
Mon
Wed
Fri
Week 6

Nov 10-14

Quiz 4
covering:
HW 4
Monday Nov 10

HW6: 
due Wed, Nov 19
HW6 Solutions

Inclusion/Exclusion
Binomial coefficients
Pigeonhole principle

Mon: 10.2
Wed: 9.6
Fri: 10.1
Mon
Wed
Fri
Week 7

Nov 17-21

Quiz 5
covering:
HW 5
Monday Nov 17

HW7: 
due Wed, Nov 26
HW7 Solutions

Subsets with repetitions
Generalized permutations
Counting overview 
Recurrence relations

Mon: 9.7
Wed: 9.5
Fri: 10.3
Mon
Wed
Fri
Week 8

Nov 24-28

Quiz 6
covering:
HW 6
Monday Nov 24

HW8: 
due Wed, Dec  3
HW8 Solutions

Generating functions.

Mon: 10.4
Wed: no reading
Fri: holiday
Mon
Wed
Week 9

Dec 1-5

Quiz 7
covering:
HW 7
Monday, Dec 1

HW9: 
due Wed, Dec  10
HW9 Solutions

Events and probabilities
Conditional probability
Random variables

Mon: 11.1, 11.2
Wed: 11.3
Fri: 11.5, 11.6
Mon
Wed
Fri
Week 10

Dec 8-12

Quiz 8
covering:
HW 8
Monday, Dec 8

-

Random variables
Expectations

Mon: - 
Wed: review
Fri: review
Mon
Wed
Fri
Finals Week

Dec 8-12

Final Exam
Mon, Dec 15
4:00PM-6:00PM

-

-

-
-
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/f14-6D/options.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Home - Schedule



Course Info




Where to go with
questions




Slides from
first lecture
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/w15-us3/ArticleSummary.html
##-----------------TITLE------------------------##
US 3, Winter 2015
##------------------TEXT------------------------##
University Studues 3 
Quantum Computing
Winter 2015 Article Summary Assignment 

 Article Selection Due: Monday, March 2 (written on problem set) 

 Article Summary Due: Monday, March 9 


For this assignment, you will read an article related to quantum computing and write a one page summary.

The following list has some suggestions, but you are also welcome to find your own. You can also use any of the articles
assigned as reading for this class.
Quest for Quantum Computers Heats Up, Scientific American, Dec 2014 Why now is the right time to study quantum computing, by Aram Harrow 
Quantum Computing with Molecules,  by Neil Gershenfeld and Isaac L. Chuang
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/w15-us3/quant.html
##-----------------TITLE------------------------##
Freshman Seminar, Winter 2015
##------------------TEXT------------------------##
University Studies 3  Winter 2015   Quantum Computation

 Instructor:
Prof. Sandy Irani 
Bren Hall 4042 
 irani@ics.uci.edu 
 Class Home Page

http://www.ics.uci.edu/~irani/w15-us3/quant.html
.



Meeting Place and Time
Bren Hall 1423, Monay 1:00PM-:50PM
Requirements and grading
There will be two assignments for this course. The first is a problem set on the elementary principles
of quantum computation. Collaboration on the problem set is encouraged, but you need to list who you
worked with on the problems. The second assignment of an article relation quantum computation from
the web or a magazine.
Each assignment will count 15% towards your grade. The remaining 70% is based on participation and attendance.
You must attend at least 7 out of the 8 classes to receive full credit for  participation.

Topics and readings:


Dates

Topic

Homework
Assignment

Reading
Assignment

Notes

Jan 5

Introduction

-

-

-

Jan 12

Quantum Computation Basics: 
Qubits and Measurement

-


Quantum Computers Animated Video 

by John Preskill and Spiros  Michalakis

The Quantum Computer  
an Introduction by Jacob West

One Qubit

Jan 28
DBH 3013

Quantum Computation Basics: 
Gates and Circuits
Entanglement

-


Rules for a Complex Quantum World 
by Michael A Nielsen 
Scientific American, Nov 2002 v.287, i.5 1nov02

Two Qubits

Feb 4 or 6
DBH 3013

Quantum Teleportation

-


Physicists Teleport Quantum Bits Over Long Distance  
By John Roach
for National Geographic News 

Beam Me Up Scotty? 
A Q&A about Quantum Teleportation with H. Jeff Kimble
  

Quantum Teleportation

Feb  9

Factoring

Problem Set


"Shor, I'll Do It"  
Enrty from Shtetl-Optimized 
the blog of Scott Aaronson

-

Feb  23

Quantum Cryptography

Article Summary


Quantum Cryptograph: 
Privacy Through Uncertainty
 
by Salvatore Vittorio 

Election fix?  Switzerland Tests Quantum Cryptography  
by Larry Greenemeier, Scientific American, October 19, 2007


-

March 2

Limits of Quantum Computation

Problem Set due
Article selection due


The Limits of Quantum Computers
 
by Scott Aaronson
Scientific American, February 18, 2008

-

Mar 9

Quantum Computation in the Real World?

Article summary due


The Revolutionary Quantum Computer That May Not Be Quantum at All 
(Wired Magazine, May 20, 2014)

TED Talk: Quantum Computing Update 


-
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/f13-6N/schedule.html
##-----------------TITLE------------------------##
ICS 6N, Fall  2013
##------------------TEXT------------------------##
ICS 6N
Computational Linear Algebra Fall  2013





Course schedule, labs, reading assignments, homework and quizes:
All reading assignments and homework problems refer to the class text:
 Linear Algebra and its Applications, 4th. edition., by
David Lay.


Week

Dates

Labs

Quizes

Homework

Topics

Reading

Board
Notes

Week 1

Sept 30-Oct 4

-

-

-

Linear equations
and vectors

Sections 1.1-1.4

Sept 27
Sept 30
Oct 2
Oct 4

Week 2

Oct 7-11

-

-

Sec 1.1: 7, 14, 18, 20, 25
Sec 1.2: 10, 12, 16, 20, 24, 26
Sec 1.3: 12, 18, 22, 23, 24, 26
Sec 1.4: 1, 10, 12, 13, 24, 26, 32
Due Oct 9

Linear system solutions
Linear transforms

Sections 1.5 and 1.7-1.9
Oct 7
Oct 9
Oct 11

Week 3

Oct 14-Oct 18

Lab 1 due
Wed, Oct 16
Intro to Matlab

Fri Oct 18
Quiz 1 on
Sec 1.1-1.4

Sec 1.5: 6, 11, 16, 18, 24, 29, 30
Sec 1.7: 2, 10, 18, 20, 27, 28, 36
Sec 1.8: 8, 10, 16, 20, 24, 31
Sec 1.9: 4, 10, 18, 27, 35, 36
Due Oct 16

Matrices

Sections 2.1-2.2
Oct 14
Oct 16
Oct 18
Week 4

Oct 21-Oct 25

-

Fri Oct 25
Quiz 2 on
Sec 1.5-1.9

Sec 2.1: 2, 8, 12, 16, 21, 22
Sec 2.2: 4, 6, 10, 14, 19, 22, 32
Due Oct 23

Vector Spaces

Sections 2.3, 4.1-4.2
Oct 21
Oct 23
Oct 25

Week 5

Oct 28-Nov 1

Lab 2 due
Wed, Oct 30
Linear Equations

Fri Nov 1
Quiz 3 on
Sec 2.1-2.2

Sec 2.3: 4, 8, 18, 22, 34
Sec 4.1: 2, 6, 8, 14, 22, 32
Sec 4.2: 6, 18, 22, 24, 30, 32
Due Oct 30

Vector Spaces

Sections 4.3-4.5
Oct 28
Oct 30
Nov 1
Week 6

Nov 4-8

-

Fri Nov 8
Quiz 4 on
Sec 2.3, 4.1-4.2

Sec 4.3: 4, 8, 14, 16, 20, 24
Sec 4.4: 4, 8, 10
Sec 4.5: 6, 10, 14, 16, 20bde
Due Nov 6

Vector Spaces

Sections 4.6, 3.1-3.2
Nov 4
Nov 6
Nov 08

Week 7

Nov 11-15
No class Mon Nov 11

Lab 3 due
Wed, Nov 13
Matrix algebra

Fri Nov 15
Quiz 5 on
Sec 4.3-4.5

Sec 4.6: 2, 6, 8, 14, 20, 22
Sec 3.1: 4, 10, 20, 22, 24, 38
Sec 3.2: 6, 18, 22, 24, 31, 32, 40
Due Nov 13

Determinants

Sections 5.1-5.2
Nov 13
Sec 5.2
Week 8

Nov 18-22

-

Fri Nov 22
Quiz 6 on
Sec 4.6, 3.1-3.3

Sec 5.1: 6, 12, 16, 18, 24, 25
Sec 5.2: 6, 8, 12, 16, 24
Due Nov 20

Eigenvectrs
Eigenvalues

Sections 5.3, 6.1 and 6.2
Sec 5.3
Nov 18
Nov 20
Nov 22

Week 9

Nov 25-27
No class Fri Nov 29

-

-

Sec 5.3: 4, 6, 10, 16
Sec 6.1: 10, 14, 27, 28, 30
Sec 6.2: 10, 12, 14, 18, 20
Due Nov 27

Orthogonality
Orthogonal projectsions
Least-squares

Sections 6.3-6.5
Nov 25
Nov 27
Week 10

Dec 2-6

Lab 4 due
Wed, Dec 4
Eigenvalues

Mon Dec 2
Quiz 7 on
Sec 5.1-5.2
-
Fri Dec 6
Quiz 8 on
Sec 5.3, 6.1 and 6.2

Sec 6.3: 4, 8, 12, 14
Sec 6.4: 4, 10
Sec 6.5: 4, 6, 8, 10
Due Dec 4

Diagonalizaton
Symmetric Matrices

Sections 7.1
Dec 2
Dec 4
Overview
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/f13-6N/options.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Home - Schedule



Course Info



Lab assignments


 Lab 1

 Lab 2

 Lab 3

Lab 4
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/w15-6B/courseinfo.html
##-----------------TITLE------------------------##
ICS 6D Fall 2014
##------------------TEXT------------------------##
Syllabus



Course Information
ICS 6B Boolean Algebra and Logic
Winter 2015


Course staff and office hours


  Instructor 

Prof. Sandy Irani 
Office: DBH 4042 
Office Hours: Tues 2:00PM-2:50PM, Friday 10:00AM=10:50AM
Email:  irani@ics.uci.edu 

  Teaching Assistants 

Zachary Destefano
Office: DBH 4059
 
Office Hours: Tues 1:00-2:00PM
Email:  zdestefa@uci.edu   

 
Mengfan Tang
Office: DBH 3211
 
Office Hours: Tues 3-4:00PM
Email:  mengfant@uci.edu   



  Readers 


Xikui Wang
Office: DBH 2069
 
Office Hours: Thurs 2-3:00PM
Email:  xikuiw@uci.edu    

 
Primal Pappachan
Office: DBH 2061
 
Office Hours: Mon 3-4:00PM
Email:  primal@uci.edu    

 
 Prolok Sundaresan 
 Office: TBA
  
 Office Hours: Wed 10:30AM-11:30AM
Email:  sundarep@uci.edu 






Meeting Places and Times

Lecture will be held MWF 2:00-2:50 in  BS3 1200.
You are responsible for anything said in class, including
class announcements. If you have to miss lecture for any
reason, please ask one of your classmates to fill you
in on what you missed.


There are four discussion sections for this class. Each section meets two hours per
week. This is an important time to get questions answered about homework
problems. No new content will be given in discussion and we do not take attendance, but you are highly encouraged to
attend as it will give valuable practice on problems.





Piazza

We will use an online question and answer service called Piazza.
You will all have an account.
The link to the to the course page on Piazza is:

https://piazza.com/university_of_california_irvine/winter2015/ics6b/home.
If you have a question about course content, you can go to see if it
has already been asked by another students.
If not, you can post the question yourself.
The course staff will be checking Piazza several times a day
to update answers to questions posted there.
There is also a way for students to collectively edit a response
to a question and for instructors to indicate whether the answer
is a good/correct answer.


Piazza is also a good place to post general
adnministrative questions about the class.
If you send me an email with a technical question about the class,
I am likely to refer you to Piazza.


Important class announcements will also be posted on Piazza. You are responsible
for checking for course announcements at least twice a week.
Only time ciritical announcements will generate an email.


Before posting a question on Piazza, you should look through the course
materials or previous Piazza posts
to see if you can find the answer to your question.
If your question is about the technical content of the course,
check the text. If you have an administrative question, check the
course web page (either the home page with the schedule or this course information page).


Piazza provides a way for you to
post anonymously. However, your posts will only be anonymous to other students.
The instructors will be able to see the name and uciNetID of any individual
who posts to Piazza.


 Obtaining assistance


Tbe best way to get your questions answered is by coming
to lecture, office hours or discussion and asking them there.
In particular, office hours and discussion are  the best place to ask questions that
require a longer answer or some diaglog to get resolved.



The table below shows where to go to for different kinds
of questions. Please try to follow the directions there.
 I really do want to be available for significant problems or issues that may arise.
 I also really enjoy meeting students in my office hours.
 However, with a class this size, the  amount of email generated from
 smaller, routine questions can be overwhelming, so I would like you
 to try and find that answer through other sources first.



Question type

Example

Where to go


Questions about course content

What's the difference between (x,y) and {x,y}?

Try and find the answer to your question through the course materials.
If your question is not answered, then 
Post on Piazza

General administrative questions

What topics does quiz 1 cover?

Check the course web page (schedule and course information) first.
If your question is not answered, then 
Post on Piazza

Questions on how your quiz was graded.

I don't understand why I didn't get full credit on the first question.

Office hours of the TA who graded that quiz
(TAs will post on Piazza who graded which quiz.
Office hours are listed here.)

Questions on how your homework was graded.

I don't understand why I didn't get full credit on the first question.

Office hours of the reader who graded that quiz
(Readers will post on Piazza who graded which homework.
Office hours are listed here.)

Minor bug in the text.

Shouldn't the last line of this animation be x2 instead of x1?

Use the feedback button in the text.

Technical problem you are having with the text.

Why doesn't the text show 100% progress for Section 1.2? 
I think I did all the activities in the section.

support@zyBooks.com

Major issue reading the text.

None of the mathematical formulas are showing up in Section 1.4.

support@zyBooks.com
and cc irani@ics.uci.edu

Mistake in HW or HW solutions.

I think the answer to question 3 on HW 2 should be 56 and not 57.

irani@ics.uci.edu




Grading

The grading criteria for the course is:

Homework 5%
Reading Assignments 4%
Quizzes 60%
Final 30%
Completing the Course Evaluation 1%


I am frequently asked whether I curve the grades. The answer to this question will
always be "I don't know".
First of all, no letter grades are assigned to scores until I calculate a final course
percentage for each student. I generally do aim to have the A's fall in the 90-100 range
and the B's in the 80-90 range, etc. Sometimes I am a bit more generous that that, depending
on the distribution of scores. Occasionally I give a quiz or final that is harder than I
expect. In those circumstances, I will sometimes make a problem count as extra credit.
The best strategy for success is not to think too much about your grade but to continually
do your best to understand the material in the class.








Quizzes



A quiz will be given  every week, starting in week 3.
Quizzes will typically be given on Monday.
However, there are two Monday holidays this quarter. In those weeks, the quiz will be given on
Wednesday instead.
The quizzes will be given at the end of lecture and will last approximately 20
minutes. In calculating your grade, I use only the top  six  scores from the eight quizzes.
In exchnage for this, I give absolutely no make up quizzes, regardless of the reason.
It is understandable that there are sometimes circumstances beyond your control that
make it necessary to miss a quiz. The dropped quizzes are designed to cover
such occasions.

The topics covered in each quiz are tied to a particular homework. For example, quiz 1 will
cover the topics covered in  homework 1. Each homework will indicate which sections in  the book
are covered  by that homework. The topics covered on the homework are a good guide to the topics
that will be covered on the quiz. However, the problems on the quizzes will not exactly match a question
on the homework. In particular, I will also draw on examples covered in class to use for the quizzes.


I generally do not post the solutions to quizzes online. You are expected to get clarification on
quiz solutions by attending discussion or office hours and asking questions.
Towards the end of the quarter, I will post the quizzes (without solutions) so that you can use them
to study for the final exam.


Some of the quzzes will be multiple choice and some will be written short answer.
I will not announce the format in advance. You just need to be prepared to take
a quiz on the topics covered.


The only thing you need to have for quizzes and the final exam is a pen or pencil for writing.
All scantron forms and/or paper will be provided.
No electronic devices (inclusing calculators) are allowed in quizzes or exams.
There should be no visible screens during a quiz or exam.
Laptops should be closed and tablets should be in a closed folder or stowed in a bag.
Phones should be stowed in a bag or pocket so that they are not visible at all.


Homework



Homework is due every Wednesday, starting in week 2.
There will be a dropbox labeled "ICS 6B" on the third floor of Bren Hall
3013 where you should drop it off. You must hand it in before the start of lecture because one of the
readers will pick it up during lecture. Absolutely no late homework assignments will be accepted.



You will notice that the homework counts very little towards your grade.
It is important to do the homework because it enables you to learn the material but a missed
homework will not have a big effect on your grade.



Grades for the assignements and quizzes will be posted through EEE.
If you have questions regarding grading, please see the reader or TA who graded that assignment.
The readers and TAs will be posting on Piazza when quiz grades and homework scores are ready so you will
know who graded which assignments.


I will post solutions to the homework so that you can use them to study for the quiz.





Text


This quarter you will be using a web-based interactive, animated offering as your "textbook".
You are required to have an account for the course. The material
includes interactive
exercises which will count towards your grade.
The directions for subscribing can be found at:
 Go to https://zybooks.zyante.com/#/zybooks.
Bookmark this site - this is your site for the entire quarter.
You will need a
credit card or Paypal account to pay the subscription price of $40.
Note: a Paypal account is not required.
If you don't have a credit card or a Paypal account, contact 
support@zyBooks.com.
Contact 
support@zyBooks.com for help or with any questions regarding obtaining a subscription.


Your reading for this class is associated with your subscription for the winter offering of
ICS 6B, so  you will need a new subscription even if you have had a previous subscription
to the Discrete Math zyBook for some other class.
However, if your subscription to the Discrete Math zyBook occurred in the last year (or currently
for another class), you can
contact support@zybooks.com to get a discount code which will allow you to get your subscription
at a 50% rate. You will need to provide the zyBook code for the previous subscription and for
this class. The zyBook code for this class is UCIICS6BWinter2015.


If you drop the class in the first two weeks, you can contact support@zyBooks.com to get
a full refund for the text.





Credit for reading

Each reading assignment is due at 2PM the day it is assigned.
Every action through your zyBook is automatically timestamped.
When I compile grades for reading, I determine how much
of your  reading was completed by a particular day and time,
so the deadlines are automatically enforced.


You can determine how much of the reading has been completed
by looking at your zyBook dashboard.
Please familiarize yourself with this interface and make sure
that you have 100% completion by 2PM for the sections assigned each
lecture day.


I do make an exception to the due dates for the first two weeks of classes
while course enrollment is fluctuating. The reading assignments for the first two
weeks are all due by 2PM on Monday January 19. However, I strongly advise you
to do the reading assigned before each lecture since the lectures are
designed for students who already have some familiarity with the
topics in the reading.


Board notes

After lecture, I will post the board notes generated during lecture.
The purpose of posting the notes is to the reduce the amount of
note taking you need to be doing in class. The best way to learn this material
is to attend class and concentrate on what is being said.
Having the board notes provided means that you can spend more time
thinking about the content of the lectures and less time copying down
what is being written.


The board notes are not intended to be a perfectly readable
transcript for everyting that took place in class.
You will still  have to take some additional notes
based on the discussion in class.
The board notes are definitely not a substitute for attending class.
They merely serve to reduce the amount of writing you need to
do while you are in class.
If you are sitting in lecture and you can not read something I have
written, please raise your hand and ask for clarification.


If you are unable to attend class for some reason, you should not
expect the board notes to be sufficient to decipher the material I covered.
You need to contact a fellow classmate to get his or her
notes and possibly follow up in discussion with questions.





Missed  Final Exam Policy
The final exam will be held on Friday March 20, 1:30PM-3:30PM.
 If you miss the final exam and do not have a valid reason, you will receive
a score of 0 on the exam.
 The following policy applies if you miss the final exam for a valid reason.

There are only two classes of valid reasons for missing the final exam:
  An unforeseeable emergency, such as a medical emergency.
In such cases I will ask for documentation.
 An absence from an exam due to a foreseeable circumstance
that I have approved in advance.


A work conflict or a family vacation is NOT a valid reason for missing the final exam.
 If you wait until after the exam to get a foreseeable excuse approved,
and it is not approved,
you will receive a grade of zero (0) on the exam.
 If I accept your reason for missing the final exam, at my option I may
either (1) give you a makeup exam or (2) assign your grade on the basis
of the remaining course work that you did not miss.
 If I give a makeup exam, I may give it less weight
than announced on the course web page.



  Academic Honesty
    The Bren School of ICS and the University have already established an academic honesty policy. Read it.
    Violators of academic honesty policies are subject to the penalties described in the Bren School of ICS policy. They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade. Also be aware that a single documented case of academic dishonesty may preclude you from switching into computing majors, registering for computing minors, joining the ICS Honors Program, and graduating from a computing major with honors.
    Guidelines to avoid plagarism:
    Do not look at another person's homework.
      Instead you should prefer to discuss the problem in plain English.
      This helps you to communicate clearly, practice technical jargon as it applies to your problem, and to identify how your solution exhibits behavior different from what you expect.
      Do not write down the solution in your notes.
      It is perfectly fine (and encouraged) to collborate on work.
      Working in a group is a rewarding experience, and definitely a necessary skill in any professional career.
      The collaboration can include drawing diagrams and perhaps solving the problem on a whiteboard.
      However, you should avoid writing the solution in your notes.
      It is very useful to rethink the problem and go through the details and logic when you solve it again on your own.
    We expect that:
    You can monitor each other and enforce these rules among yourselves. Making sure that others follow these guidelines will help to ensure that they don't pass off your work as their own.
      Your work honestly represents your efforts. The entire purpose of obtaining an education is so that you can accumulate a body of skills and experience that will help you later on. If you do not perform the work yourself, then you have cheated yourself out of the education. Employers in our field can (and do) screen applicants for skills and knowledge. You will perform poorly (and discredit UCI) if you do not practice now by doing your own work.
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/w10_23/Lab4.html
##-----------------TITLE------------------------##
ICS 23 / CSE 23 - Project #4: Lord of the Ringbinders
##------------------TEXT------------------------##
ICS 23 / CSE 23 - Project #4: Lord of the Ringbinders





Due date and time: Friday, February 26, 6:59pm









Three Rings for the Elven-kings under the sky, 
Seven for the Dwarf-lords in their halls of stone, 
Nine for Mortal Men doomed to die, 
One for the Dark Lord on his dark throne 
In the Land of Mordor where the Shadows lie. 
One Ring to rule them all, One Ring to find them, 
One Ring to bring them all and in the darkness bind them 
In the Land of Mordor where the Shadows lie.


- from J.R.R. Tolkien, The Lord of the Rings








Introduction

Consider a major Web site, such as Amazon.com.  At any given time,
they're storing a tremendous amount of information, e.g., book
inventory, and making it available via the Web.  Further, the
information is fairly fluid; every minute, many thousands of requests
pour in, each causing information to be accessed, changed, added, or
deleted.

Companies like these store their information in databases.  A
database is a collection of data, which can be visualized as
a table consisting of
rows and columns.
Each row corresponds to a data record and reach column
corresponds to an attribute that the data can have.
For example, in a database of books, each data record (row)
would correspond to an individual book, and each attribute (column)
would correspond to an attribute that a book can have, such as its
author, title, or ISBN number.
In the case of books, the ISBN is a unique attribute, which is
different for each book.
In particular, each ISBN number contains a prefix that identifies the
originating country and publisher, and additional digits that
uniquely identify the book.
Thus, one could enumerate all books for a certain country or
publisher just by reporting all the data records (rows) in a book
database that have ISBN numbers with a certain prefix.







Tables, rows, and columns

For the purposes of this project, our database
is a collection of records, each of which corresponds to a book.
Each book record consists of five attributes, as shown below:


ISBN Number (key)Author(s)TitlePublisherYear0471128457Schneier, BruceApplied CryptographyJohn Wiley & Sons19960471469831Goodrich, M., and Tamassia, R.Data Structures and Algorithms in JavaJohn Wiley & Sons20040618517650Tolkien, J.R.R.The Lord of the RingsGeorge Allen & Unwin1954


Importantly, one of the attributes (i.e., a column)
contains a key value, which
is used to uniquely identify the record.
No two records will
ever have the same key.







The program

Your program for this project is not intended to be
anywhere near a production-quality database management system (DBMS).
Many of the ideas that I've
introduced above are simply to provide you enough background to
understand the larger context into which your work fits.  Your program
will be a prototype of a very simple database system, capable of
storing book data, searching that data by keys,
updating that data, and removing it.
For simplicity, all of the data
will be character strings.


Your program will read a sequence of commands from the console
(presumably using a BufferedReader wrapped around an InputStreamReader
wrapped around System.in) and print output to System.out as directed by
the specification below.  Your program should not print out any
prompts such as "Please enter your next command."  It should simply
read commands blindly typed into the console, process them, and produce
output.  Many of the commands, in fact, will produce no output.  The
reason for this design decision is two-fold.  Firstly, this is intended
to be a prototype, meaning that it's not intended to be used by anyone
who is not familiar with the details of the project, so the user
interface need not be all that friendly.  Secondly, directly reading
commands from the console allows us to redirect input from a file into
the program, then redirect output into another file, for ease of
automated testing.  (I'll talk more about this aspect of the project
later in the write-up.)







The commands

Your program needs to support the following commands:

Command
      INSERT - Inserts a new book record into your database,
      with the given ISBN key and the required data values.
      

      INSERT ISBNKey author="authorName" title="bookTitle" publisher="publisherName" year=yearValue 
      
      where all of the fields are character strings, even the ones
      not in quotes (quotes cannot be used inside names or titles)
      Examples:
      INSERT 0471469831 author="Goodrich, M., and Tamassia, R." title="Data Structures and Algorithms in Java" publisher="John Wiley & Sons" year=2004
        INSERT 0618517650 author="Tolkien, J.R.R." title="The Lord of the Rings" publisher="George Allen & Unwin" year=1954
      
      This command should generate no output.
      The value placed into the ISBN key attribute must be unique in the database (i.e. no book may already exist with that value for is
      ISBN key).
      

    
      LOOKUP - Retrieves all the books in the database having
      a specified prefix in their ISBN keys, ordered by ISBN keys.
      LOOKUP ISBNPrefix 
      Examples:
      LOOKUP 0471Looks up and prints the attributes of all books whose ISBN
	key has the prefix 0471 (which corresponds to the publisher
	John Wiley & Sons).
      The above command should generate output that looks like this:
      

0471128457 author="Schneier, Bruce" title="Applied Cryptography" publisher="John Wiley & Sons" year=1996
0471469831 author="Goodrich, M., and Tamassia, R." title="Data Structures and Algorithms in Java" publisher="John Wiley & Sons" year=2004

        LOOKUP 0618517650Looks up and prints the attributes of all books whose ISBN
	key has the prefix 0618517650 (which corresponds to the one Tolkien
	book).
	
      The above command should generate output that looks like this:

0618517650 author="Tolkien, J.R.R." title="The Lord of the Rings" publisher="George Allen & Unwin" year=1954

      
    
      This command should print all the retrieved
      book records as space-delimited
      lists of key-value pairs, ordered by their ISBN keys.
      
    
      DELETE - Removes a book record with a particular key.
      DELETE ISBNKey
      Examples:
      DELETE 0471128457
	Deletes the book record with ISBNKey
        equal to 0471128457, that is, the "Applied Cryptography" book.
      
      This command should generate no output, unless the desired
      record is not present (in which case the output should simply
      be ERROR.
    
      EXIT - Exits the program.
      EXIT
      This command should generate no output, and should end the program immediately.
    









Starting point


You're required to write the code for this project from scratch.
No code is provided. You should name the class that contains the main method  BookDatabase.java .









Handling erroneous commands

Since your program is intended to be a rudimentary prototype, it
need not report specific error messages to indicate specific problems.
Instead, any command that is not understood or does not follow the
rules above should cause your program to simply print the word "ERROR"
by itself on a line.








Implementing the Database

You can think of our database as
a data structure that is commonly called a map.
A map is a set of key/value pairs,
where each key uniquely identifies a particular value.  In our case, we
can conceptually think of each record in the table as a key/value pair,
where the key is the string value of the ISBN key for that record, and the
value is the set of values for the remaining attributes.

Since our database may contain a very large collection of
book records, it will be necessary for us to build an efficient implementation,
which will provide fast insertions, lookups, and deletions.
For this project, you must implement the database as a
random skip list, ordered by ISBN keys.
Because it is fundamentally necessary to have your skip list working before
you can build any of the other pieces, you should write and test this
part of your project before moving on to the rest.








Redirection of input and output

Recall that you can execute a Java program from the command line by using the java command, like this:


java MyProgram


where MyProgram is the name of the class that contains a main( ) method.  Ordinarily, a Java program reads its "standard" input from the console, and writes its "standard" output to the console.  In other words, when you use the System.out.println( ) method, the output goes to the console.

Most operating systems -- Windows, Unix, and Linux, for example -- allow you to redirect the standard input and output when you execute a program.  The contents of an existing file may be redirected into the standard input, meaning that, rather than allowing the user to type input into the console, the program proceeds as though the user has typed the next line of the file each time the program requires input.  Similarly, the standard output can be redirected into a file, meaning that all of the output to System.out will be stored in a file, rather than displayed on the console.

The typical mechanism for redirection is to use the < and > operator on the command line, like this:


java MyProgram <my-input.txt >my-output.txt


Using the command above, every time the program needs input, it will read it from the file my-input.txt.  Every time it writes output, it will write it to the file my-output.txt.  It is possible to redirect the standard input without redirecting the standard output, and vice versa.  Note that the operating system deals with the <my-input.txt and >my-output.txt arguments itself before executing the program, so these will not end up in the array of Strings passed to the main( ) method.  In fact, the Java program will not even be aware of the redirection!  As far as the program is concerned, it's reading input from the console and writing output to the console.  The operating system handles the redirection transparently.

This powerful and simple technique will allow you to write test input and reuse it many times while testing this program, so that you can test your database with large sets of data.







Deliverables

You must turn in all of the .java files.
Please do not include any .class files or other files
generated by your development environment.
You should name the class that contains the main method  BookDatabase.java .


Follow this link for an explanation of how to turn in your project.







Limitations and advice

You may not use the predefined Java "collection" classes, such as java.util.TreeMap, in your solution.  (The "collection" classes are the ones that store a collection of data, and include such classes as ArrayList, LinkedList, HashMap, Vector, Hashtable, and TreeMap.)

I can't stress enough the need to start early.  The previous two projects involved a lot of conceptual thinking, but not very much coding.  This project, on the other hand, will require you to write more code.  It's actually not as big as you may believe, but I would allocate plenty of time to work on it, so that you can get your questions answered early on, and still have plenty of time to write the code.







Some additional explanation added and minor rewrites by Alex Thornton, Summer 2004.Addition of the Command pattern and provided CommandParser class, along with some new explanations in the write-up, by Alex Thornton, Summer 2003.User interface requirements adjusted and some provided source code modified by Alex Thornton, Spring 2003.Originally written by Alex Thornton, Fall 2002.
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/w10_23/Lab2/BlackAndWhite.htm
##-----------------TITLE------------------------##
ICS 23 / CSE 23 Winter 2010, Project #2: Black and White
##------------------TEXT------------------------##
ICS 23 / CSE 23 Winter 2010
   Project #2: Black and White





Due date and time: Friday, January 29, 6:59pm







Introduction

Othello is a well-known two-player strategy game.  For this project, you will develop portions of an intelligent program that plays Othello.  We've provided you with a user interface and the game logic (code that implements the rules of the game).  You will write the search and strategy routines that will allow your program to play the game against a human opponent.







The game of Othello

Othello — also known as Reversi — is a strategy game played on a square board divided into an 8x8 grid.  The rules of the game, along with some notion of strategy, are described in the Wikipedia entry on Reversi; if you haven't played Othello before, or don't remember how it works, you should at least ready the first couple of sections of the Wikipedia entry.

Be sure you know how to play the game before attempting to complete this program; it will save you much time and effort.  As provided, the program will already play a game of Othello with two human players, but it will not allow you to play against a computer player until you create your AI class and write the necessary code in the OthelloAIFactory class (which is described later in the write-up).







Starting point

All of the code that you'll need to complete the project is included in this Zip archive.  Much of the code is provided in compiled (i.e., .class) form.  The provided .java files are heavily commented.

You'll only need to work on two classes.  First, you need to create a new class that implements the OthelloAI interface.  Your class needs to be named in a certain way; specifically, the name of the class needs to begin with OthelloAI, followed by your eight-digit student ID#.  So, if your student ID# is 12345678, your class should be called OthelloAI12345678.  This is important!

Once you've created your AI class, you'll also need to write one line of code in the OthelloAIFactory class.  The comments in that class will explain what you need to do and why.

Everything else is to be left as-is.







How to run the program

The Othello class contains a main( ) method.  To run the program, execute the Othello class.  The provided GUI is simple and straightforward to use.  When you run Othello, a window will appear with a green area with the label "Click here to start game."  Click the green area and you'll be asked to specify whether each player should be controlled by a human or the computer; for now, specify human for both, as you haven't implemented your AI yet.  Clicking on OK starts the game.

A human-controlled player makes a move by double-clicking an empty square on the grid.  Not all squares constitute valid moves; the mouse cursor will turn into a "hand" when a square is a valid one, much like when you hover over a link in your browser.  (Note that the mouse handling is a tad bit buggy at the moment, so you may have to move the mouse within the square a bit in order for the cursor to change.)  The computer simply moves when it is its turn.  The GUI animates the placing and flipping of tiles, so that you can see the moves "in action."  Status messages display the score and remind you whose move it is.







Some necessary terminology

You will be building a rudimentary artificial intelligence (AI) so that the computer can play a game of Othello against you (or against another instance of your artificial intelligence).  Your task for this project is fairly narrow, so you can disregard the vast majority of the code that we gave you, most of which implements either the GUI or the game logic.  In fact, most of the code has been provided in compiled (i.e., .class) form, rather than as source code, for this very reason.

There are three main abstractions that you need to understand in order to write the code required for this project:

The contents of each grid cell are represented by the enumeration OthelloCell, which has three possible values: OthelloCell.NONE (for an empty cell), OthelloCell.BLACK (for a cell containing a black tile), and OthelloCell.WHITE (for a cell containing a white tile).  The locations of the grid cells are denoted by ordered pairs (r, c), where r is the row and c is the column.  As is the custom with two-dimensional arrays in Java, the row numbers and column numbers begin at 0, so the range of possible locations is (0, 0) through (7, 7).As your AI analyzes possibilities, it will be necessary for it to evaluate the current game situation.  Collectively, we call the description of the current situation a game state or, more tersely, a state.  A game state is comprised of the contents of each grid cell, the score of the game, a flag indicating whose turn it is, and a flag indicating whether the game has ended.Since it's possible to have two AI's playing against each other, it makes sense to encapsulate the AI into a class, so that two objects of that class could be created and play against one another.  You'll implement your AI in a class that implements the OthelloAI interface, which consists of a method called chooseMove( ) that analyzes all of the possibilities and picks the AI's next move.  Since a move is denoted by the square in which a new tile should be placed, chooseMove( ) returns an object of type OthelloMove, which contains a row number and column number.







Game trees

You can think of the possible game states as being arranged, conceptually, in a kind of search tree called a game tree.  Each node of the tree contains a particular game state g.  Its children are the game states that can result from making each valid move from the state g.

The root of the tree is the initial game state — that is, the Othello game before the first move is made.  The children of this initial state are all of the possible states that can arise from the black player (who moves first) making a valid opening move.  There are four such states, corresponding to the four possible moves that the black player is permitted to make at the opening.  (All other moves are illegal and, as such, are not to be considered.)

Here is a partial look at an Othello game tree:



In the picture, from the initial state, there are four possibilies from which the black player can choose its initial move.  From the first of those, we see that there are three possible moves that the white player can make in response.  Other moves aren't pictured, but the tree continues to grow in this fashion.  (Not surprisingly, the game tree can grow large rather quickly.)

We'll call the leaves in such a game tree the final states.  These leaves indicate the states in which one player or the other has won the game.







Exhaustively searching all possibilities

Each time a player wants to pick a move, he or she wants to pick the one that will lead to a winning game state.  We can determine the best move in three steps:

We apply an evaluation function to each final game state.  An evaluation function typically returns a number, where higher numbers are considered better.  We then identify the final state with the highest value — that is the "end game" that we would like to occur, as it is the best win for us.We determine the path from the current game state to the final state that we chose above.We make the move that takes us from the current game state down the path toward the chosen final state.

Assuming that you had a complete game tree at your disposal, this is a simple approach to implement.  However, practical limitations make this approach impossible.  First of all, the number of game states on each level of the tree grows exponentially as you work your way down the tree, since there are a number of possible moves that can be taken from any particular game state.  There simply won't be enough memory to store the entire game tree.  (You can imagine that, if you build the game tree 20 levels deep, and there are four possible moves that can be made from any particular state, the number of nodes in the tree would be greater than 420, which is a large number!)  Besides, even if there were enough memory available to store the tree, the processing time to create the entire game tree would be prohibitive.

So we'll need to find a compromise — an approach that perhaps doesn't always find the best possible outcome, but that makes a decision in a reasonable amount of time and using a reasonable amount of memory.







Heuristic search

The study of artificial intelligence has much to say about good ways to search toward a goal when it's impractical to check all possible paths toward it.

We can first make use of the following observation: Suppose the top player has made a move in the game, and the bottom player wants to figure out the best move to make, using the search tree approach we've been discussing.  Then the bottom player need only concern himself with the subtree that has the current game state as its root.  Once a move is made, all the other moves that could have been made can be ignored, as it is now not possible to take those paths down the tree.  Thus, when analyzing the next move to make, we need only generate the part of the search tree that originates from the current game state.

This approach reduces our storage needs significantly — and we don't waste time or memory processing parts of the tree that we can no longer reach.

Even if we generate only the part of the tree that we need, that part will still be much too large to store until we're nearing the end of the game.  This is where a heuristic search comes into play.  In a heuristic search, we generate as much of the relevant subtree as is practical, using the resulting game states to guide us in selecting a move that we hope will be the best.

There are several strategies that we could use.  At the heart of the strategy that we'll use is the notion of an evaluation function that we discussed earlier.  We'll need to rate each particular game state in some way, so that we can decide which of a large number of game states is the best outcome for us.  A simple approach — though one that ignores some aspects of the game — is the following:

eval(state) = number of tiles belonging to me − number of tiles belonging to my opponent

It's also important to note here that you do not need to actually build a game tree in memory.  Our algorithm will
perform a sort of depth-first search on the game tree, meaning that we can use parameters in a recursive method (stored on the
run-time stack) to perform the search, negating the need to actually build and store a game tree.  This will dramatically reduce the
amount of memory needed to choose a move, since only one path in the tree will ever need to be stored on the run-time stack at a time.
 Please note that you are required to use recursion in this lab. 


Putting these ideas together, we can develop a search algorithm that will look for the move that leads to the game state that evaluates to the highest value.  That algorithm looks something like this:


int search(OthelloGameState s, int depth)
{
    if (depth == 0)
        return evaluation of s
    else
    {
        if (it's my turn to move)
        {
            for each valid move that I can make from s
            {
                make that move on s yielding a state s'
                search(s', depth - 1)
            }

            return the maximum value returned from recursive search calls
        }
        else
        {
            for each valid move that my opponent can make from s
            {
                make that move on s yielding a state s'
                search(s', depth - 1)
            }

            return the minimum value returned from recursive search calls
        }
    }
}


There are a few things we need to discuss about the algorithm above.  First, notice that there are two cases of recursion: either it is the computer player's turn (who is currently making the decision) or its opponent's turn.  In each case, the algorithm is almost the same, except:

...when it is the computer player's turn, the maximum value is returned.  In other words, the computer player wants to make the best possible move it can....when it is the opponent's turn, the minimum value is returned.  This is because it is assumed that the opponent will also make the move that's in its best interest (which is in our worst interest).

You may not assume that the computer player will always be the black or the white player.  Either the black or the white player (or both!) might be a computer player.  When deciding whether it's "my turn" or "my opponent's turn," you'll have to exercise some caution to ensure that you're making the right decision.

Second, notice the depth parameter.  This will be used to limit the depth of our search, to make sure that our search is of a manageable length.  Each time we recurse one level deeper, the depth is reduced by one, and we stop recursing when it reaches zero.

Thirdly, observe that when one player makes a move, it isn't necessarily the case that the other player will be making the next move; occasionally, in Othello, the same player gets to move twice in a row.  So, care must be taken in deciding whose turn it is.  The easiest way to deal with this problem is to count on the current game state to keep track of this for you; it can always tell you reliably whose turn it is.

Lastly, note that this algorithm returns the evaluation of the best state, not the best state itself.  In short, calling search(s, 4) for some state s asks the following question: "Looking four moves into the future, and assuming I do the best I can do and so does my opponent, how well will the state s turn out for me?"  You'll need to exercise some care in actually implementing this algorithm so that chooseMove( ) will be able to call search( ) and use the result to help it choose the right move.







Evaluation functions

The core of your AI — what will set it apart from others — is the evaluation function that it uses to decide how "good" each board configuration is.  I'm leaving this as an open problem and you're welcome to implement your evaluation function however you'd like.  You might want to poke around the web looking for strategy guides or other information, taking into account, for example, that some squares on the Othello board are considered more important than others.

It's intended to be fun to play against your own program to see if you can beat it, and I also hope you enjoy fine-tuning your program until you have trouble beating it.







A tournament!

After this project's due date has passed, We'll be gathering all of your AIs together and running a tournament to determine
who has the best AI.  In fairness, We'll explain here how the tournament will be organized:

Each AI will play two games against each other AI, one each as black and as white.The primary factor in determining the "best" AI is the total percentage of games won.
  (Draws will count as 1/2 of a win and 1/2 of a loss.)  So, first and foremost, it's important
  to win games.A secondary factor, to be used in the case of a tie, is the total number of tiles accumulated
  in all games.  This means that winning games big, as opposed to squeaking out close wins, is important
  if there's a tie.Your AI will be given 5 seconds of CPU time to choose each of its moves.  (I'll be running the
  tournament on a 2.8 GHz Intel Core 2 Duo.  The fact that it has two processors only means that We'll be running four games at a time.)If your AI takes too long to make a move, returns null, throws an exception, isn't named according to the naming convention, or violates any of the other rules laid out in the project write-up, it will be disqualified from the tournament.

The outcome of the tournament will have no bearing on your grade, but it will hopefully motivate
you to think a bit about how you might tune up your evaluation function — or explore alternative
ways of helping your AI to see farther into the future.  (You are required, fundamentally, to use the
algorithm shown in this write-up, though there are optimizations you can make to it, if you're so inclined.
If you're not sure whether your idea is permissible, ask me and I'd be glad to let you know what I think about it.)

The winner ofthe tournament will receive a $25 iTunes gift card. 
Good luck!







Deliverables

You need only turn in your OthelloAIFactory.java file and the file containing your AI class, along with any additional
classes you created, if any.  You do not need to turn in any of the other files that were provided to you.
Follow this link for an explanation of how to turn in your project.







Originally written by Alex Thornton, Fall 2007, with portions taken from End of the Game by Alex Thornton and Norman Jacobson.
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/w10_23/Lab1/Dark.htm
##-----------------TITLE------------------------##
ICS 23 / CSE 23 - Lab #1: Dark at the End of the Tunnel
##------------------TEXT------------------------##
ICS 23 / CSE 23 -
   Lab #1: Dark at the End of the Tunnel





Due date and time: Friday, January 15, 6:59pm







Introduction

When I was a little kid, I was fascinated by mazes.  Whenever I saw a maze printed on a piece of paper, I had to grab it and try to solve it.  I had soft-covered books full of them.  I even tried drawing my own, though with the undeveloped skills I had at the time -- both in terms of being able to design a challenging maze, and also the more fundamental skill of being able to draw a straight line -- it proved to be a difficult proposition.  As I got older, I discovered that software could do an excellent job of generating a challenging maze, and that it could also rather easily figure out a solution for one, though it wasn't until I was an undergraduate that I understood how.

For this project, you'll write a Java class that generates a two-dimensional maze of arbitrary size, and another Java class that solves one.  This will give you more practice with understanding and using recursion to solve real problems.  It will also provide you with an opportunity to make heavy use of pre-existing classes for which you have no source code; this is perhaps the most valuable real-world programming skill of all.







The program

This program displays a maze and a solution to it.  It is capable of animating the maze generation process, as well as animating the search for a solution.  Here is a screenshot of the GUI:



The maze is displayed on the left side of the GUI.  Along the right side are the options.  You can select either your own maze generator class or the one that I've provided; similarly, you can select either your own maze solver class or mine.  (By providing you with a maze generator and a maze solver, you can test each of your classes separately.)  You can also select the size of the maze before generating it, as well as decide whether you'd like to animate the maze as it's being generated and the solution as the maze is being solved.

Try running the program and using the provided generator and solver to create and solve a maze, including the animation.  That will show you roughly how the program should behave when you've finished your own generator and solver (though my maze generator uses a different algorithm than yours will).







Starting point

All of the code that you'll need to complete this project is included in this Zip archive.  Much of the code is provided in compiled (i.e. .class) form.  The provided .java files are heavily commented.

You'll only need to work on two classes: StudentMazeGenerator and StudentMazeSolver.  Everything else is to be left as-is.







How to run the program

The Dark class contains a main( ) method.  To run the program, execute the Dark class.







Generating a maze

In the StudentMazeGenerator class, you'll implement a maze generation algorithm.  There are lots of ways to generate mazes, but you'll implement one (relatively simple) algorithm in particular.  Our algorithm will generate a perfect maze.  Viewing a maze as a two-dimensional matrix of square cells, a perfect maze is one in which any two cells are connected by a single unique path.  As a consequence of this definition, all cells in a perfect maze are reachable from the starting point by some path, meaning that perfect mazes are guaranteed to have a unique solution.

To generate a perfect maze, you'll use a recursive algorithm that is a variant of depth-first searching.  Recall depth-first tree traversals, in which one path in a tree is followed to completion before another path is followed.  We'll generate a maze in much the same way.  We'll start with a maze in which all of the possible walls exist (i.e. a wall exists on every side of each cell), then continue removing walls until we have a perfect maze.  The algorithm goes like this:

Mark the current cell as "visited."If the current cell has any adjacent cells that have not yet been visited...
    Choose one of the unvisited adjacent cells at random.  Randomness is important here, or your algorithm will always generate the same maze.Remove the wall between the current cell and the cell you just chose.Recursively call the algorithm, with the chosen cell becoming the current cell.
  

As you generate your maze, make sure that you make the appropriate calls to the given MazeGeneratorListener object.  Essentially, any time your maze is altered, you should call a method on the MazeGeneratorListener.  This notifies the GUI that a change has been made, causing the maze to be redrawn each time.  Without making the right calls to the MazeGeneratorListener, the GUI will not animate the maze generating process.

(You may notice when watching the animated version of both your maze generator and the provided one, the provided maze generator uses a very different algorithm from the one I described above.  This is intended.  For fun, I implemented the provided maze generator using a "smarter," but more complicated, maze generating algorithm that generates mazes with more branches and, as a result, more difficult solutions.)







Solving a maze

In the StudentMazeSolver class, you'll implement a maze solving algorithm.  Our algorithm will be a recursive one with backtracking.  A backtracking algorithm is one that recursively investigates all of the possibilities by moving down a path that hopefully leads to a solution and then, if that path fails, backing up to the place where the "mistake" was made and trying another path.

I'll leave the details of this algorithm as an exercise for you to figure out.  If you understand the maze generating algorithm above, it should not be a big step to design the maze solving algorithm.

As with the maze generating process, in addition to solving the maze, your method should make the appropriate calls to the given MazeSolverListener object.  The MazeSolverListener should be notified whenever the solution has changed.  This will allow the GUI to animate the solution.







Deliverables

You need only turn in your StudentMazeGenerator.java and StudentMazeSolver.java files, along with any additional classes you created, if any.  You do not need to turn in any of the other files that were provided to you.  Follow this link for an explanation of how to turn in your project.





Additional Work for Advanced Students

Do some research in maze building; find and implement an algorithm that produces more complicated mazes than the one we had you use here. Submit your new generator (in a file with a different name, of course) along with the required one. Don’t forget to comment your work well and to cite your sources.

Do the same with the solver; that is, use a strategy that produces a correct result but in a faster or more memory-efficient manner than the one provided. Submit your new solver along with the required one. Again,  cite your sources and comment your work well.





Some additional minor rewrites by Alex Thornton, Summer 2004.Incorporated a few phrases written by Norman Jacobson, Spring 2003.Originally written by Alex Thornton, Fall 2002.
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/w10_23/Lab3/LostForWords.htm
##-----------------TITLE------------------------##
ICS 23 / CSE 23 Winter 2010, Project #3: Lost for Words
##------------------TEXT------------------------##
ICS 23 / CSE 23 Winter 2010
   Project #3: Lost for Words





Due date and time: Friday, February 12, 6:59pm







Introduction

Hashing is an amazing technique.  Compared to balanced binary search trees, which can be searched in O(log n) time, hash tables offer the tantalizing "holy grail" of constant-time searching of a large collection of data.  Given this, is seems difficult to imagine why a balanced binary search tree would ever be the right option — why settle for logarithmic search times when you can achieve constant ones?  However, hashing is not a strategy to be employed lightly.  Done well, it can easily outperform most other data structures in terms of search time; done poorly, its performance can degenerate toward that of an unsorted linked list.  (There's another reason, too, why you might prefer a balanced binary search tree: since they impose ordering on their keys, with smaller keys moving left and larger keys moving right, binary search trees can be iterated in ascending or descending order of their keys in linear time.  Hash tables can't, since they impose no meaningful ordering on their keys; you instead have to copy all of the keys out and sort them.)

In this project, you'll build a hash table and see an example of hashing in action, giving you the ability to compare three techniques for hashing short strings.  What you will discover is that the choice of hashing techniques is critical to the performance of a hash table.  As we'll discuss in lecture, there's no general-purpose hashing strategy that will be optimal (or even good, necessarily) in every case: you have to know something about a particular set of data in order to effectively hash it.







An example of hashing in action: a spell checker

Many applications, including word processors, text editors, and email clients, include a spell-checking feature.  A spell checker's job is relatively simple.  Given a list of correctly-spelled words (which we'll call a wordlist) and the input text, the spell checker reports all of the misspellings (i.e., words that are not found in the wordlist) in the input.  When a misspelling is found in the input, a good spell checker will also suggest words appearing in the wordlist that are somewhat like each of the misspelled words.

As an example, suppose that the wordlist contains the following words:


    bake cake main rain vase


If the input file contains the word vake, a good spell checker will state that vake is misspelled, since it does not appear in the wordlist, and will suggest that perhaps bake, cake, or vase was the word that was actually intended, since all three of these words are reasonably similar to the word vake, differing by only one letter each.  (An even smarter spell checker might employ contextual clues to guess the word that is most appropriate in the sentence that surrounds it, but this is beyond the scope of our work here.)

Of course, a spell checker's task is centered around searching for words in a potentially large wordlist.  An efficient search is critical to the performance of the spell checker, since it will be searching the wordlist not only for the words in the input, but possibly hundreds of suggestions that it might like to make for each misspelling.  As you will see, a poor hashing technique can render a spell checker — or any system that requires a large number of insertions and lookups to be performed on a large hash table — effectively useless.







The program

The program you write for this project will be a rudimentary spell checker.  It will read a wordlist from a file, then spell-check an input file.  For each misspelling found in the input file, your program will report it, along with a sorted list of suggestions (if any).

To keep this task relatively simple, I have provided a large portion of the spell checker as either .java files or (in most cases) compiled .class files.  In fact, I will only be requiring you to implement two relatively small parts of it:

An implementation of a hash table that stores strings, using separate chaining (i.e., linked lists) to resolve collisions.A class called WordChecker that checks the spelling of one word and makes an appropriate set of suggestions for a misspelled word.

Of course, it's required that you implement these classes according to the template provided, so that your code will work correctly with ours.  Once you've completed the program, I'd like you to compare the performance of three provided hash functions (and you can implement your own and try them, as well) to get a feel for the dramatic influence that hash functions have on the performance of hash tables.







How is a hash table used in a spell checker?

The most common application of a hash table is as an implementation of an abstract data structure called a map.  Recall from earlier this quarter that a map is a set of associations between keys and values, where the keys uniquely identify the values.  In a previous project, you built a skip list implementation of a map.  A hash table can also be used to implement a map, where the keys are hashed and placed into the table, along with their associated values.

However, hash tables (as well as binary search trees and skip lists) are also a handy way to efficiently implement another abstract data structure called a set.  A set is a collection of unique data items.  (One way to think about it is as a map with keys but no values.)  The simplest use of a set requires three operations:

add(I): Adds an item I to the set.lookup(I): Returns true if the item I is in the set and false otherwise.remove(I): Removes the item I from the set.

In a spell checker, the limiting factor on performance is the implementation of the wordlist.  A wordlist is, abstractly, a set of strings.  The important operations in a spell checker are adding a word to the wordlist (useful for initially building up the wordlist as it's read from an input source) and looking up a word.  A hash table is a natural choice as an implementation for a set with these operations, provided that it's possible to come up with a suitable hash function for the type of data being stored in the set.  (In our case, the data is a set of short strings.  I've provided three hash functions, two of which are (intentionally) poor, and a third that is significantly better than the other two.  I'll discuss that a bit later in the write-up.)







Generating suggestions for misspelled words

There are two popular text-mode spell checkers on Unix/Linux systems.  One is called ispell; the other is a GNU "free software" program called aspell.  They both use similar techniques for generating suggestions for misspelled words.  While checking the spelling of an input file, if a word is not found in the wordlist, five techniques are used to generate possible suggestions.  Each suggestion is looked up in the wordlist; any suggestion found in the wordlist is added to the list of suggestions.  The five techniques used are:

Swapping each adjacent pair of characters in the word.In between each adjacent pair of characters in the word (also before the first character and after the last character), each letter from 'A' through 'Z' is inserted.Deleting each character from the word.Replacing each character in the word with each letter from 'A' through 'Z'.Splitting the word into a pair of words by adding a space in between each adjacent pair of characters in the word.  It should be noted that this will only generate a suggestion if both words in the pair are found in the wordlist.

I'd like your WordChecker class to generate suggestions using these five techniques, as well.  (It should be noted that there are other ways to generate suggestions, including using algorithms that pay attention not only to the letters, but what the letters actually sound like.  One such well-known algorithm is called the Soundex algorithm.  You are not required to implement such algorithms for this project.)







How the program will work when it is completed

The main( ) method for this program appears in a class called SpellCheck.  The program takes a sequence of command-line parameters that configure its behavior.  Documentation about how to use them can be seen by compiling the program and running the following command:


    java SpellCheck


(Note that you won't be able to compile the program as provided, because there are a few methods that are required to return values, but don't have any code in them.)

In brief, the command-line parameters allow you to pick a hashing strategy, specify a wordlist file, turn the program's output off (for timing testing), and specify the input text file.

When the program's output is turned on, it reads the wordlist into a hash table, then begins reading from the input text file one word at a time.  Each word is looked up in the wordlist.  If it is not found, the program writes the entire line of the input file that contained that word, along with an indication of which word was misspelled, and a sorted list of suggestions.  For example, this input file:


    This is a lne of text that has a missspelling in it.


generates the following output using the default wordlist that I provided:


    This is a lne of text that has a missspelling in it.
         word not found: LNE
      perhaps you meant:
              LANE
              LEE
              LIE
              LINE
              LONE
              ONE

    This is a lne of text that has a missspelling in it.
         word not found: MISSSPELLING
      perhaps you meant:
              MISS SPELLING
              MISSPELLING


With this output, you'll be able to test whether your classes are behaving correctly.  However, this will not necessarily give you a sense of how the different hash functions perform in comparison to one another.  To accomplish that, you'll need to run timing tests.







Comparing the performance of the provided hash functions

The -quiet command-line parameter switches off the program's output.  The program does all the same work it normally does (reading the wordlist and input file, looking up words, generating suggestsions), but writes no output to the console.  It then reports the total amount of time (in milliseconds) spent doing the work.

It should be noted that the resolution of the timer on most desktop operating systems is not precise enough to get a good timing result unless the total time is at least 100 or so milliseconds.  In general, longer times are more precise than shorter ones.  So, I've provided one large test case in a file called big-test.txt.  Run this input file against the provided wordlist using each of the provided hash functions.  You should see that the "better" hash algorithm outperforms the "lousy" one by a substantial margin, while the "degenerate" one essentially never completes (unless you have quite a bit of patience).  I've provided the Java code for each of these hash functions, so you can experiment with them if you'd like.  There's plenty of information on the Web about hashing strings, if you're so inclined.

In particular, take note of the fact that the "better" and "lousy" hash functions contain code that is pretty similar, yet their behavior is dramatically different.  This should help you to see how carefully you should approach hashing: there's often a fine line between doing it well and doing it badly, and doing it badly is much worse than using a "predictable" data structure like a balanced binary search tree or skip list.  But doing it well has tremendous benefits.







Starting point

As stated earlier in the write-up, I'm providing you with a nearly-complete implementation of the program, with just two classes — HashTable and WordChecker — left unimplemented.  The code is available in a Zip archive.  (The archive is a bit large, because it includes a wordlist of over 60,000 words, along with a large test case that you can use to compare the provided hash functions.)

It should be pointed out that I didn't create the provided wordlist myself.  I got it, along with the large test case in big-test.txt, from an open-source wordlist project that is hosted at wordlist.sourceforge.net.  If you're interested in building a freeware or open-source application that requires a large list of English words, this is a great place to get a wordlist for it.







Deliverables

Submit your HashTable.java and WordChecker.java files, along with the .java files containing any additional classes that you wrote (if any).  You need not submit any of the other code that we provided.

Follow this link for an explanation of how to turn in your project.







Limitations

Except for java.util.ArrayList, you may not use any of the collection classes in the java.util library (e.g., LinkedList, TreeMap, HashSet).  Remember, as always, you are to implement your own data structures.







A couple of minor tweaks by Alex Thornton, Summer 2006.A few tweaks (including Java 5 support) introduced by Alex Thornton, Summer 2005.Originally written by Alex Thornton, Summer 2004
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/w10_23/Syllabus.html
##-----------------TITLE------------------------##
ICS/CSE 23 Winter 2010
##------------------TEXT------------------------##
Syllabus


Syllabus
ICS/CSE 23
Winter 2010



Course Summary
This course focuses on implementation and mathematical analysis of
fundamental data structures and algorithms.
It also covers storage allocation and memory management techniques.



Prerequisites

ICS 22/ CSE22 with a grade of C or better or Engineering EECS40;
Mathematics 6A or ICS 6A.
Only one course from ICS 23/CSE23 and ICS H23 may be taken for credit.


  Instructor 

Prof. Sandy Irani 
Office: DBH 4042 
Office Hours: W 2:00PM-2:50PM, F 9:00AM-9:50AM
Email:  last name at ics dot uci dot edu 

  Teaching Assistant 

Shengyue Ji
Office: TBA 
Office Hours: TBA 
Email:  first name at  uci dot edu 

Meeting Places and Times

Lecture will be held MWF 10:00-10:50 in ICS 174.
You are responsible for anything said in class, including
class announcements. If you have to miss lecture for any
reason, please ask one of your classmates to fill you
in on what you missed.


There are two lab sections for this class. Each lab section has
three scheduled hours in the lab.
During these times, you have a guaranteed seat in  the lab.
Note, however, you only have priority over
other students if you are working on class work (i.e. not
playing games).
Shenhyue will be available in the lab during these times
to answer questions.
This is an ideal opportunity to get some help with your
lab homework in front of a computer.



There are several department labs which you can use
for working on your lab assignments.
Information about the locations and hours of the
labs can be found at

http://www.ics.uci.edu/~lab .
Keep in mind that some of these labs may be reserved for other
classes during the day, so you may not have first priority
to these machines at all times.
It is possible that the labs will be
very crowded on the day an assignment is due.
It is your responsibility to take this into account
as I can not accept
crowded labs as an excuse for late lab assigments.



Obtaining Assistance
The best way to get your questions answered is by coming
to lecture, office hours or lab and asking them there.
In general,
if I'm not busy with something else, I am happy to answer
short questions while I am in my office, so feel free to
stop by during other times in the week.


All email with questions about course material should be sent to the
following email address:
ics23-questions@ics.uci.edu.
This is an alias for the instructor and the TA.  It ensures
that we both see your message and the response.  It also gives you better
turnaround time.
Please also include the following information:
 The string "ICS 23:" at the beginning of the subject line
 Your name
 Your student number



If you are experiencing difficulties in the lab with the
equipment, let the lab attendant know.
If they can not solve the problem, they will contact
support.

Course Announcements
Course announcements will be sent via email to all students enrolled
in the class, at their official UCI email address.

Click here for the
archive of these messages.





Assignments


 Lab assignments 
will be due every two weeks at Friday 5PM.
Please see the 
Lab Manual  for instructions on handing in assignments
and policies on late assignments.




 Weekly quizes: 
I will give a very short weekly quiz at the beginning of class every
Monday. Since we have two Monday holidays, we will make up those
quizes on the preceding Friday. Here are a list of quiz days:




Monday

January 11

Friday

January 15

Monday

January 25

Monday

February 1

Monday

February 8

Friday

February 12

Monday

February 22

Monday

March 1

Monday

March 8





The quizes will last approximately 10 minutes and will be given out
at the beginning of lecture. They will cover material from the preceding week.
On the two occasions that quizes are given Friday, they will cover material
from lectures on Monday and Wednesday.
In determining your course score, I will drop the lowest two quiz scores.
However, these dropped scores are intended to cover any missed quizes
for whatever reason you need to miss a quiz. This includes any medical
problems, personal issues or school-related events.



I will grade the quizes and Shenhyue will grade the lab assignments.
If you have questions regarding grading, please see the person who
graded that particular item.





Text


We have one required text for this course.

 Data Structures and Algorithms in Java, 4th. edition., by
Michael Goodrich and Roberto Tamassia.

You may also find it useful to purchase a Java reference book
if you do not already have one. Different styles suit different
people, so I will leave it up to you to select your own.
Course Structure

The grading criteria for the course is:

Attendance 5%
Lab assignments 40%
Quizes 30%
Final 25%



Missed Final Exam Policy
 If you miss the final exam and do not have a valid reason, you will receive
a score of 0 on the exam.
 The following policy applies if you miss the final exam for a valid reason.

There are only two classes of valid reasons for missing the final exam:
  An unforeseeable emergency, such as a medical emergency.
In such cases I will ask for documentation.
 An absence from an exam due to a foreseeable circumstance
that I have approved in advance.


A work conflict is NOT a valid reason for missing the final exam.
The examination times
are announced at the beginning of the quarter, so there is plenty of
time to plan your work schedule.
 If you wait until after the exam to get a foreseeable excuse approved,
and it is not approved,
you will receive a grade of zero (0) on the exam.
 If I accept your reason for missing the final exam, at my option I may
either (1) give you a makeup exam or (2) assign your grade on the basis
of the remaining course work that you did not miss.
 If I give a makeup exam, I may give it less weight
than announced on the course web page.



Academic Dishonesty

As ICS 23 students, you are expected to know and follow the
academic dishonesty policies of both the ICS School and the
University as a whole.  Please take a few minutes to read the
policies, which can be found at
this link.

All of your lab work is expected to be completed solely by you.  Group work and/or sharing of code between students is not permitted.  Note that "high-level discussion of course material for better understanding" is permitted and encouraged, but when it comes time to sit down and write code, that is expected to be done by you and you alone.  All submissions are compared to one another using an automated plagiarism detection system.  This system is extraordinarily good at finding similarities between submissions, even when there are superficial differences.  (Note that we also compare your submissions to those submitted during previous quarters whenever one of these assignments was given during a previous quarter, so it is an exceedingly bad idea to turn in, or even refer to, code written by a friend of yours who took the course already.)

Since all of your work is expected to be completed solely by you, you will be held responsible even if you plagiarize only a small portion of someone else's project.

Academic dishonesty is a two-way street.  Providing your code to other students for them to turn in as their own is not permitted anymore than turning in someone else's code.  Resist the temptation to give code to your friends "for reference."  Based on my experience, I can say that your "friends" may very well betray you and turn it in, anyway.

Violators of academic dishonesty policies are subject to the
penalties described in the ICS School's policy.  They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade.  Also be aware that a single documented case of academic dishonesty may preclude you from switching into the ICS major, registering for the ICS minor, joining the ICS Honors Program, and graduating from ICS with honors.
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/w10_23/LabManual.html
##-----------------TITLE------------------------##
ICS 23 / CSE 23 - Lab Manual and Work Schedule
##------------------TEXT------------------------##
ICS 23 / CSE 23 - Lab Manual 
Winter 2010 











Lab Announcements

Announcements or corrections concerning the lab assignments
will be posted here.












Evaluation of Projects

All labs will be posted
with a given time and date that they are due.
If a lab is turned in later than due, it incurs a late penalty, as
discussed below. 

Some of the exercises have optional work included.
You may earn up to an additional assignment point by doing this work, depending
upon how much of the extra work you do, and how well you do it. You may also
earn an
additional point for doing an amazing job on a lab (see below). These points
are added to your total, but not to the total possible number of points; thus,
not undertaking this work will not hurt the lab portion of your course grade.
(Note that lab assignment points do not “spill over” into exam points; even if
optional points put you over 100% of the lab points, only 100% of the lab
points will be counted when computing your course grade.) You cannot get points
for optional work unless all the required work is complete and correct.
We will grade your programs using the following five-point scale. Note that if
you get four points, we consider that full credit for the lab: if you get four
points on every assignment, you will have 100% of the possible lab points.
Notice that your grade depends on issues of programming design and style as
well as those of correctness (Does the program function as it should?) and
completeness (Does the program contain exactly the features required?): 



0
points You did not turn in any work.

1
point Work that it is meager and poorly done. It would not be
considered at all acceptable in academic or professional circles.

2
points Work of reasonable quality and completeness—a program that runs
and implements at least the main requirements of the assignment. Shows a basic
understanding of the material, but not a complete one. Presentation may be
lacking (e.g., written work shows poor composition, a spreadsheet is hard to
read, a database is poorly organized, a program& is hard to follow or has a
design that is cumbersome).

3
points Work of high quality that is complete and well presented—with
perhaps a few minor errors and/or design or style problems. The grade for good,
solid—but not extraordinary—work.

4
points Work of very high quality that demonstrates a full and complete
understanding of the material the lab covers with a very polished presentation;
any programming component of the assignment is complete (contains exactly the
features specified) and correct (functions as it should, with no errors).
Normally the highest grade awarded.

5
points Work of the highest professional or academic quality. Expect this
grade to be very rarely awarded.



If it is difficult to determine whether your work
is best represented by a score of x or x + 1 points (x ranging from 0 to 4), we
may award a grade of x + 0.5 (that is, half points may be awarded). Expect this
to be an unusual event. 

Your programs will be graded mostly on their
correctness and completeness, but will also depend on other qualities of your
program, such as efficiency, ease of use, reliability, modifiability, clarity,
how quickly and easily your code can be understood, the reasonableness of your
design and how well the programs follow the class style standards. A
professional-quality program must score highly in all these categories—and part
of what this class is all about is to help you learn how to write professional
programs. In particular, you can lose points for poor design or bad
programming style, even if your program correctly and completely implements the
functional requreiments. 

If an assignment has specific grading criteria
that add to or extend the criteria given here, the assignment will describe
them.

If you submit a program that does not compile, we
will not be able to execute it and, thus, will not be able to evaluate its
correctness. It is your responsibility to turn in code that compiles. 











Partial and late assignments

This course moves forward at a rapid pace, as
there is a project due roughly every other week. Therefore, late submissions of
projects is strongly discouraged. You are generally better off turning in what
you have and moving on to the next assignment. 

For a lab to be on time, your assignment must be
submitted to Checkmate by the due date and time. Any assignment submitted after
that time will incur a penalty of one point for each day or part of a day it is
late. For example, if you earn three points and the assignment is two days
late, your score will be one point (out of four). We count a weekend (Saturday
plus Sunday) as a single day. As an example, suppose your assignment is due at
6:59 on Thursday. If you turn it in late but before 6:59 on Friday, you lose 1
point. If you turn it in after that but before 6:59 on Sunday you lose 2
points.

In the special case of the three day weekend
beginning January 16, we count that as a single day. Lab Assignment 1 is due at
6:59 on Friday January 15. If you turn it in late but before 6:59 on Monday January
18 you lose 1 point. If you turn it in after that but before 6:59 on Tuesday January
19 you lose 2 points.

We grade the latest version of an assignment
submitted. For instance, if you turn in an assignment on January 14 and again on
January 15, we will grade the assignment submitted on January 15. In particular, you
cannot split your assignment into two parts and turn in the parts at different
times. For example, suppose you submit part of an assignment on January 14 and the
rest on January 15. We will only grade the January 15 submission and treat it as your
entire assignment.











Style standards

Wondering what constitutes an acceptable coding
style? Check out the course style
standards, which explain how your code should look.











Submitting your projects

When you complete each project, you must submit it
to us electronically. Follow this
link for a detailed description of how to submit your projects. Understand
that we will only accept projects submitted using the procedure described
there; we do not accept printed copies of your projects, nor do we
accept them via email.











Development environment

The officially-supported development environment
for ICS 23 is a text editor, such as TextPad, the command-line compiler javac,
and the command-line virtual machine java. Your TA's will use javac
and java when compiling and testing your programs. The machines in the
ICS lab, by default, use the compiler that comes with Sun Java 2 Standard
Edition SDK.

While I encourage you to work on your projects in the
labs as much as you can, so that help will be available for you when you need
it, I also understand the reality that many of you will want to work from home
at least part of the time. You're responsible for obtaining and installing
this software on your machines; we realistically cannot and will not support
each of your home installations. You'll need the following software, all of
which can be obtained free of charge.

A text editor. There are many options
     here, as text editors are plentiful (and can be cheap or even free).
     TextPad is available for your use on the machines in the ICS labs, and can
     be purchased for home use from www.textpad.com
     for $27. There are other viable text editors for home use, including free
     editors such as jEdit (available at www.jedit.org)
     and XEmacs (available at www.xemacs.org).
     Sun Java 2 Standard
     Edition SDK.
     This package is available free of charge from java.sun.com. It contains the compiler javac,
     the virtual machine java, and all of the necessary libraries and
     tools that you'll need for Java development for this course (and beyond).
     There are several versions available. For this course, you will need to
     use a release that is at least as recent as 1.5 (which is also called
     5.0). The package comes with installation instructions, which you'll need
     to read and follow; simply running the installation program is not enough.
     There is also a document
     that explains how to set up Java on your home system.

You might also want to obtain a full-fledged
integrated development environment (IDE). IDE's generally provide an editor, a
compiler, and a virtual machine, as well as other integrated tools, such as a
debugger. This flexibility generally comes at the cost of complexity. Also, IDE's
are generally much more expensive than the free alternatives listed above. I do
all of my development using a text editor and a command-line compiler and
virtual machine. 

Java is a cross-platform language, so the code you
write should execute correctly, regardless of your operating system or what
compiler you're using. Still, subtle bugs and differences do exist. If you feel
that you've been graded unfairly on account of such a bug, let us know, and
we'll make sure that your grade is not adversely affected by incompatibilities
between virtual machines.











How do I set up Java at home?

Here
is a document that describes how to set up J2SE on your Windows-based machine.











Java Links

Wondering how a particular class in the Java
library works? Sun's Java 2
documentation is exactly what you need! When I'm writing Java code, I spend
a lot of time there. After all, who can remember all the parameters to all of
the methods in the Java library? Besides, learning how to look things up in
documentation is an invaluable skill, so it's best if you start developing it
now.

Looking for a good on-line Java tutorial? Start at
Sun's Java Web site (java.sun.com), and
click the "Java Tutorial" link somewhere on the page. (They rearrange
their pages fairly often, so I didn't provide a direct link.) The tutorial is
organized into "trails" that lead you through various topics, from
simple to advanced.











Academic honesty

As ICS 23 students, you are expected to know and
follow the academic dishonesty policies of both the ICS School and the
University as a whole. Please take a few minutes to read the policies, which
can be found at this
link.

All of your lab work is expected to be completed solely
by you. Group work and/or sharing of code between students is not
permitted. Note that "high-level discussion of course material for better
understanding" is permitted and encouraged, but when it comes time to sit
down and write code, that is expected to be done by you and you alone. All
submissions are compared to one another using an automated plagiarism detection
system. This system is extraordinarily good at finding similarities between
submissions, even when there are superficial differences. (Note that we also
compare your submissions to those submitted during previous quarters whenever
one of these assignments was given during a previous quarter, so it is an
exceedingly bad idea to turn in, or even refer to, code written by a friend of
yours who took the course already.)

Since all of your work is expected to be completed
solely by you, you will be held responsible even if you plagiarize only a small
portion of someone else's project.

Academic dishonesty is a two-way street. Providing
your code to other students for them to turn in as their own is not permitted
anymore than turning in someone else's code. Resist the temptation to give code
to your friends "for reference." Based on my experience, I can say
that your "friends" may very well betray you and turn it in, anyway.

Violators of academic dishonesty policies are
subject to the penalties described in the ICS School's policy. They are also
subject to an immediate course grade of F, and you will not be allowed to drop
the course to avoid the grade. Also be aware that a single documented case of
academic dishonesty may preclude you from switching into the ICS major,
registering for the ICS minor, joining the ICS Honors Program, and graduating
from ICS with honors.











·        
Adapted from the ICS 22
Spring 2003 Lab Manual, with quite a bit of text from the previous ICS 23 Lab
Manual merged in.



 
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/w10_23/lab5.htm
##-----------------TITLE------------------------##
ICS 23 / CSE 23 - Project #5: Rock and Roll Stops the Traffic
##------------------TEXT------------------------##
ICS 23 / CSE 23 - Project #5: Rock and Roll Stops Traffic





Due date and time: Friday, March 12, 6:59pm







Introduction

As residents of southern California, most of us face the realities of heavy traffic.  If we attempt to drive on a local freeway during rush hour, we invariably experience major traffic jams and long delays.  What's worse, we are rarely apprised of unusual delays (e.g. accidents, road closures) before we've encountered them.  Even if we know about a delay in advance, it's often difficult to find a suitable alternate route, either because we're unfamiliar with the area or because those alternatives are just as clogged with traffic as the route we're trying to avoid.

It's not hard to imagine how the presence of wireless Internet connections in everyone's car could help the situation.  Aside from providing the obvious ability to download traffic reports and maps on demand, with up-to-the-minute traffic information and a little computing, your car could actively aid you in finding the best way to get from one place to another, optimized not only for distance, but also for the shortest drive time given the current traffic conditions.  Further, if all cars were using the system, as drivers were diverted around the scene of an accident, traffic conditions would change; the advice offered by drivers' in-car systems would also change, optimally routing cars around a traffic jam by sending different cars down different alternate paths.  This way, even the alternatives might flow as quickly as possible.

For this project, you will write a simplified version of such a system.  Given a map of streets and freeways, along with a snapshot of the current traffic between points on the map, your program will be capable of finding the shortest distance or fastest route to get from one location to another.







Our abstraction of a street map

Real-life street maps, such as those created by companies like Thomas Bros., are a handy way for (most) human beings to determine an appropriate route to take from one location to another.  They present an abstraction of the world as a scaled-down drawing of the actual streets.  In order to be useful to us, a street map needs to give us the names of streets and freeways, to accurately demonstrate distances and directions, and to show us where the various streets and freeways intersect.

For our program, we'll need to develop a different abstraction of a street map.  Our abstraction must contain the information that is pertinent to the problem we're trying to solve, presented in a way that will make it as easy as possible for our program to solve it.  Not surprisingly, a picture made up of lines and words is not an abstraction that is useful to our program; it would require a tremendous amount of effort to design and implement an algorithm to interpret the lines and words and build up some alternate representation that's more convenient.  It's better that we first design the more convenient representation, then train our program to read and understand an input file that specifies it.  To do so, we'll need to consider the problem a bit further.

Our program's main job is to discover the shortest distance or time between two locations.  There's no reason we couldn't think of locations as being any particular point on a street map (for example, every valid street address, or even any valid GPS coordinate).  For simplicity, we'll think of them as one of two things:

The intersection of two or more streets.A point on a freeway at which there is an entrance and/or an exit.

Connecting pairs of locations on the map are stretches of road.  In order to solve our problem, we'll need to know two things about each stretch of road:

Its length, in miles.The current speed of traffic traveling on it, in miles per hour.

Our map will consist of two kinds of roads: streets and freeways.  A street is a sequence of intersections, connected by stretches of road in opposite directions.  The lengths of the stretches of road are generally the same, or at least nearly the same, on both sides of the street, though the amount of traffic -- and, therefore, the current speed of traffic -- on either side of the street may differ.  In real life, many intersections control traffic using stop signs or traffic lights.  Our program will ignore them; we'll instead assume that the traffic speeds on streets have been adjusted appropriately downward to account for the time spent waiting at stop signs and lights.

Freeways seem like bi-directional roads, but they're actually two separate, divided stretches of road traveling in opposite directions.  For a few reasons, we will need to treat each side of the freeway as an entirely separate road:

The sequence of ramps on one side of a freeway is sometimes different than the sequence on the opposite side.  For example, near UCI, the 405 South has a transition ramp that leads to the 73 South, but the 405 North has no such ramp.  For this reason, there may be a different number of locations on one side of a freeway than another.The amount of traffic on one side of a freeway may be radically different from the amount on the other, so the speed of the cars traveling in one direction may also differ widely.

It turns out that our program will not need to think about streets and freeways separately, since they are both represented the same way: as a sequence of locations, connected by stretches of road.  Also, to keep the problem relatively simple, absolute directions (i.e. north, south, east, and west) will not be considered by our program or reported in its output.  For that reason, they won't be included in our abstraction of a street map, except optionally in the names of locations.

The output of our program will be a trip.  A trip is a sequence of visits to locations on the map.  For example, when I used to live in Costa Mesa, my typical trip home from UCI looked like this:

Start at Peltason & Los TrancosContinue at Bison & PeltasonContinue to Bison & CaliforniaContinue to Bison & 73N on-rampContinue to 73N @ BirchContinue to 73N @ 73N-to-55N transitionContinue to 55N @ BakerContinue to 55N Baker/Paularino ramp & BakerContinue to Baker & Bristol

In addition to the information above, our program will also output information about the distance in miles and travel time of each of the segments of the trip, as well as the overall distance and travel time for the whole trip.







Representing our abstraction of a street map

If you consider all of the data that we'll need to represent this abstraction, the task of organizing it can seem overwhelming.  However, there is a well-known data structure that represents this system in a straightforward way: a directed graph.

Using a directed graph, vertices can represent locations, and edges can represent the stretches of road that connect them.  Since traffic travels in only one direction on a given stretch of road, it makes good sense that the graph should be directed.

Each vertex in the graph will have a human-readable name for the location it represents.  For example, a vertex might be named Culver & Harvard or it might be named I-405N @ Jamboree.  The name will be used only for display purposes; it won't have any significance in the shortest-path algorithm.  The vertices should be numbered uniquely and consecutively, starting at zero.  If there are n vertices, they should be numbered 0 .. n - 1.

Each edge will contain the two necessary pieces of information about the stretch of road
it represents: the distance between the two vertices (in miles, stored as a double) and the
current speed of traffic (in miles per hour, stored as a double).


Since a trip is a sequence of visits to adjacent locations on the map, locations are represented by vertices, and two locations are adjacent only when there is an edge connecting them, a trip can be represented as a path in the graph.







The input

Your program should read its input from a file.  So that we can keep everything straight during the grading process, please write your main( ) method in a class called Project5, so that we can run your program using the following command:


java Project5 sample.txt


where the name of the input file is specified as a command-line argument to the program.  If we ran your program with the command above, it would read its input from the file sample.txt.

Check out this sample input file.  A description of its format follows.

The input file is separated into three sections: the locations, the road segments connecting them, and the trips to be analyzed.  Blank lines should be ignored.  Lines beginning with a # character indicate comments and should likewise be ignored.  This allows the input file to be formatted and commented, for readability.

The first section of the file defines the names of the map locations.  First is a line that contains the number of locations.  If there are n locations, the next n lines of the file contain the names of each location.  The locations will be stored in a graph as vertices.  Each vertex is given a number.  You should number the vertices consecutively in the order they appear in the file, starting at 0.

The next section of the file defines the road segments.  Each road segment will be an edge in the graph.  The first line of this section defines the number of segments.  Following that are the appropriate number of road segment definitions.  Each segment is defined on a line, with four values on it:

The vertex number where the segment begins.The vertex number where the segment ends.The distance covered by the segment, in miles.The current speed of traffic on the segment, in miles per hour.

Finally, the trips are defined.  Again, the section begins with a line containing the number of trips.  Following that are an appropriate number of trip requests.  Each trip request is a line with three values on it:

The starting location for the trip.The ending location for the trip.D if the program should determine the shortest distance, T if the program should determine the shortest driving time.

Your program should read the vertices and edges from the file, build the graph, then process the trip requests in the order that they appear.  The output for each trip request is described later in this write-up.

You may assume that the input file will be formatted as described above.







Implementing the graph

There are two well-known approaches that can be used to implement a graph: an adjacency matrix and adjacency lists.  As we've discussed in class, sparse graphs (that is, graphs with few edges relative to the number of vertices) are better implemented using adjacency lists, since an adjacency matrix would waste a great deal of memory storing the vast number of blank cells in the matrix.  Our street map is clearly a sparse graph, since each vertex will have edges to and from only a few relatively "nearby" vertices.  So, adjacency lists are a far superior approach in our case.  You are required to use this approach to represent your graph.

A good way to store adjacency lists is to place each vertex's information into the cell of an array indexed by its vertex number.  Each cell has a vertex name and a reference to the first node in a list of its outgoing edges.  For each of these edges, we store the ID number of the adjacent vertex, the distance to that vertex, and the time to travel to it.  (Remember that an adjacent vertex is one that can be reached from the current vertex by following one edge.)  You will obviously need methods to build up the adjacency lists and to access them to get information about a particular vertex or edge.







Finding the shortest paths

The problem we need to solve, that of finding the fastest or shortest trip along a network of roads, is not an uncommon one in computing.  In fact, it's so common that it's already been solved abstractly.  Our problem is an instance of the single-source, positive-weighted, shortest-path problem.  In other words, from one particular vertex (a "single source"), we'll be finding the shortest path to another vertex, where all of the edges have a "positive weight" (in our case, distance or speed, neither of which will ever be negative) associated with them.  We'll use a well-known algorithm called Dijkstra's Algorithm to solve this problem.

Dijkstra's Algorithm actually finds the shortest path from some start vertex to all the other vertices in a graph -- this doesn't slow the algorithm down, since it needs to calculate them all in order to work -- though we're only interested in one of the paths that it will find.  There's a benefit to Dijkstra's calculation of all the shortest paths from some vertex.  Suppose the file has multiple trips starting from the same vertex.  With Dijkstra's Algorithm, we can compute shortest paths from any particular start vertex to all other vertices once for distance and once for time, storing the results in memory.  Then, to learn the shortest path from that start vertex to any other vertex, we can just look up the answer.  Use this approach in your program; it is likely the file will contain multiple trips that start from a particular place, and only a poorly-designed solution would require the program to re-compute data it has already computed.

For each vertex v, Dijkstra's Algorithm keeps track of three pieces of information: kv, dv, pv.

kv is a boolean flag that indicates whether the shortest path to vertex v is known.  Initially, kv is false for all vertices.dv is the length of the shortest known path from the start vertex to v.  When the algorithm begins, no shortest paths are known, so dv is initially set to ∞ for all vertices, except the start vertex, for which dv = 0.pv is the predecessor of the vertex v on the shortest known path from the start vertex to v.  Initially, pv is unknown for all vertices, except for the start vertex, for which pv is none.

As the algorithm proceeds, it will need to calculate the cost for individual edges.  The cost of the edge from v to w will be called C(v, w).  How you calculate the cost depends on whether you're minimizing driving distance or driving time:

If you're minimizing driving distance, C(v, w) is the number of miles on the edge from v to w.If you're minimizing driving time, C(v, w) is the number of minutes required to drive along the edge from v to w, given its length and traffic speed.

Dijkstra's Algorithm proceeds in phases.  The following steps are performed in each pass:

From the set of vertices for which kv is false, select the vertex v having the smallest dv.  In other words, of the shortest paths to each vertex that we've found that we're not yet sure about, pick the one that is the shortest.Set kv to true for the vertex you picked in step 1.  The shortest of the "unknown" paths is now considered to be known.For each vertex w adjacent to v (i.e. there is an edge from v to w) for which kw is false, test whether dw is greater than dv + C(v, w).  If it is, set dw to dv + C(v, w) and set pw to v.  In other words, if the path through v to w is better than the shortest path we'd found to w so far, the shortest path to w (so far) is the path we've just found through v to w.

For each pass, exactly one vertex has its kv set to true (in other words, we discover one known shortest path per pass).

Here is psuedocode for the algorithm.  Notice the use of a priority queue, which allows you to easily find the vertex with the smallest dv in step 1.


    for each vertex v
    {
        set kv to false
        set pv to unknown (or none, if v is the start vertex)
        set dv to ∞ (or 0, if v is the start vertex)
    }

    let pq be an empty priority queue
    enqueue the start vertex into pq with priority 0

    while (pq is not empty)
    {
        vertex v = the vertex in pq with the smallest priority

        if (kv is false)
        {
            kv = true

            for each vertex w such that edge v -> w exists
            {
                if (dw > dv + C(v, w))
                {
                    dw = dv + C(v, w)
                    pw = v
                    enqueue w into pq with priority dw
                }
            }
        }
    }


At the conclusion of the main loop, the dv value corresponding to the end vertex will be the amount of the shortest path.  You can find the actual path of vertices by working your way backward from the end vertex to the start vertex, following the pv values as you go along.  (This implies, of course, that you need to store all the pv values.)

Remember that, after the algorithm has finished, you should store the
results in memory so that you can look them up later.  I suggest storing
the pv values long-term.  There's no reason to store
the kv values, because they will all be true after
the algorithm is completed.  And there's no need to store the dv values,
because you will need to lookup the times or distances between each vertex in the
path anyway, since we always output all of the segments of a trip, and you can
easily sum these up to calculate a total while you're generating your answer.


As you can see from the pseudocode, you will need to implement a priority queue in order
to implement Dijkstra's Algorithm.  You are required to implement it using a binary heap,
as we discussed in class, so that all enqueues and dequeues run in O(log n)
time.  The priority queue should be implemented in its own class, of course.
 In order to get full credit for this lab, your priority queue must be implemented using
generic types.  







The output

For each of the trip requests in the input file, your program should output a neatly-formatted report to the console that includes each leg of the trip with its distance and/or time (as appropriate), and the total distance and/or time for the trip.

If the trip request asks for the shortest distance, the output might look something like the following (these are phony trips, to show you the output format; they are not related to the sample data file provided above):


Shortest distance from Alton & Jamboree to MacArthur & Main
  Begin at Alton & Jamboree
  Continue to Main & Jamboree (1.1 miles)
  Continue to Jamboree & I-405N on ramp (0.3 miles)
  Continue to I-405N @ MacArthur (1.3 miles)
  Continue to MacArthur & I-405N off ramp (0.1 miles)
  Continue to MacArthur & Main (0.2 miles)
Total distance: 3.0 miles


On the other hand, if the trip request asks for the shortest time, the output might look like this:


Shortest driving time from Alton & Jamboree to MacArthur & Main
  Begin at Alton & Jamboree
  Continue to Alton & MacArthur (2.7 miles @ 33.7mph = 4 mins 48.8 secs)
  Continue to Main & MacArthur (1.1 miles @ 40.1mph = 1 min 38.7 secs)
Total time: 6 mins 27.5 secs


When outputting a time, you should separate it into its components -- hours, minutes, and seconds -- as appropriate.  Here are some examples:


32.5 secs
2 mins 27.8 secs
13 mins 0.0 secs
3 hrs 13 mins 12.3 secs
6 hrs 0 mins 0.0 secs


Don't show hours if there are zero of them.  Don't show hours or minutes if there are zero of both of them.







Starting point

You're required to write the code for this project from scratch.  No code is provided.







Deliverables

You must turn in all of your .java files.  Please do not include any .class files, or other files generated by your development environment.

Follow this link for an explanation of how to turn in your project.







Limitations

Except for java.util.ArrayList, you may not use any of the collection classes in the java.util library (e.g. LinkedList, TreeMap, HashMap).  Remember, as always, you are to implement your own data structures.  You're free, and encouraged, to use other utility classes, such as BufferedReader and StringTokenizer to read the input file.







 Requiring the priority queue to be generic, added by Sandy Irani, Winter 2010. A few typos corrected, along with a small amount of additional explanation about Dijkstra's Algorithm added by Alex Thornton, Summer 2004.Additional modifications and clarifications by Alex Thornton, Spring 2003.Revised again by Alex Thornton, Fall 2002.Minor revisions by Norman Jacobson, December 2001, March 2002, May 2002, and June 2002.Revised for ICS 23 Fall 2001 by Norman Jacobson, September 2001.Originally written by Alex Thornton, Spring 2001.  Portions of the description of Dijkstra's algorithm based on a description in Data Structures and Algorithms with Object-Oriented Design Patterns in Java by Bruno R. Preiss.
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/f15-6B/courseinfo.html
##-----------------TITLE------------------------##
ICS 6B Fall  2015
##------------------TEXT------------------------##
Syllabus



Course Information
ICS 6B Boolean Algebra and Logic
Fall 2015


Course staff and office hours


  Instructor 

Prof. Sandy Irani 
Office: DBH 4042 
Office Hours: Wed 11:00AM-11:50AM, Friday 10:00AM-10:50AM
Email:  irani@ics.uci.edu 

  Teaching Assistants 

Tamnay Khemka
Location: DBH 3013
 
Office Hours: Tuesday, 5:00-5:50PM
Email:  tkhemka1@uci.edu      

 
Mengfan Tang
Office: DBH 3211
 
Office Hours: Tuesday, 2:00-2:50PM
Email:  mengfant@uci.edu   



  Readers 



Hyungik "Jordan" Oh
Office: DBH 3209
 
Office Hours: Friday, 1:00-1:50PM
Email:  hyungiko@uci.edu    

 
 Xikui Wang 
 Office: DBH 2065
  
 Office Hours: Wed, 1:00-1:50PM
Email:  xikuiw@uci.edu 

 

Jiayu Xu
Office: DBH 4039
 
Office Hours: Monday, 10:00-10:50AM
Email:  jiayux@uci.edu    




Meeting Places and Times

Lecture will be held MWF 2:00-2:50 in  PSLH 100.
You are responsible for anything said in class, including
class announcements. If you have to miss lecture for any
reason, please ask one of your classmates to fill you
in on what you missed.


There are four discussion sections for this class. Each section meets two hours per
week. This is an important time to get questions answered about homework
problems. No new content will be given in discussion and we do not take attendance, but you are highly encouraged to
attend as it will give valuable practice on problems.





Piazza

We will use an online question and answer service called Piazza.
You will all have an account.
The link to the to the course page on Piazza is:

 https://piazza.com/uci/fall2015/ics6b/home.
If you have a question about course content, you can go to see if it
has already been asked by another students.
If not, you can post the question yourself.
The course staff will be checking Piazza several times a day
to update answers to questions posted there.
There is also a way for students to collectively edit a response
to a question and for instructors to indicate whether the answer
is a good/correct answer.


Piazza is also a good place to post general
adnministrative questions about the class.
If you send me an email with a technical question about the class,
I am likely to refer you to Piazza.


Important class announcements will also be posted on Piazza. You are responsible
for checking for course announcements at least twice a week.
Only time ciritical announcements will generate an email.


Before posting a question on Piazza, you should look through the course
materials or previous Piazza posts
to see if you can find the answer to your question.
If your question is about the technical content of the course,
check the text. If you have an administrative question, check the
course web page (either the home page with the schedule or this course information page).


Piazza provides a way for you to
post anonymously. However, your posts will only be anonymous to other students.
The instructors will be able to see the name and uciNetID of any individual
who posts to Piazza.


 Obtaining assistance


Tbe best way to get your questions answered is by coming
to lecture, office hours or discussion and asking them there.
In particular, office hours and discussion are  the best place to ask questions that
require a longer answer or some diaglog to get resolved.



The table below shows where to go to for different kinds
of questions. Please try to follow the directions there.
 I really do want to be available for significant problems or issues that may arise.
 I also really enjoy meeting students in my office hours.
 However, with a class this size, the  amount of email generated from
 smaller, routine questions can be overwhelming, so I would like you
 to try and find  answers through other sources first.



Question type

Example

Where to go


Questions about course content

What's the difference between (x,y) and {x,y}?

Try and find the answer to your question through the course materials.
If your question is not answered, then 
Post on Piazza

General administrative questions

What topics does test 1 cover?

Check the course web page (schedule and course information) first.
If your question is not answered, then 
Post on Piazza

Questions on how your HW or test was graded.

I don't understand why I didn't get full credit on the first question.

Office hours of the reader or TA who graded that HW or test
(readers and TAs will post on Piazza who graded which test.
Office hours are listed here.)

Minor bug in the text.

Shouldn't the last line of this animation be x2 instead of x1?

Use the feedback button in the text.

Technical problem you are having with the text.

Why doesn't the text show 100% progress for Section 1.2? 
I think I did all the activities in the section.

support@zyBooks.com

Major issue reading the text.

None of the mathematical formulas are showing up in Section 1.4.

support@zyBooks.com
and cc irani@ics.uci.edu

Mistake in HW or HW solutions.

I think the answer to question 3 on HW 2 should be 56 and not 57.

Post on Piazza




Grading

The grading criteria for the course is:

Homework 5%
Reading Assignments 4%
Tests 60% (15% each)
Final 30%
Completing the Course Evaluation 1%


I am frequently asked whether I curve the grades. The answer to this question will
always be "I don't know".
First of all, no letter grades are assigned to scores until I calculate a final course
percentage for each student. I generally do aim to have the A's fall in the 90-100 range
and the B's in the 80-90 range, etc. Sometimes I am a bit more generous that that, depending
on the distribution of scores. Occasionally I give a test or final that is harder than I
expect. In those circumstances, I will sometimes make a problem count as extra credit.
The best strategy for success is not to think too much about your grade but to continually
do your best to understand the material in the class.


Some time around week 2 or  3, I will start to take attendance in class using a web-based
attendance system. You encouraged to have some kind of internet connected device in class for you
to register your attendance. You do not recieve any credit for attending class and you are not directly
penalized if you do not attend class.
However, I do use the population of students who attend regularly (at least 75% of the lectures)
to determine if I need to adjust the grading scale.







Tests



There will be four tests given during the quarter. Each of these covers a different set of topics covered
in the course. The final exam will be cumulative and will cover all the material covered during the
entire quarter. The tests will be given in class during the normal scheduled lecture time.
The dates of the four tests and the final exam are:

Week 3: Mon, October 12Week 5: Mon, October 26Week 7: Mon, November 9Week 9: Mon, Nivember 23Final exam: Friday, December 11, 1:30PM-3:30PM


There will be assigned seating for the tests. When you arrive in the classroom, you need to get a test
from one of the course staff. Each test is marked with a row and seat number.
You are required to sit in the seat indicated on your test.
It is a violation of the academic honesty policy to swap tests with any other student after you have received
your test or to sit in a seat other than the one designated on your written test.



The only thing you need to have for tests and the final exam is a pen or pencil for writing.
All scantron forms and/or paper will be provided.
No electronic devices (including calculators) are allowed in tests or exams.
There should be no visible screens during a test or exam.
Laptops should be closed and tablets should be in a closed folder or stowed in a bag.
Phones should be stowed in a bag or pocket so that they are not visible at all.


Missed tests or final exam:
 All four tests and the final exam are mandatory. If you miss a test or the final exam and do not have a valid reason, you will receive
a score of 0 on the test.



There are only two classes of valid reasons for missing a test or the final exam:
  An unforeseeable emergency, such as a medical emergency.
In such cases I will ask for documentation.
 An absence from an exam due to a foreseeable circumstance
that I have approved in advance.

If you miss a test due to a forseeable circumstances, I must receive notification from you a week in advance.
If the absence is due to an unforseeable emergency, I should receive an email from you as soon as you are able
to send it. In either case, I will ask you to come see me in person to discuss how I will
adapt your grade for the course.

A work conflict or a family vacation is NOT a valid reason for missing a test or the final exam.
 If I accept your reason for missing a test or the final exam, I will assign your grade on the basis
of the remaining course work that you did not miss. There are no make up tests.



Homework



Homework is due every Wednesday, starting in week 2.
The homework will consist of a written portion and an electronic portion.
The written portion should be put in the
dropbox labeled "ICS 6B" on the first floor of Bren Hall.
 You must hand it in before 5:30PM on the day it is due. Absolutely no late homework assignments will be accepted.



The electronic portion consists of the problems labeled Challenge Activity
embedded in the reading.
These activities are automatically corrected as you do them.
You can redo these problems as many times as you want with no penalty.
You will receive full credit on a challenge activity if you eventually complete the activity correctly
by the time it is due.


You will notice that the homework counts very little towards your grade.
It is important to do the homework because it enables you to learn the material but a missed
homework will not have a big effect on your grade. Also, I will drop the lowest homework score
in calculating your final grade.



Grades for the assignements and tests  will be posted through EEE.
If you have questions regarding grading, please see the reader or TA who graded that assignment.
The readers and TAs will be posting on Piazza when test grades and homework scores are ready so you will
know who graded which assignments.


I will post solutions to the homework so that you can use them to study for the tests.





Text


The test for this class is a web-based interactive, animated offering as your "textbook".
You are required to have an account for the course. The material
includes interactive
exercises which will count towards your grade.
The directions for subscribing can be found at:
 Go to https://zybooks.zyante.com/#/zybooks.
Bookmark this site - this is your site for the entire quarter.
You will need a
credit card or Paypal account to pay the subscription price of $40.
Contact 
support@zyBooks.com for help or with any questions regarding obtaining a subscription.


Your reading for this class is associated with your subscription for the Fall 2015 offering of
ICS 6B, so  you will need a new subscription even if you have had a previous subscription
to the Discrete Math zyBook for some other class.
However, if your subscription to the Discrete Math zyBook occurred in the last year (or currently
for another class), you will be automatically given  a 50% discount.


If you drop the class in the first two weeks, you can contact support@zyBooks.com to get
a full refund for the text.





Credit for reading

Each reading assignment (except for the first two weeks) is due at 2PM the day it is assigned.
The reading for the first and second weeks is due at 2PM Monday Oct 12.
Every action through your zyBook is automatically timestamped.
When I compile grades for reading, I determine how much
of your  reading was completed by a particular day and time,
so the deadlines are automatically enforced.


You are required to complete all the activities labeled Participation Activity
by the time the reading is due. The problems labeled Challenge activity
are part of the homework and are due later than the reading.


You can determine how much of the reading has been completed
by looking at your zyBook dashboard.
Please familiarize yourself with this interface and make sure
that you have 100% completion by 2PM for the sections assigned each
lecture day.



Board notes

After lecture, I will post the board notes generated during lecture.
The purpose of posting the notes is to the reduce the amount of
note taking you need to be doing in class. The best way to learn this material
is to attend class and concentrate on what is being said.
Having the board notes provided means that you can spend more time
thinking about the content of the lectures and less time copying down
what is being written.


The board notes are not intended to be a perfectly readable
transcript for everyting that took place in class.
You will still  have to take some additional notes
based on the discussion in class.
The board notes are definitely not a substitute for attending class.
They merely serve to reduce the amount of writing you need to
do while you are in class.
If you are sitting in lecture and you can not read something I have
written, please raise your hand and ask for clarification.


If you are unable to attend class for some reason, you should not
expect the board notes to be sufficient to decipher the material I covered.
You need to contact a fellow classmate to get his or her
notes and possibly follow up in discussion with questions.







  Academic Honesty
    The Bren School of ICS and the University have already established an academic honesty policy. Read it.
    Violators of academic honesty policies are subject to the penalties described in the Bren School of ICS policy. They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade. Also be aware that a single documented case of academic dishonesty may preclude you from switching into computing majors, registering for computing minors, joining the ICS Honors Program, and graduating from a computing major with honors.
    Guidelines to avoid plagarism:
    Do not look at another person's homework.
      Instead you should prefer to discuss the problem in plain English.
      This helps you to communicate clearly, practice technical jargon as it applies to your problem, and to identify how your solution exhibits behavior different from what you expect.
      Do not write down the solution in your notes.
      It is perfectly fine (and encouraged) to collborate on work.
      Working in a group is a rewarding experience, and definitely a necessary skill in any professional career.
      The collaboration can include drawing diagrams and perhaps solving the problem on a whiteboard.
      However, you should avoid writing the solution in your notes.
      It is very useful to rethink the problem and go through the details and logic when you solve it again on your own.
    We expect that:
    You can monitor each other and enforce these rules among yourselves. Making sure that others follow these guidelines will help to ensure that they don't pass off your work as their own.
      Your work honestly represents your efforts. The entire purpose of obtaining an education is so that you can accumulate a body of skills and experience that will help you later on. If you do not perform the work yourself, then you have cheated yourself out of the education. Employers in our field can (and do) screen applicants for skills and knowledge. You will perform poorly (and discredit UCI) if you do not practice now by doing your own work.
##------------------URL-------------------------##
http://www.ics.uci.edu/~irani/f15-6B/Homework/week1.html
##-----------------TITLE------------------------##
ICS 6B, Fall 2015
##------------------TEXT------------------------##
ICS 6B 
Fall 2015 Homework 1 

 Due: Wednesday, Oct 7, 5:30PM 

 Covers Sections 1.1-1.6


Please make sure to  syaple together all the pages of your written homework before putting it in the ICS 6B slot.
Also write your student ID number and your name very clearly in the upper right corner of every page.
The written portion should be turned into the dropbox labeled "ICS 6B" on the first floor of Bren Hall.


Challenge Activities:
1.2.1, 1.2.2, 1.2.31.3.1, 1.3.21.6.1

Which of the following problems are propositions?
Have a nice day.The soup is cold.The patient has diabetes.The light is on.It's a beautiful day.Do you like my new shoes?Bummer!


Define the following propositions:
p:I will return to college.q:I will not get a job.
Translate the following Engilsh sentence into logical expressions using the definitions above:
Not getting a job is a necessary condition for me to return to college.If I return to college then I won't get a jobI am not getting a job, but I am still not returning to college.I will return to college only if I won't get a jobThere's no way I am returning to college.I will get a job and return to college.


Which of the following conditional statements are true and why?
If pigs could whistle then donkeys could flyIf 5 is a prime number then pigs can whistle.Pigs can whistle if and only if donkeys can flyIf pigs can not whistle, then 5 is a prime number.If 5 is not a prime number, then pigs can not whistle.


Conditional statement: "If there is a lunar eclipse tonight, I will bring my binoculars."
Give the inverse of the statementGive the converse of the statement.Give the contrapositive of the statement.

The values for  the propositional variables p, q, r, s, are determined
as follows:
p = trueq = falser = falses = true
Determine the truth values for the following propositions:
p ∨ ¬(q ∧ s)(r → q) ∨ ¬p(s ↔ ¬q) ∨ (p ∧ ¬q)(r ∧ p) → sp ∧ q ∨ s


Give a logical expression with variables p, q, and r that is true
only if p and q are false and r is true.


Consider the following pieces of identification a person might
have in order to apply for a credit card:
b: Applicant presents a birth certificate.d: Applicant presents a drivers license.m: Applicant presents a marriage license.
Write a logical expression for  the requirements under the following conditions.
The applicant must present either a birth certificate, a drivers license or a marriage license.The applicant must present any two of the following forms of identification:
birth certificate, drivers license, marriage license.Applicant must present either a birth certificate or both a drivers license and a marriage license.

Suppose that p, q, r, s, and t are all propositional variables.
Describe in words when the expression p ∨ q ∨ r ∨ s ∨ t is true and when it is false.Describe in words when the expression p ∧ q ∧ r ∧ s ∧ t is true and when it is false.





Show whether the following logical expressions are tautologies, contradictions or neither.
(p ∨ q) ∨ (q → p)(p → q) ↔ (p ∧ ¬q)(p → q) ↔ p


Determine whether the pair of logical expressions are logically equivalent.
Prove your answer. If the pair is logically equivalent, then use a truth table
to prove your answer.
¬(p ∨ ¬q) and ¬p ∧ q
¬(p ∨ ¬q) and ¬p ∧ ¬q
p ∧ (p → q)  and p → q
p ∧ (p → q)  and p ∧ q



Below are several proofs showing that two logical expressions are logically equivalent.
Label the steps each proof with the law used.

(p → q) ∧ (p ∨ q)(¬p ∨ q) ∧ (p ∨ q)(¬p ∧ p) ∨ qF ∨ qq



(¬p ∨ q) → (p ∧ q)¬(¬p ∨ q) ∨ (p ∧ q)(¬¬p ∧ ¬q) ∨ (p ∧ q)(p ∧ ¬q) ∨ (p ∧ q)p ∧ (¬q ∨ q)p ∧ (T)p



(p → q) ∧ (p → r)(¬p ∨ q) ∧ (p → r)(¬p ∨ q) ∧ (¬p ∨ r)¬p ∨ (q ∧ r)p →(q ∧ r)






Use the laws of propositional logic to prove the following:
¬p → ¬q ≡ q → p(p → r) ∨ (q → r) ≡ (p ∧ q) → r¬(p ∨ (¬p ∧ q)) ≡ ¬p ∧ ¬q


Predicates P and Q are defined below. The domain of discourse is the set
of all positive integers.
P(x): x is primeQ(x): x is a perfect square
Are the following logical expressions propositions? If the answer is yes,
indicate whether the statement is true or false.
P(x)P(2)∀x (Q(x) → ¬P(x))(∀x Q(x)) ∧ P(x)P(3) ∧ Q(49)



Consider the following statements in English.
Write a logical expression with the same meaning.
The domain of discourse must be the set of all real numbers.
There is a number whose cube is equal to -2.The square of every number is at least 0The reciprocal of every number between 0 and 1 is greater than 1.



In the following question, the domain of discourse is a group of people.
You can assume that Olga is a particular individual in the group.
Define the following predicates:
S(x): x was sick yesterday.W(x): x went to work yesterday.G(x): x went to the gym yesterday.
Translate the following English statements into a logical expression
with the same meaning:
At least one person was sick yesterday.No one went to work yesterday.Olga was sick yesterday, but she went to the gym.Someone who was sick yesterday went to work.Everyone who was sick yesterday did not go to work.Everyone who did not got work yesterday was sick.Someone who was sick yesterday went to the gym and work.Everyone who did not go to work or did not go to the gym was sick.



In the following question, the domain of discourse is the set of employees
of a company. Define the following predicates as follows:
A(x): x is on the board of directors.E(x): x earns more than $100,000.W(x): x works more than 60 hours per week.
Translate the following logical expressions into English:
∀x (A(x)→E(x))∃x (E(x) ∧ ¬W(x))∀x (W(x) → E(x))∃x (¬A(x) ∧ E(x))
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/admissions/transfer/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Chuyển tiếp « TUYỂN SINH « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                TUYỂN SINH
Thông tin chi tiết về yêu cầu tuyển sinh, hạn chót nộp đơn và chỉ dẫn làm cho đơn xin nhập học phong phú            
            

            

                Sinh viên năm nhấtChuyển tiếpNhà ởHỗ trợ Tài chínhChỉ dẫn nộp đơn                    
            
                    
            
    Chuyển tiếp

Bren:ICS có những thỏa thuận liên kết với nhiều trường cao đẳng cộng đồng California cho phép bạn tham gia những khóa học để giúp bạn không chỉ đáp ứng được những tiêu chí tuyển sinh mà còn phù hợp với những yêu cầu việc cấp bằng của chúng tôi. Nếu bạn chưa tìm được trường đại học để chuyển tiếp, hãy truy cập www.assist.org để xem những thỏa thuận liên kết mới nhất, đặc biệt là giữa trường cao đẳng cộng đồng của bạn với UC Irvine. Nếu bạn lên kế hoạch đúng, phần lớn các chuyên ngành học của chúng tôi hỗ trợ bạn khi bắt đầu đáp ứng những yêu cầu của chuyên ngành học ở hệ học cao hơn trong khóa học đầu tiên của bạn với tư cách là sinh viên của Bren:ICS và UCI.


Một số trường cao đẳng cộng đồng như Orange Coast College, Long Beach City College, và Fullerton College có một chương trình hợp tác chuyên sâu và trực tiếp hơn với chúng tôi được gọi là Smart-ICS. Để biết thêm thông tin về thỏa thuận này , hãy ghé thăm Khoa Khoa học Điện toán (CS) ở một trong những trường cao đẳng cộng đồng này.


Nhà trường cung cấp nhiều nguồn thông tin đa dạng dành cho sinh viên năm nhất cùng những thông tin chi tiết về mọi phương diện của quy trình tuyển sinh. Chúng tôi đặc biệt khuyến khích các bạn hãy cùng khám phá qua những kênh thông tin sau đây:



Chuyên trang dành cho những ứng viên triển vọng: http://www.uci.edu/prospective.php


Tuyển sinh: http://www.admissions.uci.edu/


Những câu hỏi thường gặp: http://www.admissions.uci.edu/resources/faq.html 

Xuất bản phẩm trên mạng: http://www.admissions.uci.edu/publications/online_publications.html 

và đừng quên con vật lấy khước của chúng tôi, Peter the Anteater: http://www.uci.edu/peter/


Hiện tại, số lượng sinh viên theo học hệ đại học ở Bren:ICS là 850 sinh viên trong tổng số gần 22.000 sinh viên UC Irvine. GPA bình quân đối với sinh viên năm nhất năm 2010 là 3,89, với điểm số SAT trung bình là 1822.


                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/admissions/transfer/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
轉學 « 入學 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                入學
入學申請要求、申請期限，以及申請書撰寫秘訣            
            

            

                新生轉學住宿獎助學金申請手續提示                    
            
                    
            
    轉學
    	        
	            
	            貝林資科院和加州各社區大學訂有學分抵免協議，不但讓你修讀符合入學條件的課程，而且可抵免獲得本校文憑必要的學分。  如果你尚未申辦，請上www.assist.org網站，查詢目前就讀社區大學和加大爾灣分校簽訂的學分抵免協議。  如果規劃得宜，大部分科系就能在你進入貝林資科院和加大爾灣分校的第一季，讓你選讀高級必修課程。
	            
	            
	            
	            某些社區大學（例如Orange Coast College、Long Beach City College和Fullerton College）設有更直接專門的學分抵免方案，稱為Smart-ICS。  詳情請到這些社區大學資訊工程系的系辦親自洽詢。
	            
	            
	             
	          準新鮮人可在校內獲得豐富的資訊，以及所有入學程序的詳細說明。 我們特別鼓勵你詳讀以下網頁：
	          
	          
	          
	          準學生： http://www.uci.edu/prospective.php
	          
	          
	          
	          入學方式： http://www.admissions.uci.edu/
	          
	          
	          
	          常見問題： http://www.admissions.uci.edu/resources/faq.html 
	          
	          
	          
	          線上文件： http://www.admissions.uci.edu/publications/online_publications.html 
	          
    	       
    	      
    	      也別忘了本校的吉祥物食蟻獸Peter： http://www.uci.edu/peter/
    	       
    	      
    	      
    	      目前貝林資科院大學部共有850名學生，加大爾灣分校學生總數則將近22,000人。 2010年入學新生GPA平均分數是3.89，SAT平均分數是1822分。
    	      

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/admissions/transfer/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
편입 « 입학 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                입학
자세한 지원 요건, 지원 마감일, 좋은 지원서를 만드는 요령            
            

            

                신입생편입기숙사학자금 지원지원 요령                    
            
                    
            
    편입
    	        
	            
	            Bren:ICS는 본교 입학 기준에 맞을 뿐 아니라 본교 학위 요건에도 적용되는 과정을 밟을 수 있는 캘리포니아 커뮤니티 칼리지와 공식학점인정협정을 맺고 있습니다.  아직 이렇게 학점을 받아본 적이 없다면, www.assist.org에서 여러분의 커뮤니티 칼리지와 UC 어바인 간에 특별히 맺은 최신 공식학점인정협정에 대해 살펴보십시오.  계획을 제대로 세우면, 여러분이 본교 대부분의 전공에서 Bren:ICS와 UCI 학생으로서 첫 학기에 들어와 전공과정의 전공필수과목을 시작할 때 많은 도움이 됩니다.
	            
	            
	            
	            오렌지 코스트 칼리지(Orange Coast College), 롱 비치 시티 칼리지(Long Beach City College), 풀러톤 칼리지(Fullerton College)와 같은 일부 커뮤니티 칼리지는 Smart-ICS라는 더욱 직접적이고 특화된 편입 프로그램을 실시하고 있습니다.  이 협정에 관한 자세한 내용이 궁금하시면 이들 커뮤니티 칼리지의 CS 부서에 문의하시기 바랍니다.
	            
	            
	             
	          본교는 예비 신입생들을 위한 풍부한 정보는 물론 입학 절차의 모든 측면에 관한 상세한 정보를 제공하고 있습니다. 특히 다음 부분을 살펴보실 것을 권장합니다.
	          
	          
	          
	          예비 학생: http://www.uci.edu/prospective.php
	          
	          
	          
	          입학: http://www.admissions.uci.edu/
	          
	          
	          
	          자주 묻는 질문(FAQ): http://www.admissions.uci.edu/resources/faq.html 
	          
	          
	          
	          온라인 출간물: http://www.admissions.uci.edu/publications/online_publications.html 
	          
    	       
    	      
    	      본교 마스코트인 개미핥기 피터(Peter the Anteater)도 잊지 마세요. http://www.uci.edu/peter/
    	       
    	      
    	      
    	      현재, Bren:ICS의 학부생 입학자 수는 850명이며, UC 어바인 전체로 하면 신입생이 총 22,000명 가까이 됩니다. 2010년에 입학한 신입생들의 GPA 평균은 3.89였고, SAT 평균 점수는 1,822점이었습니다.
    	      

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/admissions/transfer/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
轉學 « 入學 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                入學
入學申請要求、申請期限，以及申請書撰寫秘訣            
            

            

                新生轉學住宿獎助學金申請手續提示                    
            
                    
            
    轉學
    	        
	            
	            貝林資科院和加州各社區大學訂有學分抵免協議，不但讓你修讀符合入學條件的課程，而且可抵免獲得本校文憑必要的學分。  如果你尚未申辦，請上www.assist.org網站，查詢目前就讀社區大學和加大爾灣分校簽訂的學分抵免協議。  如果規劃得宜，大部分科系就能在你進入貝林資科院和加大爾灣分校的第一季，讓你選讀高級必修課程。
	            
	            
	            
	            某些社區大學（例如Orange Coast College、Long Beach City College和Fullerton College）設有更直接專門的學分抵免方案，稱為Smart-ICS。  詳情請到這些社區大學資訊工程系的系辦親自洽詢。
	            
	            
	             
	          準新鮮人可在校內獲得豐富的資訊，以及所有入學程序的詳細說明。 我們特別鼓勵你詳讀以下網頁：
	          
	          
	          
	          準學生： http://www.uci.edu/prospective.php
	          
	          
	          
	          入學方式： http://www.admissions.uci.edu/
	          
	          
	          
	          常見問題： http://www.admissions.uci.edu/resources/faq.html 
	          
	          
	          
	          線上文件： http://www.admissions.uci.edu/publications/online_publications.html 
	          
    	       
    	      
    	      也別忘了本校的吉祥物食蟻獸Peter： http://www.uci.edu/peter/
    	       
    	      
    	      
    	      目前貝林資科院大學部共有850名學生，加大爾灣分校學生總數則將近22,000人。 2010年入學新生GPA平均分數是3.89，SAT平均分數是1822分。
    	      

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/admissions/transfer/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Transfer « Admissions « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Admissions
Details about requirements, application deadlines, and tips for enhancing your application            
            

            

                FreshmenTransferHousingFinancial AidApplication Tips                    
            
                    
            
    Transfer
                
                
                The Bren School has articulation agreements with California community colleges that allow you to take courses that not only meet our admissions criteria, but can also be applied to our degree requirements.  If you have not done so already, check out www.assist.org for the latest articulation agreement specifically between your community college and UC Irvine.  If you plan it right, most of our majors support you in starting with your upper-division major requirements in your first quarter as a Bren School and UCI student.
                
                
                
                Some community colleges such as Orange Coast College, Long Beach City College, and Fullerton College, have a more direct and specialized articulation program called Smart-ICS.  For more information about this agreement, please visit the CS department at one of these community colleges.
                
                
                 
              The campus offers a wealth of information for prospective freshmen, as well as details on all aspects of the admissions process. We particularly encourage you to explore the following:
              
              
              
              Admissions: http://www.admissions.uci.edu/
              

              
              Online publications: http://www.admissions.uci.edu/publications/online_publications.html 
              
               
              
              and do not forget our mascot, Peter the Anteater: http://www.uci.edu/peter/
               
              
              
              Currently, undergraduate enrollment in the Bren School is about 2,000 students, out of a total of almost 23,500 for UC Irvine as a whole.
              

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/admissions/transfer/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Transfer « Admissions « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Admissions
Details about requirements, application deadlines, and tips for enhancing your application            
            

            

                FreshmenTransferHousingFinancial AidApplication Tips                    
            
                    
            
    Transfer
                
                
                The Bren School has articulation agreements with California community colleges that allow you to take courses that not only meet our admissions criteria, but can also be applied to our degree requirements.  If you have not done so already, check out www.assist.org for the latest articulation agreement specifically between your community college and UC Irvine.  If you plan it right, most of our majors support you in starting with your upper-division major requirements in your first quarter as a Bren School and UCI student.
                
                
                
                Some community colleges such as Orange Coast College, Long Beach City College, and Fullerton College, have a more direct and specialized articulation program called Smart-ICS.  For more information about this agreement, please visit the CS department at one of these community colleges.
                
                
                 
              The campus offers a wealth of information for prospective freshmen, as well as details on all aspects of the admissions process. We particularly encourage you to explore the following:
              
              
              
              Admissions: http://www.admissions.uci.edu/
              

              
              Online publications: http://www.admissions.uci.edu/publications/online_publications.html 
              
               
              
              and do not forget our mascot, Peter the Anteater: http://www.uci.edu/peter/
               
              
              
              Currently, undergraduate enrollment in the Bren School is about 2,000 students, out of a total of almost 23,500 for UC Irvine as a whole.
              

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/admissions/transfer/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Chuyển tiếp « TUYỂN SINH « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                TUYỂN SINH
Thông tin chi tiết về yêu cầu tuyển sinh, hạn chót nộp đơn và chỉ dẫn làm cho đơn xin nhập học phong phú            
            

            

                Sinh viên năm nhấtChuyển tiếpNhà ởHỗ trợ Tài chínhChỉ dẫn nộp đơn                    
            
                    
            
    Chuyển tiếp

Bren:ICS có những thỏa thuận liên kết với nhiều trường cao đẳng cộng đồng California cho phép bạn tham gia những khóa học để giúp bạn không chỉ đáp ứng được những tiêu chí tuyển sinh mà còn phù hợp với những yêu cầu việc cấp bằng của chúng tôi. Nếu bạn chưa tìm được trường đại học để chuyển tiếp, hãy truy cập www.assist.org để xem những thỏa thuận liên kết mới nhất, đặc biệt là giữa trường cao đẳng cộng đồng của bạn với UC Irvine. Nếu bạn lên kế hoạch đúng, phần lớn các chuyên ngành học của chúng tôi hỗ trợ bạn khi bắt đầu đáp ứng những yêu cầu của chuyên ngành học ở hệ học cao hơn trong khóa học đầu tiên của bạn với tư cách là sinh viên của Bren:ICS và UCI.


Một số trường cao đẳng cộng đồng như Orange Coast College, Long Beach City College, và Fullerton College có một chương trình hợp tác chuyên sâu và trực tiếp hơn với chúng tôi được gọi là Smart-ICS. Để biết thêm thông tin về thỏa thuận này , hãy ghé thăm Khoa Khoa học Điện toán (CS) ở một trong những trường cao đẳng cộng đồng này.


Nhà trường cung cấp nhiều nguồn thông tin đa dạng dành cho sinh viên năm nhất cùng những thông tin chi tiết về mọi phương diện của quy trình tuyển sinh. Chúng tôi đặc biệt khuyến khích các bạn hãy cùng khám phá qua những kênh thông tin sau đây:



Chuyên trang dành cho những ứng viên triển vọng: http://www.uci.edu/prospective.php


Tuyển sinh: http://www.admissions.uci.edu/


Những câu hỏi thường gặp: http://www.admissions.uci.edu/resources/faq.html 

Xuất bản phẩm trên mạng: http://www.admissions.uci.edu/publications/online_publications.html 

và đừng quên con vật lấy khước của chúng tôi, Peter the Anteater: http://www.uci.edu/peter/


Hiện tại, số lượng sinh viên theo học hệ đại học ở Bren:ICS là 850 sinh viên trong tổng số gần 22.000 sinh viên UC Irvine. GPA bình quân đối với sinh viên năm nhất năm 2010 là 3,89, với điểm số SAT trung bình là 1822.


                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/admissions/transfer/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
편입 « 입학 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                입학
자세한 지원 요건, 지원 마감일, 좋은 지원서를 만드는 요령            
            

            

                신입생편입기숙사학자금 지원지원 요령                    
            
                    
            
    편입
    	        
	            
	            Bren:ICS는 본교 입학 기준에 맞을 뿐 아니라 본교 학위 요건에도 적용되는 과정을 밟을 수 있는 캘리포니아 커뮤니티 칼리지와 공식학점인정협정을 맺고 있습니다.  아직 이렇게 학점을 받아본 적이 없다면, www.assist.org에서 여러분의 커뮤니티 칼리지와 UC 어바인 간에 특별히 맺은 최신 공식학점인정협정에 대해 살펴보십시오.  계획을 제대로 세우면, 여러분이 본교 대부분의 전공에서 Bren:ICS와 UCI 학생으로서 첫 학기에 들어와 전공과정의 전공필수과목을 시작할 때 많은 도움이 됩니다.
	            
	            
	            
	            오렌지 코스트 칼리지(Orange Coast College), 롱 비치 시티 칼리지(Long Beach City College), 풀러톤 칼리지(Fullerton College)와 같은 일부 커뮤니티 칼리지는 Smart-ICS라는 더욱 직접적이고 특화된 편입 프로그램을 실시하고 있습니다.  이 협정에 관한 자세한 내용이 궁금하시면 이들 커뮤니티 칼리지의 CS 부서에 문의하시기 바랍니다.
	            
	            
	             
	          본교는 예비 신입생들을 위한 풍부한 정보는 물론 입학 절차의 모든 측면에 관한 상세한 정보를 제공하고 있습니다. 특히 다음 부분을 살펴보실 것을 권장합니다.
	          
	          
	          
	          예비 학생: http://www.uci.edu/prospective.php
	          
	          
	          
	          입학: http://www.admissions.uci.edu/
	          
	          
	          
	          자주 묻는 질문(FAQ): http://www.admissions.uci.edu/resources/faq.html 
	          
	          
	          
	          온라인 출간물: http://www.admissions.uci.edu/publications/online_publications.html 
	          
    	       
    	      
    	      본교 마스코트인 개미핥기 피터(Peter the Anteater)도 잊지 마세요. http://www.uci.edu/peter/
    	       
    	      
    	      
    	      현재, Bren:ICS의 학부생 입학자 수는 850명이며, UC 어바인 전체로 하면 신입생이 총 22,000명 가까이 됩니다. 2010년에 입학한 신입생들의 GPA 평균은 3.89였고, SAT 평균 점수는 1,822점이었습니다.
    	      

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/raw/private:list_of_demands
##-----------------TITLE------------------------##
private:list_of_demands - CS Theory Wiki
##------------------TEXT------------------------##
Permission Denied




Sorry, you don't have enough rights to continue. Perhaps you forgot to login?




    
    
  
  

  
  
    Trace:
  







  
  
    Login
  

  
  
    
      Article
    
  
  

  
  
    
      Show pagesource
    
    
      
        Search
      
      
        
        
          
           
        
        
      
    
  
  






  
  
      
  
  

  
  
    Navigation
    
      


Main page



Orphan pages



      
    
  
  
    Print/export
    
      
      Printable version
      
    
  
  
    Toolbox
    
      
      What links hereRecent changesUpload fileSite indexPermanent linkCite this page
      
    
  









  
      
    
  
      
      
      
      
      
    
  



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/xhtml/private:list_of_demands
##-----------------TITLE------------------------##
private:list_of_demands - CS Theory Wiki
##------------------TEXT------------------------##
Permission Denied




Sorry, you don't have enough rights to continue. Perhaps you forgot to login?




    
    
  
  

  
  
    Trace:
  







  
  
    Login
  

  
  
    
      Article
    
  
  

  
  
    
      Show pagesource
    
    
      
        Search
      
      
        
        
          
           
        
        
      
    
  
  






  
  
      
  
  

  
  
    Navigation
    
      


Main page



Orphan pages



      
    
  
  
    Print/export
    
      
      Printable version
      
    
  
  
    Toolbox
    
      
      What links hereRecent changesUpload fileSite indexPermanent linkCite this page
      
    
  









  
      
    
  
      
      
      
      
      
    
  



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/xhtml/private:ogre
##-----------------TITLE------------------------##
Optical graph recognition planning - CS Theory Wiki
##------------------TEXT------------------------##
Permission Denied




Sorry, you don't have enough rights to continue. Perhaps you forgot to login?




    
    
  
  

  
  
    Trace:
  







  
  
    Login
  

  
  
    
      Article
    
  
  

  
  
    
      ReadShow pagesourceOld revisions
    
    
      
        Search
      
      
        
        
          
           
        
        
      
    
  
  






  
  
      
  
  

  
  
    Navigation
    
      


Main page



Orphan pages



      
    
  
  
    Print/export
    
      
      Printable version
      
    
  
  
    Toolbox
    
      
      What links hereRecent changesUpload fileSite indexPermanent linkCite this page
      
    
  









  
      
    
  
      
      
      
      
      
    
  



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/raw/private:ogre
##-----------------TITLE------------------------##
Optical graph recognition planning - CS Theory Wiki
##------------------TEXT------------------------##
Permission Denied




Sorry, you don't have enough rights to continue. Perhaps you forgot to login?




    
    
  
  

  
  
    Trace:
  







  
  
    Login
  

  
  
    
      Article
    
  
  

  
  
    
      ReadShow pagesourceOld revisions
    
    
      
        Search
      
      
        
        
          
           
        
        
      
    
  
  






  
  
      
  
  

  
  
    Navigation
    
      


Main page



Orphan pages



      
    
  
  
    Print/export
    
      
      Printable version
      
    
  
  
    Toolbox
    
      
      What links hereRecent changesUpload fileSite indexPermanent linkCite this page
      
    
  









  
      
    
  
      
      
      
      
      
    
  



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/xhtml/openbox_window_manager
##-----------------TITLE------------------------##
openbox_window_manager
##------------------TEXT------------------------##
Pseudo-tiling



Aero-snap behavior is handled by the keyboard shortcuts 
<super>-<alt>-<leftArrow> and 
<super>-<alt>-<rightArrow>
where <super> usually corresponds to the windows key.



Windows can be incrementally resized with the shortcut <super>-<arrow>



By editing the rc.xml file, we can add additional keyboard shortcuts.
Add the following within the <keyboard> </keyboard> section to be able to send a window to one of the four quadrants of the screen using 
<super>-<num_pad_7>, 
<super>-<num_pad_9>, 
<super>-<num_pad_1>, or
<super>-<num_pad_3>


    <keybind key="W-KP_7">
        <action name="UnmaximizeFull"/> 
        <action name="MoveResizeTo">
            <x>0</x>
            <y>0</y>
            <width>50%</width>
            <height>50%</height>
        </action> 
    </keybind>
    <keybind key="W-KP_9">
        <action name="UnmaximizeFull"/> 
        <action name="MoveResizeTo">
            <x>50%</x>
            <y>0</y>
            <width>50%</width>
            <height>50%</height>
        </action> 
    </keybind>
    <keybind key="W-KP_1">
        <action name="UnmaximizeFull"/> 
        <action name="MoveResizeTo">
            <x>0</x>
            <y>50%</y>
            <width>50%</width>
            <height>50%</height>
        </action> 
    </keybind>
    <keybind key="W-KP_3">
        <action name="UnmaximizeFull"/> 
        <action name="MoveResizeTo">
            <x>50%</x>
            <y>50%</y>
            <width>50%</width>
            <height>50%</height>
        </action> 
    </keybind>




  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/xhtml/wiki:nonexisting
##-----------------TITLE------------------------##
wiki:nonexisting - CS Theory Wiki
##------------------TEXT------------------------##
This topic does not exist yet




You've followed a link to a topic that doesn't exist yet. If permissions allow, you may create it by using the Create this page button.




    
    
  
  

  
  
    Trace:
  







  
  
    Login
  

  
  
    
      Article
    
  
  

  
  
    
      Show pagesource
    
    
      
        Search
      
      
        
        
          
           
        
        
      
    
  
  






  
  
      
  
  

  
  
    Navigation
    
      


Main page



Orphan pages



      
    
  
  
    Print/export
    
      
      Printable version
      
    
  
  
    Toolbox
    
      
      What links hereRecent changesUpload fileSite indexPermanent linkCite this page
      
    
  









  
      
    
  
      
      
      
      
      
    
  



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/raw/wiki:nonexisting
##-----------------TITLE------------------------##
wiki:nonexisting - CS Theory Wiki
##------------------TEXT------------------------##
This topic does not exist yet




You've followed a link to a topic that doesn't exist yet. If permissions allow, you may create it by using the Create this page button.




    
    
  
  

  
  
    Trace:
  







  
  
    Login
  

  
  
    
      Article
    
  
  

  
  
    
      Show pagesource
    
    
      
        Search
      
      
        
        
          
           
        
        
      
    
  
  






  
  
      
  
  

  
  
    Navigation
    
      


Main page



Orphan pages



      
    
  
  
    Print/export
    
      
      Printable version
      
    
  
  
    Toolbox
    
      
      What links hereRecent changesUpload fileSite indexPermanent linkCite this page
      
    
  









  
      
    
  
      
      
      
      
      
    
  



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/xhtml/wiki:user:jenny
##-----------------TITLE------------------------##
wiki:user:jenny
##------------------TEXT------------------------##
I am Jenny's page. 



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/xhtml/wiki:ipe_tutorial_introduction
##-----------------TITLE------------------------##
wiki:ipe_tutorial_introduction
##------------------TEXT------------------------##
Table of Contents


Basics
Ipe DocumentStyle sheets
CustomizationsExample Stylesheets
Color-blind colorsTransparencyGradient
Ipelets
CGAL Ipelets
Presentations
Ipe presentation backgroundIpe presentation title
Miscellaneous
LaTeX packages
External resources






Ipe Tutorial: Introduction




This is more of a random list of how-to topics than a tutorial.




Basics




There are three main categories of file for Ipe: 


 Ipe document (.ipe, .pdf, .ps, etc.)
 Style sheets (.isy)
 Ipelets (.lua)




Ipe Document




Ipe can save and open documents in a variety of formats, including xml, pdf, and postscript. See the Ipe Manual for more details.



You can use ipetoipe to convert between these different formats. Sometimes, this might be necessary to fix problems with the program:




Quote character (") in a layer name




Never put quote characters (”) in the name of a layer. Ipe will crash when you try to open such a document.




How to fix it:




Internally, Ipe saves files as xml. Even if you save it as a pdf, Ipe will embed the xml inside the pdf. Ipe must be able to parse this xml in order to properly load a file. However, if you put (”) characters in places that get written as metadata, Ipe will not be able to parse the xml. You will get poorly formatted xml that looks like this:


<page title="&apos;this&quot; is fixed for titles">
<layer name="don't_do_"this""/>
<view layers="don't_do_"this"" active="don't_do_"this""/>
<text layer="don't_do_"this"" transformations="translations" pos="128 704" stroke="black" type="label" width="36.862" height="6.128" depth="0" valign="baseline">test text</text>
</page>




When you try and open this file, you will get an error like this:


  Document '/home/jsimons/Desktop/bad_ipe.ipe' could not be opened
  Parsing error at position 6051



Ipe is helpfully trying to tell you which character the xml parser failed on. To fix it, you have to manually edit the xml. If you saved as .ipe, then just open up the file in your favorite text editor and remove the extra quotes from the xml. If you saved it as a pdf, you first have to extract the xml from the pdf (since in the pdf it's saved as a byte stream, you can't see the plain text). One easy way to do this is to run


ipetoipe -xml input.pdf output.ipe



Style sheets




Stylesheets are text files that can be included to customize various formatting aspects of an Ipe document. For example, you can use it to define more colors, add transparency levels, or create gradients. Stylesheets work a bit like preambles in LaTeX. Multiple stylesheets can be used in one Ipe document, and a single stylesheet can be reused over multiple documents.



By default, Ipe uses a basic style sheet basic.isy. To use your own stylesheet, you can either have Ipe automatically load it for every document, or you add it manually for each document. You would want to use the former option for things that are useful across documents, like color definition and transparency levels, and the latter option for things specific to the document, like backgrounds and location of the title text.



Regardless of how you have Ipe load the stylesheet, if the stylesheet changes, you must do Edit > Update style sheets for Ipe to see the changes.




Loading stylesheets automatically




Here's how we can add and change the default stylesheets loaded by Ipe.


 Add the stylesheets you want into a styles directory. Typically this is ~/.ipe/styles (you may need to create the directory yourself).
 In your customization Ipelet, add the names of all the stylesheets you want to load automatically: 
prefs.styles = { "basic", "good_colors" }






Adding stylesheets manually




The workflow of using a stylesheet specific to a document:


 Create or open a stylesheet in a text editor. Here is a barebones example: my-stylesheet.isy<ipestyle name="my-stylesheet">
<!--ipe customization-->
</ipestyle>


 Edit it. Some examples of things to add can be found in this tutorial.
 Save it.
 Include it in the Ipe document: in Ipe, go to Edit > Style sheets > Add.
 Update it: in Ipe, click Edit > Update style sheets. This must be done every time an included stylesheet is modified.




Customizations




You can use Ipelets to customize the behavior of Ipe.
http://ipe7.sourceforge.net/manual/manual_40.html



The customization script is written as an Ipelet. The easiest way to do the customization is to copy prefs.lua, shortcuts.lua, and mouse.lua in the Ipe lua directory to your Ipelets directory and modify them to your liking. (Use -show-configuration to see where these directories are.)



The mouse.lua is also good for discovering all the useful mouse shortcuts in Ipe.




Example Stylesheets




Color-blind colors

good_colors.isy<?xml version="1.0"?>
<!DOCTYPE ipestyle SYSTEM "ipe.dtd">
<ipestyle name="good colors">
<color name="good blue" value="0 0.506 0.804"/>
<color name="good red" value="0.737 0.118 0.278"/>
<color name="good yellow" value="0.996 0.761 0"/>
<color name="good green" value="0 0.573 0.275"/>
<color name="good pink" value="0.8 0.2 0.8"/>
</ipestyle>




Transparency

transparency.isy<ipestyle name="transparency">
<opacity name="75%" value="0.75"/>
<opacity name="50%" value="0.5"/>
<opacity name="25%" value="0.25"/>
<opacity name="10%" value="0.1"/>
<opacity name="20%" value="0.2"/>
<opacity name="30%" value="0.3"/>
<opacity name="40%" value="0.4"/>
<opacity name="60%" value="0.6"/>
<opacity name="70%" value="0.7"/>
<opacity name="80%" value="0.8"/>
<opacity name="90%" value="0.9"/>
</ipestyle>




Gradient



Here is an example code snippet to include in your stylesheet:

<gradient name="mygradient" type="axial" extend="yes" coords="0 0 0 600">
  <stop offset="0.25" color="0.8 0.9 0.8"/>
  <stop offset="0.48" color="1 1 1"/>
  <stop offset="0.58" color="1 1 1"/>
  <stop offset="0.75" color="0.8 0.9 0.8"/>
</gradient>


Axial means the gradient is along a single direction. The other option is radial (needs to checked). The coordinates specify the two endpoints of the direction vector. The stops represent the different points along the direction vector at which color should change.



Once the stylesheet uploaded, the gradient option should show up in the context menu of objects that can have a gradient fill.




Ipelets




You can expand the existing functionality of Ipe by using Ipelets, which are Lua scripts that Ipe runs on-the-fly. The installed Ipelets can be accessed and used under the “Ipelets” menu item.



Each Ipelet consists of a single Lua source file with other support files. To install an Ipelet, simply save the files in your Ipelets directory. You can run ipe -show-configuration to find out where that directory is (typically, this is ~/.ipe/ipelets).



The bottom of the Ipe Wiki has a good list of Ipelets. They include things like automatic page numbering, background boxes for text, and graph drawing tools (where edges will follow when vertices are dragged).




CGAL Ipelets



This is assuming that Ipe is already installed and runs successfully.



On debian:

0. Make sure you have cmake
    * $ sudo apt-get install cmake 
1. Get the required cgal library packages and all their dependencies
    * $ sudo apt-get install libcgal-dev
2. Get the demos and examples files
    * $ sudo apt-get install libcgal-demo
    * For me, the demo was installed to /usr/share/doc/libcgal-demo/
3. Unpack the demo tar somewhere reasonable
    * $ mkdir ~/CGAL
    * $ cd ~/CGAL
    * $ tar xzf /usr/share/doc/libcgal-demo/demo.tar.gz
4. Prepare the demos to be compiled
    * $ cd demo
    * $ cmake .
5. Compile the demo(s). 
To make just the Ipelets, go to the ready-to-compile subdirectory (yes, it's another nested level, demo/demo/), and make.
It will take a few minutes to compile all the Ipelets
    * $ cd ~/CGAL/demo/demo/CGAL_ipelets/
    * $ make
6. Copy the compiled output '*.so' files and the '*.lua' into the Ipelet directory. 
   On the default 7.1.3 Ipe installation, the command is:
    * $ sudo find . -name '*.so' -exec cp '{}' /usr/local/lib/ipe/7.1.3/ipelets/ \;
    * $ sudo find ~/CGAL/demo/CGAL_ipelets/lua/ -name '*.lua' -exec cp '{}' /usr/local/lib/ipe/7.1.3/ipelets/ \;



Presentations




Ipe presentation background




To use an Ipe drawing as a background:


 group the objects of the drawing
 copy the XML code of the group object
 paste it inside the following code snippet in your Ipe stylesheet:<symbol name="Background" xform="yes">
<!--insert XML here-->
</symbol>




The symbol name has to be Background spelled exactly that way. The xform option allows you to only store a single copy of the background in the PDF file.



To turn off the background on a specific page, add a layer called BACKGROUND. Setting that layer to visible/invisible seems to have no effect.




Ipe presentation title




Add something like this to your stylesheet.

<color name="titlecolor" value="1 0.5 0.5"/>
<textsize name="titlesize" value="\large\bf" />
<textstretch name="titlesize" value="2.8" />
<titlestyle pos="25 554" size="titlesize" color="titlecolor" halign="left" valign="baseline" />


The textsize allows you to specify the LaTeX code for the font you want to use. The textstretch specifies how much to magnify the LaTex generated text, which is useful to enlargen text in a presentation. The titlestyle is where you specify the appearance and position of your title text.



The textsize and textstretch can be used alone to define a text style (size and shape). They simply have to have the same name attribute. This is a little hacky because this was only meant to define a text size and not text style.




Miscellaneous




LaTeX packages




To include a LaTeX package in Ipe, go to Edit > Document Properties > Latex preamble and add the LaTeX command \usepackage{my-package}.



Alternatively, add the following in a stylesheet:

<preamble>
\usepackage{my-package}
</preamble>


You can also put whatever LaTeX commands usually go in the preamble of a LaTeX document in the <preamble> tags, such as \input{}, \newcommand{}, etc.




External resources

 Ipe website
 Ipe wiki




  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/xhtml/wiki:navigation
##-----------------TITLE------------------------##
wiki:navigation
##------------------TEXT------------------------##
Main page



Orphan pages



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/xhtml/wiki:user:joe
##-----------------TITLE------------------------##
wiki:user:joe
##------------------TEXT------------------------##
Joe's Homepage



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/raw/playground:playground
##-----------------TITLE------------------------##
playground:playground - CS Theory Wiki
##------------------TEXT------------------------##
This topic does not exist yet




You've followed a link to a topic that doesn't exist yet. If permissions allow, you may create it by using the Create this page button.




    
    
  
  

  
  
    Trace:
  







  
  
    Login
  

  
  
    
      Article
    
  
  

  
  
    
      Show pagesource
    
    
      
        Search
      
      
        
        
          
           
        
        
      
    
  
  






  
  
      
  
  

  
  
    Navigation
    
      


Main page



Orphan pages



      
    
  
  
    Print/export
    
      
      Printable version
      
    
  
  
    Toolbox
    
      
      What links hereRecent changesUpload fileSite indexPermanent linkCite this page
      
    
  









  
      
    
  
      
      
      
      
      
    
  



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/xhtml/playground:playground
##-----------------TITLE------------------------##
playground:playground - CS Theory Wiki
##------------------TEXT------------------------##
This topic does not exist yet




You've followed a link to a topic that doesn't exist yet. If permissions allow, you may create it by using the Create this page button.




    
    
  
  

  
  
    Trace:
  







  
  
    Login
  

  
  
    
      Article
    
  
  

  
  
    
      Show pagesource
    
    
      
        Search
      
      
        
        
          
           
        
        
      
    
  
  






  
  
      
  
  

  
  
    Navigation
    
      


Main page



Orphan pages



      
    
  
  
    Print/export
    
      
      Printable version
      
    
  
  
    Toolbox
    
      
      What links hereRecent changesUpload fileSite indexPermanent linkCite this page
      
    
  









  
      
    
  
      
      
      
      
      
    
  



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/xhtml/wiki:user:michael
##-----------------TITLE------------------------##
wiki:user:michael
##------------------TEXT------------------------##
Hi everybody!



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/xhtml/wiki:pagename
##-----------------TITLE------------------------##
wiki:pagename - CS Theory Wiki
##------------------TEXT------------------------##
This topic does not exist yet




You've followed a link to a topic that doesn't exist yet. If permissions allow, you may create it by using the Create this page button.




    
    
  
  

  
  
    Trace:
  







  
  
    Login
  

  
  
    
      Article
    
  
  

  
  
    
      Show pagesource
    
    
      
        Search
      
      
        
        
          
           
        
        
      
    
  
  






  
  
      
  
  

  
  
    Navigation
    
      


Main page



Orphan pages



      
    
  
  
    Print/export
    
      
      Printable version
      
    
  
  
    Toolbox
    
      
      What links hereRecent changesUpload fileSite indexPermanent linkCite this page
      
    
  









  
      
    
  
      
      
      
      
      
    
  



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/raw/wiki:pagename
##-----------------TITLE------------------------##
wiki:pagename - CS Theory Wiki
##------------------TEXT------------------------##
This topic does not exist yet




You've followed a link to a topic that doesn't exist yet. If permissions allow, you may create it by using the Create this page button.




    
    
  
  

  
  
    Trace:
  







  
  
    Login
  

  
  
    
      Article
    
  
  

  
  
    
      Show pagesource
    
    
      
        Search
      
      
        
        
          
           
        
        
      
    
  
  






  
  
      
  
  

  
  
    Navigation
    
      


Main page



Orphan pages



      
    
  
  
    Print/export
    
      
      Printable version
      
    
  
  
    Toolbox
    
      
      What links hereRecent changesUpload fileSite indexPermanent linkCite this page
      
    
  









  
      
    
  
      
      
      
      
      
    
  



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/raw/some:namespaces
##-----------------TITLE------------------------##
some:namespaces - CS Theory Wiki
##------------------TEXT------------------------##
This topic does not exist yet




You've followed a link to a topic that doesn't exist yet. If permissions allow, you may create it by using the Create this page button.




    
    
  
  

  
  
    Trace:
  







  
  
    Login
  

  
  
    
      Article
    
  
  

  
  
    
      Show pagesource
    
    
      
        Search
      
      
        
        
          
           
        
        
      
    
  
  






  
  
      
  
  

  
  
    Navigation
    
      


Main page



Orphan pages



      
    
  
  
    Print/export
    
      
      Printable version
      
    
  
  
    Toolbox
    
      
      What links hereRecent changesUpload fileSite indexPermanent linkCite this page
      
    
  









  
      
    
  
      
      
      
      
      
    
  



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://ironwood.ics.uci.edu/_export/xhtml/some:namespaces
##-----------------TITLE------------------------##
some:namespaces - CS Theory Wiki
##------------------TEXT------------------------##
This topic does not exist yet




You've followed a link to a topic that doesn't exist yet. If permissions allow, you may create it by using the Create this page button.




    
    
  
  

  
  
    Trace:
  







  
  
    Login
  

  
  
    
      Article
    
  
  

  
  
    
      Show pagesource
    
    
      
        Search
      
      
        
        
          
           
        
        
      
    
  
  






  
  
      
  
  

  
  
    Navigation
    
      


Main page



Orphan pages



      
    
  
  
    Print/export
    
      
      Printable version
      
    
  
  
    Toolbox
    
      
      What links hereRecent changesUpload fileSite indexPermanent linkCite this page
      
    
  









  
      
    
  
      
      
      
      
      
    
  



  DokuWiki Appliance - Powered by TurnKey Linux
##------------------URL-------------------------##
http://www.ics.uci.edu/~welling/teaching/courses.html
##-----------------TITLE------------------------##
Untitled Document
##------------------TEXT------------------------##
 

Courses taught by M.Welling
			Blog on frequently asked questions for "Introduction-AI" courses (ICS 171 & 271)
			Blog on frequently asked questions for "Introduction-ML" courses (ICS 273A)
			
			
			
				UCI 2011/2012
				
					
						winter 2012: MATH/CS 77B iCAMP Course on Collaborative Filtering (undergraduate course)
						winter 2012: CS 175 Project in AI (undergraduate course)
						fall 2011:��CS 273A Intro Machine Learning (graduate course)
						fall/winter/spring 2011:��CompSci 279S SEM IN ARTIF INTELL [speaker schedule]  (graduate course)
					
				
			
			
				
					
						
					
				
			
			UCI 2010/2011
			
				
					winter 2011: CS 273A Intro Machine Learning (graduate course)
					winter 2011: CS 175 Project in AI (undergraduate course)
					fall 2010:��CS 171 Intro AI (undergraduate course)
					
					UCI 2009/2010
				
			
			
				spring 2010: ICS 273A Intro Machine Learning (graduate course)
				fall 2009: ICS 271 Intro AI (graduate course)
				fall 2009:��ICS 171 Intro AI  (undergraduate course)
			
			
			UCI 2008/2009
			
				spring 2009:  CompSci 273A,  Machine Learning  
				winter 2009: ComSci 171,  Introduction to AI
				fall 2008:����ComSci 171,  Introduction to AI
				fall 2008: CompSci 295,  Research Project Machine Learning
			
			
			UCI 2007/2008
			sabbatical leave 
			
			UCI 2006/2007

spring 2007: ICS 171 Introduction to AI

winter 2007: ICS 178 Machine Learning and Data Mining (new course)

fall 2006:       ICS
273A  Machine Learning



























UCI 2005/2006

spring 2006: ICS
274B Learning in Graphical Models

winter 2006: ICS 171 Introduction to AI

fall 2005:      ICS 171 Introduction to AI



























UCI 2004/2005

spring 2005: ICS Math 6A, Discrete Mathematics and Its
Applications

winter 2005: ICS 273B Kernel-Based Learning

fall 2004:      ICS 279, Seminar in Artificial Intelligence



































UCI 2003/2004

winter 2004: ICS 280, Learning in
Graphical Models

spring 2004: ICS Math 6A, Discrete Mathematics and Its
Applications





































Gatsby Unit 2000

Unsupervised Learning



































Caltech 2000

CS/CNS/EE 156B Learning Systems
##------------------URL-------------------------##
http://www.ics.uci.edu/~welling/publications_physics/publications_physics.html
##-----------------TITLE------------------------##
Publications Physics
##------------------TEXT------------------------##
 

Max Welling's
Publications in Physics

H.J. Matschull & M.Welling (1998) 
Quantum mechanics of a point particle in 2+1 dimensional gravity
Class. Quant. Grav. 15, p. 2981 [ps]

M. Welling
(1998) 
Explicit solutions for point particles and black holes in space
of constant curvature in 2+1 dimensional gravity
Nucl. Phys. B, p. 515 [ps]

M. Welling
(1998) 
Winding solutions for the two particle system in 2+1 gravity
Class. Quant. Grav. 15, p. 613 [ps]

M. Welling
(1997) 
Two particle quantum mechanics in 2+1 gravity using non-commuting
coordinates
Class. Quant. Grav. 14, p. 3313 [ps]

M. Welling
(1997) 
One particle quantum mechanics in 2+1 gravity using non-commuting
coordinates
Nucl. Phys. B (Proc. Suppl.) 57, p. 346 [ps]

M. Welling
(1997) 
The torus universe in the polygon approach to 2+1 dimensional
gravity
Class. Quant. Grav. 14, p. 929 [ps]

M. Welling & M. Bijlsma (1996)
Pauli-Lubanski scalar in the polygon approach to 2+1 dimensional
gravity 
Class. Quant. Grav. 13, p. 1769 [ps]

M. Welling
(1996) 
Some approaches to 2+1 dimensional gravity coupled to point
particles
Proceedings of the 7th summer school: Theoretical and Mathematical
Physics, Kazan, Russia [ps]

M. Welling
(1996)
Gravity in 2+1 dimensions as a Riemann-Hilbert problem
Class. Quant. Grav. 13, p. 653 [ps]

 

(All papers, including alternative
formats, are also downloadable from the HEP-SPIRES
database)


		
		[Back to Max Welling's's
home page] 
##------------------URL-------------------------##
http://www.ics.uci.edu/~welling/NSFcareer/NSFcareer.html
##-----------------TITLE------------------------##
Max Welling NSF Career Page
##------------------TEXT------------------------##
 
		
		
			
				Undirected Bipartite Graphical Models
					
				with applications to Image Restoration and Information Retrieval.
			
		
		
			
				
			
		
		
			
				Max Welling
							University of California Irvine
						
				
				This project is supported by an NSF Career Grant.
					I like to personally thank NSF for supporting my research during the past 5 years. 
			
		
		
			
				
					
						
							
								
									
									
									Introduction
									Max Welling (2007)
											Products of Experts
											ScholarPedia 2007 [pdf,url]
									Most large scale data mining problems require efficient algorithms for processing, querying and storing information. It has been recognized that these algorithms need to be able to model uncertainty in our model assumptions and noise in the data. Probabilistic models and in particular graphical models are the ideal framework for these tasks, but also pose new computational challenges. Directed graphical models have been the dominant paradigm for many large scale data applications. However, properties inherent to the semantics of this class of models form an important hurdle for processing of queries and learning from data. The current approach to deal with this problem is to focus on approximate inference algorithms, which are often iterative and inefficient. In this manuscript we propose a new class of models, the ``undirected bipartite graphical'' (UBG) models, that largely avoids this computational barrier. Processing of queries is very fast while learning is achieved through a recently introduced technique called contrastive divergence.
									
									
									Project 1: Probablistic Models 
									Max Welling, Michal Rosen-Zvi & Geoffrey Hinton (2004)
										Exponential Family Harmoniums with an Application to Information Retrieval
												NIPS 2004 [ps pdf]
									Peter Gehler, Alex Holub and Max Welling (2006)
											The Rate Adapting Poisson (RAP) model for Information Retrieval and Object Recognition.
											ICML 2006 [pdf,software]
									Directed models have become the dominant paradigm in machine learning. There are many good reasons this: they are easy to sample from, there is a nice (expectation maximization) framework to learn the parameters and it is even possible to search for optimal structure in a full Bayesian setting. Undirected models are much harder to handle, in particular because of the presence of a normalization constant (or partition function) that depends on the parameters and is usually intractable to compute.
									Harmoniums are two layer undirected graphical models (see picture below) where the top layer represents an array of hidden variables (or topic variables) while the bottom layer represents the observed random variables (e.g. the count values of words in documents). Effcient learning of parameter values is possible using the "contrastive divergence algorithm" (Hinton). This type of model has been particularly suitable for modeling of text data, where we (and others) have shown that classiffication and retrieval performance is better than for directed counterparts such as LDA (Blei,Ng,Jordan) . One particularly interesting feature that follows from the undirected nature of this model is that the process of inferring topic representations for documents is very fast (one bottom pass or equivalently one matrix multiplication) whereas directed models have to deal with issues like "explaining away" which makes approximate algorithms often the only way out.
									
									
									
									Affiiliated people:
										Peter Gehler - PhD candidate, Max Planck institute in Tuebingen
										Alex Holub - PhD candidate,Caltech
										Geoffrey Hinton - professor univerity of Toronto
										Michal Rosen Zvi - former postdoc UCI
									
									
									
									
									Project 2: Image Denoising by Products of "EdgePerts". 
									Peter Gehler and max Welling (2005)
										Products of “Edge-Perts”
										NIPS 2005 [pdf] [software]
									One successful approach to image denoising is to 1) transform the image into the wavelet domain using a wavelet pyramid, 2) build a realistic probabilistic joint model of the wavelet coeffcients which captures their statistical dependencies, 3) use this model to see how the statistics of the observed (noisy) wavelet coefficients differs from what you expect from your model, 4) correct these discrepencies using a denoising algorithm (compute the maximum a posterior estimate of the clean wavelet coeffcients given your noisy estimates, assuming a known noise model) 5) invert the wavelet pyramid.
									In this project we have proposed a new model to describe the statistical regularities of wavelet coeffcients, based on the "neural network" shown below. Coeffcients get mapped to an energy, which serves as the (unnormalized) negative log-probability. As explained in our paper, this models accurately describes both the heavy tails of the marginal distributions as well as the "bowtie" dependencies between wavelet coefficients.
									As an additional feature, our denoiser will automatically pick the wavelet coeffcients which should be modelled jointly by one expert. We have shown that our results are competative with the current stat-of-the-art.
									
									
									                          
									
									Affiiliated people:
										Peter Gehler - PhD candidate, Max Planck institute in Tuebingen
									
									
									Project 3: Bayesian Inference and structure learning in undirected graphical models
									Sridevi Parise and Max Welling (2005)
											Learning in Markov Random Fields: An Empirical Study
											Joint Statistical Meeting JSM2005 [pdf,software]
									Max Welling and Sridevi Parise (2006)
											Bayesian Random Fields: The Bethe-Laplace Approximation
											UAI 2006 [pdf]
									Sridevi Parise and Max Welling (2006)
											Bayesian Structure Scoring in Markov Random Fields
											NIPS 2006 [ps,pdf]
									Learning the structure of a graphical model is very important to build good models. Where much progress has been made with infering structure for directed graphical models (i.e. Bayes' nets), there has been very little progress with undirected graphical models (MRFs) of which the "unidrected bipartite graphical model" is an instance. The reason for this is the presence of the normalization constant which depends on the parameters and which is intractable to compute.
									We propose to combine two approximations. First we use the assumption that the posterior is close to a Gaussian distribution. This makes a lot of sense for fully observed MRFs because the likelihood function is known to be convex in its parameters. The second approximation is based on an algorithm called "linear response propagation" to compute the covariance of this Gaussian. This approximation is in turn based on belief propagation. If we then finally approximate the log-partition function with the Bethe free energy (again belief propagation) and find good estimates for the "maximum-a-posteriori" (MAP) parameter values we are all set to go...
									Our main finding is that this approximation was indeed very accurate for fully observed MRFs and moreover orders of magnitude faster than sampling based methods. The bottleneck turns out to be a good estimate for the MAP parameter values. Performance is seen to crucially depend on this estimate. Next, we will look into models with hidden variables.
									
								
							
						
					
				
			
		
		
			
				
					
						
							
								
									Fit of estimates posterior distribution over parameter (red bars) compared to ground truth posterior (blue bars)
							
						
					
				
			
		
		
			
				
					
						
							
								
									
									Affiiliated people:
										Sridevi Parise - PhD candidate, UCI
									
									
									
									Project 4: Lifelong Learning with Nonparametric Bayesian Models
											(This project was not covered in the original career proposal but added after consent from the programme director in charge.) 
									Ian Porteous, Alex Ihler, Padhriac Smyth and Max Welling (2006)
											Gibbs Sampling for (Coupled) Infinite Mixture Models in the Stick-Breaking Representation
											UAI 2006 [pdf]
									Yee Whye Teh, Dave Newman and Max Welling (2006)
											A Collapsed Variational Bayesian Inference Algorithm for Latent Dirichlet Allocation
											NIPS 2006 [ps,pdf]
									
									Kenichi Kurihara, Max Welling and Nikos Vlassis (2006)
											Accelerated Variational DP mixture Models
											NIPS 2006 [ps,pdf]
									Kenichi Kurihara, Max Welling and Yee Whye Teh (2007)
											Collapsed Variational Dirichlet Process Mixture Models
											IJCAI 2007 [ps,pdf]
									Yee Whye Teh, Kenichi Kurihara and Max Welling (2007)
											Collapsed Variational Inference for HDP
											NIPS 2007 [pdf]
									Max Welling, Ian Porteous and Evgeniy Bart (2007)
											Infinite State Bayesian Networks For Structured Domains
											NIPS 2007 [pdf]
									
									Dave Newman, Arthur Ascuncion, Padhriac Smyth and Max Welling (2007)
										Distributed Inference for Latent Dirichlet Allocation
											NIPS 2007 [pdf]
									A. Ascuncion, P. Smyth and M. Welling(2008)
											Asynchronous Distributed Learning of Topic Models
											NIPS 2008 [pdf]
									I. Porteous, A. Ascuncion, D. Newman, A. Ihler, P. Smyth and M. Welling(2008)
											Fast Collapsed Gibbs Sampling For Latent Dirichlet Allocation
											KDD 2008 [pdf]
									Max Welling, Y.W. Teh and B. Kappen(2008)
											Hybrid Variational-MCMC Inference in Bayesian Networks
											UAI 2008 [pdf]
									R. Gomes, M. Welling and P. Perona(2008)
											Memory Bounded Inference in Topic Models
											ICML 2008 [pdf]
									Ian Porteous, Evgeniy Bart and Max Welling (2008)
											Multi-HDP: A Nonparametric Bayesian Model for Tensor Factorization
											AAAI 2008 [pdf]
									Ryan Gomes, Max Welling and Pietro Perona(2008)
											Incremental Learning of Nonparametric Bayesian Mixture Models
											CVPR 2008 [pdf]
									A. Asuncion, P. Smyth, M. Welling, Y.W. Teh (2009)
											On Smoothing and Inference for Topic Models
											UAI 2009 [pdf]
									D. Newman, A. Asuncion, P. Smyth, M. Welling (2009)
											Distributed Algorithm for Topic Models
											Journal Machine Learning Research 2009 [pdf]
									I. Porteous, A. Asuncion, M. Welling (2010)
											Bayesian Matrix Factorization with Side Information and Dirichlet Process Mixtures
											AAAI 2010 [pdf]
									A. Asuncion, P. Smyth, M. Welling (2010)
											Asynchronous Distributed Estimation of Topic Models for Document Analysis
											Statistical Methodology 2010 [url]
										
									A. Asuncion, D. Newman, I. Porteous, S. Triglia, P. Smyth and M. Welling (2010)
											Distributed Gibbs Sampling for Latent Variable Models
											Bookchapter in: Scaling Up Machine Learning, Cambridge University Press
									D. Gorur, L. Boyles and M. Welling (2011)
											Scalable Inference on Kingman’s Coalescent using Pair Similarity
											AISTATS 2012 [pdf]
										
									M. Welling, I. Porteous and K. Kurihara (2012)
											Exchangeable Inconsistent Priors for Bayesian Posterior Inference
											Workshop on Information Theory and Applications (ITA) 2012 [pdf]
									Data generated by society is doubling every year. Google has currently more images stored than any single human will see in a lifetime (in the order of 1 billion images assuming we process approximately one image per second). Big science projects such as the Large Hadron Collider (LHC), the Large Synoptic Survey Telescope (LSST) and the Low Frequency Array (LOFAR) will generate in the order of 10 peta-bytes of data each year (1 peta-byte is the equivalent of 1 billion books of text). Industry and government agencies collect large quantities of data in the form of hyperlink clicking patterns, purchasing behaviour, credit histories, surveillance camera video, and so on. Multimedia applications such as cell-phones and digital cameras will acquire new data (and store it at websites such as Flickr and YouTube) at an unprecedented scale.
								
							
						
					
				
				
					
						
					
				
				
					
						
							
								
									Modern datasets are dynamic, i.e. continuously changing. The tools of traditional statistics, which are mainly concerned with static datasets of fixed size, are no longer adequate. Instead we need statistical machinery that can handle "open ended" streams of information. This necessitates novel learning paradigms that adapt the complexity of the statistical model in response to the amount of structure available in the data. A model that is too simple will not capture all predictive structure in the data while a model that is too complex will have over-fitted to noise (or unpredictive "structure") in the data. Moreover, unlike most of today's learning algorithms, this new class of algorithms should learn as long as it is in operation, a property which we will refer to as "lifelong learning".
									As a motivating biological example, consider a young child: At birth s/he will only recognize very simple object categories (such as mommies face), but this representation will quickly grow more complex as more of the world is observed. It is estimated that by the age of two years a child has learned 10,000 different object categories which implies approximately 5 new categories every day on average. This representation of the visual world changes as long as we live.
									How will we respond to this data deluge? It presents an opportunity as well as a challenge on the plate of the computer scientist. Promising new developments in this respect is “grid computing” and “cloud computing”. Already, Amazon is allowing anyone to log into their network of servers called “Elastic Cloud Computing” and run processes on thousands of CPUs in parallel. The computing power of grid networks can only be exploited if algorithms use their parallel architecture. It follows that algorithms have to operate in a distributed fashion: analyze data locally and exchange or combine partial results.
									This project has started the ambitious goal of developing algorithms that can handle very large streams of data. Inference algorithms are based on variational approximations or collapsed Gibbs sampling. The algorithms can perform inference distributed over many machines allowing them to scale to billions of tokens. Moreover, the algorithms can grow in response to newly discovered structure in the data and process information in an online fashion. The essential ingredient that allows this feature is the nonparametric Bayesian modeling paradigm. Combining this statistical tool with Bayesian networks and fast inference has led us to develop the infinite state Bayesian network (ISBN). See the figure below for an example. In this model, variables are related to other variables through the usual dependency structure of Bayesian networks, but have a potentially infinite number of hidden states available to model the structure of the data (not all of these states are "alive").
									      
										
										Infinite State Bayesian Network
									Affiiliated people:
										Ian Porteous - PhD candidate at UCI
										Arthur Acuncion - PhD candidate at UCI
										Kenichi Kurihara - Former PhD Student at Tokyo Institute of Technology
										Yee Whye Teh - Reader at University College London
										Dave Newman - Project Scientist at UCI
										Ryan Gomes - PhD candidate at Caltech
										Padhriac Smyth - Professor at UCI
										Alex Ihler - Assistant Professor at UCI
										Pietro Perona - Professor at Caltech
										Nikos Vlassis - Assistant Professor at University Crete
										Evgeniy Bart - Former Postdoc
										Dilan Gorur
										Levi Boyles
									
									
									
										
										
										Project 5: eXtreme Components Analaysis (XCA) 
										
										Max Welling, Felix Agakov & Chris Williams (2003)
											Extreme Components Analysis
											NIPS 2003 [pdf]
										
										XCA is a statistical technique that extends PCA (principal component analysis) and MCA (minor components analysis) into one probabilistic model. The XCA algorithm extracts the optimal combination of principal and minor components to fit the data. In addition it formulates a probabilistic model based on these components. The XCA algorithm is based on a single eigenvalue decomposition of the data-covariance matrix.
										Estimating minor components is difficult from a statistical perspective. The reason is that minor components are prone to overfitting: due to sample fluctuations there are bound to be directions with very low variance. We have recently extended this technique to a Bayesian variant which provides a principled regularization of the minor components. We can show that the Bayesian XCA model only picks minor components when they are really present in the data.
										In a dataset of landmark points on the wing of a mosquito (see figure below) we found as minor components directions which changed the landmark positions that attached to the mosquito's body. Clearly this is represents real evolutionary constraint.
										
										
										
										
										Affiiliated people:
											Felix Agakov
											Chris Williams
											Yutian Chen
										
										
										
										Project 6: Bayesian Kmeans
												
										
										Kenichi Kurihara and Max Welling (2008)
												Bayesian K-Means as a “Maximization-Expectation” Algorithm
												Neural Computation, Neural Computation 21(4), pp.1-28 [pdf]
										Max Welling and Kenichi Kurihara (2005)
												Bayesian K-Means as a “Maximization-Expectation” Algorithm
												SIAM Conference on Data Mining SDM2006 [pdf,tech-report,software]
										
										The Expectation Maximization algorithm (EM) is a well known tool to find the maximum likelihood parameters settings for a probabilistic model with hidden variables. Bayesian extentions exist that iterate between estimating distribution sover hidden variables and distributions over parameters. This is the variational Bayesian framework. Under certain circumstances it is more efficient to treat the hidden variables as point estimates instead of full distributions.
										We developed this idea under the name "Maximization Expectation" algorithm (ME). It still has the advantage of a full Bayesian treatment in the sense that overly complex models are being penalized. This provides a level of protection against overfitting. On the other hand, the point estimates for the states of the hidden variables allow for fast datastructures to speed up learning.
										As an example we considered Bayesian K-means where we still maximize over cluster assignments but treat the parameters such as the cluster means, variances and mixture weights in a Bayesian manner. KD trees are then used to speed up learning which makes Bayesian clustering with millions of datapoints feasible. As a bonus, one can estimate the number of clusters necessary to model the data well.
										In the figure below we show how this philosophy fits into the general scheme of algorithms already known.
										
									
								
							
						
					
				
			
		
		
			
				
					
						
							
								
							
						
					
				
			
		
		
			
				
					
						
							
								
									
										
										
										Affiiliated people:
											Kenichi Kurihara
										
										
									
								
							
						
					
				
			
		
		
			
				
					
						
							
								
									
										
										
										Project 6: Learning with Dynamic Weights
										M. Welling (2009)
												Herding Dynamic Weights to Learn
												ICML 2009 [pdf]
										M. Welling (2009)
												Herding Dynamic Weights for Partially Observed Random Field Models
												UAI 2009 [pdf]
										Y. Chen and M. Welling (2010)
												Parametric Herding
												AISTATS 2010 [pdf]
										M. Welling and Y. Chen (2010)
												Statistical Inference Using Weak Chaos and Infinite Memory
												Proceedings of the Int'l Workshop on Statistical-Mechanical Informatics
												(IW-SMI 2010)[pdf]
										Y. Chen, M. Welling and A. Smola (2010)
												Supersamples from Kernel-Herding
												UAI 2010 [pdf]
										A. Gelfand, L. Van Der Maaten, Y. Chen, M. Welling (2010)
												On Herding and the Perceptron Cycling Theorem
												NIPS 2010 [pdf]
										Y. Chen, A. Gelfand, C. Fowlkes and M. Welling (2011)
												Integrating Local Classifiers through Nonlinear Dynamics on Label Graphs with an Application to Image Segmentation
												ICCV 2011 [pdf] 
										
										
										
											Learning a Markov random field is difficult due to a number of problems:
											1. To compute the gradient of the log-likelihood one needs to compute sufficient statistics under the model. These are intractable.
											2. In the presence of hidden variables, the log-likelihood is highly non-convex as a function of the parameters, leading to many local minima in which learning can (and will) get stuck.
											3. Convergence to the optimal ML parameter is slow (linear) for almost any algorithm that is used in practice.
											4. Even given a model, sampling states from it is difficult because the sampler might get stuck in local minima is state space.
											These considerations have led me to define a deterministic dynamical system that performs learning and sampling in one go. The major advantage is that the system mixes very fast between what one would expect are reasonable modes of a distribution (see figure below where successive samples of the digit 4 are shown). The disadvantage is that it is hard to assess what the inductive bias represents. One thing can be proved, namely that the average sufficient statisics which hold at the maximum likelihood solution for the corresponding MRF problem still hold for the samples of herding. However, the entropy away from those constraints is likely not maximal.
											Intriguingly, the set of allowed weights often has fractal dimension (zero Lebesque measure). One can also show that the entropy production of this dynamical system is polynomial, (instead of exponential for stochastic and fully chaotic systems) consistent with what is known in the literature as "weak chaos" or "pseudochaos". We are currently exploring whether we can formulate a generalized maximum entropy principle. We are also interested in what design features make herding work and if we can define deep herding systems with many layers of neurons.
											
											
											 
											
												
													
														
															
																
																	
																		
																	
																
															
														
													
												
											
											Affiiliated people:
												Yutian Chen
												Andrew Gelfand
												Laurens van der Maaten
											
											
											
											Project 7: Dynamical Product Models for Financial Time Series
											Y. Chen and M. Welling (2010)
													Dynamical Products of Experts for Modeling Financial Time Series
													ICML 2010 [pdf]
											We describe a dynamical model based on the hierarchical Product of Student-t distribution to model volatility of stocks. This model is similar to GARCH type models in that they can describe the persistence of volatility over time which is a form of higher order dependency between the variances of two consecutive random variables. But unlike GARCH models, the dependencies are stochastic and not deterministic. The model can also be considered as ICA over time. We show improved performance in predicting "Value at Risk".
											
											
											Affiiliated people:
												Yutian Chen
												
											
											
											Project 8: Statistical Optimization
											A. Korattikara, L. Boyles, J. Kim, H. Park and M. Welling (2011)
													Statistical Optimization for Nonnegative Matrix Factorization
													AISTATS 2011 [pdf] 
											L. Boyles, A. Korattikara, D. Ramanan and M. Welling (2011)
													Statistical Tests for Optimization Efficiency
													NIPS 2011 [pdf][software]
											Machine learning is often presented as choosing a loss function and minimizing that loss on some dataset (hopefully resulting in some convex optimization problem). This view is limiting in the sense that statistical optimization problems are not ordinary optimization problems due to the random nature of the data. In this frequentist view of the world we may imagine sampling a few other datasets and observing how our loss function fluctuates due to this resampling. One of  the consequences of these simple observations is of course that we can overfit. In other words, the scale of the fluctuations in the optimal parameters due to resampling the dataset is the scale of precision to which we should fit the parameters. Methods such as bagging leverage this idea.
												
												What is much less exploited is the fact these observations also allow one to perform optimization of the loss function much more efficiently. In particular, during the initial stages of learning, every datapoint will carry roughly the same information on how to improve a parameter. Thus, when the model is still bad, there is a lot of redundancy in the data in terms of how to change the model. As a result we only need to query a few data items to get a good idea of  how to update the model. We exploit this idea by performing hypothesis tests before every update to inform us how many data-points to use for our updates. More precisely, if the probability of making an error in the update direction of more than 90 degrees is too large we will recruit more datapoints in our batch in order to increase our precision. Moreover, when we can not pass these tests even when we have recuited all the data in our dataset, we should stop updating altogether. This has lead to a highly effcient learning algorithm with a principled stopping criterion that unlike methods such as stochastic gradient descent have basically no hyperparameters to tune (except for an interpretable threshold of how large the probability of updating in the wrong direction is tolerated). 
											
											
											
											Affiiliated people:
												Levi Boyles
												Anoop Koratikkara
												Deva Ramanan
												
											
											
											
											Project 9: Stochastic Gradient Bayesian Posterior Sampling
											M. Welling and Y.W. Teh (2011)
													Bayesian Learning via Stochastic Gradient Langevin Dynamics
													ICML 2011 [pdf] 
											Frequentist methods such as stochastic gradient descent or statistical optimization (see project 8 above) are very efficient at quickly finding good predictive models. Their main trick is to realize that we do not need to use all the data to improve the model parameters. In fact for models far from optimality we can use few data items and large stepsizes to improve our models and then either decrease our stepsize (SGD) or increase our batchsize (SO) to increase the resolution of the updates as we get closer to the optimal solution. 
											In contrast, Bayesian MCMC methods that sample from the posterior distribution are hopelessly ineffcient in this respect. For example, a single accept/reject step will have to inspect all the data-items twice. Clearly, because burn-in is often nothing more than a stochastic version of optimization this is a huge waste of  computational resources. But we argue that even when the sampler has reached the high probablity regions we can trade-off a little bit of  approximation error (bias) for large computational wins that can pay back in terms of faster mixing and reduction of error due to variance. In fact, when we have only a fixed amount of time to reduce our error, this bias is often completely masked by sampling variance during the relevant time interval that we allow ourselves to run our samplers.
											We have developed new samplers that leverage this trade-off. The stochastic gradient Langevin sampler starts of with basically being a stochastic gradient ascent optimizer. But since we add noise to the gradients, at a certain point the noise we add is going to dominate the noise that we create due to subsampling the data, and the sampler automatically turns into a Langevin posterior sampler. By adding the approapriate preconditioner we can also make sure that for large stepsizes (and thus fast mixing) the sampler draws from the optimal Gaussian approximation of the posterior (as given by the "Bayesian Central Limit Theorem"). 
											I believe that it is time to start thinking about approximate Bayesian posterior sampling and the inherent trade-offs that come from the fact that we only have a limited amount of time to learn our models and make predictions. 
											                
										
									
								
							
						
					
				
			
		
		
			
				
					
						
							
								
									
										
											
										
									
								
							
						
					
				
			
		
		
			
				
					
						
							
								
									
										
											Affiiliated people:
												Yee Whye Teh
												Sungjin Ahn
												Anoop Korattikara
											
											
											
											
											
												
													
														
															
																
																	
																
															
														
													
												
											
										
									
								
							
						
					
				
				[Back to Max Welling's's home page] 
##------------------URL-------------------------##
http://www.ics.uci.edu/~welling/research/Research.html
##-----------------TITLE------------------------##
Research
##------------------TEXT------------------------##
Current Research in SCIVI  lab.                               
		Learning Visual Object Class Taxonomies (with Perona @ Caltech)
		Approxiate inference algorithms:  generalized belief propagation
		Harmonium models for text analysis and object recognition
		Product of expert models for image denoising
		Variational learning for non-parametric Bayesian models (e.g. Dirichlet processes)
		Bayesian inference and structure learning in Undirected Random Fields (e.g. MRFs)
		         
		             
		Overcomplete topographically ordered map of  receptive fields 
			learned from natural image patches using our Products of Student-T model (PoT)
		
		
		
		Visual object class taxonomies
		In a brief instant we can recognize dozens of objects in our visual field. Some people have estimated the number object categories to be around 50,000... Given the computational "limitations" of our brain we are certainly not scanning all 50,000 templates of known objects and picking the best match. One is led to believe that object categories are represented in a smart way, for instance in a tree structure, so that one can search much more effciently. There are other advantages too, for instance new object categories can be learned from very few examples by merely drawing information from visually similar objects (so called transfer learning or one-shot learning). For instance, a cat looks just like a dog, but is a bit bigger, less fluffy and has much sharper nails.
		This project, in collaboration with Pietro Perona's group at Caltech, uses new statistical techniques to infer these representations in an unsupervised setting from image data. The statistical techniques are based on the Dirichlet process and are able to induce model structure from data: the more data is presented to the system, the more complex the representation is allowed to grow. Compare this with a baby growing up. At first she will only recognizes mom's face, but pretty soon dad's face is recognized, his big nose, his red hair etc. One could say that we are trying to "raise a robot".
		Affilated people:
			Ian Porteous - PhD candidate
			Evengiy Bart - postdocal fellow
			Pietro Perona - professor Caltech
			
		Representative publications:
		
		
		Generalized belief propagation
		Graphical models have become a very powerful tool to design, interpret and communicate probabilistic models. There are two main classes directed models (or Bayesian networks) and undirected models (or random fields). These two species of model follow different semantics, i.e. the list if conditional and marginal independence relations that hold in these models are usally different.
		There are a number of important operations to make these models practical tools. For instance, given a model structure and parameter values, and given observed values for a subset of the random variables in the graph, can we infer the posterior probability distribution of all the other variables? This is called "inference" in an AI setting. Many other operations, such as learning the parameter values and structure of the model and finding the most likely state values given evidence crucially depend on inference or are very similar in nature to inference.
		Unfortunately, inference quickly becomes intractable as the graph has loops (in fact it is exponential in the treewidth of the graph), so approximations become necessary. We are studying a relatively new class of algorithms which go under the name "generalized belief propagation". These algorithms propagate the necessary information between neighboring clusters in the graph. It is however unclear which clusters to choose and we have found that choosing the wrong clusters (for instance too many) can seriously degrade performance. We have found very neat connections with graph theory, but a clear picture has not yet fully emerged.
		
		
		
		Affiiliated people:
			Ezekiel Bhasker - PhD candidate
				Yee Whye Teh - professor Gatsby Unit (UCL)
			Tom Minka - researcher microsoft research Cambridge
				David Eppstein - professor UCI
		
		Representative publications:
			On the Choice of Regions for Generalized Belief Propagation
			(Welling - UAI 04)
			Structured Region Graphs: Morphing EP into GBP
			(Welling, Minka, Teh - UAI 05)
			
		
		
		Harmoniums
		Directed models have become the dominant paradigm in machine learning. There are many good reasons this: they are easy to sample from, there is a nice (expectation maximization) framework to learn the parameters and it is even possible to search for optimal structure in a full Bayesian setting. Undirected models are much harder to handle, in particular because of the presence of a normalization constant (or partition function) that depends on the parameters and is usually intractable to compute.
		Harmoniums are two layer undirected graphical models (see picture below) where the top layer represents an array of hidden variables (or topic variables) while the bottom layer represents the observed random variables (e.g. the count values of words in documents). Effcient learning of parameter values is possible using the "contrastive divergence algorithm" (Hinton). This type of model has been particularly suitable for modeling of text data, where we (and others) have shown that classiffication and retrieval performance is better than for directed counterparts such as LDA (Blei,Ng,Jordan) . One particularly interesting feature that follows from the undirected nature of this model is that the process of inferring topic representations for documents is very fast (one bottom pass or equivalently one matrix multiplication) whereas directed models have to deal with issues like "explaining away" which makes approximate algorithms often the only way out.
		
		
		
		Affiiliated people:
			Peter Gehler - PhD candidate, Max Planck institute in Tuebingen 
			Alex Holub - PhD candidate,Caltech
				Geoffrey Hinton - professor univerity of Toronto
				Michal Rosen Zvi - former postdoc UCI
		
		Representative publications:
			Exponential Family Harmoniums with an Application to Information Retrieval
			(Welling, Rosen-Zvi,Hinton, NIPS 04)
			The Rate Adapting Poisson Model for Information Retrieval and object Recognition
			(Gehler, Holub, Welling - ICML 06)
		
		Products of "edge-perts"
		One successful approach to denoising is to 1) transform the image into the wavelet domain using a wavelet pyramid, 2) build a realistic probabilistic joint model of the wavelet coeffcients which captures their statistical dependencies, 3) use this model to see how the statistics of the observed (noisy) wavelet coefficients differs from what you expect from your model,  4) correct these discrepencies using a denoising algorithm (compute the maximum a posterior estimate of the clean wavelet coeffcients given your noisy estimates, assuming a known noise model) 5) invert the wavelet pyramid. 
		In this project we have proposed a new model to describe the statistical regularities of wavelet coeffcients, based on the "neural network" shown below. Coeffcients get mapped to an energy, which serves as the (unnormalized) negative log-probability. As explained in our paper,  this models accurately describes both the heavy tails of the marginal distributions as well as the "bowtie" dependencies between wavelet coefficients. 
		As an additional feature, our denoiser will automatically pick the wavelet coeffcients which should be modelled jointly by one expert. We have shown that our results are competative with the current stat-of-the-art.
		
		
		                          
		
		Affiiliated people:
			Peter Gehler - PhD candidate, Max Planck institute in Tuebingen
		
		Representative publications:
			Products of  Edge-Perts
			(Gehler, Welling NIPS 05)
			Learning Sparse Topographic Representations with Products of Student-T Distributions
			(Welling, Hinton, Osindero, NIPS 02)
			
		
		
		Variational inference in non-parametric Bayesian models
		Nonparametric Bayesian models are excellent candidates to infer model structure, i.e the number of clusters in a clustering problem. In particular, we study models based on the Dirichlet process, such as DP mixture models for clustering, Hierarchical DP models for text analysis and Nested DP for taxonomy inference. Their most important disadvantage is that the MCMC-based inference algorithms are often not efficient enough  to handle large datasets which may contain in the order of millions of datacases. 
		In this project we develop new variational inference algorithms for these models. In variational inference we maintain explicit distributions for quantities  of interest (e.g. the probability that a datacase is assigned to cluster k) and update them to make them as accurate as possible. This algorithm has no variance (except perhaps for local minima) by trades this off with a hopefully small bias in their estimates (in contrast MCMC algorithms have no bias but considerable variance) 
		We currently have an implementation for a DP-based clustering algorithm that can handle millions of data-cases. The algorithms starts with assigning the data-cases to rectangular boxes. The boxes form a very rough first partitioning of the space in which the data live. The approximation that is being made is that all particles inside a box have the same probability of being assigned to the clusters in the mixture. At first, the algorithms also entertains just a few clusters. Next, it is faced with making one of the following decisions: either it splits boxes into smaller boxes or it splits clusters into smaller clusters (both are guaranteed  to improve the approximation). This process is continued and alternated with updates of the variational distributions until the algorithms runs out of computer time.  The model is set up in such a way that the best model has every data-case assigned to a different box and has an infinite number of clusters  (but note that most clusters will of course have almost no probability of data-cases being  assigned to it) 
		
		Affiiliated people:
			Kenichi Kurihara -PhD candidate, Tokyo Institute of Technology 
			Nikos Vlassis - professor, University of Amsterdam
			Dave Newman - researcher UCI
			Yee Whye Teh - professor Gatsby Unit (UCL)
		Representative publications:
			Accelerated Variational DP Mixture Models
			
			(Kurihara, Welling, Vlassis NIPS 06)
			A Collapsed Variational Bayesian Inference Algorithm for Latent Dirichlet Allocation
			(Teh, Newman, Welling, NIPS 06)
		
		
		Bayesian Inference and structure learning in undirected graphical models
		Learning the structure of a graphical model is very important to build good models. Where much progress has been made with infering structure for directed graphical models (i.e. Bayes' nets), there has been very little progress with undirected graphical models (MRFs). The reason is the presence of the normalization constant which depends on the parameters and which is intractable to compute. 
		We propose a to combine two approximations. First we use the assumption that the posterior is close to a Gaussian distribution. This makes a lot of sense for fully observed MRFs because the likelihood function is known to be convex in its parameters. The second approximation is based on an algorithm called "linear response propagation" to compute the covariance of this Gaussian. This approximation is in turn based on belief propagation. If we then finally approximate the log-partition function with  the Bethe free energy (again belief propagation) and find good estimates for the "maximum-a-posteriori" (MAP) parameter values we are all set to go... 
		Our main finding is that this approximation was indeed very accurate for fully observed MRFs and moreover orders of magnitude faster than sampling based methods. The bottleneck turns out to be a good estimate for the MAP parameter values. Performance is seen to crucially depend on this estimate. Next, we will look into models with hidden variables.
		Affiiliated people:
			Sridevi Parise - PhD candidate, UCI
			Kenichi Kurihara -PhD candidate, Tokyo Institute of Technology
		Representative publications:
			Bayesian Random Fields - The Bethe-Laplace Approximation
			(Welling, Parise, UAI 06)
			Structure Learning in Markov Random Fields
			
			(Parise, Welling, NIPS 06)
##------------------URL-------------------------##
http://www.ics.uci.edu/~welling/people/people.html
##-----------------TITLE------------------------##
People @ Scivi
##------------------TEXT------------------------##
People @ Scivi-lab
		Faculty
			Max Welling 
		PhD Students:
			Levi Boyles 
			Andrew Gelfand (joint with Rina Dechter)
			
			Sungjin Ahn
			
			Anoop Korattikara
		
		Master Students
			
			Graduated Students:
			Ian Porteous (graduated 2010) [PhD Thesis]
			Yutian Chen (graduated 2013) [PhD Thesis]
		
		
			Vishnu Balluru [MS Thesis]
			Levi Boyles [MS Thesis]
			Anoop Korattikara [MS Thesis]
		
		
		Former members:
			Dilan Gorur (Former Postdoc, now at Yahoo! Research)
			Evgeniy Bart - (Former Postdoc jointly with Pietro Perona, now at Palo Alto Research Center)
			Michal Rosen-Zvi (Former Postdoc, now at IBM Research)
			Kenichi Kurihara (visiting student from Tokyo Institute of Technology, now at Google)
			Ian Porteous (now at Google)
			Yutian Chen (now postdoc at Cambridge University)
##------------------URL-------------------------##
http://www.ics.uci.edu/~welling/publications/publications.html
##-----------------TITLE------------------------##

##------------------TEXT------------------------##
  
               
                      
                         
                        Max Welling's
                              Publications in Machine Learning
                        
                        
                              Working





















                                    Papers
                                  
                            
                        
                                                      
                          Y.
                                          Chen, M. Welling
                                        Herding as a Learning System
                                        with Edge-of-Chaos Dynamics
                                        Special Issue on "Perturbations,
                                        Optimization and Statistics"
                                        Eds. T. Hazan, G. Papandreou, D.
                                        Tarlow; 2016 [pdf]
                                      
                        
                                      
                         
                        
                        Published





















                              Papers
                            
                        
                        
                        C.










                                          Louizos, K. Swersky,










                                        Y. Li, M. Welling, R.
                                          Zemel
                                        The Variational Fair
                                        Auto-Encoder
                                        ICLR; 2016 [pdf]
                        W.










                                      Li, S. Ahn, M.










                                      Welling
                                            Scalable Markov Chain Monte
                                            Carlo for Bayesian Network
                                            Models 
                                        AISTATS 2015 [pdf]
                        
                         M.


                                                        Welling
                                                      Are Machine
                                                      Learning and
                                                      Statistics
                                                      Complementary?
                                                    Contribution to the Rountable
                                                  Discussion at the 6th
                                                  IMSISBA meeting on
                                                  "Data Science in the
                                                  next 50 years". 
                                                    2015
                                                      [pdf]
                         M.









                                    Welling
                                  Deep
                                Learning maakt ons leven gemakkelijker -
                                maar ook kwetsbaarder
                                Financieel Dagblad, 26/9/2015 [pdf]
                        A.










                                      Korattikara, Y. Chen, M.










                                      Welling
                                            Sequential Tests for Large
                                            Scale Learning
                                        Neural Computation 24, p.1-26,
                                        2015 [pdf]
                        T.
















                                    Meeds, M. Welling
                                  Optimization










                                      Monte Carlo: Efficient and
                                      Embarrassingly Parallel










                                      Likelihood-Free Inference
                                      NIPS 2015 [pdf]
                                    
                        D.










                                      Kingma, T.















                                                  Salimans, M.










                                      Welling
                                            Variational Dropout and the
                                            Local Reparameterization
                                            Trick
                                        NIPS 2015 [pdf]
                                      
                         A.










                                      Korattikara, V. Rathod, K.Murphy,
                                    M.










                                      Welling
                                            Bayesian Dark Knowledge
                                        NIPS 2015 [pdf]
                        
                                       
                        M.









                                    Welling
                                  Flexible









                                Werken en voor Ieder een Basisinkomen
                                Financieel Dagblad, 22/8/2015 [pdf]
                              
                        T.
















                                    Meeds, R. Hendriks, S. al Faraby, M.
                                    Bruntink, M. Welling
                                  MLitB:
















                                      Machine Learning in the Browser
                                      PeerJ Computer Science; 2015 [pdf]  
                        T.
















                                      Meeds, M. Chiang, M. Lee, O.
                                      Cinquin, J. Lowengrub, M. Welling
                                            POPE: Post Optimization
                                            Posterior Evaluation of
                                            Likelihood Free Models
                                        BMC Bioinformatics; 2015
                                        (16:264)[pdf]
                        M.










                                          Chiang, A. Cinquin, A.Paz,










                                          E. Meeds, M.Welling, O.
                                          Cinquin
                                        Control of C.Elegans Stem Cell
                                        Cycling Speed Meets Requirements
                                        of Design to Minimize Mutation
                                        Accumulation
                                      BMC









                                        Bioinformatics; 2015 (13:51)[pdf]
                        M.Welling,










                                      Y.W. Teh, C. Andrieu, J. Kominiarczuk,
                                      T. Meeds
                                    Bayesian Inference and Big Data: A
                                    Snapshot from a Conference
                                    The ISBA Bulletin, V.21, Nr.4,
                                    Dec. 2015 [pdf]
                                  
                        T.
















                                    S.















                                      Ahn, A. Korattikara, N. Liu, S.
                                      Rajan, M. Welling
                                            Large Scale Distributed
                                            Bayesian Matrix
                                            Factorization
                                        using Stochastic Gradient MCMC
                                        KDD 2015 [pdf]
                                      
                        Meeds,












                                      R. Leenders, M. Welling
                                            Hamiltonian ABC
                                        UAI 2015 [pdf]
                         T.















                                      Cohen, M. Welling
                                            Harmonic Exponential
                                            Families on Manifolds
                                        ICML 2015, [pdf,
                                        suppl.











                                          mat.]
                                      
                        T.















                                      Salimans, D. Kingma, M. Welling
                                            Markov Chain Monte Carlo and
                                            Variational Inference:
                                            Bridging the Gap
                                        ICML 2015 [pdf]
                                      
                        T.















                                      Cohen, M. Welling
                                            Tranformation Properties of
                                            Learned Visual















                                        Representations
                                      ICLR














                                        2015 [pdf]
                        M. Welling and Y.W. Teh
                            Bayesian

















                              Inference with Big Data: A Snapshot
                              from a Conference
                            BIBiD 2014 [pdf]
                            
                            
                        D.
                              Kingma, S. Mohamed, D. Rezende and M.
                              Welling(2014)
                            Semi-supervised Learning with Deep
                              Generative Models 
                            NIPS 2014 [arXiv,
                            software]
                          
                        T.
                              Meeds and M. Welling(2014)
                            GPS-ABC: Gaussian Process Surrogate
                              Approximate Bayesian Computation
                          UAI 2014 [pdf]
                        T.
                              Cohen and M. Welling(2014)
                            Learning the Irreducible
                              Representations of Commutative Lie Groups
                            ICML 2014 [pdf, supp.mat.]
                          
                        D.
                              Kingma and M. Welling(2014)
                            Efficient Gradient-Based Inference
                              through Transformations between Bayes Nets
                              and Neural Nets, 
                            ICML 2014 [pdf]
                          
                        S.
                              Ahn, B. Shahbaba and M. Welling(2014)
                            Distributed Stochastic Gradient MCMC
                            ICML 2014 [pdf] 
                        D.
                              Kingma and M. Welling(2014)
                            Auto-Encoding Variational Bayes,
                              
                            ICLR 2014 [pdf] 
                        A.
                              Korattikara, Y. Chen and M. Welling(2014)
                            Austerity





















                              in MCMC Land: Cutting the
                              Metropolis-Hastings Budget 
                            ICML 2014 [pdf]
                        M.
                              Welling(2014)
                            Exploiting the Statistics of Learning
                              and Inference
                            Proceedings of the NIPS 2014
                            Workshop on "Probabilistic Models for Big
                            Data" [pdf]
                          
                        M.
                              Welling(2014)
                            Inaugural Speech (in Dutch)
                            University of Amsterdam 2014 [slides ppt][slides pdf][written text][spoken
                              text][video]
                        Y.
                              Chen, A. Gelfand and M. Welling(2014)
                            Herding for Structured Prediction 
                            In: Advanced Structured
                            Prediction, S.Nowozin, P.Gehler, J.Jancsary,
                            C. Lampert (Eds) 2014 [pdf]
                        C.
                              Dubois, A. Korattikara and M. Welling(2014)
                            Approximate Slice Sampling for
                              Bayesian Posterior Inference 
                            AISTATS 2014 [pdf]
                        J,
                              Foulds, L. Boyles, C. Dubois, P, Smyth and
                              M. Welling (2013)
                            Stochastic Collapsed Variational
                              Bayesian Inference for Latent Dirichlet
                              Allocation  
                            KDD 2013 [pdf arXiv]
                        L.
                              Bornn, Y. Chen, N. de Freitas, M. Eskelin,
                              J. Fang and M. Welling (2013)
                            Herded Gibbs Sampling 
                            ICLR 2013 [pdf],















                            JMLR [pdf]
                          
                        P.
                              Welinder, M. Welling and P. Perona
                            (2013)
                            Semisupervised Classifier Evaluation
                              and Recalibration 
                            CVPR 2013 [pdf]
                        S.
                              Ahn, Y. Chen and M. Welling
                            (2013)
                            Distributed and Adaptive Darting
                              Monte Carlo through Regenerations
                            AISTATS 2013 [pdf]
                        Y.
                              Chen and M. Welling (2013)
                            Evidence Estimation for Partially
                              Observed MRFs
                            AISTATS 2013 [pdf]
                        L.
                              Boyles and M. Welling (2012)
                            The Time-Marginalized Coalescent
                              Prior for Hierarchical Clustering
                            NIPS 2012 [paper:pdf][suppl.mat.:pdf]
                        M.
                              Welling, A. Gelfand and A. Ihler
                            (2012)
                            A Cluster-Cumulant Expansion at the
                              Fixed Points of Belief Propagation
                            UAI 2012 [pdf]
                        A.
                              Gelfand and M. Welling (2012)
                            Generalized Belief Propagation on
                              Tree Robust Structured Region Graphs
                            UAI 2012 [pdf]
                        Y.
                              Chen and M. Welling (2012)
                            Bayesian Structure Learning for
                              Markov Random Fields with a Spike and Slab
                              Prior
                            UAI 2012 [pdf]
                        S.
                              Ahn, A. Korattikara and M. Welling
                            (2012)
                            Bayesian Posterior Sampling via
                              Stochastic Gradient Fisher Scoring
                            ICML 2012 [pdf][Google





















                              Talk]
                          Winner





















                                    of the ICML 2012 Best Paper
                                    Award.
                        M.
                              Welling, I. Porteous and K. Kurihara
                            (2012)
                            Exchangeable Inconsistent Priors for
                              Bayesian Posterior Inference
                            Workshop on Information Theory
                            and Applications (ITA) 2012 [pdf]
                        X.
                              Zhu, J. Lowengrub and M. Welling
                            (2012)
                            Predicting Simulation Parameters of
                              Biological Systems using a Gaussian
                              Process Model
                            JSM & Special Issue of the
                            Stat. Analysis and data Mining Journal 2012
                            [pdf]
                            Winner





















                                    of the ASA SDLM Student Paper
                                    Competition,2012 
                          
                        D.
                              Gorur, L. Boyles and M. Welling
                            (2011)
                            Scalable Inference on Kingman?s
                              Coalescent using Pair Similarity
                            AISTATS 2012 [pdf]
                        L.
                              Boyles, A. Korattikara, D. Ramanan and M.
                              Welling (2011)
                            Statistical Tests for Optimization
                              Efficiency
                            NIPS 2011 [pdf][software]
                          
                        Y.
                              Chen, A. Gelfand, C. Fowlkes and M.
                              Welling (2011)
                            Integrating Local
                              Classifiers through Nonlinear Dynamics on
                              Label Graphs with an Application to Image
                              Segmentation
                            ICCV 2011 [pdf]
                          
                        M.
                              Welling and Y.W. Teh (2011)
                            Bayesian Learning via Stochastic
                              Gradient Langevin Dynamics
                            ICML 2011 [pdf]
                          
                        A.
                              Korattikara, L. Boyles, J. Kim, H. Park
                              and M. Welling (2011)
                            Statistical Optimization for
                              Nonnegative Matrix Factorization
                            AISTATS 2011 [pdf]
                          
                        L.
                              Van Der Maaten, M. Welling and L.K. Saul
                            (2011)
                            Hidden-Unit Conditional Random Fields
                            AISTATS 2011 [pdf] (software)
                        A.
                              Asuncion, D. Newman, I. Porteous, S.
                              Triglia, P. Smyth and M. Welling
                            (2010)
                            Distributed Gibbs Sampling for
                              Latent Variable Models
                            Bookchapter in: Scaling Up
                            Machine Learning, Cambridge University Press
                            (to appear)
                        E.
                              Bart, M. Welling and P. Perona (2010)
                            Unsupervised Organization





















                              of Image Collections: Taxonomies and
                              Beyond 
                            Transactions on Pattern Analysis and
                            Machine Intelligence [pdf]
                            (TPAMI - to appear)
                        Alfred




















                              Kume and Max Welling (2010)
                            Maximum-Likelihood





















                              Estimation for the Offset Normal Shape
                              Distributions using EM
                            Journal of Computational and Graphical
                            Statistics, Vol. 19, No. 3: 702?723 [url][pdf]
                        A.
                              Gelfand, L. Van Der Maaten, Y. Chen, M.
                              Welling(2010)
                            On
                              Herding and the Perceptron Cycling Theorem
                            NIPS
                            2010 [pdf]
                        Y.
                              Chen, M. Welling and A. Smola(2010)
                            Supersamples





















                              from Kernel-Herding
                            UAI
                            2010 [pdf]
                        Y.
                              Chen and M. Welling(2010)
                            Dynamical





















                              Products of Experts for Modeling Financial
                              Time Series
                            ICML
                            2010 [pdf]
                        A.
                              Asuncion, P. Smyth, M. Welling
                            (2010)
                            Asynchronous Distributed
                              Estimation of Topic Models for Document
                              Analysis
                            Statistical Methodology 2010 [url]
                            
                        I.
                              Porteous, A. Asuncion, M. Welling (2010)
                            Bayesian





















                              Matrix Factorization with Side Information
                              and Dirichlet Process Mixtures
                            AAAI
                            2010 [pdf]
                        M.
                              Welling and Y. Chen(2010)
                            Statistical





















                              Inference Using Weak Chaos and Infinite
                              Memory
                            Proceedings of the Int'l
                                Workshop on Statistical-Mechanical
                                Informatics 
                                (IW-SMI 2010)[pdf][url]
                        Y.
                              Chen and M. Welling(2010)
                          Parametric





















                              Herding
                            AISTATS
                            2010 [pdf]
                        Y.
                              Zhang, L. Bao, S.H. Yang, M. Welling, Di
                              Wu(2010)
                            Localization





















                              Algorithms for Wireless Sensor Retrieval
                            The Computer Journal
                            2010 [url]
                        Y.
                              Zhang, L. Bao, M. Welling, S.H. Yang(2009)
                            Base





















                              Station Localization in Search of Empty
                              Spectrum Spaces for Cognitive Radio
                              Networks
                            Mobile Ad-hoc and Sensor
                                Networks (MSN)
                            2009 [pdf]
                        D.
                              Newman, A. Asuncion, P. Smyth, M. Welling(2009)
                            Distributed





















                              Algorithm for Topic Models
                            Journal Machine Learning
                                Research
                            2009 [pdf]
                        M.
                              Welling(2009)
                            Herding





















                              Dynamic Weights for Partially Observed
                              Random Field Models
                            UAI
                            2009 [pdf]
                            [Correction





















                                to proof of recurrence, thanks to
                              Olivier Delalleau for pointing out the
                              issue]
                        M.
                              Welling(2009)
                            Herding





















                              Dynamic Weights to Learn
                            ICML
                            2009 [pdf]
                            [Correction





















                                to proof of recurrence, thanks to
                              Olivier Delalleau for pointing out the
                              issue]
                        A.
                              Asuncion, P. Smyth, M. Welling, Y.W. Teh(2009)
                            On
                              Smoothing and Inference for Topic Models
                            UAI
                            2009 [pdf]
                        Y.
                              Chen and M. Welling(2009)
                            Bayesian





















                              Extreme Components Analysis
                            IJCAI
                            2009 [pdf]
                        S.A.




















                              Cole, M. Welling, R.Dioso-Villa, R.
                              Carpenter(2008)
                            Beyond




















                              the Individuality of Fingerprints:
                              A Measure of Simulated Computer Latent
                              Print Source Attribution Accuracy
                            Law, Probability and Risk 2008
                            [pdf]
                        A.
                              Ascuncion, P. Smyth and M. Welling(2008)
                            Asynchronous





















                              Distributed Learning of Topic Models
                            NIPS
                            2008 [pdf]
                        I.
                              Porteous, A. Ascuncion, D. Newman, A.
                              Ihler, P. Smyth and M. Welling(2008)
                            Fast





















                              Collapsed Gibbs Sampling For Latent
                              Dirichlet Allocation
                            KDD
                            2008 [pdf]
                            [software]
                        Max
                              Welling, Y.W. Teh and B. Kappen(2008)
                            Hybrid





















                              Variational-MCMC Inference in Bayesian
                              Networks
                            UAI
                            2008 [pdf]
                        R.
                              Gomes, M. Welling and P. Perona(2008)
                            Memory





















                              Bounded Inference in Topic Models
                            ICML
                            2008 [pdf]
                        Ian
                              Porteous, Evgeniy Bart and Max Welling (2008)
                            Multi-HDP:





















                              A Nonparametric Bayesian Model for Tensor
                              Factorization
                            AAAI
                            2008 [pdf]
                        Ryan




















                              Gomes, Max Welling and Pietro Perona(2008)
                            Incremental





















                              Learning of Nonparametric Bayesian Mixture
                              Models
                            CVPR
                            2008 [pdf]
                        Evgeniy





















                              Bart, Ian Porteous, Pietro Perona and Max
                              Welling (2008)
                            Unsupervised





















                              Learning of Visual Taxonomies
                            CVPR
                            2008 [pdf]
                        Max
                              Welling, Chaitanya Chemudugunta and Nathan
                              Sutter (2008)
                            Deterministic





















                              Latent Variable Models and Their Pitfalls
                            SIAM
                            Conference on Data Mining SDM 2008 [pdf]
                        Kenichi





















                              Kurihara and Max Welling (2008)
                            Bayesian





















                              K-Means as a ?Maximization-Expectation?
                              Algorithm
                            Neural Computation, accepted [pdf]
                        Max Welling, Ian Porteous and
                              Evgeniy Bart (2007)
                            Infinite State Bayesian Networks For
                              Structured Domains
                            NIPS 2007 [pdf]
                        
                        Dave Newman, Arthur Ascuncion,
                              Padhriac Smyth and Max Welling (2007)
                          Distributed Inference for
                              Latent Dirichlet Allocation
                            NIPS 2007 [pdf]
                        
                        Yee Whye Teh, Kenichi Kurihara and
                              Max Welling (2007)
                            Collapsed Variational Inference for HDP
                            NIPS 2007 [pdf]
                        
                        Max
                              Welling (2007)
                            Products




















                              of Experts
                            ScholarPedia 2007 [pdf,url]
                        Alex




















                              Holub, Max Welling and Pietro Perona (2007)
                            Hybrid
                              Generative-Discriminative Object
                              Recognition
                            International Journal Computer Vision (IJCV)
                            [pdf]
                        Max
                              Welling and Joseph Lim (2007)
                            SLEEP:
                              Sensor Location Estimation with
                              Expectation Propagation
                            ICANN 2007[pdf,June'08, mistake corrected in
                                Alg. Box 3I relative to published
                                version]
                        Christian Sminchisescu and Max
                              Welling (2007)
                            Generalized Darting Monte Carlo
                            AISTATS 2007 [pdf]
                        Kenichi Kurihara, Max Welling and
                              Yee Whye Teh (2007)
                            Collapsed Variational Dirichlet Process
                              Mixture Models
                            IJCAI 2007 [ps,pdf]
                        Sridevi Parise and Max Welling
                            (2006)
                            Structure Learning in Markov Random
                              Fields
                            NIPS 2006 [ps,pdf]
                        
                        Yee Whye Teh, Dave Newman and Max
                              Welling (2006)
                            A Collapsed Variational Bayesian
                              Inference Algorithm for Latent Dirichlet
                              Allocation
                            NIPS 2006 [ps,pdf]
                        
                        Kenichi Kurihara, Max Welling and
                              Nikos Vlassis (2006)
                            Accelerated Variational DP mixture
                              Models
                            NIPS 2006 [ps,pdf]
                        Max
                              Welling (2006)
                            Flexible





















                              Priors for Infinite Mixture Models
                            ICML workshop on Nonparametric Baysian
                            methods 2006 [pdf]
                        Ian
                              Porteous, Alex Ihler, Padhriac Smyth and
                              Max Welling (2006)
                            Gibbs
                              Sampling for (Coupled) Infinite Mixture
                              Models in the Stick-Breaking
                              Representation
                            UAI 2006 [pdf]
                        Max
                              Welling and Sridevi Parise (2006)
                            Bayesian





















                              Random Fields: The Bethe-Laplace
                              Approximation
                            UAI 2006 [pdf]
                        Peter





















                              Gehler, Alex Holub and Max Welling
                            (2006)
                            The
                              Rate Adapting Poisson (RAP) model for
                              Information Retrieval and Object
                              Recognition.
                            ICML 2006 [pdf,software]
                        Max
                              Welling and Kenichi Kurihara (2005)
                            Bayesian





















                              K-Means as a ?Maximization-Expectation?
                              Algorithm
                            SIAM
                            Conference on Data Mining SDM2006 [pdf,tech-report,software]
                        Sridevi





















                              Parise and Max Welling (2005)
                            Learning





















                              in Markov Random Fields: An Empirical
                              Study
                            Joint Statistical Meeting JSM2005 [pdf,software]
                        Geoffrey





















                              Hinton, Simon Osindero, Max Welling and
                              Yee Whye Teh (2005)
                            Unsupervised





















                              Discovery of Non-Linear Structure using
                              Contrastive Back-Propagation
                            Accepted in Cognitive Science 30(4) 2006
                            [pdf]
                        Simon





















                              Osindero, Max Welling and Geoffrey Hinton
                            (2005)
                            Topographic





















                              Product Models Applied to Natural Scene
                              Statistics
                            Neural Computation (accepted) [pdf] 
                        Alex




















                              Holub, Max Welling and Pietro Perona (2005)
                            Combining





















                              Generative Models and Fisher Kernels for
                              Object Recognition
                            ICCV 2005 [pdf]
                        Peter





















                              Gehler and max Welling (2005)
                          Products





















                              of ?Edge-Perts?
                          NIPS
                            2005 [pdf]
                            [software]
                        Max Welling, Tom Minka and
                                Yee Whye Teh (2005)
                          Structured Region Graphs:
                                Morphing EP into GBP.
                          UAI 2005 [ps,pdf]
                              (extended version with proofs)
                        Max Welling (2005)
                          Robust Higher Order
                                Statistics
                          AISTATS 2005 [ps,pdf]
                        Max Welling (2005)
                          An Expectation Maximization
                                Algorithm for Inferring Offset-Normal
                                Shape Distributions
                          AISTATS 2005 [ps,pdf]
                        Max Welling & Charles
                                Sutton (2005)
                          Learning in Markov Random
                                Fields with Contrastive Free Energies
                            AISTATS 2005 [ps,pdf]
                        Max Welling, Michal Rosen-Zvi
                                & Geoffrey Hinton (2004)
                          Exponential Family Harmoniums
                                with an Application to Information
                                Retrieval
                              NIPS 2004 [ps pdf]
                        Max Welling, Richard Zemel
                                and Geoffrey Hinton (2003)
                          Probabilistic Sequential
                                Independent Components Analysis
                          IEEE Transactions on Neural
                              Networks [ps
                              pdf] 
                        Max Welling (2004)
                          On the Choice of Regions for
                                Generalized Belief Propagation
                          UAI 2004 [ps pdf]
                        Max Welling, Michal Rosen-Zvi
                                & Yee Whye Teh (2004)
                          Approximate Inference by
                                Markov Chains on Union Spaces
                          ICML 2004 [ps
                              pdf]
                        Max Welling & Yee Whye
                                Teh (2002)
                          Linear Response Algorithms
                                for Approximate Inference in Graphical
                                Models
                          Neural Computation 16 [pdf,Feb.08 typo corrected-thanks
                                  to Vicenç Gómez]
                        Max Welling, Geoffrey Hinton
                                and Andriy Mnih (2003)
                          Wormholes Improve Contrastive
                                Divergence
                          NIPS 2003 [ps pdf]
                        Max Welling, Felix Agakov
                                & Chris Williams (2003)
                          Extreme Components Analysis
                          NIPS 2003 [pdf]
                        Max Welling & Yee Whye
                                Teh (2003)
                          Linear Response for
                                Approximate Inference
                          NIPS 2003 [pdf,Feb.08 typo corrected-thanks
                                  to Vicenç Gómez]
                        Max Welling, Richard Zemel
                                and Geoffrey Hinton (2003)
                          Efficient Parametric
                                Projection Pursuit Density Estimation
                          UAI 2003 [ps]
                        Yee Whye Teh, Max Welling,
                                Simon Osindero & Geoffrey Hinton (2003)
                          Energy-Based Models for
                                Sparse Overcomplete Representations
                          JMLR [ps]
                        Yee Whye Teh & Max
                                Welling (2003)
                          On Improving the Efficiency
                                of the Iterative Proportional Fitting
                                Procedure
                          AISTATS 2003 [ps]
                        Max Welling, Richard Zemel
                                and Geoffrey Hinton (2002)
                          Self-Supervised Boosting
                          NIPS 2002 [ps]
                        Max Welling, Geoffrey Hinton
                                and Simon Osindero (2002)
                          Learning Sparse Topographic
                                Representations with Products of
                                Student-t Distributions
                          NIPS 2002 [ps]
                        Max Welling & Yee Whye
                                Teh (2001)
                          Approximate Inference in
                                Boltzmann Machines
                          AIJ [ps]
                        Max Welling & Geoffrey
                                Hinton (2002)
                          A New Learning Algorithm for
                                Mean Field Boltzmann Machines
                          ICANN2002, Madrid
                              [ps]
                        Geoffrey E. Hinton, Max
                                Welling, Yee Whye Teh & Simon K.
                                Osindero (2001)
                          A New View of ICA
                          Int. Conf. on Independent
                              Component Analysis and Blind Source
                              Separation, ICA2001, San Diego
                              [ps] 
                        Yee Whye Teh & Max
                                Welling (2001)
                          The Unified Propagation and
                                Scaling Algorithm
                          NIPS2001, Vancouver
                              [ps]
                        Max Welling & Markus
                                Weber(2001) 
                          Positive Tensor
                                Factorization 
                          Pattern Recognition Letters 22
                              (12), pp. 1255-1261 [ps] 
                        Max Welling & Yee Whye
                                Teh (2001)
                          Belief Optimization for
                                Binary Networks: A stable Alternative to
                                Loopy Belief Propagation
                          UAI2001, Seattle, Washington
                              [ps]
                        Max Welling & Markus
                                Weber(2001) 
                          A Constrained EM Algorithm
                                for Independent Component Analysis 
                          neural computation 13 (3), pp.
                              677-689  [ps]
                        Markus Weber, Max Welling
                                & Pietro Perona (2000)
                          Unsupervised Learning of
                                Models for Recognition 
                          Proc. 6th Europ. Conf. Comp.
                              Vis., ECCV2000, Dublin
                              [ps]
                              Winner of
                                    the ECCV 2010 Koenderink Prize
                            
                        Markus Weber, Max Welling
                                & Pietro Perona (2000) 
                          Towards Automatic Discovery
                                of Object Categories 
                          Proc. IEEE Comp. Soc. Conf.
                              Comp. Vis. and Pat. Rec., CVPR20000, Hilton Head Island
                              [ps]
                        Markus Weber, Wolfgang
                                Einhauser, Max Welling & Pietro
                                Perona (2000)
                          Viewpoint-Invariant Learning
                                and Detection of Human Heads 
                          Proc. 4th Int. Conf. Autom.
                              Face and Gesture Rec., FG2000, Grenoble
                              [ps]
                        Max Welling & Markus
                                Weber (1999) 
                          Independent Component
                                Analysis of Incomplete Data 
                          Proceedings of the 6th Annual
                              Joint Symposium on Neural Computation,
                              JNSC99, Pasadena
                              [ps]
                        M. Weber, M. Welling & P.
                                Perona (1999)
                          Unsupervised learning of
                                models for visual object class
                                recognition
                          Proceedings of the 6th Annual
                              Joint Symposium on Neural Computation,
                              JNSC99, Pasadena [ps]
                        
                          
                            
                              
                                
                                  
                                    
                                      
                                        
                                          
                                            
                                              
                                                
                                                  
                                                    
                                                      
                                                        
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                        
                                                      
                                                    
                                                  
                                                
                                              
                                            
                                          
                                        
                                      
                                    
                                  
                                
                              
                            
                          
                        
                         
                        Max





















                              Welling's Technical Reports and Research
                              Notes in Machine Learning
                        Max
                              Welling (2008)
                            Hard




















                              Wall Stochastic Control with Hallucination
                              EM and Power EP
                            Technical Report [pdf]
                        Alex




















                              Holub, Max Welling and Pietro Perona
                            (2005)
                            Exploiting





















                              Unlabelled Data for Hybrid Object
                              Classification
                            NIPS-2005 workshop in interclass
                            transfer [pdf]
                        Simon Osindero, Max Welling
                                and Geoffrey Hinton and (2004)
                          Modeling the Statistics of
                                Natural Images with Topographic Product
                                of Student-t Models
                          Technical Report [pdf]
                        Max Welling (2004)
                              EM
                                Algorithms for Offset-Normal Shape
                                Densities
                              Techical Report [ps]
                        Cristian Sminchisescu, Max
                                Welling and Geoffrey Hinton (2003)
                          Generalized Darting Monte Carlo
                              Technical Report [pdf]
                        Max Welling (2001)
                          Labelling with Loopy Belief
                                Revision
                          Research Note [ps]
                        Max Welling & Geoffrey
                                Hinton (2001)
                          A New Learning Algorithm for
                                Mean Field Boltzmann Machines
                          Technical Report GCNU TR
                              2001-002 [ps]
                        Yee Whye Teh & Max
                                Welling (2001)
                          Passing and Bouncing Messages
                                for Generalized Inference
                          Technical Report GCNU TR
                              2001-001 [ps]
                        Max Welling (1999)
                          Robust cumulant expansions
                                for probability density estimation
                          Technical Report [ps]
                           
                        
                          
                            
                              
                                
                                  
                                    
                                      
                                        
                                          
                                            
                                              
                                                
                                                  
                                                    
                                                      
                                                        
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                          
                                                        
                                                      
                                                    
                                                  
                                                
                                              
                                            
                                          
                                        
                                      
                                    
                                  
                                
                              
                            
                          
                        
                        This material is based upon
                            work supported by the National Science
                            Foundation under Grant





















                              No. 0447903. and Grant No. 0535278. Any opinions,
                            findings and conclusions or recomendations
                            expressed in this material are those of the
                            author(s) and do not necessarily reflect the
                            views of the National Science Foundation
                            (NSF).
                         
                        [Back





















                              to Max Welling's's home page] 
                      
                    
                  
                  
                       
                    
               
##------------------URL-------------------------##
http://www.ics.uci.edu/~mabbaspo/index.html
##-----------------TITLE------------------------##
Mahdi Abbaspour Tehrani
##------------------TEXT------------------------##
HomeAcademicPublicationResearchExperiencesActivities 
			 
			
			
			 
		 
		
		
			
				Mahdi Abbaspour Tehrani
				PhD Student University of California Irvine
			
			Home

			
					
					    I am currently a Ph.D student in Computer Graphics and Visualization Lab. at University of California, Irvine.
					     I received my Bachelor Degree in Software Engineering in 2012 in Computer Engineering Department of Sharif University of Technology in Tehran, Iran.
						    I work  with Prof. Aditi Majumder 
    My updated résumé is available here
					
					
					
			

			
				Research Interests:
				Computer Graphics
				Computer Vision
				HCI
			 

			
				Contact
				Office:   DBH 4211
				Email:    mabbaspo[at]uci[dot]edu
				              mabbaspo[at]ics[dot]uci[dot]edu
##------------------URL-------------------------##
http://www.ics.uci.edu/~mabbaspo/academic.html
##-----------------TITLE------------------------##
Mahdi Abbaspour Tehrani
##------------------TEXT------------------------##
HomeAcademicPublicationResearchExperiencesActivities 
			 
			
			
			 
		 
		
		
			
			
				University of California Irvine
				
				
					Irvine, US 
					PhD Student, Computer Graphics and Visualization 
					Department of Computer Science 
					2012 - Present 
					Link
				

				University of Illinois at Urbana-Champaign
				
				
					Singapore 
					Summer Internship in Computer Vision and Image Processing 
					Advance Digital Science Center in Singapore, University of Illinois at Urbana-Champaign 
					Summer 2010 
					Link
				
				
				Sharif University of Technology
				
				
					Tehran, Iran 
					B.S. Software Engineering 
					Department of Computer Engineering 
					2007 - 2012 
					Link
##------------------URL-------------------------##
http://www.ics.uci.edu/~mabbaspo/publication.html
##-----------------TITLE------------------------##
Mahdi Abbaspour Tehrani
##------------------TEXT------------------------##
HomeAcademicPublicationResearchExperiencesActivities 
			 
			
			
			 
		 
		
		
			
			
				2013

			
				2010
				
				
					M.Abbaspour Tehrani, E.Asgari, S.Bagheri, M. N. Do, P.Khanipour, J.Lu, S.MahAbadi, A.Vakilian, Automatic pill identification, ADSC technical report, pp. 1 - 16, Oct. 2010. (In process of being patented in Singapore)
					
				
				
				
				
					M.Abbaspour Tehrani, E.Asgari, S.Bagheri, M. N. Do, P.Khanipour, J.Lu, S.MahAbadi, A.Vakilian, Indoor positioning and navigation with a camera phone, ADSC technical report, pp. 1 - 10, Oct. 2010.
					
				

				2009
				
				
					Soheil Hassas Yeganeh, Jafar Habibi, Hassan Abolhassani, Mahdi Abbaspour Tehrani, Jamshid Esmaelnezhad, An approximation algorithm for finding skeletal points for density based clustering approaches, Proceedings of the IEEE Symposium on Computational Intelligence and Data Mining, CIDM, part of the IEEE Symposium Series on Computational Intelligence, pp. 403-410, Nashville, TN, USA, 2009.
					  PDF
##------------------URL-------------------------##
http://www.ics.uci.edu/~jiac5/RT/index.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
This project is an implementation of Ray Tracer without using any graphics frameworks like OpenGL, DirectX, ect. The scenes used come from paper BART: A Benchmark for Animated Ray Tracing 


Source code





Museum

Kitchen

Robot
##------------------URL-------------------------##
http://www.ics.uci.edu/~jiac5/PMVS/index.html
##-----------------TITLE------------------------##
PMVS by Jia Chen
##------------------TEXT------------------------##
Patch-based Multi View Stereo IntroductionThis
project is an implementation of PAMI 2010 paper "Accurate, dense, and
robust multi-view stereopsis" by Yasutaka Furukawa and Jean Ponce. The
system is able to reconstruct patches from a set of calibrated images,
by going through the match -> expand -> filter procedure. Some of
the results are shown as below. Since currently only the patch
reconstruction part of the algorithm (section III of the paper) is
implemented, the polygonal mesh cannot be generated yet. Besides that,
considering that there are still a big space to be improved for my
current patch reconstruction result, I expect everything to be ready in
early March. Source code (Feb 22, 2014 version)Patches generated for Skull data set (Feb 22, 2014) can be viewed by PatchViewer provided by PMVSAlgorithm and Implementation DetailsStep 1. Initial Match1.1 Feature DetectionFor
each images, blob and corner features are detected by Harris and
DoG operators, as shown below.  Currently, for convenience, this
part is implemented with OpenCV (Version 2.6.4), which lead my
implementation dependent on OpenCV, so I plan to replace it with my own
code later.  1.2 Feature MatchingSince
all the images are calibrated, for each feature f0 in image 0 (as shown
in the left figure), we can determine the epipolar line in another
image i from their corresponding projection matrices (shown as green
line in the figure below). And only the features (1) fall on the
epipolar line and (2) with the same type (Harris or DoG) as the
reference feature wil be considered as matching candidates. For
the epipolar geometry calculation, I tried to use OpenCV at first, but
the results produce by OpenCV triangulation methods seems quite
problematic. So I had to create my own implementation, and found the
bible book "Multiple view geometry in computer vision" an excellent
reference for implementing this. Left:
A feature detected in view 0, Right: the epipolar line are shown as
green,  while the matching candidates are red points1.3 Initial MatchAs
shown in the figure above, there are often multiple candidates which
meet geometry constraints, so we still have to filter out those fake
positives with photometric discrepancy function as eq (1) in the paper.
For this part, I generally follows the algorithm below. Except for
the Patch Optimization (Refine) part, while the conjugate gradient
method was applied by the paper using Wnlib library, I met some
problems when compiling Wnlib under Windows. So as a temporary
solution, I applied a simple searching method (iteratively search for
minimum point in the nearby value space) instead, which I think
although slower, but should have the same effect as conjugate gradient
method. Step 2. ExpansionAs
the initial match has only a sparse set of patches, expansion is
important to produce patches dense enough for reconstruction. In this
stage, I followed the algorithm below. And since most of the patches
are actually added into patch list in this stage, expansion took the
most of processing time (70% percent of total time).Step 3. FilteringCurrently
filtering is the most problematic part of the system, some outliers are
not filtered out properly.  A big improvement is expected to be
done. Known Issues and Future WorkAs the project is still on going, the tasks below are to be finished: 1. The filtering issue mentioned above. 2. Polygonal mesh reconstruction. 3.
Performance improvement. This implementation runs over an hour to
produce patches, while official PMVS needs less than 20 minutes. I
guess that the reasons for the performance issue include:  (1) The
searching method I applied in patch optimization is much slower than
conjugate gradient method (2) PMVS might apply multi thread (or GPU ? I
am not sure) (3) Some calculation duplication in my implementation 4.
PatchViewer. Currently the 3D views are rendered using PatchViewer
provided by PMVS, as a customized viewer will provide more convenience
for debugging and testing, I plan to implement my own PatchViewer in
next step.References:1.
Furukawa Y, Ponce J. Accurate, dense, and robust multiview
stereopsis[J]. Pattern Analysis and Machine Intelligence, IEEE
Transactions on, 2010, 32(8): 1362-1376.2. R. I. Hartley and A. Zisserman,Multiple View Geometry in Computer Vision. Cambridge University Press, 2004.
##------------------URL-------------------------##
http://www.ics.uci.edu/community/alumni/mentor/
##-----------------TITLE------------------------##
alumni mentoring program @ the bren school of information and computer sciences
##------------------TEXT------------------------##
ABOUT

                    
                    About the SchoolDean's WelcomeFacts and FiguresDonald Bren HallVisit the Bren SchoolEquity & Diversity
                        Contact Us               
                
                
                     DEPARTMENTS 
                    

                    Computer ScienceInformaticsStatistics               
                
                
                     RESEARCH 
                
                
                    Research AreasResearch CentersResearch Highlights
                
                
                     EDUCATION 
                    

                    Graduate ▸ 
                        
                            Prospective StudentsHow to ApplyPrograms of StudyAcademic Year PlanFormsPoliciesFunding & HousingComputing SupportCampus ResourcesVisit the Bren SchoolGraduate Student HandbookContact

                        Undergraduate ▸ 
                        
                            ContactAcademic AdvisingAcademic Year PlanPetitionsICS MajorsICS MinorsPolicies: Academic IntegrityPolicies: Academic StandingPolicies: Add, drop, & change optionsPolicies: Coursework outside UCIPolicies: Grade policyPolicies: Laptop & computer usePolicies: Withdrawal/ReadmissionGraduationICS Student LifeComputing Support
                        Prospective UndergradScholarships & Fellowships               
                
                    
                    PEOPLE                      
                    
                
                    FacultyStaffGraduate Students   
                 
                
                    COMMUNITY
                    
                    
                    AlumniFriendsNewsUCI Parents   
                
                
                    GET INVOLVED
                
                
                    Make a GiftLeadership CouncilCorporate PartnersSponsor ProjectsProduct Development CompetitionZotLink Jobs & Internships               
                






            




    










    

Bren school home > Community > Alumni > Mentoring program


  
Alumni mentoring program




The alumni mentoring program was created to foster the interaction
            between students and alumni of the Bren School. 
By definition, a mentor is an advisor who may provide academic or
            career guidance, networking opportunities, and insights into the
            working world.
Students network with alumni to explore career
                interests and engage in mutually beneficial, professionally oriented
                relationships. 
Similar career goals, shared interests or common academic
                backgrounds provide the foundation for the mentor/student relationship. 
BENEFITS OF MENTORING
              
            While the advantages of a mentor program to our undergraduate students
        may be more obvious, alumni also benefit from the program by:
» Enriching
          their lives by making a difference in someone else's
          » Reconnecting
          with the Bren School on a personal level
    » Gaining new skills as they advise and counsel students
Sign up today to make a 
difference in a student's life!
Additional information about the program can be found in the  Mentor Handbook. There are also a series of mentoring tips to help you establish a successful and rewarding mentoring relationship.





More community »
AlumniFriendsParentsLeadership CouncilNewsGive a gift
More mentoring »

Mentor
 program homeMentor
 signupMentee
 loginMentor 
handbook (PDF)Mentoring
 tipsMentee 
handbook (PDF)

Quick Links - select a page -Computing supportCS Seminar SeriesEmploymentFacilitiesFind faculty and staffGiving to the Bren SchoolGraduate degreesKay Family Foundation LabProject ICSProspective undergraduatesSafety proceduresUndergraduate degrees
           

Copyright Inquiries |
   UCI Directory |
   Intranet |
   
   
 
  icswebmaster
##------------------URL-------------------------##
http://www.ics.uci.edu/~ronen/Site/Scheduling_files/widget0_markup.html
##-----------------TITLE------------------------##

##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/community/friends/proj125/proj125_samples.php
##-----------------TITLE------------------------##
project:ics samples @ the bren school of information and computer sciences
##------------------TEXT------------------------##
ABOUT

                    
                    About the SchoolDean's WelcomeFacts and FiguresDonald Bren HallVisit the Bren SchoolEquity & Diversity
                        Contact Us               
                
                
                     DEPARTMENTS 
                    

                    Computer ScienceInformaticsStatistics               
                
                
                     RESEARCH 
                
                
                    Research AreasResearch CentersResearch Highlights
                
                
                     EDUCATION 
                    

                    Graduate ▸ 
                        
                            Prospective StudentsHow to ApplyPrograms of StudyAcademic Year PlanFormsPoliciesFunding & HousingComputing SupportCampus ResourcesVisit the Bren SchoolGraduate Student HandbookContact

                        Undergraduate ▸ 
                        
                            ContactAcademic AdvisingAcademic Year PlanPetitionsICS MajorsICS MinorsPolicies: Academic IntegrityPolicies: Academic StandingPolicies: Add, drop, & change optionsPolicies: Coursework outside UCIPolicies: Grade policyPolicies: Laptop & computer usePolicies: Withdrawal/ReadmissionGraduationICS Student LifeComputing Support
                        Prospective UndergradScholarships & Fellowships               
                
                    
                    PEOPLE                      
                    
                
                    FacultyStaffGraduate Students   
                 
                
                    COMMUNITY
                    
                    
                    AlumniFriendsNewsUCI Parents   
                
                
                    GET INVOLVED
                
                
                    Make a GiftLeadership CouncilCorporate PartnersSponsor ProjectsProduct Development CompetitionZotLink Jobs & Internships               
                






            




    










    

Bren school home > Community > Friends > Project ICS


  
Project:ICS samples




Project:ICS students have proven their ability to think outside
             the box and have shown stellar work ethic in their projects. Below
            is a sampling of projects students have done.

HP, TMR Processing
  Students are building a simulation of a new fault tolerant computer system using
  a mechanism that can tolerate much greater variation than current systems while
  being able to survive any single failure. In this simulation, students have incorporated
  new operating system elements, new interrupt structures, new scheduling methods
  and new self-checking elements. 
      
      AOL, Program Wizard
      Students created a program “wizard” that guides the user through
  the steps of installing and troubleshooting hardware devices.
  
  HP, ServerNet
  Students identified a mechanism to improve performance of an existing HP network
  while retaining a minimum level of service to all 16 processors in the network.
  
  SmartHome, SmartPark
  Students developed Web monitoring technology utilizing smart devices to make
  the Irvine “Great Park” more manageable, safe and useful to residents
  and staff. The project took in consideration the park’s actual plans,
  as well as proposed devices covering everything from light controls, audio
  electronics,
  motion detectors and wireless video cameras to moisture control devices.
  
  RiverOne, RegressTest and TestGen
  Students created .NET testing record-and-playback and .NET test data generation
  tools.








Thank you current and past sponsors »


































Quick Links - select a page -Computing supportCS Seminar SeriesEmploymentFacilitiesFind faculty and staffGiving to the Bren SchoolGraduate degreesKay Family Foundation LabProject ICSProspective undergraduatesSafety proceduresUndergraduate degrees
           

Copyright Inquiries |
   UCI Directory |
   Intranet |
   
   
 
  icswebmaster
##------------------URL-------------------------##
http://www.ics.uci.edu/community/friends/proj125/proj125_faq.php
##-----------------TITLE------------------------##
project:ics faq @ the bren school of information and computer sciences
##------------------TEXT------------------------##
ABOUT

                    
                    About the SchoolDean's WelcomeFacts and FiguresDonald Bren HallVisit the Bren SchoolEquity & Diversity
                        Contact Us               
                
                
                     DEPARTMENTS 
                    

                    Computer ScienceInformaticsStatistics               
                
                
                     RESEARCH 
                
                
                    Research AreasResearch CentersResearch Highlights
                
                
                     EDUCATION 
                    

                    Graduate ▸ 
                        
                            Prospective StudentsHow to ApplyPrograms of StudyAcademic Year PlanFormsPoliciesFunding & HousingComputing SupportCampus ResourcesVisit the Bren SchoolGraduate Student HandbookContact

                        Undergraduate ▸ 
                        
                            ContactAcademic AdvisingAcademic Year PlanPetitionsICS MajorsICS MinorsPolicies: Academic IntegrityPolicies: Academic StandingPolicies: Add, drop, & change optionsPolicies: Coursework outside UCIPolicies: Grade policyPolicies: Laptop & computer usePolicies: Withdrawal/ReadmissionGraduationICS Student LifeComputing Support
                        Prospective UndergradScholarships & Fellowships               
                
                    
                    PEOPLE                      
                    
                
                    FacultyStaffGraduate Students   
                 
                
                    COMMUNITY
                    
                    
                    AlumniFriendsNewsUCI Parents   
                
                
                    GET INVOLVED
                
                
                    Make a GiftLeadership CouncilCorporate PartnersSponsor ProjectsProduct Development CompetitionZotLink Jobs & Internships               
                






            




    










    

Bren school home > Community > Friends > Project ICS


  
Project:ICS FAQ




How do I submit a proposed project? 

Please contact Kristin Huerth at 
khuerth@ics.uci.edu or (949) 824-3074
who will get a brief summary of your proposed project.
 The course instructor will contact you to evaluate the scope and level of the proposed project and offer details on the course (expectations, timeline, etc.). All projects must be approved by the instructor before the beginning of the quarter. 
 Although our intent is to assign every project with a student team, we cannot guarantee all projects will be assigned. 

 How long will the teams work on the project? 

1-Quarter Project: 10 weeks 
2-Quarter Project: 20 weeks 
3-Quarter Project: 30 weeks
Complex projects may be accepted at the discretion of the instructor with the understanding that they would span multiple quarters and incur additional fees. 

 Will I have a project that is production ready at the end of the project? 
Final student projects are not intended to be “production quality” systems, however, final projects will fulfill the original requirements and specifications provided. 

 Donation 
Your donation for Project:ICS is due before final product/results are delivered to your company. This donation is a tax-deductible gift to the Bren School.

 What contact will I have with my team? 
Once your project is approved, a time will be set during the first week of classes for you to come to campus and present the project to the Project:ICS class. 
 Although our intent is to assign every project with a student team, we cannot guarantee all projects will be assigned. 
 If your project is assigned to a team, you are encouraged to meet with them as often as necessary in the early stages. Three to four weeks into the project, the team will deliver its requirements document to you. This milestone requires that at least one person representing your company review and approve the requirements. 
 The instructor remains in touch with you throughout the quarter(s), especially during the early stages of the class, to make sure that the your needs are being met. Additional contact between the team and you are at a pace suitable for both. 
 The project is delivered to you at the end of the program. On or near the last day of class, the instructor holds a final project demo, where the team presents its final deliverable to you and the instructor. 

 Can I propose projects for future quarters? 
If you are interested in partnering with us in future quarters, please contact Kristin Huerth. 

 How do I get removed from your mailing list?
If your company is not interested in Project:ICS, please contact Kristin Huerth to be removed from this mailing list. 
If there is someone else in your company to whom we should be addressing these mailings, please have him or her contact Kristin Huerth so that we can update our records.








Thank you current and past sponsors »


































Quick Links - select a page -Computing supportCS Seminar SeriesEmploymentFacilitiesFind faculty and staffGiving to the Bren SchoolGraduate degreesKay Family Foundation LabProject ICSProspective undergraduatesSafety proceduresUndergraduate degrees
           

Copyright Inquiries |
   UCI Directory |
   Intranet |
   
   
 
  icswebmaster
##------------------URL-------------------------##
http://www.ics.uci.edu/community/friends/proj125/proj125_testimonials.php
##-----------------TITLE------------------------##
project:ics testimonials @ the bren school of information and computer sciences
##------------------TEXT------------------------##
ABOUT

                    
                    About the SchoolDean's WelcomeFacts and FiguresDonald Bren HallVisit the Bren SchoolEquity & Diversity
                        Contact Us               
                
                
                     DEPARTMENTS 
                    

                    Computer ScienceInformaticsStatistics               
                
                
                     RESEARCH 
                
                
                    Research AreasResearch CentersResearch Highlights
                
                
                     EDUCATION 
                    

                    Graduate ▸ 
                        
                            Prospective StudentsHow to ApplyPrograms of StudyAcademic Year PlanFormsPoliciesFunding & HousingComputing SupportCampus ResourcesVisit the Bren SchoolGraduate Student HandbookContact

                        Undergraduate ▸ 
                        
                            ContactAcademic AdvisingAcademic Year PlanPetitionsICS MajorsICS MinorsPolicies: Academic IntegrityPolicies: Academic StandingPolicies: Add, drop, & change optionsPolicies: Coursework outside UCIPolicies: Grade policyPolicies: Laptop & computer usePolicies: Withdrawal/ReadmissionGraduationICS Student LifeComputing Support
                        Prospective UndergradScholarships & Fellowships               
                
                    
                    PEOPLE                      
                    
                
                    FacultyStaffGraduate Students   
                 
                
                    COMMUNITY
                    
                    
                    AlumniFriendsNewsUCI Parents   
                
                
                    GET INVOLVED
                
                
                    Make a GiftLeadership CouncilCorporate PartnersSponsor ProjectsProduct Development CompetitionZotLink Jobs & Internships               
                






            




    










    

Bren school home > Community > Friends > Project ICS


  
Project:ICS testimonials




These short videos give you an opportunity to hear from our sponsors and students. 
            
            




Sponsor's Experience
Local comapnies discuss their experience with Project:ICS and how it allowed them to augment their IT staff by partnering with dynamic faculty and a senior-level team of Bren School students to start, develop or complete an existing technology project.






Student's Experience
Bren School alumnus Justine Wolfson recalls his experience of  Project:ICS, that provided him a real-world opportunity to work with UC Irvine's University Club to design, test and build their new web site.






Project:ICS Overivew 
A brief overview of Project:ICS, the Bren School's in-class internship program, that allows your company to augment its IT staff by partnering with dynamic faculty and a senior-level team of Bren School students to start, develop or complete an existing technology project. 






CallFire Alumni Profile  
Dinesh Ravishanker and Vijesh Mehta particiapted in 2006. These two ICS alums went on to form CallFire, a VOIP company based in Los Angeles.  









Thank you current and past sponsors »


































Quick Links - select a page -Computing supportCS Seminar SeriesEmploymentFacilitiesFind faculty and staffGiving to the Bren SchoolGraduate degreesKay Family Foundation LabProject ICSProspective undergraduatesSafety proceduresUndergraduate degrees
           

Copyright Inquiries |
   UCI Directory |
   Intranet |
   
   
 
  icswebmaster
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/opportunities/applied-learning/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
응용 학습 « 기회 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                기회
Bren:ICS의 교육은 단순한 교육과정 그 이상을 선사합니다.            
            

            

                응용 학습우등생연구창업                    
            
                    
            
     응용 학습
	            
	            
                    
                    사람들로 가득찬 프로젝트 발표 현장
                
    	        
	            
	            본교의 전공은 체계적이므로, 학생들은 교육의 일환으로 배운 내용을 실제로 적용할 수 있습니다. 모든 전공에는 재학 기간 내내 실시하는 수많은 종합 프로젝트 과정이 포함됩니다.
	            
	            
	            
	            프로젝트 과정에는 선수과목인 강좌가 여러 개 있으므로, 학생들은 이미 해당 주제의 기초를 알고 있는 상태에서 들어가 경험이 풍부한 강사의 지도 아래 고차원의 문제에 집중할 수 있습니다.
	            
	            
	            
	            실제 현장에서 일어나는 문제를 다룸으로써 Bren:ICS 종합 프로젝트 과정은 발생 가능한 광범위한 영역에 접근합니다. 본교를 거쳐간 학생들은 다음과 같은 영역에서 소프트웨어나 하드웨어로 이루어진 컴퓨터 기반 시스템을 지정, 설계, 개발하는 법을 배울 기회가 있었습니다.
	            
	            
	            항공우주인공 지능생체의학기업 금융교육엔터테인먼트환경게임
	            
	            보건인터넷법률경영제조비영리약제학
	            
	            
    	        
    	        
    	        광범위한 네트워크를 이루고 있는 본교의 수많은 협력 기업들이 프로젝트 과정을 듣는 학생 팀들의 현장 주관 기관으로 참여합니다. 이러한 산학간 협력을 통해 졸업생들은 풍부한 인턴십과 경력의 기회를 얻곤 합니다. 졸업생들이 자주 말하는 이야기에 따르면, 종합 과정은 UCI 재학 시절의 하이라이트였으며 첫 직장에 필요한 기본 능력을 준비하는 데 가장 결정적인 차별점을 선물해 주었다고 합니다.
    	        
    	        
                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/opportunities/applied-learning/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Nghiên cứu Ứng dụng « CƠ HỘI « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                CƠ HỘI
Chương trình đào tạo của Bren:ICS đem đến cho bạn không chỉ những kiến thức trên giảng đường            
            

            

                Nghiên cứu Ứng dụngChương trình danh dựNghiên cứuQuản trị doanh nghiệp                    
            
                    
            
     Nghiên cứu Ứng dụng
	            
	            
                    
                    Chật kín chỗ ngồi trong phòng nghe thuyết trình về dự án
                
    	        
	            
Các chuyên ngành của chúng tôi được tổ chức chặt chẽ do vậy bạn thực sự được học những gì bạn bạn mong muốn khi đăng ký theo học. Mỗi chuyên ngành đều có nhiều chương trình đồ án thực tế được tổ chức trong suốt chương trình học. 

Các chương trình đồ án có nhiều chuỗi bài giảng được coi là điều kiện tiên quyết, vì thế bạn sẽ nắm được những kiến thức căn bản về chủ đề nghiên cứu và có thể tập trung vào những vấn đề cấp cao dưới sự hướng dẫn của một giảng viên giàu kinh nghiệm. 

Các chương trình đồ án thực tế Bren:ICS đề cập đến nhiều lĩnh vực đa dạng dựa theo những vấn đề trên thế giới thực tế thường xuyên diễn ra. Những sinh viên đạt yêu cầu có cơ hội nghiên cứu để xác định, thiết kế và phát triển các hệ thống chạy trên mạng lưới điện toán kết hợp giữa phần mềm và/hoặc phần cứng trong những lĩnh vực như: 
	            
	            hàng không vũ trụtri thức nhân tạoy sinh họctài chính kinh doanhgiáo dụcgiải trímôi trườngtrò chơi
y tếinternetluậtquản lýsản xuấtphi lợi nhuậndược lý học


Mạng lưới rộng lớn các công ty liên kết với chúng tôi tham gia với tư cách là các điểm đăng cai cho các nhóm sinh viên khi thực hiện các đồ án thực tế. Hình thức hợp tác trường-ngành này thường đem đến cho các sinh viên cơ hội thực tập đa dạng và những cơ hội nghề nghiệp phong phú khi tốt nghiệp, nhất là những sinh viên thường xuyên tạo nên những điểm nhấn ở UCI trong quá trình thực hiện các chương trình đồ án thực tế và những sinh viên đã tạo nên sự khác biệt lớn trong quá trình nỗ lực trau dồi kỹ năng. 

    	        
                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/opportunities/applied-learning/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
應用所學 « 機會 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                機會
貝林資科院的教育不只是唸書            
            

            

                應用所學榮譽學生研究創業精神                    
            
                    
            
     應用所學
	            
	            
                    
                    專案報告座無虛席
                
    	        
	            
	            各系課程在精心安排之下，能讓學生一邊受教一邊應用所學。 各系都會在各年級安排幾個期末專題課程。
	            
	            
	            
	            專題課程都有設下條件，要求必須先上過幾門課才能選讀，目的是讓選課的學生先有基本了解，以便在經驗豐富的老師帶領下，專心研究高深課題。
	            
	            
	            
	            貝林資科院的期末專題，經常都是處理現實社會中發生的問題，所以接觸到的領域非常廣泛。 過去的學生就曾經針對以下領域，學習如何選擇、設計、開發由軟硬體構成的電腦系統：
	            
	            
	            航太人工智慧生物醫學企業財務教育娛樂環境遊戲
	            
	            醫療網際網路法律管理製造非營利藥理
	            
	            
	            
    	        
    	        
    	        
    	        本校和眾多企業都有合作關係，其中多家公司參與這項計畫，讓本校期末專題課程的學生團隊到場研究。 這種建教合作關係通常帶來豐富的實習經驗，畢業生也能藉此尋找工作。很多校友都表示，期末專題是他們求學生涯的高峰。他們在這段期間學到的東西，就是日後找到第一份工作的關鍵。
    	        

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/opportunities/applied-learning/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
應用所學 « 機會 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                機會
貝林資科院的教育不只是唸書            
            

            

                應用所學榮譽學生研究創業精神                    
            
                    
            
     應用所學
	            
	            
                    
                    專案報告座無虛席
                
    	        
	            
	            各系課程在精心安排之下，能讓學生一邊受教一邊應用所學。 各系都會在各年級安排幾個期末專題課程。
	            
	            
	            
	            專題課程都有設下條件，要求必須先上過幾門課才能選讀，目的是讓選課的學生先有基本了解，以便在經驗豐富的老師帶領下，專心研究高深課題。
	            
	            
	            
	            貝林資科院的期末專題，經常都是處理現實社會中發生的問題，所以接觸到的領域非常廣泛。 過去的學生就曾經針對以下領域，學習如何選擇、設計、開發由軟硬體構成的電腦系統：
	            
	            
	            航太人工智慧生物醫學企業財務教育娛樂環境遊戲
	            
	            醫療網際網路法律管理製造非營利藥理
	            
	            
	            
    	        
    	        
    	        
    	        本校和眾多企業都有合作關係，其中多家公司參與這項計畫，讓本校期末專題課程的學生團隊到場研究。 這種建教合作關係通常帶來豐富的實習經驗，畢業生也能藉此尋找工作。很多校友都表示，期末專題是他們求學生涯的高峰。他們在這段期間學到的東西，就是日後找到第一份工作的關鍵。
    	        

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/opportunities/applied-learning/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
응용 학습 « 기회 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                기회
Bren:ICS의 교육은 단순한 교육과정 그 이상을 선사합니다.            
            

            

                응용 학습우등생연구창업                    
            
                    
            
     응용 학습
	            
	            
                    
                    사람들로 가득찬 프로젝트 발표 현장
                
    	        
	            
	            본교의 전공은 체계적이므로, 학생들은 교육의 일환으로 배운 내용을 실제로 적용할 수 있습니다. 모든 전공에는 재학 기간 내내 실시하는 수많은 종합 프로젝트 과정이 포함됩니다.
	            
	            
	            
	            프로젝트 과정에는 선수과목인 강좌가 여러 개 있으므로, 학생들은 이미 해당 주제의 기초를 알고 있는 상태에서 들어가 경험이 풍부한 강사의 지도 아래 고차원의 문제에 집중할 수 있습니다.
	            
	            
	            
	            실제 현장에서 일어나는 문제를 다룸으로써 Bren:ICS 종합 프로젝트 과정은 발생 가능한 광범위한 영역에 접근합니다. 본교를 거쳐간 학생들은 다음과 같은 영역에서 소프트웨어나 하드웨어로 이루어진 컴퓨터 기반 시스템을 지정, 설계, 개발하는 법을 배울 기회가 있었습니다.
	            
	            
	            항공우주인공 지능생체의학기업 금융교육엔터테인먼트환경게임
	            
	            보건인터넷법률경영제조비영리약제학
	            
	            
    	        
    	        
    	        광범위한 네트워크를 이루고 있는 본교의 수많은 협력 기업들이 프로젝트 과정을 듣는 학생 팀들의 현장 주관 기관으로 참여합니다. 이러한 산학간 협력을 통해 졸업생들은 풍부한 인턴십과 경력의 기회를 얻곤 합니다. 졸업생들이 자주 말하는 이야기에 따르면, 종합 과정은 UCI 재학 시절의 하이라이트였으며 첫 직장에 필요한 기본 능력을 준비하는 데 가장 결정적인 차별점을 선물해 주었다고 합니다.
    	        
    	        
                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/opportunities/applied-learning/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Applied Learning « Opportunities « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Opportunities
A Bren School education provides you with more than just course work            
            

            

                Applied LearningHonorsResearchEntrepreneurship                    
            
                    
            
     Applied Learning

     
        
        Standing room only at project presentations
    

     
                Our majors are structured so you actually apply what you learn as part of the educational experience. Every major includes a number of capstone project courses throughout the years.
                
                
                
                Project courses have several lecture courses as prerequisites, so you enter knowing the basics of the subject matter and can concentrate on advanced issues under the guidance of an experienced instructor.
                
                
                
                By virtue of often addressing real world problems, Bren School capstone project courses touch upon a wide spectrum of possible domains. Past students have had the opportunity to learn to specify, design, and develop computer-based systems comprised of software and/or hardware in such domains as:
                
                
                aerospaceartificial intelligencebiomedicalbusiness financeeducationentertainmentenvironmentgames
                
                health careinternetlawmanagementmanufacturingnon-profitpharmacology
                
                
                
                
                Many of our extensive network of affiliated companies participate as host sites for student teams in project courses. These school-industry partnerships often provide rich internship and career opportunities for graduates, who frequently report that capstone courses were the highlights of their time at UCI and made the critical difference in preparing them with a skill set that got them their first jobs.
                

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/opportunities/applied-learning/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Nghiên cứu Ứng dụng « CƠ HỘI « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                CƠ HỘI
Chương trình đào tạo của Bren:ICS đem đến cho bạn không chỉ những kiến thức trên giảng đường            
            

            

                Nghiên cứu Ứng dụngChương trình danh dựNghiên cứuQuản trị doanh nghiệp                    
            
                    
            
     Nghiên cứu Ứng dụng
	            
	            
                    
                    Chật kín chỗ ngồi trong phòng nghe thuyết trình về dự án
                
    	        
	            
Các chuyên ngành của chúng tôi được tổ chức chặt chẽ do vậy bạn thực sự được học những gì bạn bạn mong muốn khi đăng ký theo học. Mỗi chuyên ngành đều có nhiều chương trình đồ án thực tế được tổ chức trong suốt chương trình học. 

Các chương trình đồ án có nhiều chuỗi bài giảng được coi là điều kiện tiên quyết, vì thế bạn sẽ nắm được những kiến thức căn bản về chủ đề nghiên cứu và có thể tập trung vào những vấn đề cấp cao dưới sự hướng dẫn của một giảng viên giàu kinh nghiệm. 

Các chương trình đồ án thực tế Bren:ICS đề cập đến nhiều lĩnh vực đa dạng dựa theo những vấn đề trên thế giới thực tế thường xuyên diễn ra. Những sinh viên đạt yêu cầu có cơ hội nghiên cứu để xác định, thiết kế và phát triển các hệ thống chạy trên mạng lưới điện toán kết hợp giữa phần mềm và/hoặc phần cứng trong những lĩnh vực như: 
	            
	            hàng không vũ trụtri thức nhân tạoy sinh họctài chính kinh doanhgiáo dụcgiải trímôi trườngtrò chơi
y tếinternetluậtquản lýsản xuấtphi lợi nhuậndược lý học


Mạng lưới rộng lớn các công ty liên kết với chúng tôi tham gia với tư cách là các điểm đăng cai cho các nhóm sinh viên khi thực hiện các đồ án thực tế. Hình thức hợp tác trường-ngành này thường đem đến cho các sinh viên cơ hội thực tập đa dạng và những cơ hội nghề nghiệp phong phú khi tốt nghiệp, nhất là những sinh viên thường xuyên tạo nên những điểm nhấn ở UCI trong quá trình thực hiện các chương trình đồ án thực tế và những sinh viên đã tạo nên sự khác biệt lớn trong quá trình nỗ lực trau dồi kỹ năng. 

    	        
                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/opportunities/applied-learning/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Applied Learning « Opportunities « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Opportunities
A Bren School education provides you with more than just course work            
            

            

                Applied LearningHonorsResearchEntrepreneurship                    
            
                    
            
     Applied Learning

     
        
        Standing room only at project presentations
    

     
                Our majors are structured so you actually apply what you learn as part of the educational experience. Every major includes a number of capstone project courses throughout the years.
                
                
                
                Project courses have several lecture courses as prerequisites, so you enter knowing the basics of the subject matter and can concentrate on advanced issues under the guidance of an experienced instructor.
                
                
                
                By virtue of often addressing real world problems, Bren School capstone project courses touch upon a wide spectrum of possible domains. Past students have had the opportunity to learn to specify, design, and develop computer-based systems comprised of software and/or hardware in such domains as:
                
                
                aerospaceartificial intelligencebiomedicalbusiness financeeducationentertainmentenvironmentgames
                
                health careinternetlawmanagementmanufacturingnon-profitpharmacology
                
                
                
                
                Many of our extensive network of affiliated companies participate as host sites for student teams in project courses. These school-industry partnerships often provide rich internship and career opportunities for graduates, who frequently report that capstone courses were the highlights of their time at UCI and made the critical difference in preparing them with a skill set that got them their first jobs.
                

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/careers/alumni/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
校友 « 職場 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                職場
貝林資科院畢業校友的成就，屢屢讓我們刮目相看            
            

            

                廣度工作機會實習研究所校友                    
            
                    
            
     校友
    	        
	      
	      貝林資科院提供的教育讓你有更多職業選擇，不一定只能走電腦這一行。 我們的校友在各行各業服務，包括皮克斯、IBM、雅虎、太空總署、微軟、谷歌、德勤會計師事務所、優利、Accenture、美林、Blizzard、Broadcom和其他多家知名公司。職稱也形形色色，有電腦鑑識員、商業系統架構師、軟體架構師、開發經理、數位廣告策略師、律師、心靈諮商員、技術長、資訊技術主任、產品經理、軟體工程師、程式設計師、分析師和顧問。
	      
	      
	      
	      本校課程為終身學習的職場生涯打下厚實基礎，不僅傳授核心知識與技術，更能以此為出發點，讓你在就業期間繼續拓展能力。 
	      
	      
	      
	      多位學生將貝林資科院的主修科目結合其他輔系課程（例如英文、心理學、哲學、教育研究、經濟學、化學、創作藝術、數位藝術、公民與社群參與……等等），讓自己有選擇職業的特殊優勢。
	      

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/careers/alumni/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Alumni « Careers « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Careers
What alumni accomplish in life with a Bren School degree continues to surprise even us            
            

            

                BreadthJob OpportunitiesInternshipsGraduate SchoolAlumni                    
            
                    
            
     Alumni
                
          
          A Bren School education prepares you for a broad range of careers, and not just in computing. Our alumni work at companies as diverse as Pixar, IBM, Yahoo, NASA, Microsoft, Google, Deloitte and Touche, Unisys, Accenture, Merrill Lynch, Blizzard, Broadcom, and many other world-renowned organizations, and have job titles such as Computer Forensic, Business Systems Architect, Software Architect, Development Manager, Digital Advertising Strategist, Attorney, Spiritual Counselor, Chief Technology Officer, IT Director, Product Manager, Software Engineer, Programmer/Analyst, and Consultant.
          
          
          
          Our courses provide a strong foundation for a career of lifelong learning, preparing you with core knowledge and skills upon which you will continue to expand your abilities throughout your career. 
          
          
          
          Many of our students combine a Bren School major with a minor from across the campus (e.g., English, Psychology, Philosophy, Educational Studies, Economics, Chemistry, Studio Art, Digital Arts, Civic and Community Engagement, to name a few) to uniquely position them for the career of their choice.
          

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/careers/alumni/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Cựu sinh viên « NGHỀ NGHIỆP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                NGHỀ NGHIỆP
Những việc mà các cựu sinh viên hoàn thành với tấm bằng từ trường Bren:ICS vẫn tiếp tục làm ngay cả chúng tôi không hết bất ngờ            
            

            

                Sự đa dạngCơ hội việc làmThực tậpTrường cao họcCựu sinh viên                    
            
                    
            
     Cựu sinh viên

Ở Bren:ICS, học vấn đưa bạn đến một thế giới nghề nghiệp đa dạng, không chỉ thuộc ngành điện toán. Các cựu sinh viên của chúng tôi làm việc tại nhiều công ty như Pixar, IBM, Yahoo, NASA, Microsoft, Google, Deloitte and Touche, Unisys, Accenture, Merrill Lynch, Blizzard, Broadcom, và nhiều tổ chức nổi tiếng thế giới khác, và đang nắm giữ những chức vụ như Chuyên viên Pháp lý Điện toán (Computer Forensic), Kiến trúc sư Hệ thống Kinh doanh (Business Systems Architect), Kiến trúc sư Phần mềm (Software Architect), Giám đốc Phát triển (Development Manager), Nhà chiến lược Quảng cáo Kỹ thuật số (Digital Advertising Strategist), Luật sư, Cố vấn Tinh thần, Tổng Giám đốc Công nghệ, Giám đốc Công nghệ Thông tin, Giám đốc Sản phẩm, Kỹ sư Phần mềm, Lập trình viên/Chuyên viên phân tích, và Chuyên viên Tư vấn. 

Các khóa học của chúng tôi đảm bảo một nền tảng vững chắc cho nghề nghiệp yêu cầu sự học hỏi liên tục suốt đời, trang bị cho bạn nguồn tri thức và kỹ năng thiết yếu mà từ đó bạn sẽ tiếp tục mở rộng khả năng và nâng cao năng lực trong sự nghiệp. 

Nhiều sinh viên của chúng tôi kết hợp chuyên ngành chính của Bren:ICS với một chuyên ngành phụ trong trường (ví dụ như Tiếng Anh, Tâm lý học, Triết học, Nghiên cứu Sư phạm, Kinh tế học, Hóa học, Nghệ thuật Studio, Nghệ thuật Kỹ thuật số, Trách nhiệm Dân sự và Cộng đồng chỉ là một vài trong nhiều chuyên ngành hiện có ở trường) để đưa họ tới vị trí độc tôn trong nghề nghiệp đã chọn. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/careers/alumni/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Alumni « Careers « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Careers
What alumni accomplish in life with a Bren School degree continues to surprise even us            
            

            

                BreadthJob OpportunitiesInternshipsGraduate SchoolAlumni                    
            
                    
            
     Alumni
                
          
          A Bren School education prepares you for a broad range of careers, and not just in computing. Our alumni work at companies as diverse as Pixar, IBM, Yahoo, NASA, Microsoft, Google, Deloitte and Touche, Unisys, Accenture, Merrill Lynch, Blizzard, Broadcom, and many other world-renowned organizations, and have job titles such as Computer Forensic, Business Systems Architect, Software Architect, Development Manager, Digital Advertising Strategist, Attorney, Spiritual Counselor, Chief Technology Officer, IT Director, Product Manager, Software Engineer, Programmer/Analyst, and Consultant.
          
          
          
          Our courses provide a strong foundation for a career of lifelong learning, preparing you with core knowledge and skills upon which you will continue to expand your abilities throughout your career. 
          
          
          
          Many of our students combine a Bren School major with a minor from across the campus (e.g., English, Psychology, Philosophy, Educational Studies, Economics, Chemistry, Studio Art, Digital Arts, Civic and Community Engagement, to name a few) to uniquely position them for the career of their choice.
          

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/careers/alumni/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
동문 « 진로 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                진로
Bren:ICS의 동문들이 자신들의 영역에서 놀라운 일들을 해내고 있는 모습을 살펴 보십시오.            
            

            

                폭넓은 교육취업 기회인턴십대학원동문                    
            
                    
            
     동문
    	        
	      
	      Bren:ICS의 교육은 학생들이 컴퓨터만이 아닌 다양한 진로를 준비할 수 있도록 지원합니다. 본교 동문은 Pixar, IBM, Yahoo, NASA, Microsoft, Google, Deloitte and Touche, Unisys, Accenture, Merrill Lynch, Blizzard, Broadcom 등 세계적으로 유명한 조직과 다양한 회사에서 일하고 있으며, 컴퓨터 포렌식, 비즈니스 시스템 설계자, 소프트웨어 설계자, 개발 책임자, 디지털 광고 전략가, 변호사, 정신 상담자, 최고 기술 책임자(CTO), IT 담당 이사, 제품 담당 책임자, 소프트웨어 기술자, 프로그래머/애널리스트, 컨설턴트와 같은 직책을 맡고 있습니다.
	      
	      
	      
	      본교 과정은 경력을 쌓는 내내 능력을 계속 키울 수 있는 바탕이 되는 핵심 지식과 능력을 준비시키면서 평생 학습의 진로를 위한 탄탄한 초석을 마련해 줍니다. 
	      
	      
	      
	      본교의 많은 학생들은 자신이 선택한 진로에서 고유한 위치를 점유하기 위해 Bren:ICS 전공과 교내 부전공(영어, 심리학, 철학, 교육학, 경제학, 화학, 스튜디오 아트, 디지털 아트, 시민과 공동체 참여 등)을 함께 이수합니다.
	      

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/careers/alumni/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
동문 « 진로 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                진로
Bren:ICS의 동문들이 자신들의 영역에서 놀라운 일들을 해내고 있는 모습을 살펴 보십시오.            
            

            

                폭넓은 교육취업 기회인턴십대학원동문                    
            
                    
            
     동문
    	        
	      
	      Bren:ICS의 교육은 학생들이 컴퓨터만이 아닌 다양한 진로를 준비할 수 있도록 지원합니다. 본교 동문은 Pixar, IBM, Yahoo, NASA, Microsoft, Google, Deloitte and Touche, Unisys, Accenture, Merrill Lynch, Blizzard, Broadcom 등 세계적으로 유명한 조직과 다양한 회사에서 일하고 있으며, 컴퓨터 포렌식, 비즈니스 시스템 설계자, 소프트웨어 설계자, 개발 책임자, 디지털 광고 전략가, 변호사, 정신 상담자, 최고 기술 책임자(CTO), IT 담당 이사, 제품 담당 책임자, 소프트웨어 기술자, 프로그래머/애널리스트, 컨설턴트와 같은 직책을 맡고 있습니다.
	      
	      
	      
	      본교 과정은 경력을 쌓는 내내 능력을 계속 키울 수 있는 바탕이 되는 핵심 지식과 능력을 준비시키면서 평생 학습의 진로를 위한 탄탄한 초석을 마련해 줍니다. 
	      
	      
	      
	      본교의 많은 학생들은 자신이 선택한 진로에서 고유한 위치를 점유하기 위해 Bren:ICS 전공과 교내 부전공(영어, 심리학, 철학, 교육학, 경제학, 화학, 스튜디오 아트, 디지털 아트, 시민과 공동체 참여 등)을 함께 이수합니다.
	      

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/careers/alumni/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
校友 « 職場 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                職場
貝林資科院畢業校友的成就，屢屢讓我們刮目相看            
            

            

                廣度工作機會實習研究所校友                    
            
                    
            
     校友
    	        
	      
	      貝林資科院提供的教育讓你有更多職業選擇，不一定只能走電腦這一行。 我們的校友在各行各業服務，包括皮克斯、IBM、雅虎、太空總署、微軟、谷歌、德勤會計師事務所、優利、Accenture、美林、Blizzard、Broadcom和其他多家知名公司。職稱也形形色色，有電腦鑑識員、商業系統架構師、軟體架構師、開發經理、數位廣告策略師、律師、心靈諮商員、技術長、資訊技術主任、產品經理、軟體工程師、程式設計師、分析師和顧問。
	      
	      
	      
	      本校課程為終身學習的職場生涯打下厚實基礎，不僅傳授核心知識與技術，更能以此為出發點，讓你在就業期間繼續拓展能力。 
	      
	      
	      
	      多位學生將貝林資科院的主修科目結合其他輔系課程（例如英文、心理學、哲學、教育研究、經濟學、化學、創作藝術、數位藝術、公民與社群參與……等等），讓自己有選擇職業的特殊優勢。
	      

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/careers/alumni/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Cựu sinh viên « NGHỀ NGHIỆP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                NGHỀ NGHIỆP
Những việc mà các cựu sinh viên hoàn thành với tấm bằng từ trường Bren:ICS vẫn tiếp tục làm ngay cả chúng tôi không hết bất ngờ            
            

            

                Sự đa dạngCơ hội việc làmThực tậpTrường cao họcCựu sinh viên                    
            
                    
            
     Cựu sinh viên

Ở Bren:ICS, học vấn đưa bạn đến một thế giới nghề nghiệp đa dạng, không chỉ thuộc ngành điện toán. Các cựu sinh viên của chúng tôi làm việc tại nhiều công ty như Pixar, IBM, Yahoo, NASA, Microsoft, Google, Deloitte and Touche, Unisys, Accenture, Merrill Lynch, Blizzard, Broadcom, và nhiều tổ chức nổi tiếng thế giới khác, và đang nắm giữ những chức vụ như Chuyên viên Pháp lý Điện toán (Computer Forensic), Kiến trúc sư Hệ thống Kinh doanh (Business Systems Architect), Kiến trúc sư Phần mềm (Software Architect), Giám đốc Phát triển (Development Manager), Nhà chiến lược Quảng cáo Kỹ thuật số (Digital Advertising Strategist), Luật sư, Cố vấn Tinh thần, Tổng Giám đốc Công nghệ, Giám đốc Công nghệ Thông tin, Giám đốc Sản phẩm, Kỹ sư Phần mềm, Lập trình viên/Chuyên viên phân tích, và Chuyên viên Tư vấn. 

Các khóa học của chúng tôi đảm bảo một nền tảng vững chắc cho nghề nghiệp yêu cầu sự học hỏi liên tục suốt đời, trang bị cho bạn nguồn tri thức và kỹ năng thiết yếu mà từ đó bạn sẽ tiếp tục mở rộng khả năng và nâng cao năng lực trong sự nghiệp. 

Nhiều sinh viên của chúng tôi kết hợp chuyên ngành chính của Bren:ICS với một chuyên ngành phụ trong trường (ví dụ như Tiếng Anh, Tâm lý học, Triết học, Nghiên cứu Sư phạm, Kinh tế học, Hóa học, Nghệ thuật Studio, Nghệ thuật Kỹ thuật số, Trách nhiệm Dân sự và Cộng đồng chỉ là một vài trong nhiều chuyên ngành hiện có ở trường) để đưa họ tới vị trí độc tôn trong nghề nghiệp đã chọn. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/careers/job-opportunities/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
工作機會 « 職場 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                職場
貝林資科院畢業校友的成就，屢屢讓我們刮目相看            
            

            

                廣度工作機會實習研究所校友                    
            
                    
            
     工作機會
    	        
	       
	       貝林資科院的畢業生在就業市場上非常搶手。  電腦相關職缺的需求量本來就高，取得本校學位的學生，又擁有企業亟需的資訊產業本職學能。  能讓雇主馬上有興趣的，通常都是特定學位和相關課程的組合搭配。
	       
	       
	       
	       許多資料來源指出就業市場極為熱絡：
	       
	      
	      根據美國勞工統計局的預估，電腦相關新職缺有將近二百萬個。另外所有工作中成長最快（而且薪水會漲）的前十名職缺中，就有五個屬於資訊科技領域。財經媒體CNBC報導，2010年薪資最高的學士學位前十名中，有三個都和電腦有關。美國資訊科技婦女中心發表一份有趣報告，列出全美各州就業前景與畢業生人數。  請按地圖上的「CA」加州字樣，然後選擇「Download statewide data」，即可看到工程和資訊科學職缺的預測數字比較。 

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/careers/job-opportunities/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Job Opportunities « Careers « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Careers
What alumni accomplish in life with a Bren School degree continues to surprise even us            
            

            

                BreadthJob OpportunitiesInternshipsGraduate SchoolAlumni                    
            
                    
            
     Job Opportunities
                
           
           The job market is very strong for graduates of the Bren School.  Computing careers are in high demand, and the various degrees that we offer prepare our students for the kinds of computing careers they desire.  Frequently, it is the unique degree and its associated set of courses that interest an employer in the first place.
           
           
           
           Numerous sources point to a very healthy job market:
           
          
          The U.S. Bureau of Labor Statistics predicts almost two million new jobs in computing, with five of the top ten fastest growing jobs (and rising salaries) across all possible careers being in information technology.According to CNBC, three of the top ten highest paying bachelor’s degrees in 2010 involve computing.The  National Center for Women in Information Technology has prepared an interesting report on   job outlook and number of graduates by state.  Click “CA” on the map and then choose “Download statewide data” to see a report that compares projected engineering jobs versus projected computer science jobs.

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/careers/job-opportunities/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Job Opportunities « Careers « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Careers
What alumni accomplish in life with a Bren School degree continues to surprise even us            
            

            

                BreadthJob OpportunitiesInternshipsGraduate SchoolAlumni                    
            
                    
            
     Job Opportunities
                
           
           The job market is very strong for graduates of the Bren School.  Computing careers are in high demand, and the various degrees that we offer prepare our students for the kinds of computing careers they desire.  Frequently, it is the unique degree and its associated set of courses that interest an employer in the first place.
           
           
           
           Numerous sources point to a very healthy job market:
           
          
          The U.S. Bureau of Labor Statistics predicts almost two million new jobs in computing, with five of the top ten fastest growing jobs (and rising salaries) across all possible careers being in information technology.According to CNBC, three of the top ten highest paying bachelor’s degrees in 2010 involve computing.The  National Center for Women in Information Technology has prepared an interesting report on   job outlook and number of graduates by state.  Click “CA” on the map and then choose “Download statewide data” to see a report that compares projected engineering jobs versus projected computer science jobs.

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/careers/job-opportunities/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Cơ hội việc làm « NGHỀ NGHIỆP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                NGHỀ NGHIỆP
Những việc mà các cựu sinh viên hoàn thành với tấm bằng từ trường Bren:ICS vẫn tiếp tục làm ngay cả chúng tôi không hết bất ngờ            
            

            

                Sự đa dạngCơ hội việc làmThực tậpTrường cao họcCựu sinh viên                    
            
                    
            
     Cơ hội việc làm

Nhu cầu tuyển dụng từ thị trường việc làm rất cao đối với các sinh viên tốt nghiệp đại học Bren:ICS. Nghề nghiệp thuộc lĩnh vực điện toán đang có nhu cầu cao, và hiện có nhiều chương trình cấp bằng đa dạng giúp cho các sinh viên thích ứng với mọi nghề nghiệp thuộc lĩnh vực điện toán mà họ ưa thích. Thông thường, nhà tuyển dụng dành sự chú ý tới văn bằng mang tính độc nhất với hàng loạt khóa học được cung cấp trong chương trình cấp bằng đó. 

Nhiều nguồn giới thiệu đa dạng đều dẫn tới một thị trường việc làm rất được ưa chuộng: 
Cục Thống Kê Lao Động Hoa Kỳ (U.S. Bureau of Labor Statistics) dự tính rằng gần hai triệu việc làm mới thuộc lĩnh vực điện toán, với năm công việc thuộc nhóm công việc có nhu cầu cao nhất (và mức lương ngày càng cao) trong tổng số toàn bộ nghề nghiệp hiện có sẽ thuộc lĩnh vực công nghệ thông tin.Theo kênh truyền hình CNBC, ba trong số những  bằng cử nhân được trả lương cao nhất trong năm 2010 là liên quan đến lĩnh vực điện toán.Trung Tâm vì sự phát triển của Phụ nữ trong ngành Công nghệ Thông tin (National Center for Women in Information Technology) đã biên soạn một báo cáo thú vị về triển vọng việc làm và số lượng sinh viên tốt nghiệp theo từng tiểu bang. Nhấp chuột vào “CA” trên bản đồ và chọn “Download statewide data” để xem báo cáo với nội dung so sánh những công việc kỹ thuật theo kế hoạch so với những công việc khoa học điện toán theo kế hoạch.

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/careers/job-opportunities/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
工作機會 « 職場 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                職場
貝林資科院畢業校友的成就，屢屢讓我們刮目相看            
            

            

                廣度工作機會實習研究所校友                    
            
                    
            
     工作機會
    	        
	       
	       貝林資科院的畢業生在就業市場上非常搶手。  電腦相關職缺的需求量本來就高，取得本校學位的學生，又擁有企業亟需的資訊產業本職學能。  能讓雇主馬上有興趣的，通常都是特定學位和相關課程的組合搭配。
	       
	       
	       
	       許多資料來源指出就業市場極為熱絡：
	       
	      
	      根據美國勞工統計局的預估，電腦相關新職缺有將近二百萬個。另外所有工作中成長最快（而且薪水會漲）的前十名職缺中，就有五個屬於資訊科技領域。財經媒體CNBC報導，2010年薪資最高的學士學位前十名中，有三個都和電腦有關。美國資訊科技婦女中心發表一份有趣報告，列出全美各州就業前景與畢業生人數。  請按地圖上的「CA」加州字樣，然後選擇「Download statewide data」，即可看到工程和資訊科學職缺的預測數字比較。 

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/careers/job-opportunities/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
취업 기회 « 진로 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                진로
Bren:ICS의 동문들이 자신들의 영역에서 놀라운 일들을 해내고 있는 모습을 살펴 보십시오.            
            

            

                폭넓은 교육취업 기회인턴십대학원동문                    
            
                    
            
     취업 기회
    	        
	       
	       Bren:ICS 졸업생들은 취업 시장에서 매우 강합니다.  컴퓨터 분야는 수요가 많으며, 본교에서 수여하는 다양한 학위는 학생들로 하여금 자신이 원하는 종류의 컴퓨터 경력을 준비할 수 있도록 도와줍니다.  무엇보다 본교에만 있는 특별한 학위와 그에 따른 일련의 과정에 고용주가 관심을 가질 때가 많습니다.
	       
	       
	       
	       취업 시장에서의 강세는 수많은 자료에서 확인할 수 있습니다.
	       
	      
	      미국 노동통계청은 컴퓨터 분야에서 200만 개의 새로운 일자리 창출을 내다보고 있는데, 모든 가능한 취업 분야에서 가장 빠르게 증가하는 일자리(와 가장 빠르게 상승하는 임금) 10개 중 5개가 IT 분야라고 합니다.CNBC에 따르면, 2010년 가장 높은 임금을 받는 학사 학위 상위 10개 중 3개가 컴퓨터와 관련되어 있다고 합니다.국립 IT 여성 인력 센터는 주(州)별 일자리 전망과 수에 관한 흥미로운 보고서를 준비했습니다.  지도에서 “CA(캘리포니아)”를 클릭한 다음 “주 전역 데이터 다운로드”를 선택하면, 공학 분야의 일자리 전망과 컴퓨터 과학 분야의 일자리 전망을 비교한 보고서를 확인하실 수 있습니다. 

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/careers/job-opportunities/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Cơ hội việc làm « NGHỀ NGHIỆP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                NGHỀ NGHIỆP
Những việc mà các cựu sinh viên hoàn thành với tấm bằng từ trường Bren:ICS vẫn tiếp tục làm ngay cả chúng tôi không hết bất ngờ            
            

            

                Sự đa dạngCơ hội việc làmThực tậpTrường cao họcCựu sinh viên                    
            
                    
            
     Cơ hội việc làm

Nhu cầu tuyển dụng từ thị trường việc làm rất cao đối với các sinh viên tốt nghiệp đại học Bren:ICS. Nghề nghiệp thuộc lĩnh vực điện toán đang có nhu cầu cao, và hiện có nhiều chương trình cấp bằng đa dạng giúp cho các sinh viên thích ứng với mọi nghề nghiệp thuộc lĩnh vực điện toán mà họ ưa thích. Thông thường, nhà tuyển dụng dành sự chú ý tới văn bằng mang tính độc nhất với hàng loạt khóa học được cung cấp trong chương trình cấp bằng đó. 

Nhiều nguồn giới thiệu đa dạng đều dẫn tới một thị trường việc làm rất được ưa chuộng: 
Cục Thống Kê Lao Động Hoa Kỳ (U.S. Bureau of Labor Statistics) dự tính rằng gần hai triệu việc làm mới thuộc lĩnh vực điện toán, với năm công việc thuộc nhóm công việc có nhu cầu cao nhất (và mức lương ngày càng cao) trong tổng số toàn bộ nghề nghiệp hiện có sẽ thuộc lĩnh vực công nghệ thông tin.Theo kênh truyền hình CNBC, ba trong số những  bằng cử nhân được trả lương cao nhất trong năm 2010 là liên quan đến lĩnh vực điện toán.Trung Tâm vì sự phát triển của Phụ nữ trong ngành Công nghệ Thông tin (National Center for Women in Information Technology) đã biên soạn một báo cáo thú vị về triển vọng việc làm và số lượng sinh viên tốt nghiệp theo từng tiểu bang. Nhấp chuột vào “CA” trên bản đồ và chọn “Download statewide data” để xem báo cáo với nội dung so sánh những công việc kỹ thuật theo kế hoạch so với những công việc khoa học điện toán theo kế hoạch.

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/careers/job-opportunities/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
취업 기회 « 진로 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                진로
Bren:ICS의 동문들이 자신들의 영역에서 놀라운 일들을 해내고 있는 모습을 살펴 보십시오.            
            

            

                폭넓은 교육취업 기회인턴십대학원동문                    
            
                    
            
     취업 기회
    	        
	       
	       Bren:ICS 졸업생들은 취업 시장에서 매우 강합니다.  컴퓨터 분야는 수요가 많으며, 본교에서 수여하는 다양한 학위는 학생들로 하여금 자신이 원하는 종류의 컴퓨터 경력을 준비할 수 있도록 도와줍니다.  무엇보다 본교에만 있는 특별한 학위와 그에 따른 일련의 과정에 고용주가 관심을 가질 때가 많습니다.
	       
	       
	       
	       취업 시장에서의 강세는 수많은 자료에서 확인할 수 있습니다.
	       
	      
	      미국 노동통계청은 컴퓨터 분야에서 200만 개의 새로운 일자리 창출을 내다보고 있는데, 모든 가능한 취업 분야에서 가장 빠르게 증가하는 일자리(와 가장 빠르게 상승하는 임금) 10개 중 5개가 IT 분야라고 합니다.CNBC에 따르면, 2010년 가장 높은 임금을 받는 학사 학위 상위 10개 중 3개가 컴퓨터와 관련되어 있다고 합니다.국립 IT 여성 인력 센터는 주(州)별 일자리 전망과 수에 관한 흥미로운 보고서를 준비했습니다.  지도에서 “CA(캘리포니아)”를 클릭한 다음 “주 전역 데이터 다운로드”를 선택하면, 공학 분야의 일자리 전망과 컴퓨터 과학 분야의 일자리 전망을 비교한 보고서를 확인하실 수 있습니다. 

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/careers/breadth/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Sự đa dạng « NGHỀ NGHIỆP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                NGHỀ NGHIỆP
Những việc mà các cựu sinh viên hoàn thành với tấm bằng từ trường Bren:ICS vẫn tiếp tục làm ngay cả chúng tôi không hết bất ngờ            
            

            

                Sự đa dạngCơ hội việc làmThực tậpTrường cao họcCựu sinh viên                    
            
                    
            
     Sự đa dạng

Bren:ICS cung cấp hơn một trăm khóa học với nhiều chủ đề đa dạng. Chắc chắn bạn sẽ tìm thấy nhiều khóa học thuộc (những) lĩnh vực quan tâm của mình, những khóa học không chỉ trang bị cho bạn những kiến thức chủ yếu mà còn giúp bạn đào sâu nghiên cứu các chủ đề. Điều này có nghĩa là những sinh viên đại học có cơ hội nghiên cứu những chủ đề khoa học điện toán cao cấp thường chỉ được đưa vào trong các chương trình cao học ở những tổ chức giảng dạy khác. 

Tại sao sự đa dạng và độ sâu của chương trình giảng dạy lại quan trọng để bạn cân nhắc? Một số sinh viên bước chân vào giảng đường đại học với một ý niệm mơ hồ về những gì mà họ muốn học – họ nên có cơ hội định hướng cho mình những chương trình học và tìm cho mình một chương trình phù hợp nhất. Những sinh viên khác bắt đầu cuộc đời sinh viên với một cảm nhận rõ ràng hơn về chuyên ngành học mà họ lựa chọn – họ nên được tạo cơ hội đào sâu và liên tục thử sức mình. Còn những sinh viên khác lại thấy rằng những mối quan tâm của họ thay đổi hay ngày càng định hướng rõ ràng hơn khi trải qua các khóa học bắt buộc của chuyên ngành – họ không nên bị ngăn cản khi theo đuổi những ước mơ. 

Danh sách những khóa học phong phú của chúng tôi đảm bảo rằng dù bạn có nhiều mối quan tâm, năng khiếu và tài năng hay định hướng con đường sự nghiệp đến như thế nào đi chăng nữa, bạn sẽ tìm thấy được chương trình học bạn cần. 
Sau đây là ví dụ về những lĩnh vực chúng tôi có các chương trình đào tạo đại học chủ chốt: 
MạngĐiện toán phân bổ (Distributed Computing)Mạng máy tính cao cấp (Advanced Computer Networks)Anh ninh Máy tính và Mạng (Computer and Network Security)Cấu trúc Phần mềm, Tính tương kết và các Hệ phân tán (Software Architectures, Interoperability, and Distributed Systems) Tác động xã hội của ngành điện toán (Social Impacts of Computing )Tương tác Máy tính và Con người (Human Computer Interaction)Phân tích Xã hội của Tin học hóa (Social Analysis of Computerization)Hệ thống Thông tin Tổ chức (Organizational Information Systems)Công nghệ và Kỹ năng (Technology and Literacy) Kỹ thuật Phần mềm (Software Engineering)Thiết kế Phân mềm I và IIPhân tích và Thiết kế Yêu cầu (Requirements Analysis and Engineering)Dự án Thiết kế Hệ thống Phần mềmCông cụ và Phương pháp Sản xuất Phần mềm (Software Tools and Methods) Lý thuyết Khoa học Điện toán (Theory of Computer Science)Cấu trúc Dữ liệu Căn bản (Fundamental Data Structures)Thiết kế và Phân tích Thuật toán (Design and Analysis of Algorithms)Ngôn ngữ Hình thức và Automát (Formal Languages and Automatas)Thuật toán Biểu đồ (Graph Algorithms) Đồ họa Máy tính (Computer Graphics)Xử lý Hình ảnh Kỹ thuật số (Digital Image Processing)Dự án Đồ họa Máy tính 3D cao cấpHình học Điện toán (Computational Geometry)Trực quan hóa Thông tin (Information Visualization) Khoa học Trò chơi Điện toán (Computer Game Science)Trò chơi Điện toán và Xã hội (Computer Games and Society)Công nghệ Trò chơi và Truyền thông Tương tác (Game Technologies and Interactive Media)Trò chơi trên điện thoại di động và trò chơi phổ dụng (Mobile and Ubiquitous Games)Hệ thống trò chơi đa người chơi (Multiplayer Game Systems)

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/careers/breadth/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
廣度 « 職場 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                職場
貝林資科院畢業校友的成就，屢屢讓我們刮目相看            
            

            

                廣度工作機會實習研究所校友                    
            
                    
            
     廣度
    	        
	            
	             貝林資科院提供的課程超過百種，涵蓋各類主題， 讓你絕對能找到感興趣的科目。這些課程除了帶領學生一窺學術殿堂，還可深入探討特定主題。 所以就算是大學部的學生，也能選到別校只在研究所開設的高等資訊工程學科。 
	            
	            
	           
	           為什麼必須審慎考慮課程安排的深度和廣度呢？ 因為有的學生剛進大學時，對自己要唸的東西還懵懵懂懂。這時應該讓他們儘量嘗試，找出自己擅長的科目。 有的學生剛進校門就已經確定要主修什麼，這時就應該讓他們專攻特定主題，持續挑戰自我。 但是有的人中途改變興趣，或是在唸主修科目時更確定自己的志向所在，這時就不該讓他們的夢想受限。 
	           
	            
	          
	          我們的課程取材極為廣泛。無論學生的興趣、性向、才華或未來有何生涯規劃，都能各取所需。 
	          
	          
	          以下列出大學部課程的幾個主要領域為例： 
	          
	   
	          
	              網路分散式運算高等計算機網路電腦與網路安全軟體架構、互通和分散式系統 	          
	          
	     
	          
	       
	          
	              電腦對社會的影響   人機互動電腦化的社會分析組織資訊系統科技與素養	          
	          
	       
	          
	    
	          
	              軟體工程軟體設計上、下需求分析與工程軟體系統設計專案軟體工具與方法	          
	          
	     
	          
	     
	          
	              計算機理論  資料結構導論演算法設計與分析正規語言和自動機圖形演算法	          
	          
	      
	          
	     
	          
	              電腦繪圖 數位影像處理高等3D電腦繪圖專案計算幾何資訊視覺化	          
	          
	      
	          
	           
	          
	              電腦遊戲學電腦遊戲與社會遊戲技術和互動媒體手機遊戲與跨媒材遊戲（Ubiquitous Game）多人遊戲系統

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/careers/breadth/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
廣度 « 職場 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                職場
貝林資科院畢業校友的成就，屢屢讓我們刮目相看            
            

            

                廣度工作機會實習研究所校友                    
            
                    
            
     廣度
    	        
	            
	             貝林資科院提供的課程超過百種，涵蓋各類主題， 讓你絕對能找到感興趣的科目。這些課程除了帶領學生一窺學術殿堂，還可深入探討特定主題。 所以就算是大學部的學生，也能選到別校只在研究所開設的高等資訊工程學科。 
	            
	            
	           
	           為什麼必須審慎考慮課程安排的深度和廣度呢？ 因為有的學生剛進大學時，對自己要唸的東西還懵懵懂懂。這時應該讓他們儘量嘗試，找出自己擅長的科目。 有的學生剛進校門就已經確定要主修什麼，這時就應該讓他們專攻特定主題，持續挑戰自我。 但是有的人中途改變興趣，或是在唸主修科目時更確定自己的志向所在，這時就不該讓他們的夢想受限。 
	           
	            
	          
	          我們的課程取材極為廣泛。無論學生的興趣、性向、才華或未來有何生涯規劃，都能各取所需。 
	          
	          
	          以下列出大學部課程的幾個主要領域為例： 
	          
	   
	          
	              網路分散式運算高等計算機網路電腦與網路安全軟體架構、互通和分散式系統 	          
	          
	     
	          
	       
	          
	              電腦對社會的影響   人機互動電腦化的社會分析組織資訊系統科技與素養	          
	          
	       
	          
	    
	          
	              軟體工程軟體設計上、下需求分析與工程軟體系統設計專案軟體工具與方法	          
	          
	     
	          
	     
	          
	              計算機理論  資料結構導論演算法設計與分析正規語言和自動機圖形演算法	          
	          
	      
	          
	     
	          
	              電腦繪圖 數位影像處理高等3D電腦繪圖專案計算幾何資訊視覺化	          
	          
	      
	          
	           
	          
	              電腦遊戲學電腦遊戲與社會遊戲技術和互動媒體手機遊戲與跨媒材遊戲（Ubiquitous Game）多人遊戲系統

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/careers/breadth/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Breadth « Careers « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Careers
What alumni accomplish in life with a Bren School degree continues to surprise even us            
            

            

                BreadthJob OpportunitiesInternshipsGraduate SchoolAlumni                    
            
                    
            
     Breadth
                
                
                 The Bren School offers over one hundred courses covering a broad range of topics. You are sure to find multiple courses in your area(s) of interest, courses that not only introduce you to fundamentals but also explore topics in depth. This means undergraduates have the opportunity to study advanced computer science topics usually only offered in graduate programs elsewhere. 
                
                
               
               Why are breadth and depth of the curriculum important for you to consider? Some students start college with only a vague idea of what they would like to study – they should be able to sample the offerings and find their niche. Others enter with a stronger sense of interest in a major – they should be able to delve in and continue to be challenged. Yet others find that their interests change or become more defined as they move through their major-required courses – they should not be prohibited from following their dreams. 
               
                
              
              Our broad portfolio of courses ensures that regardless of interest, aptitude and talent, or desired career path, you will find what you need. 
              
              
              Here is a sample of areas in which we have significant threads of undergraduate courses: 
              
       
              
                  NetworkingDistributed ComputingAdvanced Computer NetworksComputer and Network SecuritySoftware Architectures, Interoperability, and Distributed Systems            
              
         
              
           
              
                  Social Impacts of Computing   Human Computer InteractionSocial Analysis of ComputerizationOrganizational Information SystemsTechnology and Literacy           
              
           
              
        
              
                  Software EngineeringSoftware Design I and IIRequirements Analysis and EngineeringProject in Software System DesignSoftware Tools and Methods           
              
         
              
         
              
                  Theory of Computer Science  Fundamental Data StructuresDesign and Analysis of AlgorithmsFormal Languages and AutomatasGraph Algorithms           
              
          
              
         
              
                  Computer Graphics Digital Image ProcessingProject in Advanced 3D Computer GraphicsComputational GeometryInformation Visualization           
              
          
              
               
              
                  Computer Game ScienceComputer Games and SocietyGame Technologies and Interactive MediaMobile and Ubiquitous GamesMultiplayer Game Systems

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/careers/breadth/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
폭넓은 교육 « 진로 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                진로
Bren:ICS의 동문들이 자신들의 영역에서 놀라운 일들을 해내고 있는 모습을 살펴 보십시오.            
            

            

                폭넓은 교육취업 기회인턴십대학원동문                    
            
                    
            
     폭넓은 교육
    	        
	            
	             Bren:ICS는 매우 다양한 주제로 100여 개 이상의 과정을 제공하고 있습니다. 그 가운데서 여러분은 관심 있는 분야의 과정과 기본 원칙을 배울 뿐 아니라, 주제를 깊게 파헤치는 과정을 다양하게 발견할 수 있을 것입니다. 그래서 다른 곳에서는 보통 대학원 과정에서나 접할 수 있는 상급 수준의 컴퓨터 과학 주제를 본교에서는 학부생 단계에서 공부할 수 있습니다. 
	            
	            
	           
	           왜 폭넓고 깊이 있는 교육 과정을 고려하는 것이 중요할까요? 어떤 학생들은 공부하고 싶은 것에 대한 막연한 생각만으로 대학 생활을 시작합니다. 이러한 학생들은 제공된 교육을 체험한 후 자신에게 딱 맞는 자리를 찾아낼 수 있어야 합니다. 또 어떤 학생들은 전공에 대한 강력한 관심을 품고 대학에 들어옵니다. 이들은 깊이 탐구하고 과제를 계속 극복할 수 있어야 합니다. 하지만 또 다른 학생들은 전공에 필요한 과정들을 이수하면서 차차 자신의 관심이 바뀌거나 더욱 명확해진다고 생각합니다. 이들은 자신의 꿈을 마음껏 쫓아갈 수 있어야 합니다. 
	           
	            
	          
	          본교의 폭넓은 과정은 여러분이 관심분야, 적성, 재능, 희망 진로 등에 따라 자신에게 필요한 것을 찾을 수 있도록 도와줍니다. 
	          
	          
	          본교에서 제공 중인 학부 과정에서 중요한 분야 몇 가지를 골라 소개합니다. 
	          
	   
	          
	              네트워킹분산 컴퓨팅첨단 컴퓨터 네트워크컴퓨터와 네트워크 보안소프트웨어 아키텍처, 상호운용성, 분산 시스템 	          
	          
	     
	          
	       
	          
	              컴퓨터의 사회적 영향   인간과 컴퓨터의 상호작용전산화에 대한 사회적 분석조직 정보 시스템기술과 활용 능력	          
	          
	       
	          
	    
	          
	              소프트웨어 공학소프트웨어 설계 I 및 II요구사항 분석과 엔지니어링소프트웨어 시스템 설계 프로젝트소프트웨어 도구와 방법	          
	          
	     
	          
	     
	          
	              컴퓨터 과학 이론  기본 데이터 구조알고리즘의 설계와 분석형식 언어와 오토마타그래프 알고리즘	          
	          
	      
	          
	     
	          
	              컴퓨터 그래픽 디지털 영상 처리첨단 3D 컴퓨터 그래픽 프로젝트계산 기하학정보 시각화	          
	          
	      
	          
	           
	          
	              컴퓨터 게임 과학컴퓨터 게임과 사회게임 기술과 쌍방향 미디어모바일 게임과 유비쿼터스 게임멀티플레이어 게임 시스템

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/careers/breadth/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Sự đa dạng « NGHỀ NGHIỆP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                NGHỀ NGHIỆP
Những việc mà các cựu sinh viên hoàn thành với tấm bằng từ trường Bren:ICS vẫn tiếp tục làm ngay cả chúng tôi không hết bất ngờ            
            

            

                Sự đa dạngCơ hội việc làmThực tậpTrường cao họcCựu sinh viên                    
            
                    
            
     Sự đa dạng

Bren:ICS cung cấp hơn một trăm khóa học với nhiều chủ đề đa dạng. Chắc chắn bạn sẽ tìm thấy nhiều khóa học thuộc (những) lĩnh vực quan tâm của mình, những khóa học không chỉ trang bị cho bạn những kiến thức chủ yếu mà còn giúp bạn đào sâu nghiên cứu các chủ đề. Điều này có nghĩa là những sinh viên đại học có cơ hội nghiên cứu những chủ đề khoa học điện toán cao cấp thường chỉ được đưa vào trong các chương trình cao học ở những tổ chức giảng dạy khác. 

Tại sao sự đa dạng và độ sâu của chương trình giảng dạy lại quan trọng để bạn cân nhắc? Một số sinh viên bước chân vào giảng đường đại học với một ý niệm mơ hồ về những gì mà họ muốn học – họ nên có cơ hội định hướng cho mình những chương trình học và tìm cho mình một chương trình phù hợp nhất. Những sinh viên khác bắt đầu cuộc đời sinh viên với một cảm nhận rõ ràng hơn về chuyên ngành học mà họ lựa chọn – họ nên được tạo cơ hội đào sâu và liên tục thử sức mình. Còn những sinh viên khác lại thấy rằng những mối quan tâm của họ thay đổi hay ngày càng định hướng rõ ràng hơn khi trải qua các khóa học bắt buộc của chuyên ngành – họ không nên bị ngăn cản khi theo đuổi những ước mơ. 

Danh sách những khóa học phong phú của chúng tôi đảm bảo rằng dù bạn có nhiều mối quan tâm, năng khiếu và tài năng hay định hướng con đường sự nghiệp đến như thế nào đi chăng nữa, bạn sẽ tìm thấy được chương trình học bạn cần. 
Sau đây là ví dụ về những lĩnh vực chúng tôi có các chương trình đào tạo đại học chủ chốt: 
MạngĐiện toán phân bổ (Distributed Computing)Mạng máy tính cao cấp (Advanced Computer Networks)Anh ninh Máy tính và Mạng (Computer and Network Security)Cấu trúc Phần mềm, Tính tương kết và các Hệ phân tán (Software Architectures, Interoperability, and Distributed Systems) Tác động xã hội của ngành điện toán (Social Impacts of Computing )Tương tác Máy tính và Con người (Human Computer Interaction)Phân tích Xã hội của Tin học hóa (Social Analysis of Computerization)Hệ thống Thông tin Tổ chức (Organizational Information Systems)Công nghệ và Kỹ năng (Technology and Literacy) Kỹ thuật Phần mềm (Software Engineering)Thiết kế Phân mềm I và IIPhân tích và Thiết kế Yêu cầu (Requirements Analysis and Engineering)Dự án Thiết kế Hệ thống Phần mềmCông cụ và Phương pháp Sản xuất Phần mềm (Software Tools and Methods) Lý thuyết Khoa học Điện toán (Theory of Computer Science)Cấu trúc Dữ liệu Căn bản (Fundamental Data Structures)Thiết kế và Phân tích Thuật toán (Design and Analysis of Algorithms)Ngôn ngữ Hình thức và Automát (Formal Languages and Automatas)Thuật toán Biểu đồ (Graph Algorithms) Đồ họa Máy tính (Computer Graphics)Xử lý Hình ảnh Kỹ thuật số (Digital Image Processing)Dự án Đồ họa Máy tính 3D cao cấpHình học Điện toán (Computational Geometry)Trực quan hóa Thông tin (Information Visualization) Khoa học Trò chơi Điện toán (Computer Game Science)Trò chơi Điện toán và Xã hội (Computer Games and Society)Công nghệ Trò chơi và Truyền thông Tương tác (Game Technologies and Interactive Media)Trò chơi trên điện thoại di động và trò chơi phổ dụng (Mobile and Ubiquitous Games)Hệ thống trò chơi đa người chơi (Multiplayer Game Systems)

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/careers/breadth/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Breadth « Careers « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Careers
What alumni accomplish in life with a Bren School degree continues to surprise even us            
            

            

                BreadthJob OpportunitiesInternshipsGraduate SchoolAlumni                    
            
                    
            
     Breadth
                
                
                 The Bren School offers over one hundred courses covering a broad range of topics. You are sure to find multiple courses in your area(s) of interest, courses that not only introduce you to fundamentals but also explore topics in depth. This means undergraduates have the opportunity to study advanced computer science topics usually only offered in graduate programs elsewhere. 
                
                
               
               Why are breadth and depth of the curriculum important for you to consider? Some students start college with only a vague idea of what they would like to study – they should be able to sample the offerings and find their niche. Others enter with a stronger sense of interest in a major – they should be able to delve in and continue to be challenged. Yet others find that their interests change or become more defined as they move through their major-required courses – they should not be prohibited from following their dreams. 
               
                
              
              Our broad portfolio of courses ensures that regardless of interest, aptitude and talent, or desired career path, you will find what you need. 
              
              
              Here is a sample of areas in which we have significant threads of undergraduate courses: 
              
       
              
                  NetworkingDistributed ComputingAdvanced Computer NetworksComputer and Network SecuritySoftware Architectures, Interoperability, and Distributed Systems            
              
         
              
           
              
                  Social Impacts of Computing   Human Computer InteractionSocial Analysis of ComputerizationOrganizational Information SystemsTechnology and Literacy           
              
           
              
        
              
                  Software EngineeringSoftware Design I and IIRequirements Analysis and EngineeringProject in Software System DesignSoftware Tools and Methods           
              
         
              
         
              
                  Theory of Computer Science  Fundamental Data StructuresDesign and Analysis of AlgorithmsFormal Languages and AutomatasGraph Algorithms           
              
          
              
         
              
                  Computer Graphics Digital Image ProcessingProject in Advanced 3D Computer GraphicsComputational GeometryInformation Visualization           
              
          
              
               
              
                  Computer Game ScienceComputer Games and SocietyGame Technologies and Interactive MediaMobile and Ubiquitous GamesMultiplayer Game Systems

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/careers/breadth/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
폭넓은 교육 « 진로 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                진로
Bren:ICS의 동문들이 자신들의 영역에서 놀라운 일들을 해내고 있는 모습을 살펴 보십시오.            
            

            

                폭넓은 교육취업 기회인턴십대학원동문                    
            
                    
            
     폭넓은 교육
    	        
	            
	             Bren:ICS는 매우 다양한 주제로 100여 개 이상의 과정을 제공하고 있습니다. 그 가운데서 여러분은 관심 있는 분야의 과정과 기본 원칙을 배울 뿐 아니라, 주제를 깊게 파헤치는 과정을 다양하게 발견할 수 있을 것입니다. 그래서 다른 곳에서는 보통 대학원 과정에서나 접할 수 있는 상급 수준의 컴퓨터 과학 주제를 본교에서는 학부생 단계에서 공부할 수 있습니다. 
	            
	            
	           
	           왜 폭넓고 깊이 있는 교육 과정을 고려하는 것이 중요할까요? 어떤 학생들은 공부하고 싶은 것에 대한 막연한 생각만으로 대학 생활을 시작합니다. 이러한 학생들은 제공된 교육을 체험한 후 자신에게 딱 맞는 자리를 찾아낼 수 있어야 합니다. 또 어떤 학생들은 전공에 대한 강력한 관심을 품고 대학에 들어옵니다. 이들은 깊이 탐구하고 과제를 계속 극복할 수 있어야 합니다. 하지만 또 다른 학생들은 전공에 필요한 과정들을 이수하면서 차차 자신의 관심이 바뀌거나 더욱 명확해진다고 생각합니다. 이들은 자신의 꿈을 마음껏 쫓아갈 수 있어야 합니다. 
	           
	            
	          
	          본교의 폭넓은 과정은 여러분이 관심분야, 적성, 재능, 희망 진로 등에 따라 자신에게 필요한 것을 찾을 수 있도록 도와줍니다. 
	          
	          
	          본교에서 제공 중인 학부 과정에서 중요한 분야 몇 가지를 골라 소개합니다. 
	          
	   
	          
	              네트워킹분산 컴퓨팅첨단 컴퓨터 네트워크컴퓨터와 네트워크 보안소프트웨어 아키텍처, 상호운용성, 분산 시스템 	          
	          
	     
	          
	       
	          
	              컴퓨터의 사회적 영향   인간과 컴퓨터의 상호작용전산화에 대한 사회적 분석조직 정보 시스템기술과 활용 능력	          
	          
	       
	          
	    
	          
	              소프트웨어 공학소프트웨어 설계 I 및 II요구사항 분석과 엔지니어링소프트웨어 시스템 설계 프로젝트소프트웨어 도구와 방법	          
	          
	     
	          
	     
	          
	              컴퓨터 과학 이론  기본 데이터 구조알고리즘의 설계와 분석형식 언어와 오토마타그래프 알고리즘	          
	          
	      
	          
	     
	          
	              컴퓨터 그래픽 디지털 영상 처리첨단 3D 컴퓨터 그래픽 프로젝트계산 기하학정보 시각화	          
	          
	      
	          
	           
	          
	              컴퓨터 게임 과학컴퓨터 게임과 사회게임 기술과 쌍방향 미디어모바일 게임과 유비쿼터스 게임멀티플레이어 게임 시스템

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/careers/internships/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
實習 « 職場 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                職場
貝林資科院畢業校友的成就，屢屢讓我們刮目相看            
            

            

                廣度工作機會實習研究所校友                    
            
                    
            
     實習
    	        
	            
	            實習是進入職場的重要準備階段，  除了獲得外界的寶貴專案經驗外，也讓你體會一下將來的工作狀況，同時讓你的履歷更好看。  貝林資科院大部分的三、四年級生都在暑假期間實習，有的大二甚至大一新生也會這麼做。
	            
	            
	            由於加大爾灣分校四周都是高科技公司，因此當地已經有不少實習機會。但為興趣到美國其他地區實習的學生亦不在少數。
	            

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/careers/graduate-school/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
研究所 « 職場 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                職場
貝林資科院畢業校友的成就，屢屢讓我們刮目相看            
            

            

                廣度工作機會實習研究所校友                    
            
                    
            
     研究所
    	        
	           
	           有的學生希望在大學畢業後，能拿到研究所的更高學歷。  這些人可報名碩士班選讀高等課程，繼續磨練特定領域的技能，也能報名博士班走學術路線，或在產業界從事研究工作。  有的學生也報考專業學院，取得企管碩士或法律文憑。 
	           
	            
	            
	            
	            貝林資科院學生這方面的記錄向來優良，畢業校友在知名大學的成績普遍良好，例如史丹佛、UCLA、加大柏克萊分校、加大聖地牙哥分校、卡內基美隆、喬治亞理工、哥倫比亞、哈佛、麻省理工……等等。  本校的榮譽學生計畫以及眾多研究機會，也一向有助於申請研究所。
	            
	            
	            
                     如何進入研究所
	            

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/careers/graduate-school/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Trường cao học « NGHỀ NGHIỆP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                NGHỀ NGHIỆP
Những việc mà các cựu sinh viên hoàn thành với tấm bằng từ trường Bren:ICS vẫn tiếp tục làm ngay cả chúng tôi không hết bất ngờ            
            

            

                Sự đa dạngCơ hội việc làmThực tậpTrường cao họcCựu sinh viên                    
            
                    
            
     Trường cao học

Một số sinh viên mong muốn tiếp tục theo học ở bậc học tiếp theo để đạt được bằng cấp cao hơn sau khi hoàn thành chương trình cử nhân. Họ có thể ghi danh vào chương trình Thạc sĩ để theo học các lớp chuyên sâu để dùi mài kỹ lưỡng hơn những kỹ năng ở một số chủ đề cụ thể, hoặc để theo học chương trình Tiến sĩ nhằm hướng tới một công việc trong những tổ chức hàn lâm hay nghiên cứu. Ngoài ra còn có những sinh viên ghi danh theo học ở các trường chuyên môn để có tấm bằng Quản trị kinh doanh (MBA) hay Luật sư. 

Sinh viên Bren:ICS có thành tích xuất sắc về phương diện này, bằng chứng là những cựu sinh viên đạt được thành công ở những tổ chức giáo dục uy tín như Stanford, UCLA, UC Berkeley, UC San Diego, Carnegie Mellon University, Georgia Tech, Columbia, Harvard, MIT, và nhiều trường khác. Chương trình danh dự của chúng tôi và nhiều cơ hội nghiên cứu hiện có đã chứng minh sự chuyển tiếp hiệu quả và thành công từ hệ đại học lên hệ cao học của các sinh viên theo học tại trường. 


Hướng dẫn về các tiêu chí học cao học 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/careers/graduate-school/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Graduate School « Careers « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Careers
What alumni accomplish in life with a Bren School degree continues to surprise even us            
            

            

                BreadthJob OpportunitiesInternshipsGraduate SchoolAlumni                    
            
                    
            
     Graduate School
                
               
               Some students aspire to attend graduate school to pursue an advanced degree after completion of their B.S. program.  They may wish to enroll in a M.S. program to take more in-depth classes to further hone their skills in certain topics, or enter a Ph.D. program to prepare themselves for a future career in academic or industrial research.  Some students, too, enroll at a professional school to earn a MBA or Law degree. 
               
                
                
                
                Bren School students have an excellent record in this regard, with our alumni succeeding at such prestigious institutions as Stanford, UCLA, UC Berkeley, UC San Diego, Carnegie Mellon University, Georgia Tech, Columbia, Harvard, MIT, and others.  Our honors program and the many research opportunities that are available have proven invaluable to successfully transition to graduate school.
                
                
                
                    
                    How to get into graduate school
                

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/careers/graduate-school/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Graduate School « Careers « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Careers
What alumni accomplish in life with a Bren School degree continues to surprise even us            
            

            

                BreadthJob OpportunitiesInternshipsGraduate SchoolAlumni                    
            
                    
            
     Graduate School
                
               
               Some students aspire to attend graduate school to pursue an advanced degree after completion of their B.S. program.  They may wish to enroll in a M.S. program to take more in-depth classes to further hone their skills in certain topics, or enter a Ph.D. program to prepare themselves for a future career in academic or industrial research.  Some students, too, enroll at a professional school to earn a MBA or Law degree. 
               
                
                
                
                Bren School students have an excellent record in this regard, with our alumni succeeding at such prestigious institutions as Stanford, UCLA, UC Berkeley, UC San Diego, Carnegie Mellon University, Georgia Tech, Columbia, Harvard, MIT, and others.  Our honors program and the many research opportunities that are available have proven invaluable to successfully transition to graduate school.
                
                
                
                    
                    How to get into graduate school
                

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/careers/graduate-school/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
대학원 « 진로 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                진로
Bren:ICS의 동문들이 자신들의 영역에서 놀라운 일들을 해내고 있는 모습을 살펴 보십시오.            
            

            

                폭넓은 교육취업 기회인턴십대학원동문                    
            
                    
            
     대학원
    	        
	           
	           학사 과정 수료 후 더 높은 학위를 받기 위해 대학원에 들어가고 싶어하는 학생들도 있습니다.  이들은 특정 주제에서 자신의 능력을 더욱 갈고 닦을 수 있는 심층 수업을 받기 위해 석사 과정에 등록하거나, 나중에 학계나 산업 연구 분야로 진출할 준비를 하기 위해 박사 과정에 등록하고 싶어합니다.  MBA 학위나 법학 학위를 받기 위해 전문 대학원에 들어가는 학생들도 있습니다. 
	           
	            
	            
	            
	            Bren:ICS의 학생들은 이같은 면에서 성과가 탁월합니다. 본교 졸업생들은 스탠퍼드, UCLA, UC 버클리, UC 샌디에이고, 카네기 멜론 대학, 조지아 공과대학, 컬럼비아, 하버드, MIT 등과 같은 명문대에 입학하고 있습니다.  본교에서 제공하는 우등생 프로그램과 많은 연구 기회들은 성공적인 대학원 진학에 매우 유용한 것으로 입증되었습니다.
	            
	            
	            
                     대학원 진학 방법
	            

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/careers/graduate-school/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
研究所 « 職場 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                職場
貝林資科院畢業校友的成就，屢屢讓我們刮目相看            
            

            

                廣度工作機會實習研究所校友                    
            
                    
            
     研究所
    	        
	           
	           有的學生希望在大學畢業後，能拿到研究所的更高學歷。  這些人可報名碩士班選讀高等課程，繼續磨練特定領域的技能，也能報名博士班走學術路線，或在產業界從事研究工作。  有的學生也報考專業學院，取得企管碩士或法律文憑。 
	           
	            
	            
	            
	            貝林資科院學生這方面的記錄向來優良，畢業校友在知名大學的成績普遍良好，例如史丹佛、UCLA、加大柏克萊分校、加大聖地牙哥分校、卡內基美隆、喬治亞理工、哥倫比亞、哈佛、麻省理工……等等。  本校的榮譽學生計畫以及眾多研究機會，也一向有助於申請研究所。
	            
	            
	            
                     如何進入研究所
	            

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/careers/graduate-school/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Trường cao học « NGHỀ NGHIỆP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                NGHỀ NGHIỆP
Những việc mà các cựu sinh viên hoàn thành với tấm bằng từ trường Bren:ICS vẫn tiếp tục làm ngay cả chúng tôi không hết bất ngờ            
            

            

                Sự đa dạngCơ hội việc làmThực tậpTrường cao họcCựu sinh viên                    
            
                    
            
     Trường cao học

Một số sinh viên mong muốn tiếp tục theo học ở bậc học tiếp theo để đạt được bằng cấp cao hơn sau khi hoàn thành chương trình cử nhân. Họ có thể ghi danh vào chương trình Thạc sĩ để theo học các lớp chuyên sâu để dùi mài kỹ lưỡng hơn những kỹ năng ở một số chủ đề cụ thể, hoặc để theo học chương trình Tiến sĩ nhằm hướng tới một công việc trong những tổ chức hàn lâm hay nghiên cứu. Ngoài ra còn có những sinh viên ghi danh theo học ở các trường chuyên môn để có tấm bằng Quản trị kinh doanh (MBA) hay Luật sư. 

Sinh viên Bren:ICS có thành tích xuất sắc về phương diện này, bằng chứng là những cựu sinh viên đạt được thành công ở những tổ chức giáo dục uy tín như Stanford, UCLA, UC Berkeley, UC San Diego, Carnegie Mellon University, Georgia Tech, Columbia, Harvard, MIT, và nhiều trường khác. Chương trình danh dự của chúng tôi và nhiều cơ hội nghiên cứu hiện có đã chứng minh sự chuyển tiếp hiệu quả và thành công từ hệ đại học lên hệ cao học của các sinh viên theo học tại trường. 


Hướng dẫn về các tiêu chí học cao học 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/careers/graduate-school/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
대학원 « 진로 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                진로
Bren:ICS의 동문들이 자신들의 영역에서 놀라운 일들을 해내고 있는 모습을 살펴 보십시오.            
            

            

                폭넓은 교육취업 기회인턴십대학원동문                    
            
                    
            
     대학원
    	        
	           
	           학사 과정 수료 후 더 높은 학위를 받기 위해 대학원에 들어가고 싶어하는 학생들도 있습니다.  이들은 특정 주제에서 자신의 능력을 더욱 갈고 닦을 수 있는 심층 수업을 받기 위해 석사 과정에 등록하거나, 나중에 학계나 산업 연구 분야로 진출할 준비를 하기 위해 박사 과정에 등록하고 싶어합니다.  MBA 학위나 법학 학위를 받기 위해 전문 대학원에 들어가는 학생들도 있습니다. 
	           
	            
	            
	            
	            Bren:ICS의 학생들은 이같은 면에서 성과가 탁월합니다. 본교 졸업생들은 스탠퍼드, UCLA, UC 버클리, UC 샌디에이고, 카네기 멜론 대학, 조지아 공과대학, 컬럼비아, 하버드, MIT 등과 같은 명문대에 입학하고 있습니다.  본교에서 제공하는 우등생 프로그램과 많은 연구 기회들은 성공적인 대학원 진학에 매우 유용한 것으로 입증되었습니다.
	            
	            
	            
                     대학원 진학 방법
	            

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/careers/internships/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
인턴십 « 진로 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                진로
Bren:ICS의 동문들이 자신들의 영역에서 놀라운 일들을 해내고 있는 모습을 살펴 보십시오.            
            

            

                폭넓은 교육취업 기회인턴십대학원동문                    
            
                    
            
     인턴십
    	        
	            
	            인턴십은 취업을 준비할 때 꼭 필요한 요소입니다.  인턴십을 통해 학생들은 실제 현장에서 소중한 프로젝트 경험을 쌓고, 앞으로의 진로가 어떨지 미리 맛볼 기회를 가질 수 있으며, 이력서를 채우는 데에도 도움을 받을 수 있습니다.  Bren:ICS 3학년과 4학년 학생들은 대부분 인턴십으로 여름을 보내며, 2학년생과 신입생들도 인턴십을 하는 일이 드물지 않습니다.
	            
	            
	            UC 어바인은 첨단 환경에 둘러싸여 있어서 인턴십 기회가 많은 곳입니다. 하지만, 자신의 관심분야를 추구하기 위해 미국 내 다른 지역으로 가는 학생들도 상당히 많습니다.
	            

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/careers/internships/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Thực tập « NGHỀ NGHIỆP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                NGHỀ NGHIỆP
Những việc mà các cựu sinh viên hoàn thành với tấm bằng từ trường Bren:ICS vẫn tiếp tục làm ngay cả chúng tôi không hết bất ngờ            
            

            

                Sự đa dạngCơ hội việc làmThực tậpTrường cao họcCựu sinh viên                    
            
                    
            
     Thực tập

Thực tập là yếu tố then chốt trong quá trình sinh viên chuẩn bị tham gia vào thị trường lao động. Chương trình thực tập cung cấp cho bạn trải nghiệm quý giá về quy trình xây dựng và triển khai dự án trong thế giới thực, tạo cho bạn cơ hội thử nghiệm những thực tiễn của nghề nghiệp tương lai, và giúp bạn có một sơ yếu lý lịch với sức cạnh tranh cao. Phần lớn các sinh viên năm ba và những sinh viên năm cuối của Bren:ICS dành khoảng thời gian nghỉ hè của mình để tham gia chương trình thực tập, và trong số đó có cả những sinh viên năm thứ hai, và thậm chí cả sinh viên năm thứ nhất cũng tham gia chương trình này.


Nhờ có môi trường công nghệ cao xung quanh khuôn viên đại học UC Irvine, nhiều chương trình thực tập địa phương được xây dựng, nhưng cũng có một vài sinh viên di chuyển đến những vùng khác để theo đuổi những chương trình mà họ quan tâm.


                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/careers/internships/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Thực tập « NGHỀ NGHIỆP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                NGHỀ NGHIỆP
Những việc mà các cựu sinh viên hoàn thành với tấm bằng từ trường Bren:ICS vẫn tiếp tục làm ngay cả chúng tôi không hết bất ngờ            
            

            

                Sự đa dạngCơ hội việc làmThực tậpTrường cao họcCựu sinh viên                    
            
                    
            
     Thực tập

Thực tập là yếu tố then chốt trong quá trình sinh viên chuẩn bị tham gia vào thị trường lao động. Chương trình thực tập cung cấp cho bạn trải nghiệm quý giá về quy trình xây dựng và triển khai dự án trong thế giới thực, tạo cho bạn cơ hội thử nghiệm những thực tiễn của nghề nghiệp tương lai, và giúp bạn có một sơ yếu lý lịch với sức cạnh tranh cao. Phần lớn các sinh viên năm ba và những sinh viên năm cuối của Bren:ICS dành khoảng thời gian nghỉ hè của mình để tham gia chương trình thực tập, và trong số đó có cả những sinh viên năm thứ hai, và thậm chí cả sinh viên năm thứ nhất cũng tham gia chương trình này.


Nhờ có môi trường công nghệ cao xung quanh khuôn viên đại học UC Irvine, nhiều chương trình thực tập địa phương được xây dựng, nhưng cũng có một vài sinh viên di chuyển đến những vùng khác để theo đuổi những chương trình mà họ quan tâm.


                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/careers/internships/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
인턴십 « 진로 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                진로
Bren:ICS의 동문들이 자신들의 영역에서 놀라운 일들을 해내고 있는 모습을 살펴 보십시오.            
            

            

                폭넓은 교육취업 기회인턴십대학원동문                    
            
                    
            
     인턴십
    	        
	            
	            인턴십은 취업을 준비할 때 꼭 필요한 요소입니다.  인턴십을 통해 학생들은 실제 현장에서 소중한 프로젝트 경험을 쌓고, 앞으로의 진로가 어떨지 미리 맛볼 기회를 가질 수 있으며, 이력서를 채우는 데에도 도움을 받을 수 있습니다.  Bren:ICS 3학년과 4학년 학생들은 대부분 인턴십으로 여름을 보내며, 2학년생과 신입생들도 인턴십을 하는 일이 드물지 않습니다.
	            
	            
	            UC 어바인은 첨단 환경에 둘러싸여 있어서 인턴십 기회가 많은 곳입니다. 하지만, 자신의 관심분야를 추구하기 위해 미국 내 다른 지역으로 가는 학생들도 상당히 많습니다.
	            

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/careers/internships/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Internships « Careers « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Careers
What alumni accomplish in life with a Bren School degree continues to surprise even us            
            

            

                BreadthJob OpportunitiesInternshipsGraduate SchoolAlumni                    
            
                    
            
     Internships
                
                
                Internships are a key element of your preparation for entering the workforce.  They provide you with valuable project experience in the real world, give you a chance to taste what your future career might be like, and help build your resume.  The majority of Bren School juniors and seniors spend their summer at an internship, and it is not uncommon for our sophomore and even freshmen students to also do so.
                
                
                Given the high-tech environment surrounding UC Irvine, numerous local internships are available, though quite a few of our students venture out to other parts of the country to pursue their interests.
                

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/careers/internships/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Internships « Careers « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Careers
What alumni accomplish in life with a Bren School degree continues to surprise even us            
            

            

                BreadthJob OpportunitiesInternshipsGraduate SchoolAlumni                    
            
                    
            
     Internships
                
                
                Internships are a key element of your preparation for entering the workforce.  They provide you with valuable project experience in the real world, give you a chance to taste what your future career might be like, and help build your resume.  The majority of Bren School juniors and seniors spend their summer at an internship, and it is not uncommon for our sophomore and even freshmen students to also do so.
                
                
                Given the high-tech environment surrounding UC Irvine, numerous local internships are available, though quite a few of our students venture out to other parts of the country to pursue their interests.
                

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/careers/internships/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
實習 « 職場 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                職場
貝林資科院畢業校友的成就，屢屢讓我們刮目相看            
            

            

                廣度工作機會實習研究所校友                    
            
                    
            
     實習
    	        
	            
	            實習是進入職場的重要準備階段，  除了獲得外界的寶貴專案經驗外，也讓你體會一下將來的工作狀況，同時讓你的履歷更好看。  貝林資科院大部分的三、四年級生都在暑假期間實習，有的大二甚至大一新生也會這麼做。
	            
	            
	            由於加大爾灣分校四周都是高科技公司，因此當地已經有不少實習機會。但為興趣到美國其他地區實習的學生亦不在少數。
	            

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/opportunities/entrepreneurship/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
創業精神 « 機會 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                機會
貝林資科院的教育不只是唸書            
            

            

                應用所學榮譽學生研究創業精神                    
            
                    
            
     創業精神
    	        
    	        
    	        
                	
                	Adball.com：hITEC大賽得獎人
    	        
    	        
	            
	            貝林學院的學生不只會唸書， 還會創造自己的未來、改造這個社會。 他們的創業精神展現在許多方面。 每年都有學生組隊報名hITEC比賽。hITEC是校內舉辦的產品開發競賽，請來產業達人擔任指導老師，獎金超過9,000美元。 過去兩年得獎的產品概念，都已經成為真正的新創公司。
	            
	            
	            Clarity Labs透過標籤置放程式，利用電視觀眾的消費行為，讓觀眾只要點選電視節目中出現的商品，就能立刻上網購物。Olepta讓醫療行為的所有流程現代化，徹底改革醫師管理客戶關係的作法。 這套軟體為醫療單位、病患、保險公司、病患家屬，以及醫療過程的其他關係人，開創全新的互動管道。
	             
	            
	            在hITEC比賽獲得前三名的產品開發團隊，可自動晉級Paul Merage School of Business商學院每年舉辦的Stradling Yocca Carlson & Rauth營運計畫比賽，總獎金高達三萬美元。
	            
    	        
    	        
    	        Clarity Labs和Olepta這兩個例子證明，本校每年都有學生開設新創公司，把創新的精神應用到網路、遊戲、醫療資訊系統、網際網路技術或其他領域。 想參加產品開發競賽的學生，選課時可登記貝林學院教授Ramesh Jain開設的創業精神課程。教授本人已經成立三家業績亮眼的公司。 
    	        

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/opportunities/entrepreneurship/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
창업 « 기회 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                기회
Bren:ICS의 교육은 단순한 교육과정 그 이상을 선사합니다.            
            

            

                응용 학습우등생연구창업                    
            
                    
            
     창업
    	        
    	        
    	        
                	
                	Adball.com – hITEC 대회 우승자
    	        
    	        
	            
	            브렌 스쿨의 학생들은 단순한 학생이 아닙니다. 이들은 자신의 경력과 사회를 만들고 싶어합니다. 이들의 모험 정신은 다양한 방식으로 나타납니다. 매년 학생들은 팀을 꾸려서 업계 멘토가 참여하고 9,000달러가 넘는 상금이 걸리는 교내 제품 개발 대회인 hITEC에 출전합니다. 지난 2년 동안 우승한 제품 아이디어들은 발전하여 실제 창업에까지 이르렀습니다.
	            
	            
	            
	            Clarity Labs는 편리한 온라인 쇼핑을 위해 특정 TV 쇼에서 마음에 드는 제품을 클릭할 수 있는 태그 배치 어플리케이션을 통해 시청자의 소비자 행동을 활용하고 있습니다.Olepta는 처음부터 마지막까지 실제 작업 흐름을 현대화하여 개업의들의 관계 관리에 일대 혁신을 일으키고 있습니다. Olepta의 소프트웨어는 의료 제공자, 환자, 보험 제공자, 가족 구성원, 그리고 환자의 병력에 관계된 기타 모든 당사자들 간에 새로운 창구를 열어 줍니다.
	             
	            
	            hITEC의 제품 개발 팀 중 1등부터 3등까지는 폴 머라지 비즈니스 스쿨에서 매년 개최하는 Stradling Yocca Carlson & Rauth 사업 계획 대회에 자동 출전할 수 있는 자격을 얻습니다. 이 대회에서는 총 30,000달러의 현금이 수여됩니다.
	            
    	        
    	        
    	        Clarity Labs와 Olepta로 예시한 바와 같이, 본교 출신 학생들은 네트워킹, 게임, 의학 정보 시스템, 인터넷 공학 등의 분야에서 자신들의 혁신적인 정신을 실현하기 위해 매년 창업의 문을 열고 있습니다. 이같은 제품 개발 대회에 참여하는 데 관심이 있는 학생은 Ramesh Jain 교수가 담당하는 창업 과정에 등록하면 됩니다. Ramesh Jain 교수는 기업 3개를 직접 설립하여 큰 성공을 거둔 바 있습니다. 
    	        

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/opportunities/entrepreneurship/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Quản trị doanh nghiệp « CƠ HỘI « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                CƠ HỘI
Chương trình đào tạo của Bren:ICS đem đến cho bạn không chỉ những kiến thức trên giảng đường            
            

            

                Nghiên cứu Ứng dụngChương trình danh dựNghiên cứuQuản trị doanh nghiệp                    
            
                    
            
     Quản trị doanh nghiệp
    	        
    	        
    	        
                	
                	Adball.com – những người thắng cuộc của cuộc thi hITEC
    	        
    	        
	            
Sinh viên Đại học Bren không đơn thuần chỉ là những cô, cậu sinh viên chỉ biết có học. Họ muốn định hình nghề nghiệp và xã hội. Tinh thần quản trị doanh nghiệp của họ thể hiện theo nhiều cách thức. Hàng năm các đội sinh viên đua tranh trong cuộc thi hITEC, một cuộc thi phát triển sản phẩm thu hút sự tham gia của các cố vấn ngành và có các cơ cấu giải thưởng lên tới hơn $9.000 đô-la. Những ý tưởng về sản phẩm giành giải thưởng của hai năm vừa qua đã hình thành nên những bước khởi nghiệp thực tế: 
Clarity Labs nâng cao hành vi tiêu dùng của người xem truyền hình bằng ứng dụng đặt thẻ cho phép người xem nhấp chuột vào những sản phẩm ưa thích của họ trong bất cứ chương trình TV nào để mua sắm tiện lợi trên mạng.Olepta làm cuộc cách mạng hóa công việc quản lý đầu mối quan hệ dành cho các bác sĩ y khoa bằng cách hiện đại hóa quy trình khám chữa bệnh từ bắt đầu đến kết thúc. Phần mềm của hãng mở ra các kênh quan hệ mới giữa nhà cung cấp dịch vụ y khoa, bệnh nhân, công ty bảo hiểm, người thân, và tất cả các bên khác liên quan trong lịch sử điều trị y khoa của bệnh nhân.

Ba đội phát triển sản phẩm dẫn đầu trong cuộc thi hITEC sẽ được tham gia Cuộc thi Kế hoạch Kinh doanh Stradling Yocca Carlson & Rauth hàng năm của trường Đại học Kinh doanh Paul Merage School với tổng số giải thưởng tiền mặt lên tới $30.000 đô-la. 

Ngoài hai ví dụ điển hình Clarity Labs và Olepta, hàng năm trong số các sinh viên tốt nghiệp từ trường chúng tôi, có những sinh viên lập công ty khởi nghiệp kinh doanh để áp dụng tinh thần đổi mới của họ vào các hệ thống mạng, trò chơi điện toán, thông tin y khoa, công nghệ internet hay một số lĩnh vực khác. Sinh viên có mong muốn tham gia vào một trong những cuộc thi phát triển sản phẩm này có thể ghi danh vào khóa học Quản trị doanh nghiệp do Giáo sư trường Bren là Ramesh Jain giảng dạy, đây là vị giáo sư tự thân sáng lập ba công ty và đạt được nhiều thành công vang dội. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/opportunities/entrepreneurship/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Entrepreneurship « Opportunities « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Opportunities
A Bren School education provides you with more than just course work            
            

            

                Applied LearningHonorsResearchEntrepreneurship                    
            
                    
            
     Entrepreneurship
    	        
    	        
    	        
                
                Adball.com – hITEC competition winners
    	        

	            
	            Bren School students are not just students. They want to shape their careers and society. Their entrepreneurial spirit shows up in many ways. Every year students form teams to compete in hITEC, our product development competition that involves industrial mentors and over $9,000 in prizes. The past two years' winning product ideas have gone on to form actual startups:
	            
	            

	            Clarity Labs leverages TV audiences' consumer behavior through a tag placement application that allows viewers to click on their favorite products in any given TV show for convenient online shopping.Olepta revolutionizes relationship management for medical practitioners by modernizing the start-to-finish practice workflow. Its software opens new channels between the medical provider, the patient, insurance provider, family members, and all other parties involved in a patient's medical history.

	            
	            The top three product development teams in hITEC automatically qualify for The Paul Merage School of Business's annual Stradling Yocca Carlson & Rauth Business Plan Competition with cash awards totaling $30,000.
	            
    	        
    	        
    	        As exemplified by Clarity Labs and Olepta, every year some of 
    	        our of students launch new start-up companies to apply their 
    	        innovative spirit to networking, gaming, medical information 
    	        systems, internet technology, or some other area. A student who is 
    	        interested in participating in one of these product development 
    	        competitions may enroll in the Entrepreneurship course taught by Bren 
    	        Professor Ramesh Jain, who has founded three 
    	        highly successful companies himself. 
    	        

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/opportunities/entrepreneurship/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
창업 « 기회 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                기회
Bren:ICS의 교육은 단순한 교육과정 그 이상을 선사합니다.            
            

            

                응용 학습우등생연구창업                    
            
                    
            
     창업
    	        
    	        
    	        
                	
                	Adball.com – hITEC 대회 우승자
    	        
    	        
	            
	            브렌 스쿨의 학생들은 단순한 학생이 아닙니다. 이들은 자신의 경력과 사회를 만들고 싶어합니다. 이들의 모험 정신은 다양한 방식으로 나타납니다. 매년 학생들은 팀을 꾸려서 업계 멘토가 참여하고 9,000달러가 넘는 상금이 걸리는 교내 제품 개발 대회인 hITEC에 출전합니다. 지난 2년 동안 우승한 제품 아이디어들은 발전하여 실제 창업에까지 이르렀습니다.
	            
	            
	            
	            Clarity Labs는 편리한 온라인 쇼핑을 위해 특정 TV 쇼에서 마음에 드는 제품을 클릭할 수 있는 태그 배치 어플리케이션을 통해 시청자의 소비자 행동을 활용하고 있습니다.Olepta는 처음부터 마지막까지 실제 작업 흐름을 현대화하여 개업의들의 관계 관리에 일대 혁신을 일으키고 있습니다. Olepta의 소프트웨어는 의료 제공자, 환자, 보험 제공자, 가족 구성원, 그리고 환자의 병력에 관계된 기타 모든 당사자들 간에 새로운 창구를 열어 줍니다.
	             
	            
	            hITEC의 제품 개발 팀 중 1등부터 3등까지는 폴 머라지 비즈니스 스쿨에서 매년 개최하는 Stradling Yocca Carlson & Rauth 사업 계획 대회에 자동 출전할 수 있는 자격을 얻습니다. 이 대회에서는 총 30,000달러의 현금이 수여됩니다.
	            
    	        
    	        
    	        Clarity Labs와 Olepta로 예시한 바와 같이, 본교 출신 학생들은 네트워킹, 게임, 의학 정보 시스템, 인터넷 공학 등의 분야에서 자신들의 혁신적인 정신을 실현하기 위해 매년 창업의 문을 열고 있습니다. 이같은 제품 개발 대회에 참여하는 데 관심이 있는 학생은 Ramesh Jain 교수가 담당하는 창업 과정에 등록하면 됩니다. Ramesh Jain 교수는 기업 3개를 직접 설립하여 큰 성공을 거둔 바 있습니다. 
    	        

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/opportunities/entrepreneurship/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
創業精神 « 機會 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                機會
貝林資科院的教育不只是唸書            
            

            

                應用所學榮譽學生研究創業精神                    
            
                    
            
     創業精神
    	        
    	        
    	        
                	
                	Adball.com：hITEC大賽得獎人
    	        
    	        
	            
	            貝林學院的學生不只會唸書， 還會創造自己的未來、改造這個社會。 他們的創業精神展現在許多方面。 每年都有學生組隊報名hITEC比賽。hITEC是校內舉辦的產品開發競賽，請來產業達人擔任指導老師，獎金超過9,000美元。 過去兩年得獎的產品概念，都已經成為真正的新創公司。
	            
	            
	            Clarity Labs透過標籤置放程式，利用電視觀眾的消費行為，讓觀眾只要點選電視節目中出現的商品，就能立刻上網購物。Olepta讓醫療行為的所有流程現代化，徹底改革醫師管理客戶關係的作法。 這套軟體為醫療單位、病患、保險公司、病患家屬，以及醫療過程的其他關係人，開創全新的互動管道。
	             
	            
	            在hITEC比賽獲得前三名的產品開發團隊，可自動晉級Paul Merage School of Business商學院每年舉辦的Stradling Yocca Carlson & Rauth營運計畫比賽，總獎金高達三萬美元。
	            
    	        
    	        
    	        Clarity Labs和Olepta這兩個例子證明，本校每年都有學生開設新創公司，把創新的精神應用到網路、遊戲、醫療資訊系統、網際網路技術或其他領域。 想參加產品開發競賽的學生，選課時可登記貝林學院教授Ramesh Jain開設的創業精神課程。教授本人已經成立三家業績亮眼的公司。 
    	        

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/opportunities/entrepreneurship/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Quản trị doanh nghiệp « CƠ HỘI « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                CƠ HỘI
Chương trình đào tạo của Bren:ICS đem đến cho bạn không chỉ những kiến thức trên giảng đường            
            

            

                Nghiên cứu Ứng dụngChương trình danh dựNghiên cứuQuản trị doanh nghiệp                    
            
                    
            
     Quản trị doanh nghiệp
    	        
    	        
    	        
                	
                	Adball.com – những người thắng cuộc của cuộc thi hITEC
    	        
    	        
	            
Sinh viên Đại học Bren không đơn thuần chỉ là những cô, cậu sinh viên chỉ biết có học. Họ muốn định hình nghề nghiệp và xã hội. Tinh thần quản trị doanh nghiệp của họ thể hiện theo nhiều cách thức. Hàng năm các đội sinh viên đua tranh trong cuộc thi hITEC, một cuộc thi phát triển sản phẩm thu hút sự tham gia của các cố vấn ngành và có các cơ cấu giải thưởng lên tới hơn $9.000 đô-la. Những ý tưởng về sản phẩm giành giải thưởng của hai năm vừa qua đã hình thành nên những bước khởi nghiệp thực tế: 
Clarity Labs nâng cao hành vi tiêu dùng của người xem truyền hình bằng ứng dụng đặt thẻ cho phép người xem nhấp chuột vào những sản phẩm ưa thích của họ trong bất cứ chương trình TV nào để mua sắm tiện lợi trên mạng.Olepta làm cuộc cách mạng hóa công việc quản lý đầu mối quan hệ dành cho các bác sĩ y khoa bằng cách hiện đại hóa quy trình khám chữa bệnh từ bắt đầu đến kết thúc. Phần mềm của hãng mở ra các kênh quan hệ mới giữa nhà cung cấp dịch vụ y khoa, bệnh nhân, công ty bảo hiểm, người thân, và tất cả các bên khác liên quan trong lịch sử điều trị y khoa của bệnh nhân.

Ba đội phát triển sản phẩm dẫn đầu trong cuộc thi hITEC sẽ được tham gia Cuộc thi Kế hoạch Kinh doanh Stradling Yocca Carlson & Rauth hàng năm của trường Đại học Kinh doanh Paul Merage School với tổng số giải thưởng tiền mặt lên tới $30.000 đô-la. 

Ngoài hai ví dụ điển hình Clarity Labs và Olepta, hàng năm trong số các sinh viên tốt nghiệp từ trường chúng tôi, có những sinh viên lập công ty khởi nghiệp kinh doanh để áp dụng tinh thần đổi mới của họ vào các hệ thống mạng, trò chơi điện toán, thông tin y khoa, công nghệ internet hay một số lĩnh vực khác. Sinh viên có mong muốn tham gia vào một trong những cuộc thi phát triển sản phẩm này có thể ghi danh vào khóa học Quản trị doanh nghiệp do Giáo sư trường Bren là Ramesh Jain giảng dạy, đây là vị giáo sư tự thân sáng lập ba công ty và đạt được nhiều thành công vang dội. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/opportunities/entrepreneurship/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Entrepreneurship « Opportunities « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Opportunities
A Bren School education provides you with more than just course work            
            

            

                Applied LearningHonorsResearchEntrepreneurship                    
            
                    
            
     Entrepreneurship
    	        
    	        
    	        
                
                Adball.com – hITEC competition winners
    	        

	            
	            Bren School students are not just students. They want to shape their careers and society. Their entrepreneurial spirit shows up in many ways. Every year students form teams to compete in hITEC, our product development competition that involves industrial mentors and over $9,000 in prizes. The past two years' winning product ideas have gone on to form actual startups:
	            
	            

	            Clarity Labs leverages TV audiences' consumer behavior through a tag placement application that allows viewers to click on their favorite products in any given TV show for convenient online shopping.Olepta revolutionizes relationship management for medical practitioners by modernizing the start-to-finish practice workflow. Its software opens new channels between the medical provider, the patient, insurance provider, family members, and all other parties involved in a patient's medical history.

	            
	            The top three product development teams in hITEC automatically qualify for The Paul Merage School of Business's annual Stradling Yocca Carlson & Rauth Business Plan Competition with cash awards totaling $30,000.
	            
    	        
    	        
    	        As exemplified by Clarity Labs and Olepta, every year some of 
    	        our of students launch new start-up companies to apply their 
    	        innovative spirit to networking, gaming, medical information 
    	        systems, internet technology, or some other area. A student who is 
    	        interested in participating in one of these product development 
    	        competitions may enroll in the Entrepreneurship course taught by Bren 
    	        Professor Ramesh Jain, who has founded three 
    	        highly successful companies himself. 
    	        

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/computer-game-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Khoa học Trò chơi Điện toán « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Khoa học Trò chơi Điện toán

Chuyên ngành này là kết hợp chuyên ngành khoa học điện toán với chương trình đào tạo chuyên sâu về thiết kế, xây dựng và nắm vững những trò chơi điện toán và những dạng thức khác của môi trường tương tác. Sinh viên sẽ được trang bị kiến thức nền tảng vững chắc về khoa học điện toán, cộng thêm những khóa học về phim ảnh và những nghiên cứu đa phương tiện, toán học, vật lý và công nghệ trò chơi. 

Chương trình đào tạo của chuyên ngành tập trung mạnh mẽ vào mảng thiết kế, khả năng làm việc theo nhóm, và sự hiểu biết về các trò chơi điện toán và những công nghệ liên quan cùng phương tiện truyền thông trong bối cảnh xã hội và văn hóa. Những sinh viên quan tâm nghiên cứu về những khái niệm và công cụ nền tảng của những trò chơi điện toán và ứng dụng những khái niệm và công cụ đó để tạo nên những trò chơi điện toán của riêng mình nên nộp đơn theo học chuyên ngành này. 


Không gian trao đổi về Khoa học Trò chơi Điện toán 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/computer-game-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
컴퓨터 게임 과학 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     컴퓨터 게임 과학
    	        
	          
	          이 전공은 컴퓨터 게임의 설계, 제작 및 이해에 초점을 맞춘 컴퓨터 과학과 기타 형태의 쌍방향 미디어를 결합하고 있습니다. 학생들은 컴퓨터 과학의 기본 원칙에 대한 탄탄한 기초 교육을 받으며, 영화와 미디어 연구, 수학, 물리학, 게임 공학 같은 과정을 통해 심화 학습을 합니다.
	          
	           
	          
	          이 전공은 컴퓨터 게임 및 관련 기술의 이해, 설계, 팀워크뿐 아니라 사회적, 문화적 맥락에서의 미디어를 집중적으로 배웁니다. 컴퓨터 게임의 근간이 되는 개념과 도구를 배우고 이러한 개념과 도구를 적용하여 나만의 것을 만드는 데 관심이 있는 학생들은 이 전공을 탐구하는 것이 좋습니다.
	          
	          
	          
               컴퓨터 게임 과학 오픈 하우스
	          

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/computer-game-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
電腦遊戲學 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     電腦遊戲學
    	        
	          
	          本系除了資訊科學外，也側重設計、建築等課程，並需了解電腦遊戲和其他形式的互動媒體。 學生能在資訊科學領域打下良好基礎，並補充電影、媒體研究、數學、物理學和遊戲技術等課程。
	          
	           
	          
	          本系非常強調設計和團隊合作，另外也要了解電腦遊戲、相關技術，以及社會和文化脈絡下的媒體意義。 學生如果很想了解電腦遊戲的概念和工具，以及如何應用這些概念和工具自創遊戲，建議選擇這個科系。
	          
	          
	          
               電腦遊戲學說明會
	          

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/computer-game-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Computer Game Science « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Computer Game Science


   
   


   

                

The Computer Game Science (CGS) major combines a solid foundation in computer 
science with a focus on designing, building, and understanding computer games
and other forms of interactive media. The fundamentals of information and 
computer science — along with coursework in mathematics, statistics, physics, 
and film and media studies — provide students with the concepts and tools to 
study a wide scope of computer game technologies. 

CGS emphasizes design, teamwork, and the understanding 
of computer games and related technologies and media in a social and cultural 
context. The term “computer game” includes games that run on cell phones, 
mobile devices, PCs, consoles, Macs, web pages and even inside automobiles. 
CGS majors design and create games for entertainment, and also for education, 
training and social change.

The study of computer games is an emerging field driven by advancing computer 
hardware and software technology, the widespread popularity of video games as 
an entertainment medium, and by the interest of artists, economists, 
educators, scientists and many others to use game technologies for 
communication, visualization, computation and learning.













IS COMPUTER GAME SCIENCE FOR ME?  


CGS is ideal for anyone interested in learning the technical components of
creating games — computer programming, graphics, network design, database
management, artificial intelligence and much more — and working in teams to
design and implement exciting new games. If you are primarily interested in
the art or management sides of creating games, the CGS major may not be the
best fit for you.

Students who major in Computer Game Science will:
acquire a solid foundation in computer science and software development;
      learn how to create interactive and human-centered computer game designs;
      employ an interdisciplinary approach to computer game design and development,
          drawing on coursework in modeling and design, graphics, software engineering,
          hardware architectures, AI, algorithms, distributed systems, human interfaces
          and aesthetics;
      be able to analyze and discuss computer game systems as communication,
          teaching and entertainment media that can be a force for education, social
          change and activism;
      graduate with an extensive portfolio of implemented games.
   






WHY STUDY AT UC IRVINE?  


Several factors contribute to the strength of UC Irvine’s Computer Game Science program, including:
   Overall excellence. Ranked 28th nationally by U.S.
          News and World Report, computer science education at UCI is broad,
          deep and cutting-edge.
      Location. Irvine and Orange County are home to a
          remarkable concentration of game development studios large and small,
          including industry giant Blizzard Entertainment. We consulted with
          these companies (many of which employ or were founded by UCI alumni)
          while planning the CGS major, and they look forward to offering
          internships and jobs to our students.
      Collaboration. We partner with nearby
          Laguna College of Art and Design,
          which offers a Game Art major. Their student artists work with our
          CGS students to develop innovative, visually engaging games.
   








WHAT COURSES DO I TAKE?  


The CGS major combines the fundamentals of computer science with about a dozen
game-focused courses. Current requirements for this major can be found in the General Catalogue.











WHAT CAN I DO WITH A DEGREE IN CGS?  


A wide variety of careers and graduate programs are open to Computer Game
Science graduates. The video game industry is comparable in size to the film
and music industries, and job growth projections are excellent for people with
strong technical backgrounds. Many other fields, including mobile software
development, interactive entertainment, and training and education software,
have demand for similar skill sets and knowledge. CGS graduates are well
trained in computer science, and can thus pursue graduate programs or any
career that involves designing, implementing, evaluating or interacting with
computer-based systems.













  





             
                 
                 Associate Professor Crista Lopes at the Computer Game Science
                    Open House demonstrates her 3D simulation of a podcar system. 
             











In the News



   
                
                            UCI students build games in a week 
                               The Orange County Register features Game Jam, a popular competition sponsored by the UCI Video Game Development Club.
                               Visit the Bren School YouTube channel to view a wrap-up of the spring 2011 contest. 
                               
                      
                            UC Irvine’s new computer games major gets its game on 
                               The OC Weekly publishes a six-page spread about the Bren School’s newest undergraduate major.
                      
                            UC Irvine takes video games to the next level 
                               The Los Angeles Times previews CGS before its launch in Fall 2010.
                               

                               

                               
                                  Meet the CGS mascot (mentioned in the LA Times article above), a character 
                                  from the game Colossal Crisis, developed by UCI undergraduates James Dalby, 
                                  Fritzie Mercado, Edward Fleischman and Quin Kennedy. The city is under attack 
                                  by Godzilla, and the professor assigns multiple clones of our hero to collect 
                                  equipment needed to fight back. Catch the demo video on 
                                  YouTube.
                               
                                 
                            













                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/computer-game-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Khoa học Trò chơi Điện toán « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Khoa học Trò chơi Điện toán

Chuyên ngành này là kết hợp chuyên ngành khoa học điện toán với chương trình đào tạo chuyên sâu về thiết kế, xây dựng và nắm vững những trò chơi điện toán và những dạng thức khác của môi trường tương tác. Sinh viên sẽ được trang bị kiến thức nền tảng vững chắc về khoa học điện toán, cộng thêm những khóa học về phim ảnh và những nghiên cứu đa phương tiện, toán học, vật lý và công nghệ trò chơi. 

Chương trình đào tạo của chuyên ngành tập trung mạnh mẽ vào mảng thiết kế, khả năng làm việc theo nhóm, và sự hiểu biết về các trò chơi điện toán và những công nghệ liên quan cùng phương tiện truyền thông trong bối cảnh xã hội và văn hóa. Những sinh viên quan tâm nghiên cứu về những khái niệm và công cụ nền tảng của những trò chơi điện toán và ứng dụng những khái niệm và công cụ đó để tạo nên những trò chơi điện toán của riêng mình nên nộp đơn theo học chuyên ngành này. 


Không gian trao đổi về Khoa học Trò chơi Điện toán 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/computer-game-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Computer Game Science « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Computer Game Science


   
   


   

                

The Computer Game Science (CGS) major combines a solid foundation in computer 
science with a focus on designing, building, and understanding computer games
and other forms of interactive media. The fundamentals of information and 
computer science — along with coursework in mathematics, statistics, physics, 
and film and media studies — provide students with the concepts and tools to 
study a wide scope of computer game technologies. 

CGS emphasizes design, teamwork, and the understanding 
of computer games and related technologies and media in a social and cultural 
context. The term “computer game” includes games that run on cell phones, 
mobile devices, PCs, consoles, Macs, web pages and even inside automobiles. 
CGS majors design and create games for entertainment, and also for education, 
training and social change.

The study of computer games is an emerging field driven by advancing computer 
hardware and software technology, the widespread popularity of video games as 
an entertainment medium, and by the interest of artists, economists, 
educators, scientists and many others to use game technologies for 
communication, visualization, computation and learning.













IS COMPUTER GAME SCIENCE FOR ME?  


CGS is ideal for anyone interested in learning the technical components of
creating games — computer programming, graphics, network design, database
management, artificial intelligence and much more — and working in teams to
design and implement exciting new games. If you are primarily interested in
the art or management sides of creating games, the CGS major may not be the
best fit for you.

Students who major in Computer Game Science will:
acquire a solid foundation in computer science and software development;
      learn how to create interactive and human-centered computer game designs;
      employ an interdisciplinary approach to computer game design and development,
          drawing on coursework in modeling and design, graphics, software engineering,
          hardware architectures, AI, algorithms, distributed systems, human interfaces
          and aesthetics;
      be able to analyze and discuss computer game systems as communication,
          teaching and entertainment media that can be a force for education, social
          change and activism;
      graduate with an extensive portfolio of implemented games.
   






WHY STUDY AT UC IRVINE?  


Several factors contribute to the strength of UC Irvine’s Computer Game Science program, including:
   Overall excellence. Ranked 28th nationally by U.S.
          News and World Report, computer science education at UCI is broad,
          deep and cutting-edge.
      Location. Irvine and Orange County are home to a
          remarkable concentration of game development studios large and small,
          including industry giant Blizzard Entertainment. We consulted with
          these companies (many of which employ or were founded by UCI alumni)
          while planning the CGS major, and they look forward to offering
          internships and jobs to our students.
      Collaboration. We partner with nearby
          Laguna College of Art and Design,
          which offers a Game Art major. Their student artists work with our
          CGS students to develop innovative, visually engaging games.
   








WHAT COURSES DO I TAKE?  


The CGS major combines the fundamentals of computer science with about a dozen
game-focused courses. Current requirements for this major can be found in the General Catalogue.











WHAT CAN I DO WITH A DEGREE IN CGS?  


A wide variety of careers and graduate programs are open to Computer Game
Science graduates. The video game industry is comparable in size to the film
and music industries, and job growth projections are excellent for people with
strong technical backgrounds. Many other fields, including mobile software
development, interactive entertainment, and training and education software,
have demand for similar skill sets and knowledge. CGS graduates are well
trained in computer science, and can thus pursue graduate programs or any
career that involves designing, implementing, evaluating or interacting with
computer-based systems.













  





             
                 
                 Associate Professor Crista Lopes at the Computer Game Science
                    Open House demonstrates her 3D simulation of a podcar system. 
             











In the News



   
                
                            UCI students build games in a week 
                               The Orange County Register features Game Jam, a popular competition sponsored by the UCI Video Game Development Club.
                               Visit the Bren School YouTube channel to view a wrap-up of the spring 2011 contest. 
                               
                      
                            UC Irvine’s new computer games major gets its game on 
                               The OC Weekly publishes a six-page spread about the Bren School’s newest undergraduate major.
                      
                            UC Irvine takes video games to the next level 
                               The Los Angeles Times previews CGS before its launch in Fall 2010.
                               

                               

                               
                                  Meet the CGS mascot (mentioned in the LA Times article above), a character 
                                  from the game Colossal Crisis, developed by UCI undergraduates James Dalby, 
                                  Fritzie Mercado, Edward Fleischman and Quin Kennedy. The city is under attack 
                                  by Godzilla, and the professor assigns multiple clones of our hero to collect 
                                  equipment needed to fight back. Catch the demo video on 
                                  YouTube.
                               
                                 
                            













                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/computer-game-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
컴퓨터 게임 과학 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     컴퓨터 게임 과학
    	        
	          
	          이 전공은 컴퓨터 게임의 설계, 제작 및 이해에 초점을 맞춘 컴퓨터 과학과 기타 형태의 쌍방향 미디어를 결합하고 있습니다. 학생들은 컴퓨터 과학의 기본 원칙에 대한 탄탄한 기초 교육을 받으며, 영화와 미디어 연구, 수학, 물리학, 게임 공학 같은 과정을 통해 심화 학습을 합니다.
	          
	           
	          
	          이 전공은 컴퓨터 게임 및 관련 기술의 이해, 설계, 팀워크뿐 아니라 사회적, 문화적 맥락에서의 미디어를 집중적으로 배웁니다. 컴퓨터 게임의 근간이 되는 개념과 도구를 배우고 이러한 개념과 도구를 적용하여 나만의 것을 만드는 데 관심이 있는 학생들은 이 전공을 탐구하는 것이 좋습니다.
	          
	          
	          
               컴퓨터 게임 과학 오픈 하우스
	          

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/computer-game-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
電腦遊戲學 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     電腦遊戲學
    	        
	          
	          本系除了資訊科學外，也側重設計、建築等課程，並需了解電腦遊戲和其他形式的互動媒體。 學生能在資訊科學領域打下良好基礎，並補充電影、媒體研究、數學、物理學和遊戲技術等課程。
	          
	           
	          
	          本系非常強調設計和團隊合作，另外也要了解電腦遊戲、相關技術，以及社會和文化脈絡下的媒體意義。 學生如果很想了解電腦遊戲的概念和工具，以及如何應用這些概念和工具自創遊戲，建議選擇這個科系。
	          
	          
	          
               電腦遊戲學說明會
	          

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/software-engineering/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Software Engineering (SE) « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Software Engineering (SE)


   
   


                

The Software Engineering major prepares students to be productive members of software engineering teams in a 
variety of application domains, with focus on the domains of major importance within each decade. It combines a 
solid foundation in computer science with knowledge of how to engineer modern software systems, and how to function 
within teams. 

Coursework in mathematics and statistics provide students the basis for rigorous thinking; coursework in the 
foundations of computer science provide students the basis for computational thinking; coursework in topics of 
software engineering prepares students for the production of software; project courses prepare students for the 
practice of software development.  The major emphasizes the design and implementation of large software systems.
 

















IS SOFTWARE ENGINEERING FOR ME?  


Students who major in Software Engineering will: 
Acquire a strong foundation in software engineering as well as a solid basis in computer science
   Have the ability to become a productive member of software engineering teams in a variety of application domains including, but not restricted to, Web and mobile applications
   Be inspired by technical knowledge and have an appreciation for life-long learning
   Be capable of placing software in the social context in which is it developed and create novel applications that have the potential to bring social change









WHAT COURSES DO I TAKE?  


Coursework involves mathematics and statistics, foundations of computer science, topics of software engineering and project courses. Current requirements for this major can be found in the General Catalogue.













WHAT CAN I DO WITH A DEGREE IN SE?  


A wide variety of careers and graduate programs are open to Software Engineering graduates. The Web and mobile applications industry is a multi-billion dollar industry, and job growth projections are the strongest for people with strong technical backgrounds. Many other application domains, including interactive entertainment, medical information systems, and training and education software have demand for similar skill sets and knowledge. Graduate school in either computer science or software engineering or a related IT field is also a possible career path.








  





             











Of interest



   
                
                            
                               Software Engineering Careers Continue to Boom 
                               According to IEEE publication Today's Engineer, software engineering is a hot industry, "with more demand
                               for talented professionals than ever." In fact, the U.S. Department of Labor’s Bureau of Labor Statistics 
                               predicts a 30 percent growth rate for software engineering jobs through 2020 — much higher than the 14 
                               percent average growth rate for all other occupations. 
                            

                      
                                 








                 





                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/software-engineering/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Software Engineering (SE) « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Software Engineering (SE)


   
   


                

The Software Engineering major prepares students to be productive members of software engineering teams in a 
variety of application domains, with focus on the domains of major importance within each decade. It combines a 
solid foundation in computer science with knowledge of how to engineer modern software systems, and how to function 
within teams. 

Coursework in mathematics and statistics provide students the basis for rigorous thinking; coursework in the 
foundations of computer science provide students the basis for computational thinking; coursework in topics of 
software engineering prepares students for the production of software; project courses prepare students for the 
practice of software development.  The major emphasizes the design and implementation of large software systems.
 

















IS SOFTWARE ENGINEERING FOR ME?  


Students who major in Software Engineering will: 
Acquire a strong foundation in software engineering as well as a solid basis in computer science
   Have the ability to become a productive member of software engineering teams in a variety of application domains including, but not restricted to, Web and mobile applications
   Be inspired by technical knowledge and have an appreciation for life-long learning
   Be capable of placing software in the social context in which is it developed and create novel applications that have the potential to bring social change









WHAT COURSES DO I TAKE?  


Coursework involves mathematics and statistics, foundations of computer science, topics of software engineering and project courses. Current requirements for this major can be found in the General Catalogue.













WHAT CAN I DO WITH A DEGREE IN SE?  


A wide variety of careers and graduate programs are open to Software Engineering graduates. The Web and mobile applications industry is a multi-billion dollar industry, and job growth projections are the strongest for people with strong technical backgrounds. Many other application domains, including interactive entertainment, medical information systems, and training and education software have demand for similar skill sets and knowledge. Graduate school in either computer science or software engineering or a related IT field is also a possible career path.








  





             











Of interest



   
                
                            
                               Software Engineering Careers Continue to Boom 
                               According to IEEE publication Today's Engineer, software engineering is a hot industry, "with more demand
                               for talented professionals than ever." In fact, the U.S. Department of Labor’s Bureau of Labor Statistics 
                               predicts a 30 percent growth rate for software engineering jobs through 2020 — much higher than the 14 
                               percent average growth rate for all other occupations. 
                            

                      
                                 








                 





                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/admissions/financial-aid/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
獎助學金 « 入學 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                入學
入學申請要求、申請期限，以及申請書撰寫秘訣            
            

            

                新生轉學住宿獎助學金申請手續提示                    
            
                    
            
     獎助學金
    	       
    	       
    	       家長、學生、學校三方面必須共同合作，才能支付在加大爾灣分校求學的所有費用。 大家必須各司其職，才能解決金錢問題。 大學部「獎助學金」網站針對教育費用，提供最完整的參考資料。
    	       
    	       
    	       
	            請不要忘記以下重要日期：
	            
	            
	            1月1日 送出聯邦獎助學金申請表（FAFSA）和證明文件的第一天。 
	            
	            
	             
	            3月2日 填寫FAFSA申請表的優先截止期限。 
	            
	            
	             
	            3月2日 把加州獎助學金申請表（Cal Grant GPA Verification Form）寄到加州學生補助委員會的最後郵寄日期。 
	            
	            
	             
	            9月15日 這是秋季班註冊費用的最後繳交日期。
	            

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/admissions/housing/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
住宿 « 入學 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                入學
入學申請要求、申請期限，以及申請書撰寫秘訣            
            

            

                新生轉學住宿獎助學金申請手續提示                    
            
                    
            
     住宿
    	        
	           
	           加大爾灣分校保證，所有新生只要符合單身、25歲以下、在期限內完成住宿申請和合約繳回手續，並且登記秋季班等條件，就能享有兩年住宿權益。 很多學生在加大爾灣分校唸書期間都選擇住校。
	           
	           
	           
	           加大爾灣分校新生宿舍的每個房間都裝設網路、有線電視線路，另有共用客廳、自習室、洗衣房、休閒設施、電腦室，而且公共區域和浴廁還有清潔人員。
	           
	           
	           
	           加大爾灣分校住宿設施和申請時間的詳細說明請見： 加大爾灣分校準新生宿舍網站。
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/admissions/freshmen/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
新生 « 入學 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                入學
入學申請要求、申請期限，以及申請書撰寫秘訣            
            

            

                新生轉學住宿獎助學金申請手續提示                    
            
                    
            
    新生
    	        
	          
	          準新鮮人可在校內獲得豐富的資訊，以及所有入學程序的詳細說明。 我們特別鼓勵你詳讀以下網頁：
	          
	          
	          
	          準學生： http://www.uci.edu/prospective.php
	          
	          
	          
	          入學方式： http://www.admissions.uci.edu/
	          
	          
	          
	          常見問題： http://www.admissions.uci.edu/resources/faq.html 
	          
	          
	          
	          線上文件： http://www.admissions.uci.edu/publications/online_publications.html 
	          
    	       
    	      
    	      也別忘了本校的吉祥物食蟻獸Peter： http://www.uci.edu/peter/
    	       
    	      
    	      
    	      目前貝林資科院大學部共有850名學生，加大爾灣分校學生總數則將近22,000人。 2010年入學新生GPA平均分數是3.89，SAT平均分數是1822分。
    	      

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/admissions/application-tips/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
申請手續提示 « 入學 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                入學
入學申請要求、申請期限，以及申請書撰寫秘訣            
            

            

                新生轉學住宿獎助學金申請手續提示                    
            
                    
            
    申請手續提示
    	        
	           
	           申請書很重要。你在自我介紹、敘述個人成就和未來期待時，也應該小心下筆。 加州大學以下網站提示幾個申請書寫作技巧（尤其是自傳部份），非常具有參考價值：
	           
	           
	           
	           http://www.universityofcalifornia.edu/admissions/how-to-apply/personal-statement/index.html 
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/overview/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
總覽 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     總覽
    	        
	            
	            資訊科學瞬息萬變，新技術、新應用不斷出現。 學生受的教育必須跟上時代，為他們做好準備，才能面對充滿刺激的相關工作。 資訊科學的影響力持續擴散，已然涵蓋所有產業，光是一個學位並不足以應付。 貝林資科院長久以來，一直以創新的教育課程享譽國際。現在我們堅持這項傳統，提供七個課程簡化的科系供學生選擇。
	            
    	        
	            
	            所有科系都有共同的紮實基礎，再從這個基礎衍生出其他科目，提供量身訂作的現代化課表，以不斷增加的課程作為基礎。無論哪個課程，都經過本校精心設計、不斷更新，走在時代的最前端。
	            
    	        
	            
	            我們的輔導老師能幫你選擇正確科系。 如果你到校後興趣改變，由於所有科系的核心理念相同，因此能在大一或大二剛開始時轉系，不需另外修課。
	            
	            
	            
	            如果需要各科系對照表， 請按這裡。
	            

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/opportunities/honors/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
榮譽學生 « 機會 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                機會
貝林資科院的教育不只是唸書            
            

            

                應用所學榮譽學生研究創業精神                    
            
                    
            
     榮譽學生
    	        
	           
	           加大爾灣分校的榮譽學生計畫非常發達（全校榮譽學生計畫，CHP），貝林資科院的所有學生都可參加。 這項計畫提供精選活動、同儕指導，還有讓榮譽學生切磋、合作、交流的校內「專區」，另外設有榮譽學生宿舍和特別研究機會。 貝林資科院學生在全校榮譽學生計畫內的比例一向很高。
	           
	           
	           
	           貝林資科院也有自己的研究榮譽方案。 大三、大四生可藉此機會了解研究程序，並在指導老師的帶領之下，鑽研更高深的學問。 入選這項計畫的學生要參加榮譽學生研討會，指導老師會教學生從事獨立研究（至少兩季），最後撰寫研究報告，由指導老師和榮譽學生計畫主任審閱。
	           
	           
	           
              	 全校榮譽學生計畫
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/student-life/campus-involvement/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
參與校務 « 生活 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                生活
你的生活！            
            

            

                多元樣貌參與校務Bren School Organizations                    
            
                    
            
     參與校務
    	        
	            
	            第一次到加大爾灣分校時，你會發現校地幅員廣大。 大部分的學生都會建議，想要打好人際關係、縮小同學與同學之間的距離，最好的方法就是加入社團。  只要花幾分鐘在學務處的資料庫中搜尋一下，就能大略了解在300多個登記的學生組織中，哪些是你求學期間想參加的社團： http://www.campusorgs.uci.edu/。
	            
	            
	            
	            無論是加大爾灣分校這個社區（例如學生自治組織和宿舍），還是貝林資科院的學生組織，都提供許多學習、磨練領導才能的機會。 
	            
	            
	            
	            你可以自行決定要在加大爾灣分校內，獲得什麼樣的親身參與、團隊合作和領導統御經驗。  
	            
	            
	            
                 參與校務
	            

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/student-life/diversity/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
多元樣貌 « 生活 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                生活
你的生活！            
            

            

                多元樣貌參與校務Bren School Organizations                    
            
                    
            
     多元樣貌
    	        
	          
	          加大爾灣分校的學生組成份子非常多元，因此製造大量機會，讓來自四面八方的學生互相觀摩。他們的背景和經驗，對你在多元文化社會中求學、生活和工作的想法，起了輔助、互補、挑戰、增進，或擴展的作用。   
	          
	          
	          
	          就算是人數較少的貝林資科院學生社群，他們的背景和興趣也非常多元。這點可從他們參加的課外活動看出，例如舞團、運動、劇場、社區服務、儲備軍官、兄弟/姊妹會、族群/文化聯誼會，以及擔任社團和學生組織幹部。
	          
	          
	          
               Girls Inc.拜訪加大爾灣分校
	          

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/student-life/bren-ics-organizations/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
貝林資科院組織 « 生活 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                生活
你的生活！            
            

            

                多元樣貌參與校務Bren School Organizations                    
            
                    
            
     貝林資科院組織
    	        
	           
	           貝林資科院的學生可成立、主持，或參加和資訊技術科系有關的學生組織，例如：
	           
	           
	           貝林資科院學生大使貝林資科院代聯會資訊學學生協會資訊管理學生協會婦女工程師協會遊樂器開發人社團 資訊電腦科學婦女協會
	           
	           
	           學生社團可籌劃、舉辦活動，內容包括聯誼、企業說明會、招募社員活動、電腦遊戲比賽、社區服務。 
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/opportunities/research/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
研究 « 機會 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                機會
貝林資科院的教育不只是唸書            
            

            

                應用所學榮譽學生研究創業精神                    
            
                    
            
     研究
    	     
    	     
    	     貝林資科院每季都有幾十名大學生（包括大一、大二生）和教授共同做研究。 研究課程沒有擋修制度。 只要你和教授都同意，就能一起做研究，直到你沒有意願為止。
    	     
    	     
    	     
    	     直接和教授合作不但能見識前衛研究的運作方式，也能一窺研究所的樣貌。 許多大學生不但與教授搭配研究，也和教授聘請的博士生和碩士生密切合作。
    	     
    	     
    	     
    	     這時你就成為團隊的一份子。 因此大學生研究員有時也能在科學刊物中列為共同作者。 某些學生更能主導研究，名列主要作者。
    	     
    	     
    	     
    	     擔任大學生研究員的好處，在於能學會解決尚未釐清的複雜問題，並且了解研究專題必須具備的成功要件。 參加大學生研究活動，對於申請研究所或專業學院（企管碩士、法律……等等）也有加分效果。 本校校友在史丹佛、UCLA、加大柏克萊分校、加大聖地牙哥分校、卡內基美隆、喬治亞理工、哥倫比亞、哈佛、麻省理工……等校都有傑出表現。
    	     
    	     
    	     
              加大爾灣分校的HIPerWall可顯示25600x8000個像素
    	     

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/minors/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
輔系 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
    輔系
    	        
	      
	      學生如果想補強貝林資科院的學位，或加大爾灣分校的學士文憑，無論是藝術、生物科學還是其他領域，以下輔系都能為自己的大學教育錦上添花。
	      
	       
	     
	     生物醫學資訊：  本輔系讓學生了解如何用資訊科技，處理生物醫學領域的問題與資料，同時讓他們從資訊科學的角度，接觸生命科學的基本知識。 數位資訊系統： 本輔系的目的是讓學生了解資訊系統、電腦運算、數位通訊等領域，而不需成為電腦程式設計師。 資訊學： 本輔系特別要求學生了解人與電腦之間的關係，以及要如何以資訊和軟體設計的方式處理這種關係。資訊與資訊科學： 本輔系讓學生習得運算技術和程式寫作功力，另外也讓他們了解資訊科學的基本知識。 統計學： 本輔系的目的是讓學生接觸統計理論與實務。 

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
學務處 « 聯絡方式 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                聯絡方式
如有任何問題，歡迎聯絡我們            
            

            

                學務處                    
            
                    
            
     學務處
    	        
	            
	            貝林資科院課業諮詢老師能為校內所有主修學生提供協助。學生從入學到畢業都能獲得完整服務。  校內課業輔導從暑期新生訓練就已經開始。諮詢老師會協助新生規劃課程，教導他們上網選擇秋季課程。  學生在畢業前都能請貝林資科院諮詢老師幫忙設定學術和就業目標、找出拿到學歷的最佳捷徑，並且定時核對進度，朝畢業的方向邁進。  諮詢老師也會舉辦貝林資科院學生研討會，主題則與就業方向、實習工作、尋找教師導師，以及準備研究所有關。  貝林資科院課業諮詢老師以個別約談、不預約隨時諮商和電子郵件等方式提供協助。
	            
	            
	            
	            資科院1館352號室（請在校園地圖上尋找302號大樓 http://www.uci.edu/campusmap/ (949) 824-5156

	            
	            
	            
	            ucounsel@uci.edu
	            
	            
	            
	            諮詢時間：  週一至週五上午9點～12:00，下午1:00到4:00
	            
	            
	            
	            歡迎有意申請的學生撥打專線：(949) 824-5156，與課業諮詢老師約時間了解本校提供的文憑種類，以及最適合申請人課業和就業需求的學歷。 


	            
	            
	            
                學務處
	            

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/informatics/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
資訊學 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     資訊學
    	        
	       
	       本系研究如何設計、開發、評估軟體應用程式，課程側重軟體的實際應用方式與應用場合。
	       
	    
	        
	        由於全盤採用實例和個案研究，因此學生能在軟體工程、軟體設計、人機互動、電腦輔助群組合作、資訊視覺化、資訊技術對企業與社會的影響等科目，打下良好的基礎。
	        
    	    
	        
	        現代生活充滿數位科技，我們也一直與軟體進行互動、受其驅策。 喜歡設計軟體、很想了解如何設計實用軟體系統的學生，建議選擇這個科系。
	        
	        
	        
                 2008年資訊學第一屆畢業生
	        

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/computer-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
資訊科學 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     資訊科學
    	        
	         
	         資訊科學系強調現代社會不可或缺的電腦運作原則，提供基礎紮實的教育內涵，讓學生面對五花八門的資訊就業市場時，能做好充分準備。 
	         
	         
	         
	         學生獲得的知識，能在低階架構、低階系統、中階架構（例如程式語言、資料庫和網路），以及高階科目（例如人工智慧、電腦繪圖和網路安全）等各方面齊頭並重。 後續課程則讓學生專攻一個以上的方向。
	         
	         
	         
                  資訊科學
	         

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/uci/city-of-irvine/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
爾灣市區 « UC Irvine « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                UC Irvine
加大爾灣分校族群豐富多元            
            

            

                貝林學院校園環境爾灣市區學生服務                    
            
                    
            
     爾灣市區
    	        
	        
	        爾灣市的治安在全美大城市中向來名列前茅，居民教育水準高、族群眾多，所以剛來此地的人馬上就能隨遇而安。  爾灣市以全美「規劃最成功的社區」著稱，面積達65平方英里、屬地中海型氣候。環境整潔、適合全家居住，位於橘郡核心地帶。  另外橘郡也有野生動物保護區、生態保護區、鄰近沙漠和山區渡假聖地，還有綿延42英里的太平洋海岸，供當地居民休閒娛樂。
	        
	        
	        
	        爾灣市有14,000多家規模不等的本土和外資企業，提供充分的就業機會。 這裡有屬於金融業、電子業、製造業、生技業、醫療業和設計業的跨國公司。 
	        
	        
	        
	        爾灣市詳細介紹： http://www.cityofirvine.org/。
	        

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/uci/bren-school/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
貝林學院 « UC Irvine « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                UC Irvine
加大爾灣分校族群豐富多元            
            

            

                貝林學院校園環境爾灣市區學生服務                    
            
                    
            
     貝林學院
    	        
	           
	           加州大學爾灣分校在2002年成立加大第一個資訊科學院後，就積極投資未來，維持傳統信念，提升卓越的不凡標準。
	           
	           
	           
	           貝林學院在1968年時只是一個科系， 35年後正式升格學院。後來為了紀念捐款人的慷慨捐輸和前瞻願景，在2004年6月更名為Donald Bren School of Information and Computer Sciences。
	           
	           
	           
	           
	           貝林學院是電腦和資訊科學的專門獨立學院，對於資訊技術相關科目有獨到見解，因此能打下厚實基礎。所建立的教育課程和研究方案，皆能探索資訊學科的多種應用，涵蓋電路、系統、軟體工程，以及資訊科技的人文層面。
	           
	           
	           
	           貝林學院把研究工作和多種學科教育內涵冶於一爐，成為跨學科研究的先鋒部隊，足以迎向未來的挑戰。
	           
	           
	           
	           請下載「Bren:10」文件，裡面列出選擇貝林資科院的10大理由： 請按這裡。
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/uci/student-services/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
學生服務 « UC Irvine « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                UC Irvine
加大爾灣分校族群豐富多元            
            

            

                貝林學院校園環境爾灣市區學生服務                    
            
                    
            
     學生服務
    	        
	         
	         本校園提供完整的課程與服務，並藉由以下重點事項，讓學生在加大爾灣分校就讀期間，擁有最好的學習環境：
	         
	         
	         加強學生未來成功所需的技能鼓勵學生參加活動並培養領導能力加強、保障學生的身心健康與人際關係
	             
	         
	         深入了解所有註冊學生都能免費享有的服務： http://www.admissions.uci.edu/campus_life/student_services.html
	         

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/uci/campus/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
校園環境 « UC Irvine « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                UC Irvine
加大爾灣分校族群豐富多元            
            

            

                貝林學院校園環境爾灣市區學生服務                    
            
                    
            
     校園環境
    	        
	           
	           加州大學爾灣分校走在研究、發現、學術的最前線，不但能改善加州居民的生活，也能造福世界每個角落。  本校畢業生在藝術、科學、商業和教育界都能獨當一面，各行各業都有人才。 其中有三位普立茲獎得主，還有通行全球的「HTTP/1.1」網路協定創造者。
	           
	           
	           
	           加大爾灣分校是大學教育的第一選擇。學生會發現本校不但師資陣容堅強，而且無論研究還是輔導，老師都樂意伸出援手。這裡有一流的醫科、法律、商業、教育和藝文專業學院，位於市郊的校園景色怡人、學生宿舍獲獎連連、全年都有精彩的校園活動，而且對課業和領導才能的培養無人能比，讓學生在現今唇齒相依的世界闖出一片天。
	           
	           
	           
	           加大爾灣分校詳細介紹： http://www.uci.edu/prospective.php。
	           
	           
	           
                加大爾灣分校畢業典禮
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/computer-science-engineering/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
資訊科學工程 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     資訊科學工程
    	        
	         
	         本系和Henry Samueli工學院共同開課，將資訊科學和資訊工程合而為一。 本系非常側重硬體，課程包括電路設計、網路設計、數位訊號處理和超大型積體電路設計，但也教授硬體運作時必須的軟體技術，例如作業系統和嵌入式系統。 
	         
	         嵌入式設備是消費性商品和各種產品創新的幕後功臣，而且通常會大量採用，以構成感測網路，負責監控氣候、環境、建築結構……等等。 學生如果很想知道如何設計、製造這類設備，建議選擇這個科系。 

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/business-information-management/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
企業資訊管理 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     企業資訊管理
    	        
	           
	           本系和Paul Merage商學院共同開課，將資訊科學、資訊技術和企業管理合而為一。 學生能在數學、統計學、軟體工程、資料庫、經濟學、商業會計、管理學和資訊技術各方面打下良好基礎。
	           
	           
	           
	           現代企業完全靠資訊技術向前推進，尤其是資料。 學生如果很想知道如何應用計算機處理法和電腦工具，才能達到策略經營分析和決策目標，建議選擇這個科系。
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/ics-undeclared-pre-major/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
申報主修科系前課程 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     申報主修科系前課程
    	        
	       新鮮人如果在決定主修科目前，想先了解自己對資訊科學和資訊技術的哪方面有興趣，可申請資科院無主修（ICS Undeclared）身分。 
	       
	       這個選項讓新鮮人擁有貝林資科院學生的所有權益，包括能請課業輔導老師協助安排第一年的課程，涵蓋所有主修學生必修的初級資訊科學和數學課程，同時讓你了解貝林資科院的課程安排方式。 
	       
	       請注意，對資訊科學工程系有興趣的學生，最好在入學時就決定主修這個科系，因為本系課程安排非常嚴謹。
	   

小常識

	你知道嗎？
	根據財經媒體CNBC權威報導，2010年薪資排行前10名的學士學位中，貝林資科院就有三個科系上榜！ 完整排行榜請見 這裡。



                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/overview/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Tổng Quát « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Tổng Quát

Lĩnh vực khoa học điện toán tiếp tục phát triển nhanh chóng vì những khả năng kỹ thuật và những lĩnh vực ứng dụng mới luôn luôn xuất hiện. Học vấn của bạn phải bắt kịp và đưa bạn đến một nghề nghiệp thú vị và thích đáng. Chương trình học chỉ cấp một bằng có thể không có khả năng đáp ứng được nhu cầu của thực tế là lĩnh vực ứng dụng đang ngày càng trở nên rộng lớn và đa dạng. Bren:ICS được cả thế giới biết đến với lịch sử lâu dài của các chương trình giáo dục cải tiến, và vẫn tiếp tục phát huy truyền thống này cho tới ngày hôm nay với bảy ngành học được sắp xếp hợp lý để cho bạn lựa chọn theo học. 

Tất cả các ngành học đều có chung một nền móng vững chắc mà từ đó từng phân ngành học cung cấp cho bạn một chương trình giảng dạy hiện đại, đáp ứng nhu cầu với hàng loạt các khóa học ngày càng được mở rộng; nội dung các khóa học liên tục được sàng lọc kỹ lưỡng và cập nhật để truyền tải những kiến thức mới nhất cho sinh viên. 

Các cố vấn học tập của chúng tôi có thể hỗ trợ bạn chọn lựa chuyên ngành phù hợp. Vì các chuyên ngành của chúng tôi được xây dựng trên một phương châm cốt lõi nên bạn có thể thay đổi các chuyên ngành trong năm đầu hoặc đầu năm thứ hai mà không phải học thêm bất cứ lớp học chuyển tiếp nào. 

Để so sánh trực tiếp nhiều chuyên ngành khác nhau: Hãy nhấp chuột vào đây.

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/overview/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
개요 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     개요
    	        
	            
	            컴퓨터 과학은 새로운 기술의 가능성과 새로운 응용 분야가 끊임없이 나타나면서 계속 급변하는 분야입니다. 교육은 이런 변화를 따라가야 하며, 흥미롭고 적절한 진로에 맞춰 학생들의 포지션을 정해야 합니다. 컴퓨터 과학 분야가 폭넓어지고 모든 것을 망라하는 방향으로 바뀌는 지금, 학위 프로그램 하나만으로는 변화를 감당할 수 없습니다. Bren:ICS는 오랜 역사를 자랑하는 혁신적인 교육 프로그램으로 전 세계에 명성을 떨치고 있으며, 오늘날에도 자유롭게 선택할 수 있는 일곱 가지 현대적인 전공으로 이 전통을 계속 이어가고 있습니다.
	            
    	        
	            
	            모든 전공들은 탄탄한 기반을 공유하며, 각 전공은 여기서 갈라져 나와 현대적인 맞춤식 커리큘럼을 제공합니다. 이 커리큘럼은 끊임없이 확장하는 포트폴리오의 과정, 본교가 시류를 반영하며 심혈을 기울여 지속적으로 최신화한 과정을 토대로 합니다.
	            
    	        
	            
	            본교 카운슬러들은 학생들이 알맞은 전공을 선택할 수 있게 도와줍니다. 입학 후 관심사가 바뀌는 경우에도, 핵심 철학을 공유하는 본교 전공들 덕분에 추가적인 수업 활동 없이 신입생 또는 2학년 초에 전공을 바꿀 수 있습니다.
	            
	            
	            
	            다양한 전공을 나란히 비교해 보려면 여기를 클릭하십시오.
	            

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/overview/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Overview « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Overview



                
                The field of computer science continues to rapidly change as new technical 
                possibilities and new application areas constantly arise. Your education must keep 
                pace and position you for an exciting and relevant career. A single degree program 
                can no longer do this in the face of how broad and all-encompassing the field has 
                become. The Bren School is known worldwide for its long history of innovative educational 
                programs, and continues this tradition today with six streamlined majors for you to 
                choose from.
                
                
                
                All majors share a strong foundation, each branching from there to provide you with a 
                tailored, modern curriculum that builds upon our ever-expanding portfolio of courses; 
                courses that we carefully and continuously update to stay current.
                

                
                
                Our counselors can assist you in choosing the right major. Because our majors share a 
                core philosophy, should your interests change after arrival you will be able to change 
                majors in your freshman or early in your sophomore year without having to take 
                additional coursework.
                
                
                
                

                For student perspectives on each of the majors, download the fliers below:
                    
                    
                    
                    
                    
                    

                       
                       
                          
                             BusinessInformationManagement
                          
                             ComputerGameScience
                          
                             ComputerScience
                          
                             ComputerScience &Engineering

                          
                             DataScience
                          
                             Informatics
                          
                             SoftwareEngineering

                       
                       
                    
                                         
                
                
                


                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/overview/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
개요 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     개요
    	        
	            
	            컴퓨터 과학은 새로운 기술의 가능성과 새로운 응용 분야가 끊임없이 나타나면서 계속 급변하는 분야입니다. 교육은 이런 변화를 따라가야 하며, 흥미롭고 적절한 진로에 맞춰 학생들의 포지션을 정해야 합니다. 컴퓨터 과학 분야가 폭넓어지고 모든 것을 망라하는 방향으로 바뀌는 지금, 학위 프로그램 하나만으로는 변화를 감당할 수 없습니다. Bren:ICS는 오랜 역사를 자랑하는 혁신적인 교육 프로그램으로 전 세계에 명성을 떨치고 있으며, 오늘날에도 자유롭게 선택할 수 있는 일곱 가지 현대적인 전공으로 이 전통을 계속 이어가고 있습니다.
	            
    	        
	            
	            모든 전공들은 탄탄한 기반을 공유하며, 각 전공은 여기서 갈라져 나와 현대적인 맞춤식 커리큘럼을 제공합니다. 이 커리큘럼은 끊임없이 확장하는 포트폴리오의 과정, 본교가 시류를 반영하며 심혈을 기울여 지속적으로 최신화한 과정을 토대로 합니다.
	            
    	        
	            
	            본교 카운슬러들은 학생들이 알맞은 전공을 선택할 수 있게 도와줍니다. 입학 후 관심사가 바뀌는 경우에도, 핵심 철학을 공유하는 본교 전공들 덕분에 추가적인 수업 활동 없이 신입생 또는 2학년 초에 전공을 바꿀 수 있습니다.
	            
	            
	            
	            다양한 전공을 나란히 비교해 보려면 여기를 클릭하십시오.
	            

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/overview/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Overview « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Overview



                
                The field of computer science continues to rapidly change as new technical 
                possibilities and new application areas constantly arise. Your education must keep 
                pace and position you for an exciting and relevant career. A single degree program 
                can no longer do this in the face of how broad and all-encompassing the field has 
                become. The Bren School is known worldwide for its long history of innovative educational 
                programs, and continues this tradition today with six streamlined majors for you to 
                choose from.
                
                
                
                All majors share a strong foundation, each branching from there to provide you with a 
                tailored, modern curriculum that builds upon our ever-expanding portfolio of courses; 
                courses that we carefully and continuously update to stay current.
                

                
                
                Our counselors can assist you in choosing the right major. Because our majors share a 
                core philosophy, should your interests change after arrival you will be able to change 
                majors in your freshman or early in your sophomore year without having to take 
                additional coursework.
                
                
                
                

                For student perspectives on each of the majors, download the fliers below:
                    
                    
                    
                    
                    
                    

                       
                       
                          
                             BusinessInformationManagement
                          
                             ComputerGameScience
                          
                             ComputerScience
                          
                             ComputerScience &Engineering

                          
                             DataScience
                          
                             Informatics
                          
                             SoftwareEngineering

                       
                       
                    
                                         
                
                
                


                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/overview/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
總覽 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     總覽
    	        
	            
	            資訊科學瞬息萬變，新技術、新應用不斷出現。 學生受的教育必須跟上時代，為他們做好準備，才能面對充滿刺激的相關工作。 資訊科學的影響力持續擴散，已然涵蓋所有產業，光是一個學位並不足以應付。 貝林資科院長久以來，一直以創新的教育課程享譽國際。現在我們堅持這項傳統，提供七個課程簡化的科系供學生選擇。
	            
    	        
	            
	            所有科系都有共同的紮實基礎，再從這個基礎衍生出其他科目，提供量身訂作的現代化課表，以不斷增加的課程作為基礎。無論哪個課程，都經過本校精心設計、不斷更新，走在時代的最前端。
	            
    	        
	            
	            我們的輔導老師能幫你選擇正確科系。 如果你到校後興趣改變，由於所有科系的核心理念相同，因此能在大一或大二剛開始時轉系，不需另外修課。
	            
	            
	            
	            如果需要各科系對照表， 請按這裡。
	            

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/overview/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Tổng Quát « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Tổng Quát

Lĩnh vực khoa học điện toán tiếp tục phát triển nhanh chóng vì những khả năng kỹ thuật và những lĩnh vực ứng dụng mới luôn luôn xuất hiện. Học vấn của bạn phải bắt kịp và đưa bạn đến một nghề nghiệp thú vị và thích đáng. Chương trình học chỉ cấp một bằng có thể không có khả năng đáp ứng được nhu cầu của thực tế là lĩnh vực ứng dụng đang ngày càng trở nên rộng lớn và đa dạng. Bren:ICS được cả thế giới biết đến với lịch sử lâu dài của các chương trình giáo dục cải tiến, và vẫn tiếp tục phát huy truyền thống này cho tới ngày hôm nay với bảy ngành học được sắp xếp hợp lý để cho bạn lựa chọn theo học. 

Tất cả các ngành học đều có chung một nền móng vững chắc mà từ đó từng phân ngành học cung cấp cho bạn một chương trình giảng dạy hiện đại, đáp ứng nhu cầu với hàng loạt các khóa học ngày càng được mở rộng; nội dung các khóa học liên tục được sàng lọc kỹ lưỡng và cập nhật để truyền tải những kiến thức mới nhất cho sinh viên. 

Các cố vấn học tập của chúng tôi có thể hỗ trợ bạn chọn lựa chuyên ngành phù hợp. Vì các chuyên ngành của chúng tôi được xây dựng trên một phương châm cốt lõi nên bạn có thể thay đổi các chuyên ngành trong năm đầu hoặc đầu năm thứ hai mà không phải học thêm bất cứ lớp học chuyển tiếp nào. 

Để so sánh trực tiếp nhiều chuyên ngành khác nhau: Hãy nhấp chuột vào đây.

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/minors/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
부전공 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     부전공
    	        
	      
	      또 하나의 Bren:ICS 학위를 추가하거나, 예술이든 생물학이든 어떤 다른 학문이든 UCI 학사 학위를 추가하는 데 관심이 있는 학생들은 이 부전공으로 학부 교육을 보완할 수 있을 것입니다.
	      
	       
	     
	     생체의학 컴퓨팅:  이 부전공은 생체의학 문제와 데이터에 적용되는 컴퓨팅에 대한 학생들의 능력에 도움을 줄 뿐 아니라, 학생들에게 컴퓨터 과학 관점에서 생명 과학의 기본 원칙을 알려줍니다. 디지털 정보 시스템: 이 부전공은 컴퓨터 프로그래머가 될 준비를 하지 않은 상태로 정보 시스템, 계산학, 디지털 커뮤니케이션에 대해 배우기를 원하는 학생들을 위해 마련한 분야입니다. 정보학: 이 부전공은 컴퓨터와 인간의 관계, 그리고 이러한 관계를 정보와 소프트웨어 설계에서 어떻게 다룰지 이해하는 데 특히 중점을 둡니다.정보와 컴퓨터 과학: 이 부전공은 컴퓨팅 기술과 프로그래밍 기량에 대한 학생들의 능력을 키우는 데 도움이 되며, 아울러 학생들에게 컴퓨터 과학의 기초 원칙도 알려줍니다. 통계학: 이 부전공은 학생들에게 통계학의 이론과 실제를 모두 알려주기 위해 마련한 분야입니다. 
	       
                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/minors/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Chuyên ngành phụ « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Chuyên ngành phụ

Những sinh viên có mong muốn bổ sung một bằng cấp Bren:ICS hay bất cứ bằng cử nhân UCI nào, dù là về nghệ thuật hay khoa học sinh vật học hay bất cứ môn học nào khác, sẽ thấy chương trình chuyên ngành phụ này củng cố thêm học vấn đại học của họ. 

Điện toán Y sinh học:Chuyên ngành phụ này củng cố thêm năng lực của sinh viên về lĩnh vực điện toán áp dụng vào những bài toán sinh vật học và dữ liệu, cũng như trang bị cho họ những kiến thức nền tảng về khoa học sự sống từ quan điểm khoa học điện toán. Hệ thống Thông tin Kỹ thuật số:Chuyên ngành phụ này được thiết kế dành cho những sinh viên muốn tìm hiểu thêm về các hệ thống thông tin, thao tác điện toán, và giao tiếp kỹ thuật số nhưng không hẳn sẽ trở thành các nhà lập trình viên máy tính. Tin học: Chuyên ngành phụ này đặc biệt chú trọng vào tìm hiểu mối quan hệ giữa hệ thống máy tính và con người, và cách thức những mối quan hệ này phải được thiết lập trong cấu trúc thông tin và thiết kế phần mềm.Khoa học Thông tin và Điện toán:Chuyên ngành phụ này củng cố thêm khả năng của sinh viên về lĩnh vực công nghệ điện toán và kỹ năng lập trình, đồng thời trang bị cho họ những kiến thức nền tảng về khoa học điện toán. Thống kê học: Chuyên ngành phụ này được thiết kế nhằm đưa các sinh viên tiếp cận tới cả lý thuyết và thực tiễn thống kê. 
	       
                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/minors/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Minors « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
    Minors
                
    
    Students interested in supplementing another Bren School degree or any UCI bachelor’s degree, whether it be in the arts or biological sciences or any other discipline, will find these minors complement their undergraduate education.
          
     
         
    Bioinformatics:  The minor provides a focused study of bioinformatics to supplement a student’s major program of study and prepares students for a profession, career, or academic pursuit in which biomedical computing is an integral part but not the primary focus. Digital Information Systems: The minor is designed for students who want to learn about information systems, computation, and digital communication without preparing to be computer programmers. Health Informatics: The minor in Health Informatics prepares students to understand the expanding role of information technology (IT) in health care and to participate in creating IT solutions to health care issues. Informatics: The minor particularly centers on understanding the relationships among computers and people, and how these relationships must be addressed in information and software design.Information and Computer Science: The minor contributes to students' competence in computing technology and programming proficiency, and in addition, exposes them to the fundamentals of computer science. Statistics: The minor is designed to provide students with exposure to both statistical theory and practice. 

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/minors/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
輔系 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
    輔系
    	        
	      
	      學生如果想補強貝林資科院的學位，或加大爾灣分校的學士文憑，無論是藝術、生物科學還是其他領域，以下輔系都能為自己的大學教育錦上添花。
	      
	       
	     
	     生物醫學資訊：  本輔系讓學生了解如何用資訊科技，處理生物醫學領域的問題與資料，同時讓他們從資訊科學的角度，接觸生命科學的基本知識。 數位資訊系統： 本輔系的目的是讓學生了解資訊系統、電腦運算、數位通訊等領域，而不需成為電腦程式設計師。 資訊學： 本輔系特別要求學生了解人與電腦之間的關係，以及要如何以資訊和軟體設計的方式處理這種關係。資訊與資訊科學： 本輔系讓學生習得運算技術和程式寫作功力，另外也讓他們了解資訊科學的基本知識。 統計學： 本輔系的目的是讓學生接觸統計理論與實務。 

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/minors/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Chuyên ngành phụ « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Chuyên ngành phụ

Những sinh viên có mong muốn bổ sung một bằng cấp Bren:ICS hay bất cứ bằng cử nhân UCI nào, dù là về nghệ thuật hay khoa học sinh vật học hay bất cứ môn học nào khác, sẽ thấy chương trình chuyên ngành phụ này củng cố thêm học vấn đại học của họ. 

Điện toán Y sinh học:Chuyên ngành phụ này củng cố thêm năng lực của sinh viên về lĩnh vực điện toán áp dụng vào những bài toán sinh vật học và dữ liệu, cũng như trang bị cho họ những kiến thức nền tảng về khoa học sự sống từ quan điểm khoa học điện toán. Hệ thống Thông tin Kỹ thuật số:Chuyên ngành phụ này được thiết kế dành cho những sinh viên muốn tìm hiểu thêm về các hệ thống thông tin, thao tác điện toán, và giao tiếp kỹ thuật số nhưng không hẳn sẽ trở thành các nhà lập trình viên máy tính. Tin học: Chuyên ngành phụ này đặc biệt chú trọng vào tìm hiểu mối quan hệ giữa hệ thống máy tính và con người, và cách thức những mối quan hệ này phải được thiết lập trong cấu trúc thông tin và thiết kế phần mềm.Khoa học Thông tin và Điện toán:Chuyên ngành phụ này củng cố thêm khả năng của sinh viên về lĩnh vực công nghệ điện toán và kỹ năng lập trình, đồng thời trang bị cho họ những kiến thức nền tảng về khoa học điện toán. Thống kê học: Chuyên ngành phụ này được thiết kế nhằm đưa các sinh viên tiếp cận tới cả lý thuyết và thực tiễn thống kê. 
	       
                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/minors/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Minors « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
    Minors
                
    
    Students interested in supplementing another Bren School degree or any UCI bachelor’s degree, whether it be in the arts or biological sciences or any other discipline, will find these minors complement their undergraduate education.
          
     
         
    Bioinformatics:  The minor provides a focused study of bioinformatics to supplement a student’s major program of study and prepares students for a profession, career, or academic pursuit in which biomedical computing is an integral part but not the primary focus. Digital Information Systems: The minor is designed for students who want to learn about information systems, computation, and digital communication without preparing to be computer programmers. Health Informatics: The minor in Health Informatics prepares students to understand the expanding role of information technology (IT) in health care and to participate in creating IT solutions to health care issues. Informatics: The minor particularly centers on understanding the relationships among computers and people, and how these relationships must be addressed in information and software design.Information and Computer Science: The minor contributes to students' competence in computing technology and programming proficiency, and in addition, exposes them to the fundamentals of computer science. Statistics: The minor is designed to provide students with exposure to both statistical theory and practice. 

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/minors/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
부전공 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     부전공
    	        
	      
	      또 하나의 Bren:ICS 학위를 추가하거나, 예술이든 생물학이든 어떤 다른 학문이든 UCI 학사 학위를 추가하는 데 관심이 있는 학생들은 이 부전공으로 학부 교육을 보완할 수 있을 것입니다.
	      
	       
	     
	     생체의학 컴퓨팅:  이 부전공은 생체의학 문제와 데이터에 적용되는 컴퓨팅에 대한 학생들의 능력에 도움을 줄 뿐 아니라, 학생들에게 컴퓨터 과학 관점에서 생명 과학의 기본 원칙을 알려줍니다. 디지털 정보 시스템: 이 부전공은 컴퓨터 프로그래머가 될 준비를 하지 않은 상태로 정보 시스템, 계산학, 디지털 커뮤니케이션에 대해 배우기를 원하는 학생들을 위해 마련한 분야입니다. 정보학: 이 부전공은 컴퓨터와 인간의 관계, 그리고 이러한 관계를 정보와 소프트웨어 설계에서 어떻게 다룰지 이해하는 데 특히 중점을 둡니다.정보와 컴퓨터 과학: 이 부전공은 컴퓨팅 기술과 프로그래밍 기량에 대한 학생들의 능력을 키우는 데 도움이 되며, 아울러 학생들에게 컴퓨터 과학의 기초 원칙도 알려줍니다. 통계학: 이 부전공은 학생들에게 통계학의 이론과 실제를 모두 알려주기 위해 마련한 분야입니다. 
	       
                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/business-information-management/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
비즈니스 정보 관리 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     비즈니스 정보 관리
    	        
	           
	           폴 머라지 비즈니스 스쿨(Paul Merage School of Business)과 공동으로 제공하는 이 전공은 컴퓨터 과학과 IT, 그리고 경영학의 교차점에 자리하고 있습니다. 학생들은 수학, 통계학, 소프트웨어 공학, 데이터베이스, 경제학과 기업회계, 경영 과학, 정보기술(IT)에 대한 탄탄한 기초 교육을 받습니다.
	           
	           
	           
	           현대의 기업들은 전적으로 IT와 데이터를 중심으로 돌아갑니다. 전략적인 비즈니스 분석과 의사결정 목표를 달성하기 위한 전산 기법과 도구의 적용 방법을 배우는 데 관심이 있는 학생들은 이 전공을 탐구하는 것이 좋습니다.
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/business-information-management/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Quản trị Thông tin Kinh doanh « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Quản trị Thông tin Kinh doanh

Là một chương trình đào tạo hợp tác với Đại học Kinh doanh Paul Merage, chuyên ngành này là sự hòa trộn giữa chuyên ngành khoa học điện toán và công nghệ thông tin với chuyên ngành quản trị kinh doanh. Sinh viên sẽ được trang bị kiến thức vững chắc về toán học, thống kê học, công nghệ phần mềm, cơ sở dữ liệu, kinh tế học và kế toán kinh doanh, khoa học quản lý và công nghệ thông tin. 

Các mô hình kinh doanh hiện đại đều dựa trên nền tảng công nghệ thông tin và quản lý theo hệ thống dữ liệu. Những sinh viên quan tâm tìm hiểu phương thức áp dụng những phương pháp và công cụ điện toán để đạt được các mục tiêu phân tích kinh doanh và quyết định chiến lược nên khám phá biển kiến thức của chuyên ngành này. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/business-information-management/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
企業資訊管理 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     企業資訊管理
    	        
	           
	           本系和Paul Merage商學院共同開課，將資訊科學、資訊技術和企業管理合而為一。 學生能在數學、統計學、軟體工程、資料庫、經濟學、商業會計、管理學和資訊技術各方面打下良好基礎。
	           
	           
	           
	           現代企業完全靠資訊技術向前推進，尤其是資料。 學生如果很想知道如何應用計算機處理法和電腦工具，才能達到策略經營分析和決策目標，建議選擇這個科系。
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/business-information-management/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Business Information Management « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Business Information Management


   
   


                


As the business environment becomes increasingly global and information-centric, the need has increased for graduates who understand and can use technology that gathers and provides information, who are able to distill and recognize patterns in that information, and who can apply those analyses to achieve business objectives.

Administered by the Donald Bren School of Information and Computer Sciences, Business Information Management (BIM) is a collaborative, interdisciplinary degree program between the Bren School and 
The Paul Merage School of Business.

BIM majors receive a firm grounding in mathematics, statistics, software engineering, databases, economics and business accounting, management science and information technology. Students interested in learning how to apply computational methods and tools for achieving strategic business analysis and decision-making goals are encouraged to explore this degree program.



















IS BUSINESS INFORMATION MANAGEMENT FOR ME?  



Graduates of the program will:
learn the fundamentals of information and computer science, including the rudiments of software design and construction with an emphasis on data management;
   grasp business fundamentals, covering all the functional areas in the business school;
   understand the background and context in which information and its analysis will be applied.









WHAT COURSES DO I TAKE?  



The curriculum is presented across three general academic areas:
Computing (computer science, informatics and software)
   Business Foundations (accounting, finance, marketing, strategy and operations)
   Analytical Methods (mathematics, statistics, economics, management science and decision analysis)



Current requirements for the BIM major can be found in the  General Catalogue .











WHAT CAN I DO WITH A DEGREE IN BIM?  


This degree program prepares students for a wide variety of careers and life experiences. Business Information Management majors can pursue careers in the for-profit and not-for-profit sectors or can proceed to graduate school in several disciplines, including information systems, computing, economics, business and law.


Potential careers for BIM majors include:
working at a consulting firm, auditing other companies’ technology policies for business efficiency.
    becoming a business risk analyst, identifying ways to reduce a client’s dependency on seasonal e-commerce traffic.
    serving as a program manager, leading a team in creating incentive and loyalty programs, so companies can get better business data. 


    

















  






                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/business-information-management/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Business Information Management « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Business Information Management


   
   


                


As the business environment becomes increasingly global and information-centric, the need has increased for graduates who understand and can use technology that gathers and provides information, who are able to distill and recognize patterns in that information, and who can apply those analyses to achieve business objectives.

Administered by the Donald Bren School of Information and Computer Sciences, Business Information Management (BIM) is a collaborative, interdisciplinary degree program between the Bren School and 
The Paul Merage School of Business.

BIM majors receive a firm grounding in mathematics, statistics, software engineering, databases, economics and business accounting, management science and information technology. Students interested in learning how to apply computational methods and tools for achieving strategic business analysis and decision-making goals are encouraged to explore this degree program.



















IS BUSINESS INFORMATION MANAGEMENT FOR ME?  



Graduates of the program will:
learn the fundamentals of information and computer science, including the rudiments of software design and construction with an emphasis on data management;
   grasp business fundamentals, covering all the functional areas in the business school;
   understand the background and context in which information and its analysis will be applied.









WHAT COURSES DO I TAKE?  



The curriculum is presented across three general academic areas:
Computing (computer science, informatics and software)
   Business Foundations (accounting, finance, marketing, strategy and operations)
   Analytical Methods (mathematics, statistics, economics, management science and decision analysis)



Current requirements for the BIM major can be found in the  General Catalogue .











WHAT CAN I DO WITH A DEGREE IN BIM?  


This degree program prepares students for a wide variety of careers and life experiences. Business Information Management majors can pursue careers in the for-profit and not-for-profit sectors or can proceed to graduate school in several disciplines, including information systems, computing, economics, business and law.


Potential careers for BIM majors include:
working at a consulting firm, auditing other companies’ technology policies for business efficiency.
    becoming a business risk analyst, identifying ways to reduce a client’s dependency on seasonal e-commerce traffic.
    serving as a program manager, leading a team in creating incentive and loyalty programs, so companies can get better business data. 


    

















  






                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/business-information-management/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
비즈니스 정보 관리 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     비즈니스 정보 관리
    	        
	           
	           폴 머라지 비즈니스 스쿨(Paul Merage School of Business)과 공동으로 제공하는 이 전공은 컴퓨터 과학과 IT, 그리고 경영학의 교차점에 자리하고 있습니다. 학생들은 수학, 통계학, 소프트웨어 공학, 데이터베이스, 경제학과 기업회계, 경영 과학, 정보기술(IT)에 대한 탄탄한 기초 교육을 받습니다.
	           
	           
	           
	           현대의 기업들은 전적으로 IT와 데이터를 중심으로 돌아갑니다. 전략적인 비즈니스 분석과 의사결정 목표를 달성하기 위한 전산 기법과 도구의 적용 방법을 배우는 데 관심이 있는 학생들은 이 전공을 탐구하는 것이 좋습니다.
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/business-information-management/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Quản trị Thông tin Kinh doanh « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Quản trị Thông tin Kinh doanh

Là một chương trình đào tạo hợp tác với Đại học Kinh doanh Paul Merage, chuyên ngành này là sự hòa trộn giữa chuyên ngành khoa học điện toán và công nghệ thông tin với chuyên ngành quản trị kinh doanh. Sinh viên sẽ được trang bị kiến thức vững chắc về toán học, thống kê học, công nghệ phần mềm, cơ sở dữ liệu, kinh tế học và kế toán kinh doanh, khoa học quản lý và công nghệ thông tin. 

Các mô hình kinh doanh hiện đại đều dựa trên nền tảng công nghệ thông tin và quản lý theo hệ thống dữ liệu. Những sinh viên quan tâm tìm hiểu phương thức áp dụng những phương pháp và công cụ điện toán để đạt được các mục tiêu phân tích kinh doanh và quyết định chiến lược nên khám phá biển kiến thức của chuyên ngành này. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/computer-science-engineering/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Khoa học & Kỹ thuật Điện toán « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Khoa học & Kỹ thuật Điện toán

Là một chương trình đào tạo hợp tác với Đại học Kỹ nghệ Henry Samueli, chuyên ngành này là sự hòa trộn giữa khoa học điện toán và kỹ thuật điện toán. Chuyên ngành có một sự định hướng cụ thể tới phần cứng bằng những khóa học ví dụ như thiết kế mạch điện, thiết kế mạng, xử lý tín hiệu kỹ thuật số và thiết kế VLSI, nhưng cũng đề cập đến những kỹ thuật phần mềm cần thiết để vận hành phần cứng bằng những khóa học như hệ điều hành và hệ thống nhúng. 

Các thiết bị nhúng đang ngày càng thúc đẩy sự cải tiến đối với những hàng hóa và sản phẩm tiêu dùng, và chúng thường được sử dụng với số lượng lớn để hình thành một mạng lưới cảm biến theo dõi thời tiết, môi trường, cấu trúc vật lý, v.v... Những sinh viên có mong muốn tìm hiểu những thiết bị đó được thiết kế và xây dựng như thế nào nên khám phá chuyên ngành này. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/computer-science-engineering/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
컴퓨터 과학 및 공학 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     컴퓨터 과학 및 공학
    	        
	         
	         헨리 사무엘리 공과대학(Henry Samueli School of Engineering)과 공동으로 제공하는 이 전공은 컴퓨터 과학과 컴퓨터 공학을 결합하고 있습니다. 이 전공의 회로 설계, 네트워크 설계, 디지털 신호 처리, VLSI 설계 등의 과정은 하드웨어적인 성향이 강하지만, 운영 체제 및 내장형 시스템 같은 과정에서는 하드웨어를 사용할 수 있게 만드는 소프트웨어 기법도 다룹니다. 
	         
	          내장형 장치는 소비재에서 점점 더 혁신을 주도하고 있으며, 날씨, 환경, 물리 구조를 모니터링하는 센서 네트워크를 형성하는 데 종종 다량으로 사용됩니다. 이러한 장치의 설계 및 구조화 방법을 배우는 데 관심이 있는 학생들은 이 전공을 탐구하는 것이 것이 좋습니다. 
	         
                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/computer-science-engineering/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Khoa học & Kỹ thuật Điện toán « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Khoa học & Kỹ thuật Điện toán

Là một chương trình đào tạo hợp tác với Đại học Kỹ nghệ Henry Samueli, chuyên ngành này là sự hòa trộn giữa khoa học điện toán và kỹ thuật điện toán. Chuyên ngành có một sự định hướng cụ thể tới phần cứng bằng những khóa học ví dụ như thiết kế mạch điện, thiết kế mạng, xử lý tín hiệu kỹ thuật số và thiết kế VLSI, nhưng cũng đề cập đến những kỹ thuật phần mềm cần thiết để vận hành phần cứng bằng những khóa học như hệ điều hành và hệ thống nhúng. 

Các thiết bị nhúng đang ngày càng thúc đẩy sự cải tiến đối với những hàng hóa và sản phẩm tiêu dùng, và chúng thường được sử dụng với số lượng lớn để hình thành một mạng lưới cảm biến theo dõi thời tiết, môi trường, cấu trúc vật lý, v.v... Những sinh viên có mong muốn tìm hiểu những thiết bị đó được thiết kế và xây dựng như thế nào nên khám phá chuyên ngành này. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/computer-science-engineering/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Computer Science & Engineering « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Computer Science & Engineering


   
   


                

Offered jointly with 
The Henry Samueli School of Engineering, 
the Computer Science and Engineering (CSE) major provides a unique educational opportunity for students interested in 
learning about both the hardware and software aspects of computers, and the application of computers to real-world 
problems. CSE includes methods of organizing and manipulating information (computer science), as 
well as the design of computers and their components (computer engineering). As such, CSE integrates 
interesting topics in computing devices, networks, software and systems engineering.

CSE graduates are well-positioned for career opportunities in both academia and industry. Our alumni are employed at 
leading companies or continue their studies toward M.S. or Ph.D. degrees at prestigious 
universities.

















IS COMPUTER SCIENCE AND ENGINEERING FOR ME?  


Embedded devices increasingly drive innovation in consumer goods and products, and often are used in large quantities 
to form sensor networks that monitor the weather, environment, or physical structures. Students interested in 
learning how such devices are designed and constructed are encouraged to explore the CSE major.

Graduates of the program will:
demonstrate broad knowledge of computer science and engineering;
   design, describe and use state-of-the-art hardware/software systems;
   maintain awareness of contemporary issues in computer science and engineering in a global and societal context, 
       and an understanding of the professional and ethical responsibilities of their profession;
   demonstrate effective oral and written communication.






For more information on CSE goals and objectives see
http://plaza.eng.uci.edu/degree-program/cse/mission.



Annual student enrollment and graduation data can be found at: 
http://www.oir.uci.edu/student-data.html. 
Please note that annual student enrollment and graduation data for CSE is the sum of the data under both Engineering and Information and Computer Science.













WHAT COURSES DO I TAKE?  


Current requirements for the CSE major can be found in the General Catalogue.












WHAT CAN I DO WITH A DEGREE IN CSE?  


Computer Science and Engineering majors are involved in building hardware infrastructure — computers, networks and embedded devices — as well as operating systems, compilers and networking software. The focus is on cooperation between hardware and software to yield the highest performance. 

Graduates of the CSE program at UCI can pursue careers that involve traffic management, flight control, earthquake monitoring, automotive control and building smart homes. Many students also go on to graduate school, continuing their studies, conducting research and earning advanced degrees in computer engineering, computer science, information science, management or law. 









  





   
      
      CSE students Niraj Desai, Patrick Murtha, Christopher Escobedo and Michael Sevilla with their senior design project, the Automated Labyrinth. 
   





                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/computer-science-engineering/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
컴퓨터 과학 및 공학 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     컴퓨터 과학 및 공학
    	        
	         
	         헨리 사무엘리 공과대학(Henry Samueli School of Engineering)과 공동으로 제공하는 이 전공은 컴퓨터 과학과 컴퓨터 공학을 결합하고 있습니다. 이 전공의 회로 설계, 네트워크 설계, 디지털 신호 처리, VLSI 설계 등의 과정은 하드웨어적인 성향이 강하지만, 운영 체제 및 내장형 시스템 같은 과정에서는 하드웨어를 사용할 수 있게 만드는 소프트웨어 기법도 다룹니다. 
	         
	          내장형 장치는 소비재에서 점점 더 혁신을 주도하고 있으며, 날씨, 환경, 물리 구조를 모니터링하는 센서 네트워크를 형성하는 데 종종 다량으로 사용됩니다. 이러한 장치의 설계 및 구조화 방법을 배우는 데 관심이 있는 학생들은 이 전공을 탐구하는 것이 것이 좋습니다. 
	         
                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/computer-science-engineering/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Computer Science & Engineering « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Computer Science & Engineering


   
   


                

Offered jointly with 
The Henry Samueli School of Engineering, 
the Computer Science and Engineering (CSE) major provides a unique educational opportunity for students interested in 
learning about both the hardware and software aspects of computers, and the application of computers to real-world 
problems. CSE includes methods of organizing and manipulating information (computer science), as 
well as the design of computers and their components (computer engineering). As such, CSE integrates 
interesting topics in computing devices, networks, software and systems engineering.

CSE graduates are well-positioned for career opportunities in both academia and industry. Our alumni are employed at 
leading companies or continue their studies toward M.S. or Ph.D. degrees at prestigious 
universities.

















IS COMPUTER SCIENCE AND ENGINEERING FOR ME?  


Embedded devices increasingly drive innovation in consumer goods and products, and often are used in large quantities 
to form sensor networks that monitor the weather, environment, or physical structures. Students interested in 
learning how such devices are designed and constructed are encouraged to explore the CSE major.

Graduates of the program will:
demonstrate broad knowledge of computer science and engineering;
   design, describe and use state-of-the-art hardware/software systems;
   maintain awareness of contemporary issues in computer science and engineering in a global and societal context, 
       and an understanding of the professional and ethical responsibilities of their profession;
   demonstrate effective oral and written communication.






For more information on CSE goals and objectives see
http://plaza.eng.uci.edu/degree-program/cse/mission.



Annual student enrollment and graduation data can be found at: 
http://www.oir.uci.edu/student-data.html. 
Please note that annual student enrollment and graduation data for CSE is the sum of the data under both Engineering and Information and Computer Science.













WHAT COURSES DO I TAKE?  


Current requirements for the CSE major can be found in the General Catalogue.












WHAT CAN I DO WITH A DEGREE IN CSE?  


Computer Science and Engineering majors are involved in building hardware infrastructure — computers, networks and embedded devices — as well as operating systems, compilers and networking software. The focus is on cooperation between hardware and software to yield the highest performance. 

Graduates of the CSE program at UCI can pursue careers that involve traffic management, flight control, earthquake monitoring, automotive control and building smart homes. Many students also go on to graduate school, continuing their studies, conducting research and earning advanced degrees in computer engineering, computer science, information science, management or law. 









  





   
      
      CSE students Niraj Desai, Patrick Murtha, Christopher Escobedo and Michael Sevilla with their senior design project, the Automated Labyrinth. 
   





                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/computer-science-engineering/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
資訊科學工程 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     資訊科學工程
    	        
	         
	         本系和Henry Samueli工學院共同開課，將資訊科學和資訊工程合而為一。 本系非常側重硬體，課程包括電路設計、網路設計、數位訊號處理和超大型積體電路設計，但也教授硬體運作時必須的軟體技術，例如作業系統和嵌入式系統。 
	         
	         嵌入式設備是消費性商品和各種產品創新的幕後功臣，而且通常會大量採用，以構成感測網路，負責監控氣候、環境、建築結構……等等。 學生如果很想知道如何設計、製造這類設備，建議選擇這個科系。 

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/data-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Data Science « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Data Science


   
   


   

                

As the only undergraduate Data Science degree in the UC system, the major will
prepare students for careers in data analysis by combining foundational 
statistical concepts with computational principles from computer science. UCI’s 
new Data Science major has a dual emphasis on the principles of both statistics 
and computer science, with foundational training in statistical and mathematical 
aspects of data analysis, as well as in the broad principles of computer science 
(including algorithms, data structures, data management and machine learning). 
The program teaches students how to utilize their knowledge of statistical and 
computing principles to analyze and solve real-world data analysis problems. The 
major is suitable for students interested in either a career in industry or who 
wish to pursue more specialized graduate study.













WHAT WILL YOU LEARN?


As a Data Science major, you have the unique opportunity to take an 
interdisciplinary course of study that includes classes from all three ICS 
departments: statistics, computer science and informatics. Classes you will have
the opportunity to take as a Data Science student include:


Programming in C/C++ as a Second Language (ICS) 
An introduction to the lexical, syntactic, semantic and pragmatic characteristics of the C/C++ languages, with an emphasis on object-oriented programming, using standard libraries and programming with manual garbage collection.


Machine Learning and Data-Mining (Computer Science) 
Learn the principles of machine learning and data mining applied to real-world data sets, with typical applications including spam filtering, object recognition and credit scoring. 


Statistical Methods for Data Analysis (Statistics) 
An exploration of statistical methods for analyzing data from surveys, experiments and cohort studies.


Information Visualization (Informatics) 
An introduction to interactive visual interfaces for large data sets, including a foundation on the principles of human visual perception and human computer interaction that inform their design.






POSSIBLE CAREERS

   With a degree in Data Science from UCI, you might get a job working in the web and technology industries for companies such as Google, Facebook, Twitter, Microsoft or Samsung.
      You might find a career in finance, working on Wall Street or for a banking or insurance company.
      You might delve into engineering, working for a company like Boeing.
      Or you might use your degree to get a job in the medical or public health field.
   








DEMAND FOR DATA SCIENCE


The demand for graduates with skills in both statistics and computer science currently outpaces supply. According to a 2011 McKinsey Global Institute study on big data, demand for individuals with data analysis skills will grow to almost 500,000 individuals by 2018, with a projected shortfall of about 200,000 individuals with deep analytical skills, as well as a shortage of 1.5 million managers and analysts to analyze big data and make decisions.










UCI DATA SCIENCE INITIATIVE


UC Irvine’s Data Science Initiative is a broad initiative with a focus on 
coordinating and linking the activities of researchers and students across 
campus involved in various aspects of data science. This initiative was founded
in 2014 by the Office of the Provost and Executive Vice Chancellor and is 
supported through the Office of Academic Initiatives. One of the goals of the 
Data Science Initiative is to support the formation of the new Data Science 
major. For more information, visit 
datascience.uci.edu













  















                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/data-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Data Science « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Data Science


   
   


   

                

As the only undergraduate Data Science degree in the UC system, the major will
prepare students for careers in data analysis by combining foundational 
statistical concepts with computational principles from computer science. UCI’s 
new Data Science major has a dual emphasis on the principles of both statistics 
and computer science, with foundational training in statistical and mathematical 
aspects of data analysis, as well as in the broad principles of computer science 
(including algorithms, data structures, data management and machine learning). 
The program teaches students how to utilize their knowledge of statistical and 
computing principles to analyze and solve real-world data analysis problems. The 
major is suitable for students interested in either a career in industry or who 
wish to pursue more specialized graduate study.













WHAT WILL YOU LEARN?


As a Data Science major, you have the unique opportunity to take an 
interdisciplinary course of study that includes classes from all three ICS 
departments: statistics, computer science and informatics. Classes you will have
the opportunity to take as a Data Science student include:


Programming in C/C++ as a Second Language (ICS) 
An introduction to the lexical, syntactic, semantic and pragmatic characteristics of the C/C++ languages, with an emphasis on object-oriented programming, using standard libraries and programming with manual garbage collection.


Machine Learning and Data-Mining (Computer Science) 
Learn the principles of machine learning and data mining applied to real-world data sets, with typical applications including spam filtering, object recognition and credit scoring. 


Statistical Methods for Data Analysis (Statistics) 
An exploration of statistical methods for analyzing data from surveys, experiments and cohort studies.


Information Visualization (Informatics) 
An introduction to interactive visual interfaces for large data sets, including a foundation on the principles of human visual perception and human computer interaction that inform their design.






POSSIBLE CAREERS

   With a degree in Data Science from UCI, you might get a job working in the web and technology industries for companies such as Google, Facebook, Twitter, Microsoft or Samsung.
      You might find a career in finance, working on Wall Street or for a banking or insurance company.
      You might delve into engineering, working for a company like Boeing.
      Or you might use your degree to get a job in the medical or public health field.
   








DEMAND FOR DATA SCIENCE


The demand for graduates with skills in both statistics and computer science currently outpaces supply. According to a 2011 McKinsey Global Institute study on big data, demand for individuals with data analysis skills will grow to almost 500,000 individuals by 2018, with a projected shortfall of about 200,000 individuals with deep analytical skills, as well as a shortage of 1.5 million managers and analysts to analyze big data and make decisions.










UCI DATA SCIENCE INITIATIVE


UC Irvine’s Data Science Initiative is a broad initiative with a focus on 
coordinating and linking the activities of researchers and students across 
campus involved in various aspects of data science. This initiative was founded
in 2014 by the Office of the Provost and Executive Vice Chancellor and is 
supported through the Office of Academic Initiatives. One of the goals of the 
Data Science Initiative is to support the formation of the new Data Science 
major. For more information, visit 
datascience.uci.edu













  















                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/admissions/financial-aid/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Hỗ trợ Tài chính « TUYỂN SINH « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                TUYỂN SINH
Thông tin chi tiết về yêu cầu tuyển sinh, hạn chót nộp đơn và chỉ dẫn làm cho đơn xin nhập học phong phú            
            

            

                Sinh viên năm nhấtChuyển tiếpNhà ởHỗ trợ Tài chínhChỉ dẫn nộp đơn                    
            
                    
            
     Hỗ trợ Tài chính

Việc trang trải chi phí học tập UCI cần phải có sự hợp tác giữa cha mẹ, sinh viên và nhà trường. Mỗi bên phải có trách nhiệm đối với những chi phí đó. Trang web Hỗ trợ Tài chính dành cho sinh viên đại học cung cấp những nguồn hỗ trợ toàn diện nhất về việc trang trải chi phí học tập của bạn. 
Những ngày quan trọng cần nhớ gồm:

Ngày 1 tháng 1
Ngày đầu tiên nộp FAFSA và những hồ sơ liên quan. 

Ngày 2 tháng 3
Hạn chót ưu tiên để hoàn tất FAFSA. 

Ngày 2 tháng 3
Hạn chót để gửi Mẫu Xác Thực Trợ Cấp GPA (Cal Grant GPA Verification Form) tới Ủy ban Hỗ trợ Sinh viên California (California Student Aid Commission). 

Ngày 5 tháng 9
Phải thanh toán tất cả các khoản Phí Đăng Ký cho quý học mùa thu vào ngày này. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/admissions/financial-aid/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
학자금 지원 « 입학 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                입학
자세한 지원 요건, 지원 마감일, 좋은 지원서를 만드는 요령            
            

            

                신입생편입기숙사학자금 지원지원 요령                    
            
                    
            
     학자금 지원
    	       
    	       
    	       UCI 학비 납부에는 부모, 학생, 그리고 대학 간의 협력이 필요합니다. 이들 모두가 각자 학비 납부의 책임을 다해야 합니다. 학부생들을 위한 '학자금 지원' 웹 사이트에서 학비 납부에 관한 가장 폭넓은 자료를 제공하고 있습니다.
    	       
    	       
    	       
	            꼭 기억해야 할 중요한 날짜는 다음과 같습니다.
	            
	            
	            1월 1일 연방학자금보조신청서(FAFSA)와 증빙 서류를 제출하는 첫 날. 
	            
	            
	             
	            3월 2일 FAFSA를 작성하는 우선순위 마감일. 
	            
	            
	             
	            3월 2일 캘리포니아 학자금지원 운영위원회에 캘 그랜트(Cal Grant) GPA 확인서를 우편 발송하는 마감일. 
	            
	            
	             
	            9월 15일 가을 학기 등록 수수료를 이 날까지 납부해야 합니다.
	            

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/admissions/financial-aid/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Financial Aid « Admissions « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Admissions
Details about requirements, application deadlines, and tips for enhancing your application            
            

            

                FreshmenTransferHousingFinancial AidApplication Tips                    
            
                    
            
    Financial Aid

    
    Paying for the cost of a UCI education requires a partnership among parents, students, and the University. Each partner has responsibilities to fulfill in meeting that cost. The Financial Aid website for undergraduate students offers the most comprehensive resources about paying for your education.
    
    	       
	Important dates to keep in mind include:
	            
	
	January 1st
    First day to submit FAFSA and supporting documentation. 
	
	            
	
	March 2nd
	Priority deadline to complete FAFSA. 
	
	            
	
	March 2nd
	Deadline to mail Cal Grant GPA Verification Form to the California Student Aid Commission. 
	
	            
	
	September 15th
	Registration Fees for fall quarter must be paid by this date.
	
	
                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/admissions/financial-aid/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Financial Aid « Admissions « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Admissions
Details about requirements, application deadlines, and tips for enhancing your application            
            

            

                FreshmenTransferHousingFinancial AidApplication Tips                    
            
                    
            
    Financial Aid

    
    Paying for the cost of a UCI education requires a partnership among parents, students, and the University. Each partner has responsibilities to fulfill in meeting that cost. The Financial Aid website for undergraduate students offers the most comprehensive resources about paying for your education.
    
    	       
	Important dates to keep in mind include:
	            
	
	January 1st
    First day to submit FAFSA and supporting documentation. 
	
	            
	
	March 2nd
	Priority deadline to complete FAFSA. 
	
	            
	
	March 2nd
	Deadline to mail Cal Grant GPA Verification Form to the California Student Aid Commission. 
	
	            
	
	September 15th
	Registration Fees for fall quarter must be paid by this date.
	
	
                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/admissions/financial-aid/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
獎助學金 « 入學 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                入學
入學申請要求、申請期限，以及申請書撰寫秘訣            
            

            

                新生轉學住宿獎助學金申請手續提示                    
            
                    
            
     獎助學金
    	       
    	       
    	       家長、學生、學校三方面必須共同合作，才能支付在加大爾灣分校求學的所有費用。 大家必須各司其職，才能解決金錢問題。 大學部「獎助學金」網站針對教育費用，提供最完整的參考資料。
    	       
    	       
    	       
	            請不要忘記以下重要日期：
	            
	            
	            1月1日 送出聯邦獎助學金申請表（FAFSA）和證明文件的第一天。 
	            
	            
	             
	            3月2日 填寫FAFSA申請表的優先截止期限。 
	            
	            
	             
	            3月2日 把加州獎助學金申請表（Cal Grant GPA Verification Form）寄到加州學生補助委員會的最後郵寄日期。 
	            
	            
	             
	            9月15日 這是秋季班註冊費用的最後繳交日期。
	            

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/admissions/financial-aid/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Hỗ trợ Tài chính « TUYỂN SINH « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                TUYỂN SINH
Thông tin chi tiết về yêu cầu tuyển sinh, hạn chót nộp đơn và chỉ dẫn làm cho đơn xin nhập học phong phú            
            

            

                Sinh viên năm nhấtChuyển tiếpNhà ởHỗ trợ Tài chínhChỉ dẫn nộp đơn                    
            
                    
            
     Hỗ trợ Tài chính

Việc trang trải chi phí học tập UCI cần phải có sự hợp tác giữa cha mẹ, sinh viên và nhà trường. Mỗi bên phải có trách nhiệm đối với những chi phí đó. Trang web Hỗ trợ Tài chính dành cho sinh viên đại học cung cấp những nguồn hỗ trợ toàn diện nhất về việc trang trải chi phí học tập của bạn. 
Những ngày quan trọng cần nhớ gồm:

Ngày 1 tháng 1
Ngày đầu tiên nộp FAFSA và những hồ sơ liên quan. 

Ngày 2 tháng 3
Hạn chót ưu tiên để hoàn tất FAFSA. 

Ngày 2 tháng 3
Hạn chót để gửi Mẫu Xác Thực Trợ Cấp GPA (Cal Grant GPA Verification Form) tới Ủy ban Hỗ trợ Sinh viên California (California Student Aid Commission). 

Ngày 5 tháng 9
Phải thanh toán tất cả các khoản Phí Đăng Ký cho quý học mùa thu vào ngày này. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/admissions/financial-aid/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
학자금 지원 « 입학 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                입학
자세한 지원 요건, 지원 마감일, 좋은 지원서를 만드는 요령            
            

            

                신입생편입기숙사학자금 지원지원 요령                    
            
                    
            
     학자금 지원
    	       
    	       
    	       UCI 학비 납부에는 부모, 학생, 그리고 대학 간의 협력이 필요합니다. 이들 모두가 각자 학비 납부의 책임을 다해야 합니다. 학부생들을 위한 '학자금 지원' 웹 사이트에서 학비 납부에 관한 가장 폭넓은 자료를 제공하고 있습니다.
    	       
    	       
    	       
	            꼭 기억해야 할 중요한 날짜는 다음과 같습니다.
	            
	            
	            1월 1일 연방학자금보조신청서(FAFSA)와 증빙 서류를 제출하는 첫 날. 
	            
	            
	             
	            3월 2일 FAFSA를 작성하는 우선순위 마감일. 
	            
	            
	             
	            3월 2일 캘리포니아 학자금지원 운영위원회에 캘 그랜트(Cal Grant) GPA 확인서를 우편 발송하는 마감일. 
	            
	            
	             
	            9월 15일 가을 학기 등록 수수료를 이 날까지 납부해야 합니다.
	            

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/admissions/application-tips/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
지원 요령 « 입학 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                입학
자세한 지원 요건, 지원 마감일, 좋은 지원서를 만드는 요령            
            

            

                신입생편입기숙사학자금 지원지원 요령                    
            
                    
            
    지원 요령
    	        
	           
	           지원서가 중요하므로 자기 자신과 지금까지 쌓아온 업적, 그리고 앞으로의 포부를 보여주는 데 심혈을 기울여야 합니다. 지원서와 특히 자기 소개서에 어떻게 접근해야 하는지에 대한 요령을 알 수 있는 좋은 자료 출처는 아래 캘리포니아 대학교 웹 사이트를 참조하십시오.
	           
	           
	           
	           http://www.universityofcalifornia.edu/admissions/how-to-apply/personal-statement/index.html 
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/admissions/application-tips/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Chỉ dẫn nộp đơn « TUYỂN SINH « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                TUYỂN SINH
Thông tin chi tiết về yêu cầu tuyển sinh, hạn chót nộp đơn và chỉ dẫn làm cho đơn xin nhập học phong phú            
            

            

                Sinh viên năm nhấtChuyển tiếpNhà ởHỗ trợ Tài chínhChỉ dẫn nộp đơn                    
            
                    
            
    Chỉ dẫn nộp đơn

Nộp đơn tuyển sinh rất quan trọng do vậy bạn nên chuẩn bị chu đáo hết mức có thể để giới thiệu về bản thân, thành tích và khát vọng của bạn.  Website của trường Đại học California Nguồn là cung cấp thông tin quý giá với những chỉ dẫn về cách tiếp cận viết đơn xin và đặc biệt là viết bài tự luận: 

http://www.universityofcalifornia.edu/admissions/how-to-apply/personal-statement/index.html 


                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/admissions/application-tips/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Application Tips « Admissions « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Admissions
Details about requirements, application deadlines, and tips for enhancing your application            
            

            

                FreshmenTransferHousingFinancial AidApplication Tips                    
            
                    
            
    Application Tips
    	        
	           
	           Your application matters and you should take great care in representing yourself, your accomplishments, and your aspirations. A good source with tips on how to approach your application and particularly the personal statement is the following University of California web site:
	           
	           
	           
	           http://www.universityofcalifornia.edu/admissions/how-to-apply/personal-statement/index.html 
	           

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/admissions/application-tips/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Chỉ dẫn nộp đơn « TUYỂN SINH « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                TUYỂN SINH
Thông tin chi tiết về yêu cầu tuyển sinh, hạn chót nộp đơn và chỉ dẫn làm cho đơn xin nhập học phong phú            
            

            

                Sinh viên năm nhấtChuyển tiếpNhà ởHỗ trợ Tài chínhChỉ dẫn nộp đơn                    
            
                    
            
    Chỉ dẫn nộp đơn

Nộp đơn tuyển sinh rất quan trọng do vậy bạn nên chuẩn bị chu đáo hết mức có thể để giới thiệu về bản thân, thành tích và khát vọng của bạn.  Website của trường Đại học California Nguồn là cung cấp thông tin quý giá với những chỉ dẫn về cách tiếp cận viết đơn xin và đặc biệt là viết bài tự luận: 

http://www.universityofcalifornia.edu/admissions/how-to-apply/personal-statement/index.html 


                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/admissions/application-tips/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
지원 요령 « 입학 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                입학
자세한 지원 요건, 지원 마감일, 좋은 지원서를 만드는 요령            
            

            

                신입생편입기숙사학자금 지원지원 요령                    
            
                    
            
    지원 요령
    	        
	           
	           지원서가 중요하므로 자기 자신과 지금까지 쌓아온 업적, 그리고 앞으로의 포부를 보여주는 데 심혈을 기울여야 합니다. 지원서와 특히 자기 소개서에 어떻게 접근해야 하는지에 대한 요령을 알 수 있는 좋은 자료 출처는 아래 캘리포니아 대학교 웹 사이트를 참조하십시오.
	           
	           
	           
	           http://www.universityofcalifornia.edu/admissions/how-to-apply/personal-statement/index.html 
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/admissions/application-tips/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
申請手續提示 « 入學 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                入學
入學申請要求、申請期限，以及申請書撰寫秘訣            
            

            

                新生轉學住宿獎助學金申請手續提示                    
            
                    
            
    申請手續提示
    	        
	           
	           申請書很重要。你在自我介紹、敘述個人成就和未來期待時，也應該小心下筆。 加州大學以下網站提示幾個申請書寫作技巧（尤其是自傳部份），非常具有參考價值：
	           
	           
	           
	           http://www.universityofcalifornia.edu/admissions/how-to-apply/personal-statement/index.html 
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/admissions/application-tips/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Application Tips « Admissions « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Admissions
Details about requirements, application deadlines, and tips for enhancing your application            
            

            

                FreshmenTransferHousingFinancial AidApplication Tips                    
            
                    
            
    Application Tips
    	        
	           
	           Your application matters and you should take great care in representing yourself, your accomplishments, and your aspirations. A good source with tips on how to approach your application and particularly the personal statement is the following University of California web site:
	           
	           
	           
	           http://www.universityofcalifornia.edu/admissions/how-to-apply/personal-statement/index.html 
	           

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/admissions/housing/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
기숙사 « 입학 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                입학
자세한 지원 요건, 지원 마감일, 좋은 지원서를 만드는 요령            
            

            

                신입생편입기숙사학자금 지원지원 요령                    
            
                    
            
     기숙사
    	        
	           
	           UCI는 25세 미만의 독신자로 가을 학기에 등록하고 기숙사 신청 마감일과 계약 반환 마감일을 준수하는 모든 신입생들에게 2년간의 기숙사 생활을 보장합니다. 많은 UCI 학생들은 UCI 재학 기간 내내 학생 기숙사에서 지내는 편입니다.
	           
	           
	           
	           UCI의 신입생 기숙사는 학생들의 방마다 인터넷과 케이블 TV를 연결하고, 로비/공용 생활 공간, 공부방, 세탁 시설, 레크리에이션 시설, 컴퓨터실, 그리고 공공 구역과 욕실에 대한 관리 서비스를 제공하고 있습니다.
	           
	           
	           
	           UCI의 기숙사 시설과 신청 일정에 관한 자세한 내용은 UCI 기숙사 예비 학생 웹 사이트를 참조하십시오.
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/admissions/freshmen/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
신입생 « 입학 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                입학
자세한 지원 요건, 지원 마감일, 좋은 지원서를 만드는 요령            
            

            

                신입생편입기숙사학자금 지원지원 요령                    
            
                    
            
    신입생
    	        
	          
	          본교는 예비 신입생들을 위한 풍부한 정보는 물론 입학 절차의 모든 측면에 관한 상세한 정보를 제공하고 있습니다. 특히 다음 부분을 살펴보실 것을 권장합니다.
	          
	          
	          
	          예비 학생: http://www.uci.edu/prospective.php
	          
	          
	          
	          입학: http://www.admissions.uci.edu/
	          
	          
	          
	          자주 묻는 질문(FAQ): http://www.admissions.uci.edu/resources/faq.html 
	          
	          
	          
	          온라인 출간물: http://www.admissions.uci.edu/publications/online_publications.html 
	          
    	       
    	      
    	      본교 마스코트인 개미핥기 피터(Peter the Anteater)도 잊지 마세요. http://www.uci.edu/peter/
    	       
    	      
    	      
    	      현재, Bren:ICS의 학부생 입학자 수는 850명이며, UC 어바인 전체로 하면 신입생이 총 22,000명 가까이 됩니다. 2010년에 입학한 신입생들의 GPA 평균은 3.89였고, SAT 평균 점수는 1,822점이었습니다.
    	      

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/admissions/freshmen/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Sinh viên năm nhất « TUYỂN SINH « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                TUYỂN SINH
Thông tin chi tiết về yêu cầu tuyển sinh, hạn chót nộp đơn và chỉ dẫn làm cho đơn xin nhập học phong phú            
            

            

                Sinh viên năm nhấtChuyển tiếpNhà ởHỗ trợ Tài chínhChỉ dẫn nộp đơn                    
            
                    
            
    Sinh viên năm nhất

Nhà trường cung cấp nhiều nguồn thông tin đa dạng dành cho sinh viên năm nhất cùng những thông tin chi tiết về mọi phương diện của quy trình tuyển sinh. Chúng tôi đặc biệt khuyến khích các bạn hãy cùng khám phá qua những kênh thông tin sau đây: 

Chuyên trang dành cho những ứng viên triển vọng: http://www.uci.edu/prospective.php


Tuyển sinh: http://www.admissions.uci.edu/


Những câu hỏi thường gặp: http://www.admissions.uci.edu/resources/faq.html 

Xuất bản phẩm trên mạng: http://www.admissions.uci.edu/publications/online_publications.html 

và đừng quên hai con vật lấy khước của chúng tôi, Peter và Anteater: http://www.uci.edu/peter/
 
Hiện tại, số lượng sinh viên theo học hệ đại học ở Bren:ICS là 850 sinh viên trong tổng số gần 22.000 sinh viên UC Irvine. GPA bình quân đối với sinh viên năm nhất năm 2010 là 3,89, với điểm số SAT trung bình là 1822. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/admissions/housing/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Nhà ở « TUYỂN SINH « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                TUYỂN SINH
Thông tin chi tiết về yêu cầu tuyển sinh, hạn chót nộp đơn và chỉ dẫn làm cho đơn xin nhập học phong phú            
            

            

                Sinh viên năm nhấtChuyển tiếpNhà ởHỗ trợ Tài chínhChỉ dẫn nộp đơn                    
            
                    
            
     Nhà ở

UCI đảm bảo hai năm trọ học cho tất cả sinh viên năm nhất nhập học một mình, dưới 25 tuổi, ghi danh vào học kỳ mùa thu và những người nộp đơn hỗ trợ trọ học và gửi hợp đồng lại đúng hạn. Nhiều sinh viên UCI thích trọ học trong nhà ở dành cho sinh viên trong suốt thời gian theo học ở UCI. 

Các cộng đồng nhà ở dành cho sinh viên năm nhất của UCI có kết nối Internet và truyền hình cable tới từng phòng trọ, một sảnh lớn/phòng sinh hoạt chung, các phòng học, cơ sở giặt là, cơ sở vui chơi giải trí, phòng máy tính và dịch vụ bảo vệ ở những khu vực công cộng. 

Để biết thêm thông tin chi tiết về những cơ sở trọ học của UCI và thời gian nộp đơn xin trọ học, hãy truy cập: website cung cấp thông tin trọ học ở UCI dành cho các ứng viên triển vọng. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/admissions/housing/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
기숙사 « 입학 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                입학
자세한 지원 요건, 지원 마감일, 좋은 지원서를 만드는 요령            
            

            

                신입생편입기숙사학자금 지원지원 요령                    
            
                    
            
     기숙사
    	        
	           
	           UCI는 25세 미만의 독신자로 가을 학기에 등록하고 기숙사 신청 마감일과 계약 반환 마감일을 준수하는 모든 신입생들에게 2년간의 기숙사 생활을 보장합니다. 많은 UCI 학생들은 UCI 재학 기간 내내 학생 기숙사에서 지내는 편입니다.
	           
	           
	           
	           UCI의 신입생 기숙사는 학생들의 방마다 인터넷과 케이블 TV를 연결하고, 로비/공용 생활 공간, 공부방, 세탁 시설, 레크리에이션 시설, 컴퓨터실, 그리고 공공 구역과 욕실에 대한 관리 서비스를 제공하고 있습니다.
	           
	           
	           
	           UCI의 기숙사 시설과 신청 일정에 관한 자세한 내용은 UCI 기숙사 예비 학생 웹 사이트를 참조하십시오.
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/admissions/housing/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Nhà ở « TUYỂN SINH « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                TUYỂN SINH
Thông tin chi tiết về yêu cầu tuyển sinh, hạn chót nộp đơn và chỉ dẫn làm cho đơn xin nhập học phong phú            
            

            

                Sinh viên năm nhấtChuyển tiếpNhà ởHỗ trợ Tài chínhChỉ dẫn nộp đơn                    
            
                    
            
     Nhà ở

UCI đảm bảo hai năm trọ học cho tất cả sinh viên năm nhất nhập học một mình, dưới 25 tuổi, ghi danh vào học kỳ mùa thu và những người nộp đơn hỗ trợ trọ học và gửi hợp đồng lại đúng hạn. Nhiều sinh viên UCI thích trọ học trong nhà ở dành cho sinh viên trong suốt thời gian theo học ở UCI. 

Các cộng đồng nhà ở dành cho sinh viên năm nhất của UCI có kết nối Internet và truyền hình cable tới từng phòng trọ, một sảnh lớn/phòng sinh hoạt chung, các phòng học, cơ sở giặt là, cơ sở vui chơi giải trí, phòng máy tính và dịch vụ bảo vệ ở những khu vực công cộng. 

Để biết thêm thông tin chi tiết về những cơ sở trọ học của UCI và thời gian nộp đơn xin trọ học, hãy truy cập: website cung cấp thông tin trọ học ở UCI dành cho các ứng viên triển vọng. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/admissions/housing/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
住宿 « 入學 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                入學
入學申請要求、申請期限，以及申請書撰寫秘訣            
            

            

                新生轉學住宿獎助學金申請手續提示                    
            
                    
            
     住宿
    	        
	           
	           加大爾灣分校保證，所有新生只要符合單身、25歲以下、在期限內完成住宿申請和合約繳回手續，並且登記秋季班等條件，就能享有兩年住宿權益。 很多學生在加大爾灣分校唸書期間都選擇住校。
	           
	           
	           
	           加大爾灣分校新生宿舍的每個房間都裝設網路、有線電視線路，另有共用客廳、自習室、洗衣房、休閒設施、電腦室，而且公共區域和浴廁還有清潔人員。
	           
	           
	           
	           加大爾灣分校住宿設施和申請時間的詳細說明請見： 加大爾灣分校準新生宿舍網站。
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/admissions/housing/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Housing « Admissions « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Admissions
Details about requirements, application deadlines, and tips for enhancing your application            
            

            

                FreshmenTransferHousingFinancial AidApplication Tips                    
            
                    
            
     Housing
    	        
	           
	           UCI guarantees two years of housing to all freshmen who are single, under the age of 25, enrolling in fall quarter, and who meet the housing application and contract-return deadlines. Many UCI students choose to spend their entire time at UCI in student housing.
	           
	           
	           
	           UCI’s freshman housing communities provide Internet and cable TV connections in each student room, a hall/house living room, study rooms, laundry facilities, recreational facilities, computer lab, and custodial service for public areas and bathrooms.
	           
	           
	           
	           For details on UCI’s housing facilities and application timeline: UCI Housing Prospective Student website.
	           

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/admissions/housing/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Housing « Admissions « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Admissions
Details about requirements, application deadlines, and tips for enhancing your application            
            

            

                FreshmenTransferHousingFinancial AidApplication Tips                    
            
                    
            
     Housing
    	        
	           
	           UCI guarantees two years of housing to all freshmen who are single, under the age of 25, enrolling in fall quarter, and who meet the housing application and contract-return deadlines. Many UCI students choose to spend their entire time at UCI in student housing.
	           
	           
	           
	           UCI’s freshman housing communities provide Internet and cable TV connections in each student room, a hall/house living room, study rooms, laundry facilities, recreational facilities, computer lab, and custodial service for public areas and bathrooms.
	           
	           
	           
	           For details on UCI’s housing facilities and application timeline: UCI Housing Prospective Student website.
	           

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/admissions/freshmen/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
新生 « 入學 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                入學
入學申請要求、申請期限，以及申請書撰寫秘訣            
            

            

                新生轉學住宿獎助學金申請手續提示                    
            
                    
            
    新生
    	        
	          
	          準新鮮人可在校內獲得豐富的資訊，以及所有入學程序的詳細說明。 我們特別鼓勵你詳讀以下網頁：
	          
	          
	          
	          準學生： http://www.uci.edu/prospective.php
	          
	          
	          
	          入學方式： http://www.admissions.uci.edu/
	          
	          
	          
	          常見問題： http://www.admissions.uci.edu/resources/faq.html 
	          
	          
	          
	          線上文件： http://www.admissions.uci.edu/publications/online_publications.html 
	          
    	       
    	      
    	      也別忘了本校的吉祥物食蟻獸Peter： http://www.uci.edu/peter/
    	       
    	      
    	      
    	      目前貝林資科院大學部共有850名學生，加大爾灣分校學生總數則將近22,000人。 2010年入學新生GPA平均分數是3.89，SAT平均分數是1822分。
    	      

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/admissions/freshmen/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
신입생 « 입학 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                입학
자세한 지원 요건, 지원 마감일, 좋은 지원서를 만드는 요령            
            

            

                신입생편입기숙사학자금 지원지원 요령                    
            
                    
            
    신입생
    	        
	          
	          본교는 예비 신입생들을 위한 풍부한 정보는 물론 입학 절차의 모든 측면에 관한 상세한 정보를 제공하고 있습니다. 특히 다음 부분을 살펴보실 것을 권장합니다.
	          
	          
	          
	          예비 학생: http://www.uci.edu/prospective.php
	          
	          
	          
	          입학: http://www.admissions.uci.edu/
	          
	          
	          
	          자주 묻는 질문(FAQ): http://www.admissions.uci.edu/resources/faq.html 
	          
	          
	          
	          온라인 출간물: http://www.admissions.uci.edu/publications/online_publications.html 
	          
    	       
    	      
    	      본교 마스코트인 개미핥기 피터(Peter the Anteater)도 잊지 마세요. http://www.uci.edu/peter/
    	       
    	      
    	      
    	      현재, Bren:ICS의 학부생 입학자 수는 850명이며, UC 어바인 전체로 하면 신입생이 총 22,000명 가까이 됩니다. 2010년에 입학한 신입생들의 GPA 평균은 3.89였고, SAT 평균 점수는 1,822점이었습니다.
    	      

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/admissions/freshmen/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Freshmen « Admissions « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Admissions
Details about requirements, application deadlines, and tips for enhancing your application            
            

            

                FreshmenTransferHousingFinancial AidApplication Tips                    
            
                    
            
    Freshmen
                
              
              The campus offers a wealth of information for prospective freshmen, as well as details on all aspects of the admissions process. We particularly encourage you to explore the following:
              
              
              
              Admissions: http://www.admissions.uci.edu/
              
              
              
              Online publications: http://www.admissions.uci.edu/publications/online_publications.html 
              
               
              
              and do not forget our mascot, Peter the Anteater: http://www.uci.edu/peter/
               
              
              
              Currently, undergraduate enrollment in the Bren School is about 2,000 students, out of a total of almost 23,500 for UC Irvine as a whole.
              

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/admissions/freshmen/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Freshmen « Admissions « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Admissions
Details about requirements, application deadlines, and tips for enhancing your application            
            

            

                FreshmenTransferHousingFinancial AidApplication Tips                    
            
                    
            
    Freshmen
                
              
              The campus offers a wealth of information for prospective freshmen, as well as details on all aspects of the admissions process. We particularly encourage you to explore the following:
              
              
              
              Admissions: http://www.admissions.uci.edu/
              
              
              
              Online publications: http://www.admissions.uci.edu/publications/online_publications.html 
              
               
              
              and do not forget our mascot, Peter the Anteater: http://www.uci.edu/peter/
               
              
              
              Currently, undergraduate enrollment in the Bren School is about 2,000 students, out of a total of almost 23,500 for UC Irvine as a whole.
              

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/admissions/freshmen/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Sinh viên năm nhất « TUYỂN SINH « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                TUYỂN SINH
Thông tin chi tiết về yêu cầu tuyển sinh, hạn chót nộp đơn và chỉ dẫn làm cho đơn xin nhập học phong phú            
            

            

                Sinh viên năm nhấtChuyển tiếpNhà ởHỗ trợ Tài chínhChỉ dẫn nộp đơn                    
            
                    
            
    Sinh viên năm nhất

Nhà trường cung cấp nhiều nguồn thông tin đa dạng dành cho sinh viên năm nhất cùng những thông tin chi tiết về mọi phương diện của quy trình tuyển sinh. Chúng tôi đặc biệt khuyến khích các bạn hãy cùng khám phá qua những kênh thông tin sau đây: 

Chuyên trang dành cho những ứng viên triển vọng: http://www.uci.edu/prospective.php


Tuyển sinh: http://www.admissions.uci.edu/


Những câu hỏi thường gặp: http://www.admissions.uci.edu/resources/faq.html 

Xuất bản phẩm trên mạng: http://www.admissions.uci.edu/publications/online_publications.html 

và đừng quên hai con vật lấy khước của chúng tôi, Peter và Anteater: http://www.uci.edu/peter/
 
Hiện tại, số lượng sinh viên theo học hệ đại học ở Bren:ICS là 850 sinh viên trong tổng số gần 22.000 sinh viên UC Irvine. GPA bình quân đối với sinh viên năm nhất năm 2010 là 3,89, với điểm số SAT trung bình là 1822. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/computer-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
컴퓨터 과학 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     컴퓨터 과학
    	        
	         
	         컴퓨터 과학 전공은 현대 세계의 기반을 이루는 컴퓨터 사용의 원리를 강조하고, 학생들이 컴퓨터 분야의 다양한 진로를 준비할 수 있도록 탄탄한 기초 교육을 제공합니다. 
	         
	         
	         
	         학생들은 낮은 단계의 아키텍처와 시스템부터 프로그래밍 언어, 데이터베이스, 네트워크 등 중간 단계의 인프라, 그리고 인공지능 같은 높은 단계의 주제들을 통해 지식의 균형을 얻습니다. 또한 후속 과정을 통해 이러한 방향(하나 또는 둘 이상)에 집중합니다.
	         
	         
	         
                  컴퓨터 과학
	         

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/computer-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Khoa học Điện toán « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Khoa học Điện toán

Chuyên ngành khoa học điện toán tập trung vào những nguyên tắc điện toán hình thành nên thế giới hiện đại của chúng ta ngày nay và cung cấp những tri thức nền tảng vững chắc giúp cho sinh viên sẵn sàng đảm nhận  các yêu cầu nghề nghiệp đa dạng trong lĩnh vực điện toán. 

Sinh viên được lĩnh hội một sự cân bằng kiến thức về cấu trúc và các hệ thống ở tầm thấp, cơ sở hạ tầng ở tầm trung như ngôn ngữ lập trình, cơ sở dữ liệu và mạng với những chủ đề ở tầm cao như tri thức nhân tạo, đồ họa máy tính và an ninh mạng. Những khóa học kế tiếp sẽ giúp các sinh viên có thể tập trung vào một hoặc nhiều chủ đề định hướng như vậy. 


Khoa học Điện toán 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/computer-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
컴퓨터 과학 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     컴퓨터 과학
    	        
	         
	         컴퓨터 과학 전공은 현대 세계의 기반을 이루는 컴퓨터 사용의 원리를 강조하고, 학생들이 컴퓨터 분야의 다양한 진로를 준비할 수 있도록 탄탄한 기초 교육을 제공합니다. 
	         
	         
	         
	         학생들은 낮은 단계의 아키텍처와 시스템부터 프로그래밍 언어, 데이터베이스, 네트워크 등 중간 단계의 인프라, 그리고 인공지능 같은 높은 단계의 주제들을 통해 지식의 균형을 얻습니다. 또한 후속 과정을 통해 이러한 방향(하나 또는 둘 이상)에 집중합니다.
	         
	         
	         
                  컴퓨터 과학
	         

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/computer-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Computer Science « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Computer Science


   
   


                

The Computer Science major emphasizes the principles of computing that underlie our modern
world and provides a strong foundational education to prepare students for a broad spectrum of
possible careers in computing. 

Students receive a balance of knowledge in low-level computer architecture and systems, 
middle-level infrastructure like programming languages, databases and networks, and high-level 
topics such as artificial intelligence, computer graphics and network security. Students also learn 
about the mathematical and algorithmic foundations that form the basis of modern computing. 
Subsequent courses allow students to concentrate in one or more such directions. 

















IS COMPUTER SCIENCE FOR ME?  


The CS major balances theoretical underpinnings with a strong emphasis on designing, programming and implementing large-scale systems. The curriculum covers the infrastructure of computers and networks, as well as the software that runs them. Students receive a broad view of the field through a comprehensive set of core classes and, through upper-division elective courses, are given the opportunity to specialize in topics such as machine learning, data mining, distributed and embedded systems, and security. The major places a heavy emphasis on “learning by doing” through a wide selection of classes in which students design and build in-depth projects over the course of a 10-week quarter. In addition, students receive a solid background in computer algorithms, which form the basis of modern computing. The major provides many practical skills that can be immediately put to use in the workplace while also giving students a conceptual foundation that will serve them well for the long term in a rapidly evolving field. 







WHAT COURSES DO I TAKE?  


Current Requirements for the CS major can be found in the General Catalogue.











WHAT CAN I DO WITH A DEGREE IN CS?  


Graduates of the Computer Science program at UCI will be in a position to pursue a variety of 
careers in high-demand areas such as embedded systems, cloud infrastructure, web services, 
computer security, networking and data mining. They can be principal designers or involved in 
implementation, typically at companies that design, implement and sell or manage products or 
services in such areas. They may find themselves in charge of large-scale deployments and/or 
customizations at the organizations that use them. 

The strong scientific preparation also allows students to become involved in such areas as 
high-performance computing, computational biology and neuroscience  — whether in industry or 
graduate school. In fact, many students choose to continue their studies, conducting research and 
earning graduate degrees in fields such as computer science, software engineering or information 
science. A background in computer science is also excellent preparation for careers in management, 
law, finance or consulting. 












  





             
             
                 
                 Chen Li, associate professor of computer science, and his students created a Web search tool to reunite people after the quake that devastated Haiti. 
                 





                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/computer-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
資訊科學 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     資訊科學
    	        
	         
	         資訊科學系強調現代社會不可或缺的電腦運作原則，提供基礎紮實的教育內涵，讓學生面對五花八門的資訊就業市場時，能做好充分準備。 
	         
	         
	         
	         學生獲得的知識，能在低階架構、低階系統、中階架構（例如程式語言、資料庫和網路），以及高階科目（例如人工智慧、電腦繪圖和網路安全）等各方面齊頭並重。 後續課程則讓學生專攻一個以上的方向。
	         
	         
	         
                  資訊科學
	         

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/computer-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Computer Science « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Computer Science


   
   


                

The Computer Science major emphasizes the principles of computing that underlie our modern
world and provides a strong foundational education to prepare students for a broad spectrum of
possible careers in computing. 

Students receive a balance of knowledge in low-level computer architecture and systems, 
middle-level infrastructure like programming languages, databases and networks, and high-level 
topics such as artificial intelligence, computer graphics and network security. Students also learn 
about the mathematical and algorithmic foundations that form the basis of modern computing. 
Subsequent courses allow students to concentrate in one or more such directions. 

















IS COMPUTER SCIENCE FOR ME?  


The CS major balances theoretical underpinnings with a strong emphasis on designing, programming and implementing large-scale systems. The curriculum covers the infrastructure of computers and networks, as well as the software that runs them. Students receive a broad view of the field through a comprehensive set of core classes and, through upper-division elective courses, are given the opportunity to specialize in topics such as machine learning, data mining, distributed and embedded systems, and security. The major places a heavy emphasis on “learning by doing” through a wide selection of classes in which students design and build in-depth projects over the course of a 10-week quarter. In addition, students receive a solid background in computer algorithms, which form the basis of modern computing. The major provides many practical skills that can be immediately put to use in the workplace while also giving students a conceptual foundation that will serve them well for the long term in a rapidly evolving field. 







WHAT COURSES DO I TAKE?  


Current Requirements for the CS major can be found in the General Catalogue.











WHAT CAN I DO WITH A DEGREE IN CS?  


Graduates of the Computer Science program at UCI will be in a position to pursue a variety of 
careers in high-demand areas such as embedded systems, cloud infrastructure, web services, 
computer security, networking and data mining. They can be principal designers or involved in 
implementation, typically at companies that design, implement and sell or manage products or 
services in such areas. They may find themselves in charge of large-scale deployments and/or 
customizations at the organizations that use them. 

The strong scientific preparation also allows students to become involved in such areas as 
high-performance computing, computational biology and neuroscience  — whether in industry or 
graduate school. In fact, many students choose to continue their studies, conducting research and 
earning graduate degrees in fields such as computer science, software engineering or information 
science. A background in computer science is also excellent preparation for careers in management, 
law, finance or consulting. 












  





             
             
                 
                 Chen Li, associate professor of computer science, and his students created a Web search tool to reunite people after the quake that devastated Haiti. 
                 





                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/computer-science/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Khoa học Điện toán « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Khoa học Điện toán

Chuyên ngành khoa học điện toán tập trung vào những nguyên tắc điện toán hình thành nên thế giới hiện đại của chúng ta ngày nay và cung cấp những tri thức nền tảng vững chắc giúp cho sinh viên sẵn sàng đảm nhận  các yêu cầu nghề nghiệp đa dạng trong lĩnh vực điện toán. 

Sinh viên được lĩnh hội một sự cân bằng kiến thức về cấu trúc và các hệ thống ở tầm thấp, cơ sở hạ tầng ở tầm trung như ngôn ngữ lập trình, cơ sở dữ liệu và mạng với những chủ đề ở tầm cao như tri thức nhân tạo, đồ họa máy tính và an ninh mạng. Những khóa học kế tiếp sẽ giúp các sinh viên có thể tập trung vào một hoặc nhiều chủ đề định hướng như vậy. 


Khoa học Điện toán 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
학생 업무 « 문의 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                문의
궁금한 점이 있으면 부담없이 질문해 주십시오.            
            

            

                학생 업무                    
            
                    
            
     학생 업무
    	        
	            
	            Bren:ICS의 지도 교수들은 모든 Bren:ICS 전공 학생들이 학업 진로를 시작해서 끝날 때까지 도와줍니다.  학교 중심의 학업 상담은 여름 오리엔테이션과 함께 시작합니다. 이 때 카운슬러는 신입생들이 학업 계획을 세울 수 있도록 도와주고, 이들에게 가을 학기 수업 온라인 등록 방법을 알려줍니다.  남은 재학 기간 동안 Bren:ICS 상담자들은 학업 및 진로 목표 수립을 정의 및 지원하고, 학위 요건을 충족하는 가장 효율적인 길을 찾고, 졸업까지의 시의적절한 진행을 살피며 도움을 줍니다.  상담 담당자는 진로 탐구, 인턴십, 교수 멘토 찾기, 대학원 준비와 같은 주제와 관련하여 Bren:ICS 학생들을 위한 워크샵도 후원합니다.  Bren:ICS 학업 상담 담당자는 개인별 약속, 간이 상담, 이메일을 통해 도움을 줍니다.
	            
	            
	            
	            ICS 1, Suite 352(캠퍼스 지도의 302번 건물: http://www.uci.edu/campusmap/ (949) 824-5156

	            
	            
	            
	            ucounsel@uci.edu
	            
	            
	            
	            시간:  월~금요일 오전 9시~정오, 오후 1시~4시
	            
	            
	            
	            다양한 학위 과정과 어떤 과정이 자신의 학업 및 진로 관심사에 적합할지 알아보려는 지원 희망자는 (949) 824-5156으로 자유롭게 전화하여 지도 교수와 상담 약속을 정할 수 있습니다. 


	            
	            
	            
                학생 업무
	            

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Ban Sự vụ Sinh viên « LIÊN HỆ « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                LIÊN HỆ
Nếu bạn có bất cứ thắc mắc nào, đừng ngần ngại hãy liên hệ với chúng tôi            
            

            

                Ban Sự vụ Sinh viên                    
            
                    
            
     Ban Sự vụ Sinh viên

Các chuyên gia tư vấn học tập của Bren:ICS hỗ trợ sinh viên thuộc tất cả các chuyên ngành học ở Bren:ICS, từ lúc bắt đầu bước chân vào trường cho đến khi kết thúc chương trình học. Hoạt động tư vấn giáo dục tại trường bắt đầu bằng chương trình định hướng mùa hè, khi đó các cố vấn sẽ giúp đỡ những sinh viên mới trực quan ra kế hoạch học tập của mình và hướng dẫn họ hoàn thành quá trình đăng ký trực tuyến để tham gia các lớp học của học kỳ mùa thu. Thông qua danh sách lựa chọn nghề nghiệp của sinh viên, các tư vấn viên của Bren:ICS sẽ hỗ trợ sinh viên định rõ và thiết lập mục tiêu học tập và nghề nghiệp, xác định những đường hướng hiệu quả nhất để đạt được những yêu cầu của chương trình cấp bằng, và định kỳ kiểm tra sự tiến bộ trong quá học tập. Đội ngũ chuyên gia tư vấn cũng tài trợ các cuộc hội thảo để các sinh viên Bren:ICS tìm hiểu về các chủ đề như khám phá nghề nghiệp, chương trình thực tập, tìm một giảng viên hướng dẫn riêng, và chuẩn bị đáp ứng các tiêu chí học cao học. Đội ngũ chuyên gia tư vấn học tập của Bren:ICS hỗ trợ qua các cuộc hẹn gặp riêng, tư vấn cho những sinh viên đến trực tiếp tại văn phòng và qua email. 

ICS 1, Suite 352 (tìm tòa nhà số 302 trên bản đồ khuôn viên trường tại đây: http://www.uci.edu/campusmap/
(949) 824-5156 

ucounsel@uci.edu


Giờ làm việc: Từ Thứ Hai đến Thứ Sáu, từ 9 giờ sángđến 12 giờ trưa và từ 1 giờ chiều đến 4 giờ chiều. 

Những ứng của viên tiềm năng cũng có thể gọi điện theo số (949) 824-5156 để đặt lịch hẹn với chuyên gia tư vấn học tập để tìm hiểu thêm về những tùy chọn về chương trình cấp bằng khác nhau và chương trình nào có thể phù hợp nhất với mong muốn về học vấn và nghề nghiệp của họ. 


Ban Sự vụ Sinh viên 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Ban Sự vụ Sinh viên « LIÊN HỆ « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                LIÊN HỆ
Nếu bạn có bất cứ thắc mắc nào, đừng ngần ngại hãy liên hệ với chúng tôi            
            

            

                Ban Sự vụ Sinh viên                    
            
                    
            
     Ban Sự vụ Sinh viên

Các chuyên gia tư vấn học tập của Bren:ICS hỗ trợ sinh viên thuộc tất cả các chuyên ngành học ở Bren:ICS, từ lúc bắt đầu bước chân vào trường cho đến khi kết thúc chương trình học. Hoạt động tư vấn giáo dục tại trường bắt đầu bằng chương trình định hướng mùa hè, khi đó các cố vấn sẽ giúp đỡ những sinh viên mới trực quan ra kế hoạch học tập của mình và hướng dẫn họ hoàn thành quá trình đăng ký trực tuyến để tham gia các lớp học của học kỳ mùa thu. Thông qua danh sách lựa chọn nghề nghiệp của sinh viên, các tư vấn viên của Bren:ICS sẽ hỗ trợ sinh viên định rõ và thiết lập mục tiêu học tập và nghề nghiệp, xác định những đường hướng hiệu quả nhất để đạt được những yêu cầu của chương trình cấp bằng, và định kỳ kiểm tra sự tiến bộ trong quá học tập. Đội ngũ chuyên gia tư vấn cũng tài trợ các cuộc hội thảo để các sinh viên Bren:ICS tìm hiểu về các chủ đề như khám phá nghề nghiệp, chương trình thực tập, tìm một giảng viên hướng dẫn riêng, và chuẩn bị đáp ứng các tiêu chí học cao học. Đội ngũ chuyên gia tư vấn học tập của Bren:ICS hỗ trợ qua các cuộc hẹn gặp riêng, tư vấn cho những sinh viên đến trực tiếp tại văn phòng và qua email. 

ICS 1, Suite 352 (tìm tòa nhà số 302 trên bản đồ khuôn viên trường tại đây: http://www.uci.edu/campusmap/
(949) 824-5156 

ucounsel@uci.edu


Giờ làm việc: Từ Thứ Hai đến Thứ Sáu, từ 9 giờ sángđến 12 giờ trưa và từ 1 giờ chiều đến 4 giờ chiều. 

Những ứng của viên tiềm năng cũng có thể gọi điện theo số (949) 824-5156 để đặt lịch hẹn với chuyên gia tư vấn học tập để tìm hiểu thêm về những tùy chọn về chương trình cấp bằng khác nhau và chương trình nào có thể phù hợp nhất với mong muốn về học vấn và nghề nghiệp của họ. 


Ban Sự vụ Sinh viên 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Student Affairs « Contact « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Contact
Feel free to contact us with any questions you may have            
            

            

                Student Affairs                    
            
                    
            
     Student Affairs
                
                
                Bren School academic advisors assist all Bren School majors, from start to finish of their academic career.  School-based academic advising begins with summer orientation, during which counselors help new students map out their academic plan and guide them through on-line registration for fall quarter classes.  Through the remainder of a student’s career, Bren School advisors are available to help define and support academic and career goal-setting, identify the most efficient routes for meeting degree requirements, and check for timely progress toward graduation.  The counseling staff also sponsor workshops for Bren School students about such topics as career exploration, internships, finding a faculty mentor, and graduate school preparation.  The Bren School academic advising staff offers assistance via individual appointments, drop-in counseling, and email .
                
                
                
                ICS 1, Suite 352 (find building # 302 on campus map here: http://www.uci.edu/campusmap/
                (949) 824-5156

                
                
                
                ucounsel@uci.edu
                
                
                
                Hours:  Monday through Friday, 9 a.m. – 12:00 p.m. and 1:00 – 4:00 p.m.
                
                
                
                Prospective applicants are welcome to call (949) 824-5156 to schedule an appointment with an academic advisor to learn more about the various degree options and which might best fit their academic and career interests. 


                
                
                
               
                Student Affairs
                

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Student Affairs « Contact « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Contact
Feel free to contact us with any questions you may have            
            

            

                Student Affairs                    
            
                    
            
     Student Affairs
                
                
                Bren School academic advisors assist all Bren School majors, from start to finish of their academic career.  School-based academic advising begins with summer orientation, during which counselors help new students map out their academic plan and guide them through on-line registration for fall quarter classes.  Through the remainder of a student’s career, Bren School advisors are available to help define and support academic and career goal-setting, identify the most efficient routes for meeting degree requirements, and check for timely progress toward graduation.  The counseling staff also sponsor workshops for Bren School students about such topics as career exploration, internships, finding a faculty mentor, and graduate school preparation.  The Bren School academic advising staff offers assistance via individual appointments, drop-in counseling, and email .
                
                
                
                ICS 1, Suite 352 (find building # 302 on campus map here: http://www.uci.edu/campusmap/
                (949) 824-5156

                
                
                
                ucounsel@uci.edu
                
                
                
                Hours:  Monday through Friday, 9 a.m. – 12:00 p.m. and 1:00 – 4:00 p.m.
                
                
                
                Prospective applicants are welcome to call (949) 824-5156 to schedule an appointment with an academic advisor to learn more about the various degree options and which might best fit their academic and career interests. 


                
                
                
               
                Student Affairs
                

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
學務處 « 聯絡方式 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                聯絡方式
如有任何問題，歡迎聯絡我們            
            

            

                學務處                    
            
                    
            
     學務處
    	        
	            
	            貝林資科院課業諮詢老師能為校內所有主修學生提供協助。學生從入學到畢業都能獲得完整服務。  校內課業輔導從暑期新生訓練就已經開始。諮詢老師會協助新生規劃課程，教導他們上網選擇秋季課程。  學生在畢業前都能請貝林資科院諮詢老師幫忙設定學術和就業目標、找出拿到學歷的最佳捷徑，並且定時核對進度，朝畢業的方向邁進。  諮詢老師也會舉辦貝林資科院學生研討會，主題則與就業方向、實習工作、尋找教師導師，以及準備研究所有關。  貝林資科院課業諮詢老師以個別約談、不預約隨時諮商和電子郵件等方式提供協助。
	            
	            
	            
	            資科院1館352號室（請在校園地圖上尋找302號大樓 http://www.uci.edu/campusmap/ (949) 824-5156

	            
	            
	            
	            ucounsel@uci.edu
	            
	            
	            
	            諮詢時間：  週一至週五上午9點～12:00，下午1:00到4:00
	            
	            
	            
	            歡迎有意申請的學生撥打專線：(949) 824-5156，與課業諮詢老師約時間了解本校提供的文憑種類，以及最適合申請人課業和就業需求的學歷。 


	            
	            
	            
                學務處
	            

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
학생 업무 « 문의 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                문의
궁금한 점이 있으면 부담없이 질문해 주십시오.            
            

            

                학생 업무                    
            
                    
            
     학생 업무
    	        
	            
	            Bren:ICS의 지도 교수들은 모든 Bren:ICS 전공 학생들이 학업 진로를 시작해서 끝날 때까지 도와줍니다.  학교 중심의 학업 상담은 여름 오리엔테이션과 함께 시작합니다. 이 때 카운슬러는 신입생들이 학업 계획을 세울 수 있도록 도와주고, 이들에게 가을 학기 수업 온라인 등록 방법을 알려줍니다.  남은 재학 기간 동안 Bren:ICS 상담자들은 학업 및 진로 목표 수립을 정의 및 지원하고, 학위 요건을 충족하는 가장 효율적인 길을 찾고, 졸업까지의 시의적절한 진행을 살피며 도움을 줍니다.  상담 담당자는 진로 탐구, 인턴십, 교수 멘토 찾기, 대학원 준비와 같은 주제와 관련하여 Bren:ICS 학생들을 위한 워크샵도 후원합니다.  Bren:ICS 학업 상담 담당자는 개인별 약속, 간이 상담, 이메일을 통해 도움을 줍니다.
	            
	            
	            
	            ICS 1, Suite 352(캠퍼스 지도의 302번 건물: http://www.uci.edu/campusmap/ (949) 824-5156

	            
	            
	            
	            ucounsel@uci.edu
	            
	            
	            
	            시간:  월~금요일 오전 9시~정오, 오후 1시~4시
	            
	            
	            
	            다양한 학위 과정과 어떤 과정이 자신의 학업 및 진로 관심사에 적합할지 알아보려는 지원 희망자는 (949) 824-5156으로 자유롭게 전화하여 지도 교수와 상담 약속을 정할 수 있습니다. 


	            
	            
	            
                학생 업무
	            

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/student-life/diversity/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
多元樣貌 « 生活 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                生活
你的生活！            
            

            

                多元樣貌參與校務Bren School Organizations                    
            
                    
            
     多元樣貌
    	        
	          
	          加大爾灣分校的學生組成份子非常多元，因此製造大量機會，讓來自四面八方的學生互相觀摩。他們的背景和經驗，對你在多元文化社會中求學、生活和工作的想法，起了輔助、互補、挑戰、增進，或擴展的作用。   
	          
	          
	          
	          就算是人數較少的貝林資科院學生社群，他們的背景和興趣也非常多元。這點可從他們參加的課外活動看出，例如舞團、運動、劇場、社區服務、儲備軍官、兄弟/姊妹會、族群/文化聯誼會，以及擔任社團和學生組織幹部。
	          
	          
	          
               Girls Inc.拜訪加大爾灣分校
	          

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/student-life/diversity/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Tính đa dạng « ĐỜI SỐNG SINH VIÊN « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                ĐỜI SỐNG SINH VIÊN
Cuộc sống của chính bạn!            
            

            

                Tính đa dạngHòa nhập cộng đồng học tậpBren School Organizations                    
            
                    
            
     Tính đa dạng

Tập thể sinh viên UC Irvine rất đa dạng, vì thế bạn sẽ có nhiều cơ hội học tập, giao lưu với những sinh viên đến từ nhiều nền văn hóa và có những trải nghiệm khác nhau để hỗ trợ, bổ sung, thử thách, nâng cao và mở rộng sự hiểu biết của bạn về phương pháp học tập, cách sống và làm việc trong một xã hội đa văn hóa. 

Ngay cả trong cộng đồng sinh viên Bren:ICS ở quy mô nhỏ hơn thì sự đa dạng cũng thể hiện rõ qua các nền văn hóa và những mối quan tâm – được minh chứng qua sự tham gia của họ vào các hoạt động ngoại khóa bao gồm những hoạt động ca múa, điền kinh, nghệ thuật sân khấu, dịch vụ cộng đồng, ROTC, các tổ chức ký tự Hy Lạp, hội nhóm sắc tộc/văn hóa, và vai trò lãnh đạo trong các câu lạc bộ và tổ chức sinh viên. 


Những thiếu nữ đến thăm trường UC Irvine 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/student-life/diversity/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Diversity « Student Life « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Student Life
Your life!            
            

            

                DiversityCampus InvolvementBren School Organizations                    
            
                    
            
     Diversity
                
              
              UC Irvine’s student body is very diverse, and offers a wealth of opportunities to learn with and from students whose backgrounds and experiences support, complement, challenge, enrich, or expand your understanding of how to learn, live, and work in a multicultural society.   
              
              
              
              Even within the smaller Bren School student community, our students’ backgrounds and interests are richly diverse – as represented by their participation in extracurricular activities that include dance troupes, athletics, theater, community service, ROTC, greek-letter organizations, ethnic/cultural group affiliations, and leadership in student clubs and organizations.
              
              
              
              
              Girls Inc. visiting UC Irvine
              

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/student-life/diversity/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Diversity « Student Life « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Student Life
Your life!            
            

            

                DiversityCampus InvolvementBren School Organizations                    
            
                    
            
     Diversity
                
              
              UC Irvine’s student body is very diverse, and offers a wealth of opportunities to learn with and from students whose backgrounds and experiences support, complement, challenge, enrich, or expand your understanding of how to learn, live, and work in a multicultural society.   
              
              
              
              Even within the smaller Bren School student community, our students’ backgrounds and interests are richly diverse – as represented by their participation in extracurricular activities that include dance troupes, athletics, theater, community service, ROTC, greek-letter organizations, ethnic/cultural group affiliations, and leadership in student clubs and organizations.
              
              
              
              
              Girls Inc. visiting UC Irvine
              

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/student-life/diversity/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Tính đa dạng « ĐỜI SỐNG SINH VIÊN « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                ĐỜI SỐNG SINH VIÊN
Cuộc sống của chính bạn!            
            

            

                Tính đa dạngHòa nhập cộng đồng học tậpBren School Organizations                    
            
                    
            
     Tính đa dạng

Tập thể sinh viên UC Irvine rất đa dạng, vì thế bạn sẽ có nhiều cơ hội học tập, giao lưu với những sinh viên đến từ nhiều nền văn hóa và có những trải nghiệm khác nhau để hỗ trợ, bổ sung, thử thách, nâng cao và mở rộng sự hiểu biết của bạn về phương pháp học tập, cách sống và làm việc trong một xã hội đa văn hóa. 

Ngay cả trong cộng đồng sinh viên Bren:ICS ở quy mô nhỏ hơn thì sự đa dạng cũng thể hiện rõ qua các nền văn hóa và những mối quan tâm – được minh chứng qua sự tham gia của họ vào các hoạt động ngoại khóa bao gồm những hoạt động ca múa, điền kinh, nghệ thuật sân khấu, dịch vụ cộng đồng, ROTC, các tổ chức ký tự Hy Lạp, hội nhóm sắc tộc/văn hóa, và vai trò lãnh đạo trong các câu lạc bộ và tổ chức sinh viên. 


Những thiếu nữ đến thăm trường UC Irvine 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/student-life/campus-involvement/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
학생 참여 « 대학 생활 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                대학 생활
내가 누리는 생활!            
            

            

                다양성학생 참여Bren School Organizations                    
            
                    
            
     학생 참여
    	        
	            
	            UCI 캠퍼스를 처음 방문하면, 매우 넓은 곳이라는 사실을 알게 됩니다. 대부분의 학생들은 사람들과 어울리고 캠퍼스를 구석구석 누리는 좋은 방법이 클럽에 가입하는 것이라고 말합니다.  300개가 넘는 공인 학생 단체가 들어있는 학생처장 데이터베이스를 몇 분만 검색해 보면, UCI를 다니는 동안 관심을 가질 만한 참여와 활동을 알아낼 수 있습니다. http://www.campusorgs.uci.edu/를 참조하십시오.
	            
	            
	            
	            UCI 공동체(학생회, 기숙사 등)와 Bren:ICS 학생 운영 단체 모두 리더십 기술을 배우고 실천할 수 있는 많은 기회를 제공합니다. 
	            
	            
	            
	            UCI 공동체에서 자신의 자리를 찾아가면서, 어떤 종류의 참여, 팀워크, 리더십 경험을 얻고 싶은지는 스스로의 결정에 달려 있습니다.  
	            
	            
	            
                 학생 참여
	            

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/student-life/campus-involvement/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Campus Involvement « Student Life « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Student Life
Your life!            
            

            

                DiversityCampus InvolvementBren School Organizations                    
            
                    
            
     Campus Involvement
                
                
                When you first visit the UCI campus, you will see that it is a pretty large place. Most students will tell you that a good way to get connected and make the campus feel smaller is to join a student club.  Spend a couple minutes searching the Dean of Student’s database of over 300 registered student organizations to get a sense of the kinds of involvements and activities that might be of interest to you while here at UCI: http://www.campusorgs.uci.edu/.
                
                
                
                Many opportunities exist for learning about and practicing your leadership skills, both in the UCI community (e.g., Student Government, Housing) and Bren School student-run organizations. 
                
                
                
                It will be up to you to decide what types of involvement, teamwork, and leadership experiences you want to acquire as you find your place in the UCI community.  
                
                
                
                
                Campus Involvement
                

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/student-life/campus-involvement/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
학생 참여 « 대학 생활 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                대학 생활
내가 누리는 생활!            
            

            

                다양성학생 참여Bren School Organizations                    
            
                    
            
     학생 참여
    	        
	            
	            UCI 캠퍼스를 처음 방문하면, 매우 넓은 곳이라는 사실을 알게 됩니다. 대부분의 학생들은 사람들과 어울리고 캠퍼스를 구석구석 누리는 좋은 방법이 클럽에 가입하는 것이라고 말합니다.  300개가 넘는 공인 학생 단체가 들어있는 학생처장 데이터베이스를 몇 분만 검색해 보면, UCI를 다니는 동안 관심을 가질 만한 참여와 활동을 알아낼 수 있습니다. http://www.campusorgs.uci.edu/를 참조하십시오.
	            
	            
	            
	            UCI 공동체(학생회, 기숙사 등)와 Bren:ICS 학생 운영 단체 모두 리더십 기술을 배우고 실천할 수 있는 많은 기회를 제공합니다. 
	            
	            
	            
	            UCI 공동체에서 자신의 자리를 찾아가면서, 어떤 종류의 참여, 팀워크, 리더십 경험을 얻고 싶은지는 스스로의 결정에 달려 있습니다.  
	            
	            
	            
                 학생 참여
	            

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/student-life/campus-involvement/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
參與校務 « 生活 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                生活
你的生活！            
            

            

                多元樣貌參與校務Bren School Organizations                    
            
                    
            
     參與校務
    	        
	            
	            第一次到加大爾灣分校時，你會發現校地幅員廣大。 大部分的學生都會建議，想要打好人際關係、縮小同學與同學之間的距離，最好的方法就是加入社團。  只要花幾分鐘在學務處的資料庫中搜尋一下，就能大略了解在300多個登記的學生組織中，哪些是你求學期間想參加的社團： http://www.campusorgs.uci.edu/。
	            
	            
	            
	            無論是加大爾灣分校這個社區（例如學生自治組織和宿舍），還是貝林資科院的學生組織，都提供許多學習、磨練領導才能的機會。 
	            
	            
	            
	            你可以自行決定要在加大爾灣分校內，獲得什麼樣的親身參與、團隊合作和領導統御經驗。  
	            
	            
	            
                 參與校務
	            

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/student-life/campus-involvement/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Hòa nhập cộng đồng học tập « ĐỜI SỐNG SINH VIÊN « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                ĐỜI SỐNG SINH VIÊN
Cuộc sống của chính bạn!            
            

            

                Tính đa dạngHòa nhập cộng đồng học tậpBren School Organizations                    
            
                    
            
     Hòa nhập cộng đồng học tập

Lần đầu tiên đặt chân đến khuôn viên trường UCI, bạn sẽ thấy đây là một nơi khá rộng lớn. Hầu hết các sinh viên đang theo học nơi đây sẽ mách cho bạn cách gắn bó và cảm thấy khuôn viên trường nhỏ hơn là hãy tham gia một câu lạc bộ sinh viên. Dành một vài phút duyệt thông tin từ cơ sở dữ liệu của Dean of Student với hơn 300 tổ chức sinh viên đã đăng ký để hình dung được những hình thức tham gia và các hoạt động khiến bạn quan tâm khi học tập tại UCI: http://www.campusorgs.uci.edu/. 

Nhiều cơ hội hiện có để bạn tìm hiểu và thực hành những kỹ năng lãnh đạo, cả trong cộng đồng UCI (ví dụ như Chính phủ Sinh viên, Quản trị Nhà ở) và trong các tổ chức do sinh viên điều hành ở Bren:ICS. 

Bạn toàn quyền quyết định về những hình thức tham gia, nhóm làm việc và về  những trải nghiệm lãnh đạo mà bạn muốn đạt được trong quá trình bạn tìm cho mình một vị trí trong cộng đồng UCI. 


Hòa nhập vào cộng đồng học tập 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/student-life/campus-involvement/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Campus Involvement « Student Life « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Student Life
Your life!            
            

            

                DiversityCampus InvolvementBren School Organizations                    
            
                    
            
     Campus Involvement
                
                
                When you first visit the UCI campus, you will see that it is a pretty large place. Most students will tell you that a good way to get connected and make the campus feel smaller is to join a student club.  Spend a couple minutes searching the Dean of Student’s database of over 300 registered student organizations to get a sense of the kinds of involvements and activities that might be of interest to you while here at UCI: http://www.campusorgs.uci.edu/.
                
                
                
                Many opportunities exist for learning about and practicing your leadership skills, both in the UCI community (e.g., Student Government, Housing) and Bren School student-run organizations. 
                
                
                
                It will be up to you to decide what types of involvement, teamwork, and leadership experiences you want to acquire as you find your place in the UCI community.  
                
                
                
                
                Campus Involvement
                

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/student-life/campus-involvement/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Hòa nhập cộng đồng học tập « ĐỜI SỐNG SINH VIÊN « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                ĐỜI SỐNG SINH VIÊN
Cuộc sống của chính bạn!            
            

            

                Tính đa dạngHòa nhập cộng đồng học tậpBren School Organizations                    
            
                    
            
     Hòa nhập cộng đồng học tập

Lần đầu tiên đặt chân đến khuôn viên trường UCI, bạn sẽ thấy đây là một nơi khá rộng lớn. Hầu hết các sinh viên đang theo học nơi đây sẽ mách cho bạn cách gắn bó và cảm thấy khuôn viên trường nhỏ hơn là hãy tham gia một câu lạc bộ sinh viên. Dành một vài phút duyệt thông tin từ cơ sở dữ liệu của Dean of Student với hơn 300 tổ chức sinh viên đã đăng ký để hình dung được những hình thức tham gia và các hoạt động khiến bạn quan tâm khi học tập tại UCI: http://www.campusorgs.uci.edu/. 

Nhiều cơ hội hiện có để bạn tìm hiểu và thực hành những kỹ năng lãnh đạo, cả trong cộng đồng UCI (ví dụ như Chính phủ Sinh viên, Quản trị Nhà ở) và trong các tổ chức do sinh viên điều hành ở Bren:ICS. 

Bạn toàn quyền quyết định về những hình thức tham gia, nhóm làm việc và về  những trải nghiệm lãnh đạo mà bạn muốn đạt được trong quá trình bạn tìm cho mình một vị trí trong cộng đồng UCI. 


Hòa nhập vào cộng đồng học tập 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/student-life/bren-ics-organizations/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Các tổ chức trong trường Bren:ICS « ĐỜI SỐNG SINH VIÊN « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                ĐỜI SỐNG SINH VIÊN
Cuộc sống của chính bạn!            
            

            

                Tính đa dạngHòa nhập cộng đồng học tậpBren School Organizations                    
            
                    
            
     Các tổ chức trong trường Bren:ICS

Các sinh viên của Bren:ICS thành lập, dẫn dắt và tham gia vào các tổ chức sinh viên thu hút được sự quan tâm, đặc biệt là những sinh viên đang theo học chuyên ngành điện toán hoặc công nghệ chuyên sâu, ví dụ như: 
Đại sứ Sinh viên Bren:ICSHội đồng Sinh viên Bren:ICSHiệp hội Sinh viên Tin họcHội Sinh viên Công nghệ Thông tinHội Nữ Kỹ SưCâu lạc bộ Phát triển Trò chơi VideoHội vì sự phát triển của Phụ nữ trong lĩnh vực Khoa học Thông tin và Điện toán


Các câu lạc bộ sinh viên lên kế hoạch và tổ chức các sự kiện trong đó bao gồm các sự kiện mang tính xã hội, những phiên họp công bố thông tin của công ty, các sự kiện tuyển dụng, các cuộc thi trò chơi, và những nỗ lực phục vụ cộng đồng. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/student-life/bren-ics-organizations/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Bren:ICS 단체 « 대학 생활 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                대학 생활
내가 누리는 생활!            
            

            

                다양성학생 참여Bren School Organizations                    
            
                    
            
     Bren:ICS 단체
    	        
	           
	           Bren:ICS 학생들은 다음과 같은 컴퓨팅 또는 기술 중심 전공을 듣는 학생들이 특히 관심을 갖는 학생 단체를 결성하고 이끌며 이에 참여합니다.
	           
	           
	           Bren:ICS 학생 홍보대사Bren:ICS 학생 자치 위원회정보학 학생 협회경영 정보 학생 협회여성 공학자 협회비디오 게임 개발자 동아리 정보와 컴퓨터 과학의 여성
	           
	           
	           학생 단체들은 사교 파티, 기업 설명회, 채용 이벤트, 게임 대회, 지역 봉사 활동을 비롯한 다양한 행사를 계획하고 개최합니다. 
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/student-life/bren-ics-organizations/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Các tổ chức trong trường Bren:ICS « ĐỜI SỐNG SINH VIÊN « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                ĐỜI SỐNG SINH VIÊN
Cuộc sống của chính bạn!            
            

            

                Tính đa dạngHòa nhập cộng đồng học tậpBren School Organizations                    
            
                    
            
     Các tổ chức trong trường Bren:ICS

Các sinh viên của Bren:ICS thành lập, dẫn dắt và tham gia vào các tổ chức sinh viên thu hút được sự quan tâm, đặc biệt là những sinh viên đang theo học chuyên ngành điện toán hoặc công nghệ chuyên sâu, ví dụ như: 
Đại sứ Sinh viên Bren:ICSHội đồng Sinh viên Bren:ICSHiệp hội Sinh viên Tin họcHội Sinh viên Công nghệ Thông tinHội Nữ Kỹ SưCâu lạc bộ Phát triển Trò chơi VideoHội vì sự phát triển của Phụ nữ trong lĩnh vực Khoa học Thông tin và Điện toán


Các câu lạc bộ sinh viên lên kế hoạch và tổ chức các sự kiện trong đó bao gồm các sự kiện mang tính xã hội, những phiên họp công bố thông tin của công ty, các sự kiện tuyển dụng, các cuộc thi trò chơi, và những nỗ lực phục vụ cộng đồng. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/student-life/bren-ics-organizations/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
貝林資科院組織 « 生活 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                生活
你的生活！            
            

            

                多元樣貌參與校務Bren School Organizations                    
            
                    
            
     貝林資科院組織
    	        
	           
	           貝林資科院的學生可成立、主持，或參加和資訊技術科系有關的學生組織，例如：
	           
	           
	           貝林資科院學生大使貝林資科院代聯會資訊學學生協會資訊管理學生協會婦女工程師協會遊樂器開發人社團 資訊電腦科學婦女協會
	           
	           
	           學生社團可籌劃、舉辦活動，內容包括聯誼、企業說明會、招募社員活動、電腦遊戲比賽、社區服務。 
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/student-life/bren-ics-organizations/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Bren School Organizations « Student Life « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Student Life
Your life!            
            

            

                DiversityCampus InvolvementBren School Organizations                    
            
                    
            
     Bren School Organizations
                
               
               Bren School students form, lead, and participate in student organizations that are of particular interest to those in a computing or technology-focused major, such as:
               
               
               Bren School Student CouncilInformatics Student AssociationInternational Game Developers AssociationManagement Information Student SocietySociety of Women EngineersVideo Game Developers Club Women in Information and Computer Sciences
               
               
               Student clubs plan and host events that include socials, company info sessions, recruitment events, gaming competitions, and community service efforts. 
               

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/student-life/bren-ics-organizations/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Bren School Organizations « Student Life « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Student Life
Your life!            
            

            

                DiversityCampus InvolvementBren School Organizations                    
            
                    
            
     Bren School Organizations
                
               
               Bren School students form, lead, and participate in student organizations that are of particular interest to those in a computing or technology-focused major, such as:
               
               
               Bren School Student CouncilInformatics Student AssociationInternational Game Developers AssociationManagement Information Student SocietySociety of Women EngineersVideo Game Developers Club Women in Information and Computer Sciences
               
               
               Student clubs plan and host events that include socials, company info sessions, recruitment events, gaming competitions, and community service efforts. 
               

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/student-life/bren-ics-organizations/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Bren:ICS 단체 « 대학 생활 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                대학 생활
내가 누리는 생활!            
            

            

                다양성학생 참여Bren School Organizations                    
            
                    
            
     Bren:ICS 단체
    	        
	           
	           Bren:ICS 학생들은 다음과 같은 컴퓨팅 또는 기술 중심 전공을 듣는 학생들이 특히 관심을 갖는 학생 단체를 결성하고 이끌며 이에 참여합니다.
	           
	           
	           Bren:ICS 학생 홍보대사Bren:ICS 학생 자치 위원회정보학 학생 협회경영 정보 학생 협회여성 공학자 협회비디오 게임 개발자 동아리 정보와 컴퓨터 과학의 여성
	           
	           
	           학생 단체들은 사교 파티, 기업 설명회, 채용 이벤트, 게임 대회, 지역 봉사 활동을 비롯한 다양한 행사를 계획하고 개최합니다. 
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/ics-undeclared-pre-major/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
전공미정 교양과정 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     전공미정 교양과정
    	        
	       특정 전공에 전념하기에 앞서 컴퓨터 과학과 IT에 대한 관심을 우선 파헤치고 싶은 신입생은 ICS 전공미정 상태로 지원할 수 있습니다. 
	       
	       이 옵션을 선택한 신입생은 학업 카운슬러 이용을 비롯하여 Bren:ICS 학생으로서의 혜택을 모두 누릴 수 있습니다. 참고로, 학업 카운슬러는 전공에 공통으로 들어가는 교양과정의 필수 컴퓨터 과학과 수학 과정을 포함시켜 1학년 학업 계획을 세울 수 있게 도와주고 Bren:ICS의 학업 진로가 어떨지 알려줍니다. 
	       
	       컴퓨터 과학 및 공학 전공에 관심이 있는 학생들은 UCI에 입학할 때 대단히 체계적인 이 전공을 선택하는 것이 정말 좋습니다.


잠깐 정보

	알고 계시나요?
	CNBC에 따르면, 2010년에 가장 높은 임금을 받은 학사 학위 10개 중 3개를 Bren:ICS에서 제공한다고 합니다. 전체 목록은 여기에서 확인하십시오.



                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/ics-undeclared-pre-major/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Ngành học tiền chính thức « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Ngành học tiền chính thức
Những sinh viên năm nhất có những mối quan tâm khác nhau trong lĩnh vực khoa học điện toán và công nghệ thông tin và muốn khám phá trước khi quyết tâm theo đuổi một chuyên ngành cụ thể thì có thể nộp đơn xin theo học Ngành học tiền chính thức được gọi là ICS Undeclared. 
Tùy chọn này cho phép các sinh viên năm nhất tận dụng mọi lợi ích của một sinh viên Bren:ICS, như được tiếp cận tới cố vấn học tập để được giúp đỡ xây dựng kế hoạch học tập năm đầu, trong đó bao gồm một loạt chương trình học về khoa học điện toán phân ban thấp hơn và những khóa học về toán học thông dụng đối với mọi chuyên ngành và mang đến cho bạn một ý niệm về chuyên ngành được giảng dạy ở Bren:ICS. 
Xin lưu ý rằng những sinh viên quan tâm đến chuyên ngành Khoa học và Kỹ thuật Điện toán nên bắt đầu đăng ký theo học chuyên ngành này khi nhập học vào trường UCI vì đây là chuyên ngành có cấu trúc bài giảng kiến thức chuyên sâu.


Những số liệu nhanh

	Bạn có biết?
	Theo thống kê của CNBC, trong số 10 bằng cử nhân được trả lương cao nhất thì trong số đó Bren:ICS cấp ba bằng? Hãy xem danh sách đầy đủ tại đây.



                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/ics-undeclared-pre-major/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Undeclared Pre-Major « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Undeclared Pre-Major
                
       New freshmen who want to explore their interests in computer science and information technology before committing to a specific major may apply as ICS Undeclared. 
           
       This option gives freshmen all the benefits of being a Bren School student. An academic counselor will help you structure a first-year course plan that meets your interests and includes a core set of lower-division computer science and math courses common to all the majors. You'll learn what the Bren School majors are like and will transfer into a specific major before the start of your second year. 
           
       Note that students interested in the Computer Science and Engineering degree program are strongly encouraged to start as a CSE major at the time they enter UCI, as the major is highly structured. 


Quick Facts

    Did you know?
    According to CNBC, of the top 10 highest paying bachelor’s degrees in 2010, the Bren School offers three of them? See the complete list here.



                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/ics-undeclared-pre-major/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Ngành học tiền chính thức « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Ngành học tiền chính thức
Những sinh viên năm nhất có những mối quan tâm khác nhau trong lĩnh vực khoa học điện toán và công nghệ thông tin và muốn khám phá trước khi quyết tâm theo đuổi một chuyên ngành cụ thể thì có thể nộp đơn xin theo học Ngành học tiền chính thức được gọi là ICS Undeclared. 
Tùy chọn này cho phép các sinh viên năm nhất tận dụng mọi lợi ích của một sinh viên Bren:ICS, như được tiếp cận tới cố vấn học tập để được giúp đỡ xây dựng kế hoạch học tập năm đầu, trong đó bao gồm một loạt chương trình học về khoa học điện toán phân ban thấp hơn và những khóa học về toán học thông dụng đối với mọi chuyên ngành và mang đến cho bạn một ý niệm về chuyên ngành được giảng dạy ở Bren:ICS. 
Xin lưu ý rằng những sinh viên quan tâm đến chuyên ngành Khoa học và Kỹ thuật Điện toán nên bắt đầu đăng ký theo học chuyên ngành này khi nhập học vào trường UCI vì đây là chuyên ngành có cấu trúc bài giảng kiến thức chuyên sâu.


Những số liệu nhanh

	Bạn có biết?
	Theo thống kê của CNBC, trong số 10 bằng cử nhân được trả lương cao nhất thì trong số đó Bren:ICS cấp ba bằng? Hãy xem danh sách đầy đủ tại đây.



                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/ics-undeclared-pre-major/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
申報主修科系前課程 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     申報主修科系前課程
    	        
	       新鮮人如果在決定主修科目前，想先了解自己對資訊科學和資訊技術的哪方面有興趣，可申請資科院無主修（ICS Undeclared）身分。 
	       
	       這個選項讓新鮮人擁有貝林資科院學生的所有權益，包括能請課業輔導老師協助安排第一年的課程，涵蓋所有主修學生必修的初級資訊科學和數學課程，同時讓你了解貝林資科院的課程安排方式。 
	       
	       請注意，對資訊科學工程系有興趣的學生，最好在入學時就決定主修這個科系，因為本系課程安排非常嚴謹。
	   

小常識

	你知道嗎？
	根據財經媒體CNBC權威報導，2010年薪資排行前10名的學士學位中，貝林資科院就有三個科系上榜！ 完整排行榜請見 這裡。



                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/ics-undeclared-pre-major/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
전공미정 교양과정 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     전공미정 교양과정
    	        
	       특정 전공에 전념하기에 앞서 컴퓨터 과학과 IT에 대한 관심을 우선 파헤치고 싶은 신입생은 ICS 전공미정 상태로 지원할 수 있습니다. 
	       
	       이 옵션을 선택한 신입생은 학업 카운슬러 이용을 비롯하여 Bren:ICS 학생으로서의 혜택을 모두 누릴 수 있습니다. 참고로, 학업 카운슬러는 전공에 공통으로 들어가는 교양과정의 필수 컴퓨터 과학과 수학 과정을 포함시켜 1학년 학업 계획을 세울 수 있게 도와주고 Bren:ICS의 학업 진로가 어떨지 알려줍니다. 
	       
	       컴퓨터 과학 및 공학 전공에 관심이 있는 학생들은 UCI에 입학할 때 대단히 체계적인 이 전공을 선택하는 것이 정말 좋습니다.


잠깐 정보

	알고 계시나요?
	CNBC에 따르면, 2010년에 가장 높은 임금을 받은 학사 학위 10개 중 3개를 Bren:ICS에서 제공한다고 합니다. 전체 목록은 여기에서 확인하십시오.



                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/ics-undeclared-pre-major/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Undeclared Pre-Major « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Undeclared Pre-Major
                
       New freshmen who want to explore their interests in computer science and information technology before committing to a specific major may apply as ICS Undeclared. 
           
       This option gives freshmen all the benefits of being a Bren School student. An academic counselor will help you structure a first-year course plan that meets your interests and includes a core set of lower-division computer science and math courses common to all the majors. You'll learn what the Bren School majors are like and will transfer into a specific major before the start of your second year. 
           
       Note that students interested in the Computer Science and Engineering degree program are strongly encouraged to start as a CSE major at the time they enter UCI, as the major is highly structured. 


Quick Facts

    Did you know?
    According to CNBC, of the top 10 highest paying bachelor’s degrees in 2010, the Bren School offers three of them? See the complete list here.



                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/opportunities/research/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
연구 « 기회 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                기회
Bren:ICS의 교육은 단순한 교육과정 그 이상을 선사합니다.            
            

            

                응용 학습우등생연구창업                    
            
                    
            
     연구
    	     
    	     
    	     Bren:ICS에서는 매 학기 수십 명의 학부생들이 교수진과 함께 연구 프로젝트를 수행합니다. 전제 조건은 없습니다. 교수와의 공동 연구에 동의하면, 원하는 동안 연구를 계속할 수 있습니다.
    	     
    	     
    	     
    	     교수들과 함께 직접 연구함으로써, 여러분은 최첨단 연구가 어떤 것인지 미리 맛볼 수 있을 뿐 아니라 대학원이 어떨지 대략적으로나마 체험할 수 있습니다. 많은 학부생들이 교수와 함께 연구를 할 뿐 아니라, 이들의 석박사급 학생들과도 긴밀히 연구하고 있습니다. 
    	     
    	     
    	     
    	     여러분이 바로 팀의 일원이 되는 것입니다. 그래서, 학부생 연구원들도 과학 출판물을 공동 집필하는 기회가 드물지 않습니다. 실제로 일부는 노력해서 제 1 저자에 오르기도 합니다. 
    	     
    	     
    	     
    	     학부생 연구원이 되면, 아직 정의되는 과정에 있는 복잡한 문제에 대한 기술을 연마하고, 연구 프로젝트의 성공에 기여하는 것이 무엇인지 이해할 수 있습니다. 또한 학부생 연구에 참여하면 대학원이나 전문(MBA, 법률 등) 대학원에 들어가는 데도 도움이 됩니다. 본교 졸업생들은 스탠퍼드, UCLA, UC 버클리, UC 샌디에이고, 카네기 멜론 대학, 조지아 공과대학, 컬럼비아, 하버드, MIT 등과 같은 명문대에 진학합니다.
    	     
    	     
    	     
              UCI의 HIPerWall은 25600x8000 화소를 표시할 수 있습니다.
    	     

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/opportunities/research/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Nghiên cứu « CƠ HỘI « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                CƠ HỘI
Chương trình đào tạo của Bren:ICS đem đến cho bạn không chỉ những kiến thức trên giảng đường            
            

            

                Nghiên cứu Ứng dụngChương trình danh dựNghiên cứuQuản trị doanh nghiệp                    
            
                    
            
     Nghiên cứu

Mỗi học kỳ ở Bren:ICS, nhiều sinh viên theo học hệ đại học (kể cả sinh viên năm nhất và năm thứ hai) tham gia thực hiện các dự án nghiên cứu với đội ngũ giảng viên. Không có yêu cầu tiên quyết. Một khi bạn và một vị giáo sư đồng ý làm việc cùng nhau, bạn có thể làm việc với vị giáo sư này bao lâu cũng được. 

Khi làm việc trực tiếp với các giáo sư, bạn không chỉ cảm nhận được công việc nghiên cứu như thế nào mà còn hình dung được nghiên cứu bậc cao học sẽ như thế nào. Nhiều sinh viên đại học không chỉ làm việc trực tiếp với giảng viên trong đội ngũ cán bộ giảng dạy, mà còn làm việc chặt chẽ với những nghiên cứu sinh đang theo học Tiến sĩ và Thạc sĩ được giảng viên trong đội ngũ cán bộ giảng dạy tuyển dụng. 

Bạn trở thành một phần của đội ngũ những nghiên cứu sinh đó. Những nhà nghiên cứu đang còn đang là sinh viên đại học được đứng tên đồng tác giả trên các xuất bản phẩm khoa học là điều ít có. Nhưng trên thực tế đã có một số sinh viên với sự nỗ lực hết sức mình và đã trở thành các tác giả. 

Với tư cách là nhà nghiên cứu đang còn là sinh viên đại học, bạn sẽ có cơ hội nâng cao các kỹ năng xử lý những vấn đề phức tạp hiện vẫn còn đang được đưa ra tranh luận, và bạn hiểu được những gì đóng góp nên sự thành công của dự án nghiên cứu. Tham gia vào chương trình nghiên cứu hệ đại học cũng giúp rộng mở con đường theo học hệ cao học hoặc đào tạo chuyên nghiệp (Quản trị kinh doanh, Luật.vv...). Các cựu sinh viên của chúng tôi đạt được thành tích cao tại các trường Đại học Stanford, UCLA, UC Berkeley, UC San Diego, Carnegie Mellon University, Georgia Tech, Columbia, Harvard, MIT, và nhiều trường khác. 


HIPerWall của UCI có thể hiển thị ở độ phân giải 25600x8000 


                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/opportunities/research/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Nghiên cứu « CƠ HỘI « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                CƠ HỘI
Chương trình đào tạo của Bren:ICS đem đến cho bạn không chỉ những kiến thức trên giảng đường            
            

            

                Nghiên cứu Ứng dụngChương trình danh dựNghiên cứuQuản trị doanh nghiệp                    
            
                    
            
     Nghiên cứu

Mỗi học kỳ ở Bren:ICS, nhiều sinh viên theo học hệ đại học (kể cả sinh viên năm nhất và năm thứ hai) tham gia thực hiện các dự án nghiên cứu với đội ngũ giảng viên. Không có yêu cầu tiên quyết. Một khi bạn và một vị giáo sư đồng ý làm việc cùng nhau, bạn có thể làm việc với vị giáo sư này bao lâu cũng được. 

Khi làm việc trực tiếp với các giáo sư, bạn không chỉ cảm nhận được công việc nghiên cứu như thế nào mà còn hình dung được nghiên cứu bậc cao học sẽ như thế nào. Nhiều sinh viên đại học không chỉ làm việc trực tiếp với giảng viên trong đội ngũ cán bộ giảng dạy, mà còn làm việc chặt chẽ với những nghiên cứu sinh đang theo học Tiến sĩ và Thạc sĩ được giảng viên trong đội ngũ cán bộ giảng dạy tuyển dụng. 

Bạn trở thành một phần của đội ngũ những nghiên cứu sinh đó. Những nhà nghiên cứu đang còn đang là sinh viên đại học được đứng tên đồng tác giả trên các xuất bản phẩm khoa học là điều ít có. Nhưng trên thực tế đã có một số sinh viên với sự nỗ lực hết sức mình và đã trở thành các tác giả. 

Với tư cách là nhà nghiên cứu đang còn là sinh viên đại học, bạn sẽ có cơ hội nâng cao các kỹ năng xử lý những vấn đề phức tạp hiện vẫn còn đang được đưa ra tranh luận, và bạn hiểu được những gì đóng góp nên sự thành công của dự án nghiên cứu. Tham gia vào chương trình nghiên cứu hệ đại học cũng giúp rộng mở con đường theo học hệ cao học hoặc đào tạo chuyên nghiệp (Quản trị kinh doanh, Luật.vv...). Các cựu sinh viên của chúng tôi đạt được thành tích cao tại các trường Đại học Stanford, UCLA, UC Berkeley, UC San Diego, Carnegie Mellon University, Georgia Tech, Columbia, Harvard, MIT, và nhiều trường khác. 


HIPerWall của UCI có thể hiển thị ở độ phân giải 25600x8000 


                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/opportunities/research/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
연구 « 기회 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                기회
Bren:ICS의 교육은 단순한 교육과정 그 이상을 선사합니다.            
            

            

                응용 학습우등생연구창업                    
            
                    
            
     연구
    	     
    	     
    	     Bren:ICS에서는 매 학기 수십 명의 학부생들이 교수진과 함께 연구 프로젝트를 수행합니다. 전제 조건은 없습니다. 교수와의 공동 연구에 동의하면, 원하는 동안 연구를 계속할 수 있습니다.
    	     
    	     
    	     
    	     교수들과 함께 직접 연구함으로써, 여러분은 최첨단 연구가 어떤 것인지 미리 맛볼 수 있을 뿐 아니라 대학원이 어떨지 대략적으로나마 체험할 수 있습니다. 많은 학부생들이 교수와 함께 연구를 할 뿐 아니라, 이들의 석박사급 학생들과도 긴밀히 연구하고 있습니다. 
    	     
    	     
    	     
    	     여러분이 바로 팀의 일원이 되는 것입니다. 그래서, 학부생 연구원들도 과학 출판물을 공동 집필하는 기회가 드물지 않습니다. 실제로 일부는 노력해서 제 1 저자에 오르기도 합니다. 
    	     
    	     
    	     
    	     학부생 연구원이 되면, 아직 정의되는 과정에 있는 복잡한 문제에 대한 기술을 연마하고, 연구 프로젝트의 성공에 기여하는 것이 무엇인지 이해할 수 있습니다. 또한 학부생 연구에 참여하면 대학원이나 전문(MBA, 법률 등) 대학원에 들어가는 데도 도움이 됩니다. 본교 졸업생들은 스탠퍼드, UCLA, UC 버클리, UC 샌디에이고, 카네기 멜론 대학, 조지아 공과대학, 컬럼비아, 하버드, MIT 등과 같은 명문대에 진학합니다.
    	     
    	     
    	     
              UCI의 HIPerWall은 25600x8000 화소를 표시할 수 있습니다.
    	     

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/opportunities/research/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
研究 « 機會 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                機會
貝林資科院的教育不只是唸書            
            

            

                應用所學榮譽學生研究創業精神                    
            
                    
            
     研究
    	     
    	     
    	     貝林資科院每季都有幾十名大學生（包括大一、大二生）和教授共同做研究。 研究課程沒有擋修制度。 只要你和教授都同意，就能一起做研究，直到你沒有意願為止。
    	     
    	     
    	     
    	     直接和教授合作不但能見識前衛研究的運作方式，也能一窺研究所的樣貌。 許多大學生不但與教授搭配研究，也和教授聘請的博士生和碩士生密切合作。
    	     
    	     
    	     
    	     這時你就成為團隊的一份子。 因此大學生研究員有時也能在科學刊物中列為共同作者。 某些學生更能主導研究，名列主要作者。
    	     
    	     
    	     
    	     擔任大學生研究員的好處，在於能學會解決尚未釐清的複雜問題，並且了解研究專題必須具備的成功要件。 參加大學生研究活動，對於申請研究所或專業學院（企管碩士、法律……等等）也有加分效果。 本校校友在史丹佛、UCLA、加大柏克萊分校、加大聖地牙哥分校、卡內基美隆、喬治亞理工、哥倫比亞、哈佛、麻省理工……等校都有傑出表現。
    	     
    	     
    	     
              加大爾灣分校的HIPerWall可顯示25600x8000個像素
    	     

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/opportunities/research/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Research « Opportunities « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Opportunities
A Bren School education provides you with more than just course work            
            

            

                Applied LearningHonorsResearchEntrepreneurship                    
            
                    
            
     Research
             
             
             Every quarter in the Bren School, scores of undergraduate students (including first- and second-year students) work on research projects with faculty. There is no prerequisite. If you and a professor agree to work together, you can, for as long as you want to.
             
             
             
             By working directly with professors, you not only get a taste of what cutting-edge research is like, you also get a preview of what graduate school might be like. Many undergraduates work not only with the faculty member, but also closely with the Ph.D. and M.S. students that the faculty member may employ.
             
             
             
             You become part of a team. As a result, it is not uncommon for undergraduate researchers to be co-authors on scientific publications. Some, indeed, have led these efforts and are first authors.
             
             
             
             As an undergraduate researcher, you will sharpen your skills on complex problems that are still in the process of being defined, and understand what contributes to a research project’s success. Participation in undergraduate research also positions you well to attend graduate or professional (MBA, Law, etc.) schools. Our alumni succeed at Stanford, UCLA, UC Berkeley, UC San Diego, Carnegie Mellon University, Georgia Tech, Columbia, Harvard, MIT, and others.
             
             
             
             
             UCI’s HIPerWall can display 25600x8000 pixels
             

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/opportunities/research/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Research « Opportunities « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Opportunities
A Bren School education provides you with more than just course work            
            

            

                Applied LearningHonorsResearchEntrepreneurship                    
            
                    
            
     Research
             
             
             Every quarter in the Bren School, scores of undergraduate students (including first- and second-year students) work on research projects with faculty. There is no prerequisite. If you and a professor agree to work together, you can, for as long as you want to.
             
             
             
             By working directly with professors, you not only get a taste of what cutting-edge research is like, you also get a preview of what graduate school might be like. Many undergraduates work not only with the faculty member, but also closely with the Ph.D. and M.S. students that the faculty member may employ.
             
             
             
             You become part of a team. As a result, it is not uncommon for undergraduate researchers to be co-authors on scientific publications. Some, indeed, have led these efforts and are first authors.
             
             
             
             As an undergraduate researcher, you will sharpen your skills on complex problems that are still in the process of being defined, and understand what contributes to a research project’s success. Participation in undergraduate research also positions you well to attend graduate or professional (MBA, Law, etc.) schools. Our alumni succeed at Stanford, UCLA, UC Berkeley, UC San Diego, Carnegie Mellon University, Georgia Tech, Columbia, Harvard, MIT, and others.
             
             
             
             
             UCI’s HIPerWall can display 25600x8000 pixels
             

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/opportunities/honors/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
우등생 « 기회 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                기회
Bren:ICS의 교육은 단순한 교육과정 그 이상을 선사합니다.            
            

            

                응용 학습우등생연구창업                    
            
                    
            
     우등생
    	        
	           
	           UCI는 Bren:ICS 학생이라면 신청할 수 있는 강력한 우등생 프로그램(CHP, Campuswide Honors Program)을 갖추고 있습니다. 이 프로그램은 엄선된 이벤트, 동료 멘토링, 우등생들끼리 모여서 공부하고 친목을 다지는 캠퍼스 "스터디 모임", 우등생 기숙사, 특별 연구 기회를 제공합니다. Bren:ICS는 전통적으로 CHIP 프로그램으로 강력한 두각을 나타내고 있습니다.
	           
	           
	           
	           Bren:ICS는 자체 연구 우등생 프로그램도 갖추고 있습니다. 3학년과 4학년은 연구 과정에 대해 배우고 상담 교수와 함께 심화 작업에 참여할 기회를 갖습니다. 이 프로그램에 들어온 학생들은 우등생 세미나에 참여하고, 상담 교수의 지도 아래 (최소 2학기 동안) 독립 연구를 실시하며, 연구 논문을 써서 해당 학생 담당 상담 교수와 우등생 프로그램 책임 교수의 검토를 받습니다.
	           
	           
	           
               교내 우등생 프로그램
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/informatics/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
정보학 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     정보학
     
	       
	       이 전공은 실제 현장에서 소프트웨어 어플리케이션이 어떤 부분에, 어떻게 사용되는지에 초점을 맞춰 소프트웨어 어플리케이션을 설계, 개발하고 평가하는 방법을 연구합니다.
	       
	    
	        
	        실제 본보기와 사례 연구를 통해 학생들은 공학과 설계, 인간과 컴퓨터 간의 상호작용, 컴퓨터 지원 협업, 정보 시각화, IT가 조직과 사회에 미치는 영향에 대한 탄탄한 기초 교육을 받습니다.
	        
    	    
	        
	        우리는 끊임없이 소프트웨어와 상호작용하고 소프트웨어에 의해 주도되는 디지털 사회에 살고 있습니다. 효과적이며 사용 가능한 소프트웨어 시스템의 설계 방법을 배우는 데 관심이 있는 학생들은 이 전공을 탐구하는 것이 좋습니다.
	        
	        
	        
                 정보학 첫 졸업반(2008년)
	        

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/uci/campus/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
캠퍼스 « UC Irvine « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                UC Irvine
UC 어바인은 풍부하고 다양한 공동체의 고향입니다.            
            

            

                브렌 스쿨캠퍼스어바인 시학생 지원 서비스                    
            
                    
            
     캠퍼스
    	        
	           
	           캘리포니아 대학교 어바인은 캘리포니아 전역의 생활을 개선하고 지구 곳곳의 공동체에 도움을 주는 연구, 발견, 학문 활동의 선봉에 서있습니다.  본교 졸업생들은 예술, 과학, 비즈니스, 교육 등 각계각층의 지도자로 활동하고 있습니다. 그 중에는 퓰리처상 수상자 3명과 전 세계에서 활용 중인 “HTTP/1.1” 인터넷 프로토콜의 설계자도 있습니다.
	           
	           
	           
	           학부 교육을 위한 최상의 선택으로 꼽히는 UCI의 재학생들은 연구와 멘토링을 통해 쉽게 만날 수 있는 인기 교수, 의학, 법률, 비즈니스, 교육 및 예술 분야의 훌륭한 전문 대학원, 아름다운 교외 캠퍼스, 수상 경력에 빛나는 학생 기숙사, 일년 내내 열리는 흥미로운 캠퍼스 이벤트, 오늘날 같은 상호의존적 세계에서 성공할 수 있도록 도와주는 최고의 학업 및 리더십 준비과정을 체험할 수 있습니다.
	           
	           
	           
	           UCI에 관한 자세한 내용은 http://www.uci.edu/prospective.php를 참조하십시오.
	           
	           
	           
                UCI 졸업식
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/uci/bren-school/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
브렌 스쿨 « UC Irvine « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                UC Irvine
UC 어바인은 풍부하고 다양한 공동체의 고향입니다.            
            

            

                브렌 스쿨캠퍼스어바인 시학생 지원 서비스                    
            
                    
            
     브렌 스쿨
    	        
	           
	           2002년 캘리포니아 대학교(UC)에 첫 번째 컴퓨터 과학 대학을 설립함으로써 UC 어바인은 수월성에 대한 기준을 높이겠다는 역사적인 약속을 반영한 미래 투자를 단행했습니다.
	           
	           
	           
	           브렌 스쿨(Bren School)은 1968년 하나의 학과로 출발했습니다. 그로부터 35년 후 대학으로 정식 인정을 받았으며, 2004년 6월에는 Donald Bren의 후한 기부와 선지적 리더십을 인정하여 Donald Bren School of Information and Computer Sciences로 이름이 바뀌었습니다.
	           
	           
	           
	           
	           오로지 컴퓨터와 정보 과학에만 집중하는 독립 대학인 브렌 스쿨은 정보기술(IT) 분야에 대한 고유한 시각을 갖고 있습니다. 그래서 회로와 시스템부터 소프트웨어 공학과 인간 측면의 컴퓨팅에 이르기까지, 컴퓨팅 학문의 많은 응용을 탐구하는 교육 프로그램과 연구 프로젝트를 진행할 수 있는 폭넓은 기반을 제공합니다.
	           
	           
	           
	           브렌 스쿨은 미래 문제를 해결하기 위해 여러 학문에서 연구와 교육을 혼합하면서 학제적 노력을 이끌고 있습니다. 
	           
	           
	           
	           Bren:ICS 교육을 선택하는 10가지 가장 큰 이유, 'Bren:10'을 여기를 클릭해서 다운로드하십시오.
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/uci/student-services/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Dịch vụ Sinh viên « UC Irvine « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                UC Irvine
UC Irvine là nơi hội tụ của một cộng đồng phong phú và đa dạng            
            

            

                Đại học BrenKhuôn viên trườngThành phố IrvineDịch vụ Sinh viên                    
            
                    
            
     Dịch vụ Sinh viên

Trường cung cấp cho các sinh viên hàng loạt những chương trình toàn diện và các dịch vụ được thiết kế để giúp các sinh viên tối đa hóa trải nghiệm học tập của họ ở UCI bằng cách: 
củng cố các kỹ năng thành công của sinh viên;tạo điều kiện cho nhu cầu tham gia và khả năng lãnh đạo của sinh viên; vàbảo vệ và nâng cao sức khỏe thể chất, tinh thần và quan hệ xã hội của sinh viên.

Những dịch vụ này được cung cấp miễn phí cho các sinh viên đã đăng ký, để tìm hiểu thêm về các dịch vụ hãy truy cập: http://www.admissions.uci.edu/campus_life/student_services.html


                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/uci/student-services/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Student Services « UC Irvine « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                UC Irvine
UC Irvine is home to a rich and diverse community            
            

            

                Bren SchoolCampusCity of IrvineStudent Services                    
            
                    
            
     Student Services
    	        
	         
	         The campus offers students a comprehensive range of programs and services designed to help students maximize their learning experiences while at UCI by:
	         
	         
	         strengthening student success skills;facilitating student participation and leadership; andprotecting and enhancing the physical, social and mental well-being of students.
	         
	         
	             
	         
	         Learn more about these services, available free of charge to all registered students: http://www.admissions.uci.edu/campus_life/student_services.html
	         

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/uci/student-services/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
學生服務 « UC Irvine « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                UC Irvine
加大爾灣分校族群豐富多元            
            

            

                貝林學院校園環境爾灣市區學生服務                    
            
                    
            
     學生服務
    	        
	         
	         本校園提供完整的課程與服務，並藉由以下重點事項，讓學生在加大爾灣分校就讀期間，擁有最好的學習環境：
	         
	         
	         加強學生未來成功所需的技能鼓勵學生參加活動並培養領導能力加強、保障學生的身心健康與人際關係
	             
	         
	         深入了解所有註冊學生都能免費享有的服務： http://www.admissions.uci.edu/campus_life/student_services.html
	         

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/uci/student-services/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Student Services « UC Irvine « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                UC Irvine
UC Irvine is home to a rich and diverse community            
            

            

                Bren SchoolCampusCity of IrvineStudent Services                    
            
                    
            
     Student Services
    	        
	         
	         The campus offers students a comprehensive range of programs and services designed to help students maximize their learning experiences while at UCI by:
	         
	         
	         strengthening student success skills;facilitating student participation and leadership; andprotecting and enhancing the physical, social and mental well-being of students.
	         
	         
	             
	         
	         Learn more about these services, available free of charge to all registered students: http://www.admissions.uci.edu/campus_life/student_services.html
	         

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/uci/student-services/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Dịch vụ Sinh viên « UC Irvine « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                UC Irvine
UC Irvine là nơi hội tụ của một cộng đồng phong phú và đa dạng            
            

            

                Đại học BrenKhuôn viên trườngThành phố IrvineDịch vụ Sinh viên                    
            
                    
            
     Dịch vụ Sinh viên

Trường cung cấp cho các sinh viên hàng loạt những chương trình toàn diện và các dịch vụ được thiết kế để giúp các sinh viên tối đa hóa trải nghiệm học tập của họ ở UCI bằng cách: 
củng cố các kỹ năng thành công của sinh viên;tạo điều kiện cho nhu cầu tham gia và khả năng lãnh đạo của sinh viên; vàbảo vệ và nâng cao sức khỏe thể chất, tinh thần và quan hệ xã hội của sinh viên.

Những dịch vụ này được cung cấp miễn phí cho các sinh viên đã đăng ký, để tìm hiểu thêm về các dịch vụ hãy truy cập: http://www.admissions.uci.edu/campus_life/student_services.html


                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/uci/city-of-irvine/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
City of Irvine « UC Irvine « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                UC Irvine
UC Irvine is home to a rich and diverse community            
            

            

                Bren SchoolCampusCity of IrvineStudent Services                    
            
                    
            
     City of Irvine
    	        
	        
	        The city of Irvine, consistently ranked as one of the safest large cities in America, enjoys a highly educated and diverse population so those new to the city feel right at home.  Known as America’s “Most Successful Planned Community,” Irvine encompasses more than 65 square miles and enjoys a Mediterranean climate in a very clean and family-oriented environment in the heart of Orange County.  And, Orange County offers wildlife sanctuaries, ecological reserves, nearby desert and mountain resorts, and 42 miles of Pacific Ocean coastline for residents to enjoy.
	        
	        
	        
	        With over 14,000 U.S. and foreign companies of all sizes, Irvine offers abundant career opportunities. International businesses in Irvine represent the industries of banking and finance, electronics, manufacturing, biotechnology/medicine, and design. 
	        
	        
	        
	        Learn more about Irvine: http://www.cityofirvine.org/.
	        

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/uci/city-of-irvine/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Thành phố Irvine « UC Irvine « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                UC Irvine
UC Irvine là nơi hội tụ của một cộng đồng phong phú và đa dạng            
            

            

                Đại học BrenKhuôn viên trườngThành phố IrvineDịch vụ Sinh viên                    
            
                    
            
     Thành phố Irvine

Thành phố Irvine, liên tục được xếp hạng là một trong những thành phố lớn an toàn nhất Hoa Kỳ, nơi đây có dân số đa dạng và có trình độ học vấn cao vì thế những người mới đặt chân đến thành phố cứ ngỡ như đang ở quê nhà. Được biết đến là “Cộng đồng Quy hoạch Thành công nhất” của Hoa Kỳ, thành phố Irvine tọa lạc ở trung tâm của Quận Cam có diện tích trải rộng hơn 65 dặm vuông với khí hậu Địa Trung Hải, môi trường sạch sẽ và người dân coi trọng giá trị gia đình. Ngoài ra, Quận Cam có ý thức bảo vệ đời sống động vật hoang dã, bảo tồn hệ sinh thái với sa mạc gần kề và những khu nghỉ dưỡng vùng núi cộng thêm 42 dặm bờ biển Thái Bình Dương để cư dân tận hưởng cuộc sống. 

Với hơn 14.000 công ty trong nước và nước ngoài thuộc mọi quy mô, thành phần đem đến cho thành phố Irvine vô vàn cơ hội việc làm. Các doanh nghiệp quốc tế hoạt động ở Irvine thuộc các lĩnh vực như ngân hàng và tài chính, điện tử, chế tạo, công nghệ sinh học/y học và thiết kế. 

Tìm hiểu thêm về thành phố Irvine: http://www.cityofirvine.org/. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/uci/city-of-irvine/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
City of Irvine « UC Irvine « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                UC Irvine
UC Irvine is home to a rich and diverse community            
            

            

                Bren SchoolCampusCity of IrvineStudent Services                    
            
                    
            
     City of Irvine
    	        
	        
	        The city of Irvine, consistently ranked as one of the safest large cities in America, enjoys a highly educated and diverse population so those new to the city feel right at home.  Known as America’s “Most Successful Planned Community,” Irvine encompasses more than 65 square miles and enjoys a Mediterranean climate in a very clean and family-oriented environment in the heart of Orange County.  And, Orange County offers wildlife sanctuaries, ecological reserves, nearby desert and mountain resorts, and 42 miles of Pacific Ocean coastline for residents to enjoy.
	        
	        
	        
	        With over 14,000 U.S. and foreign companies of all sizes, Irvine offers abundant career opportunities. International businesses in Irvine represent the industries of banking and finance, electronics, manufacturing, biotechnology/medicine, and design. 
	        
	        
	        
	        Learn more about Irvine: http://www.cityofirvine.org/.
	        

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/uci/city-of-irvine/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
爾灣市區 « UC Irvine « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                UC Irvine
加大爾灣分校族群豐富多元            
            

            

                貝林學院校園環境爾灣市區學生服務                    
            
                    
            
     爾灣市區
    	        
	        
	        爾灣市的治安在全美大城市中向來名列前茅，居民教育水準高、族群眾多，所以剛來此地的人馬上就能隨遇而安。  爾灣市以全美「規劃最成功的社區」著稱，面積達65平方英里、屬地中海型氣候。環境整潔、適合全家居住，位於橘郡核心地帶。  另外橘郡也有野生動物保護區、生態保護區、鄰近沙漠和山區渡假聖地，還有綿延42英里的太平洋海岸，供當地居民休閒娛樂。
	        
	        
	        
	        爾灣市有14,000多家規模不等的本土和外資企業，提供充分的就業機會。 這裡有屬於金融業、電子業、製造業、生技業、醫療業和設計業的跨國公司。 
	        
	        
	        
	        爾灣市詳細介紹： http://www.cityofirvine.org/。
	        

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/uci/city-of-irvine/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Thành phố Irvine « UC Irvine « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                UC Irvine
UC Irvine là nơi hội tụ của một cộng đồng phong phú và đa dạng            
            

            

                Đại học BrenKhuôn viên trườngThành phố IrvineDịch vụ Sinh viên                    
            
                    
            
     Thành phố Irvine

Thành phố Irvine, liên tục được xếp hạng là một trong những thành phố lớn an toàn nhất Hoa Kỳ, nơi đây có dân số đa dạng và có trình độ học vấn cao vì thế những người mới đặt chân đến thành phố cứ ngỡ như đang ở quê nhà. Được biết đến là “Cộng đồng Quy hoạch Thành công nhất” của Hoa Kỳ, thành phố Irvine tọa lạc ở trung tâm của Quận Cam có diện tích trải rộng hơn 65 dặm vuông với khí hậu Địa Trung Hải, môi trường sạch sẽ và người dân coi trọng giá trị gia đình. Ngoài ra, Quận Cam có ý thức bảo vệ đời sống động vật hoang dã, bảo tồn hệ sinh thái với sa mạc gần kề và những khu nghỉ dưỡng vùng núi cộng thêm 42 dặm bờ biển Thái Bình Dương để cư dân tận hưởng cuộc sống. 

Với hơn 14.000 công ty trong nước và nước ngoài thuộc mọi quy mô, thành phần đem đến cho thành phố Irvine vô vàn cơ hội việc làm. Các doanh nghiệp quốc tế hoạt động ở Irvine thuộc các lĩnh vực như ngân hàng và tài chính, điện tử, chế tạo, công nghệ sinh học/y học và thiết kế. 

Tìm hiểu thêm về thành phố Irvine: http://www.cityofirvine.org/. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/uci/campus/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Khuôn viên trường « UC Irvine « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                UC Irvine
UC Irvine là nơi hội tụ của một cộng đồng phong phú và đa dạng            
            

            

                Đại học BrenKhuôn viên trườngThành phố IrvineDịch vụ Sinh viên                    
            
                    
            
     Khuôn viên trường

Đại học California, Irvine dẫn đầu về hoạt động nghiên cứu, khám phá, và nỗ lực hết sức mình về công tác giảng dạy giúp nâng cao đời sống toàn bang California và đem lại ích lợi cho các cộng đồng trên khắp thế giới. Những sinh viên tốt nghiệp từ trường chúng tôi có những người làm lãnh đạo trong các lĩnh vực nghệ thuật, khoa học và giáo dục - tất cả mọi phương diện của đời sống. Trong số đó có ba người giành Giải Pulitzer và một người là kiến trúc sư của giao thức mạng “HTTP/1.1” đang được sử dụng trên toàn thế giới. 

Thêm vào đó là một sự lựa chọn đỉnh cao cho chương trình giáo dục hệ đại học là những sinh viên đến theo học tại UCI nhận thấy rằng đội ngũ giảng viên ưu tú luôn sẵn sàng giúp đỡ và dìu dắt các sinh viên trong học tập và nghiên cứu; những trường đại học chuyên nghiệp ưu việt thuộc các lĩnh vực y khoa, luật, kinh doanh, sư phạm và nghệ thuật; khuôn viên đại học ngoại ô tươi đẹp; khu nhà ở dành cho sinh viên được đánh giá cao; những sự kiện thú vị được tổ chức quanh năm; và chương trình giảng dạy trang bị kiến thức học thuật và khả năng lãnh đạo vô song giúp các sinh viên đạt được thành công trong thế giới tương thuộc ngày nay. 

Tìm hiểu thêm về UCI: http://www.uci.edu/prospective.php. 


Lễ trao bằng tốt nghiệp tại UCI 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/uci/campus/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
캠퍼스 « UC Irvine « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                UC Irvine
UC 어바인은 풍부하고 다양한 공동체의 고향입니다.            
            

            

                브렌 스쿨캠퍼스어바인 시학생 지원 서비스                    
            
                    
            
     캠퍼스
    	        
	           
	           캘리포니아 대학교 어바인은 캘리포니아 전역의 생활을 개선하고 지구 곳곳의 공동체에 도움을 주는 연구, 발견, 학문 활동의 선봉에 서있습니다.  본교 졸업생들은 예술, 과학, 비즈니스, 교육 등 각계각층의 지도자로 활동하고 있습니다. 그 중에는 퓰리처상 수상자 3명과 전 세계에서 활용 중인 “HTTP/1.1” 인터넷 프로토콜의 설계자도 있습니다.
	           
	           
	           
	           학부 교육을 위한 최상의 선택으로 꼽히는 UCI의 재학생들은 연구와 멘토링을 통해 쉽게 만날 수 있는 인기 교수, 의학, 법률, 비즈니스, 교육 및 예술 분야의 훌륭한 전문 대학원, 아름다운 교외 캠퍼스, 수상 경력에 빛나는 학생 기숙사, 일년 내내 열리는 흥미로운 캠퍼스 이벤트, 오늘날 같은 상호의존적 세계에서 성공할 수 있도록 도와주는 최고의 학업 및 리더십 준비과정을 체험할 수 있습니다.
	           
	           
	           
	           UCI에 관한 자세한 내용은 http://www.uci.edu/prospective.php를 참조하십시오.
	           
	           
	           
                UCI 졸업식
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/uci/campus/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Khuôn viên trường « UC Irvine « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                UC Irvine
UC Irvine là nơi hội tụ của một cộng đồng phong phú và đa dạng            
            

            

                Đại học BrenKhuôn viên trườngThành phố IrvineDịch vụ Sinh viên                    
            
                    
            
     Khuôn viên trường

Đại học California, Irvine dẫn đầu về hoạt động nghiên cứu, khám phá, và nỗ lực hết sức mình về công tác giảng dạy giúp nâng cao đời sống toàn bang California và đem lại ích lợi cho các cộng đồng trên khắp thế giới. Những sinh viên tốt nghiệp từ trường chúng tôi có những người làm lãnh đạo trong các lĩnh vực nghệ thuật, khoa học và giáo dục - tất cả mọi phương diện của đời sống. Trong số đó có ba người giành Giải Pulitzer và một người là kiến trúc sư của giao thức mạng “HTTP/1.1” đang được sử dụng trên toàn thế giới. 

Thêm vào đó là một sự lựa chọn đỉnh cao cho chương trình giáo dục hệ đại học là những sinh viên đến theo học tại UCI nhận thấy rằng đội ngũ giảng viên ưu tú luôn sẵn sàng giúp đỡ và dìu dắt các sinh viên trong học tập và nghiên cứu; những trường đại học chuyên nghiệp ưu việt thuộc các lĩnh vực y khoa, luật, kinh doanh, sư phạm và nghệ thuật; khuôn viên đại học ngoại ô tươi đẹp; khu nhà ở dành cho sinh viên được đánh giá cao; những sự kiện thú vị được tổ chức quanh năm; và chương trình giảng dạy trang bị kiến thức học thuật và khả năng lãnh đạo vô song giúp các sinh viên đạt được thành công trong thế giới tương thuộc ngày nay. 

Tìm hiểu thêm về UCI: http://www.uci.edu/prospective.php. 


Lễ trao bằng tốt nghiệp tại UCI 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/uci/campus/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Campus « UC Irvine « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                UC Irvine
UC Irvine is home to a rich and diverse community            
            

            

                Bren SchoolCampusCity of IrvineStudent Services                    
            
                    
            
     Campus
    	        
	           
	           The University of California, Irvine is at the forefront of research, discovery, and scholarly efforts that improve lives throughout California and benefit communities in every corner of the globe.  Our graduates include leaders in the arts, sciences, business, and education – all walks of life. Among them are three Pulitzer Prize winners and the architect of the “HTTP/1.1” Internet protocol used worldwide.
	           
	           
	           
	           A top choice for undergraduate education, students who attend UCI discover stellar faculty who are easily accessible for research and mentoring; excellent professional schools in the fields of medicine, law, business, education, and the arts; a beautiful suburban campus; award-winning student housing; exciting campus events throughout the year; and unparalleled academic and leadership preparation to succeed in today’s interdependent world.
	           
	           
	           
	           Learn more about UCI: http://www.uci.edu/prospective.php.
	           
	           
	           
                   
	               Graduation at UCI
	           

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/uci/campus/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
校園環境 « UC Irvine « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                UC Irvine
加大爾灣分校族群豐富多元            
            

            

                貝林學院校園環境爾灣市區學生服務                    
            
                    
            
     校園環境
    	        
	           
	           加州大學爾灣分校走在研究、發現、學術的最前線，不但能改善加州居民的生活，也能造福世界每個角落。  本校畢業生在藝術、科學、商業和教育界都能獨當一面，各行各業都有人才。 其中有三位普立茲獎得主，還有通行全球的「HTTP/1.1」網路協定創造者。
	           
	           
	           
	           加大爾灣分校是大學教育的第一選擇。學生會發現本校不但師資陣容堅強，而且無論研究還是輔導，老師都樂意伸出援手。這裡有一流的醫科、法律、商業、教育和藝文專業學院，位於市郊的校園景色怡人、學生宿舍獲獎連連、全年都有精彩的校園活動，而且對課業和領導才能的培養無人能比，讓學生在現今唇齒相依的世界闖出一片天。
	           
	           
	           
	           加大爾灣分校詳細介紹： http://www.uci.edu/prospective.php。
	           
	           
	           
                加大爾灣分校畢業典禮
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/uci/campus/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Campus « UC Irvine « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                UC Irvine
UC Irvine is home to a rich and diverse community            
            

            

                Bren SchoolCampusCity of IrvineStudent Services                    
            
                    
            
     Campus
    	        
	           
	           The University of California, Irvine is at the forefront of research, discovery, and scholarly efforts that improve lives throughout California and benefit communities in every corner of the globe.  Our graduates include leaders in the arts, sciences, business, and education – all walks of life. Among them are three Pulitzer Prize winners and the architect of the “HTTP/1.1” Internet protocol used worldwide.
	           
	           
	           
	           A top choice for undergraduate education, students who attend UCI discover stellar faculty who are easily accessible for research and mentoring; excellent professional schools in the fields of medicine, law, business, education, and the arts; a beautiful suburban campus; award-winning student housing; exciting campus events throughout the year; and unparalleled academic and leadership preparation to succeed in today’s interdependent world.
	           
	           
	           
	           Learn more about UCI: http://www.uci.edu/prospective.php.
	           
	           
	           
                   
	               Graduation at UCI
	           

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/uci/bren-school/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Đại học Bren « UC Irvine « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                UC Irvine
UC Irvine là nơi hội tụ của một cộng đồng phong phú và đa dạng            
            

            

                Đại học BrenKhuôn viên trườngThành phố IrvineDịch vụ Sinh viên                    
            
                    
            
     Đại học Bren

Khi thành lập trường khoa học điện toán đầu tiên trong hệ thống Đại học California vào năm 2002, UC Irvine đã dốc sức đầu tư cho tương lai để thể hiện quyết tâm lịch sử của mình là nâng cao nấc thang ưu việt trong giảng dạy. 

Trường Đại học Bren ban đầu là một khoa được thành lập vào năm 1968. Hơn 35 năm sau, khoa được chính thức công nhận là một trường – và vào tháng Sáu năm 2004, trường được đổi tên thành Trường Đại học Khoa học Thông tin và Điện toán Donald Bren (Donald Bren School of Information and Computer Sciences) để ghi nhận sự đóng góp hào phóng và vai trò lãnh đạo mang tầm chiến lược của Donald Bren. 

Với tư cách là một trường tư chỉ tập trung đào tạo khoa học thông tin và điện toán, trường Đại học Bren có một triển vọng vô song về các ngành công nghệ thông tin, tạo chúng tôi một nền tảng rộng lớn mà từ đó xây dựng nên các chương trình giáo dục và những sáng kiến nghiên cứu mở ra nhiều lĩnh vực ứng dụng của chuyên ngành điện toán; từ các mạch điện và các hệ thống đến kỹ thuật phần mềm và những phương diện nhân sinh của lĩnh vực điện toán. 

Bằng việc kết hợp nghiên cứu với giáo dục trong nhiều ngành học khác nhau, trường Đại học Bren đang dẫn đầu những nỗ lực liên ngành học thuật để đáp ứng những thách thức của tương lai. 

Tải về máy Bren:10, mười lý do chính để bạn theo học tại Bren:ICS: Hãy nhấp chuột vào đây. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/uci/bren-school/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Đại học Bren « UC Irvine « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                UC Irvine
UC Irvine là nơi hội tụ của một cộng đồng phong phú và đa dạng            
            

            

                Đại học BrenKhuôn viên trườngThành phố IrvineDịch vụ Sinh viên                    
            
                    
            
     Đại học Bren

Khi thành lập trường khoa học điện toán đầu tiên trong hệ thống Đại học California vào năm 2002, UC Irvine đã dốc sức đầu tư cho tương lai để thể hiện quyết tâm lịch sử của mình là nâng cao nấc thang ưu việt trong giảng dạy. 

Trường Đại học Bren ban đầu là một khoa được thành lập vào năm 1968. Hơn 35 năm sau, khoa được chính thức công nhận là một trường – và vào tháng Sáu năm 2004, trường được đổi tên thành Trường Đại học Khoa học Thông tin và Điện toán Donald Bren (Donald Bren School of Information and Computer Sciences) để ghi nhận sự đóng góp hào phóng và vai trò lãnh đạo mang tầm chiến lược của Donald Bren. 

Với tư cách là một trường tư chỉ tập trung đào tạo khoa học thông tin và điện toán, trường Đại học Bren có một triển vọng vô song về các ngành công nghệ thông tin, tạo chúng tôi một nền tảng rộng lớn mà từ đó xây dựng nên các chương trình giáo dục và những sáng kiến nghiên cứu mở ra nhiều lĩnh vực ứng dụng của chuyên ngành điện toán; từ các mạch điện và các hệ thống đến kỹ thuật phần mềm và những phương diện nhân sinh của lĩnh vực điện toán. 

Bằng việc kết hợp nghiên cứu với giáo dục trong nhiều ngành học khác nhau, trường Đại học Bren đang dẫn đầu những nỗ lực liên ngành học thuật để đáp ứng những thách thức của tương lai. 

Tải về máy Bren:10, mười lý do chính để bạn theo học tại Bren:ICS: Hãy nhấp chuột vào đây. 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/uci/bren-school/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
브렌 스쿨 « UC Irvine « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                UC Irvine
UC 어바인은 풍부하고 다양한 공동체의 고향입니다.            
            

            

                브렌 스쿨캠퍼스어바인 시학생 지원 서비스                    
            
                    
            
     브렌 스쿨
    	        
	           
	           2002년 캘리포니아 대학교(UC)에 첫 번째 컴퓨터 과학 대학을 설립함으로써 UC 어바인은 수월성에 대한 기준을 높이겠다는 역사적인 약속을 반영한 미래 투자를 단행했습니다.
	           
	           
	           
	           브렌 스쿨(Bren School)은 1968년 하나의 학과로 출발했습니다. 그로부터 35년 후 대학으로 정식 인정을 받았으며, 2004년 6월에는 Donald Bren의 후한 기부와 선지적 리더십을 인정하여 Donald Bren School of Information and Computer Sciences로 이름이 바뀌었습니다.
	           
	           
	           
	           
	           오로지 컴퓨터와 정보 과학에만 집중하는 독립 대학인 브렌 스쿨은 정보기술(IT) 분야에 대한 고유한 시각을 갖고 있습니다. 그래서 회로와 시스템부터 소프트웨어 공학과 인간 측면의 컴퓨팅에 이르기까지, 컴퓨팅 학문의 많은 응용을 탐구하는 교육 프로그램과 연구 프로젝트를 진행할 수 있는 폭넓은 기반을 제공합니다.
	           
	           
	           
	           브렌 스쿨은 미래 문제를 해결하기 위해 여러 학문에서 연구와 교육을 혼합하면서 학제적 노력을 이끌고 있습니다. 
	           
	           
	           
	           Bren:ICS 교육을 선택하는 10가지 가장 큰 이유, 'Bren:10'을 여기를 클릭해서 다운로드하십시오.
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/uci/bren-school/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Bren School « UC Irvine « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                UC Irvine
UC Irvine is home to a rich and diverse community            
            

            

                Bren SchoolCampusCity of IrvineStudent Services                    
            
                    
            
     Bren School
    	        
	           
	           By establishing the University of California's first computer science school in 2002, UC Irvine made an investment in the future that reflects its historical commitment to raising the bar of excellence.
	           
	           
	           
	           The Bren School began as a department in 1968. More than 35 years later, it was formally recognized as a school – and in June 2004, we were renamed the Donald Bren School of Information and Computer Sciences in recognition of our benefactor’s generous contribution and for his visionary leadership.
	           
	           
	           
	           
	           As an independent school focused solely on the computer and information sciences, the Bren School has a unique perspective on the information technology disciplines, allowing us a broad foundation from which to build educational programs and research initiatives that explore the many applications of the computing discipline; from circuits and systems to software engineering and human aspects of computing.
	           
	           
	           
	           By blending research with education in multiple disciplines, the Bren School is leading interdisciplinary efforts in order to meet the challenges of the future.
	           
	           
	           
	           Download the Bren:10, the top 10 reasons to choose a Bren:ICS education: Click Here.
	           

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/uci/bren-school/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
貝林學院 « UC Irvine « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                UC Irvine
加大爾灣分校族群豐富多元            
            

            

                貝林學院校園環境爾灣市區學生服務                    
            
                    
            
     貝林學院
    	        
	           
	           加州大學爾灣分校在2002年成立加大第一個資訊科學院後，就積極投資未來，維持傳統信念，提升卓越的不凡標準。
	           
	           
	           
	           貝林學院在1968年時只是一個科系， 35年後正式升格學院。後來為了紀念捐款人的慷慨捐輸和前瞻願景，在2004年6月更名為Donald Bren School of Information and Computer Sciences。
	           
	           
	           
	           
	           貝林學院是電腦和資訊科學的專門獨立學院，對於資訊技術相關科目有獨到見解，因此能打下厚實基礎。所建立的教育課程和研究方案，皆能探索資訊學科的多種應用，涵蓋電路、系統、軟體工程，以及資訊科技的人文層面。
	           
	           
	           
	           貝林學院把研究工作和多種學科教育內涵冶於一爐，成為跨學科研究的先鋒部隊，足以迎向未來的挑戰。
	           
	           
	           
	           請下載「Bren:10」文件，裡面列出選擇貝林資科院的10大理由： 請按這裡。
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/uci/bren-school/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Bren School « UC Irvine « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                UC Irvine
UC Irvine is home to a rich and diverse community            
            

            

                Bren SchoolCampusCity of IrvineStudent Services                    
            
                    
            
     Bren School
    	        
	           
	           By establishing the University of California's first computer science school in 2002, UC Irvine made an investment in the future that reflects its historical commitment to raising the bar of excellence.
	           
	           
	           
	           The Bren School began as a department in 1968. More than 35 years later, it was formally recognized as a school – and in June 2004, we were renamed the Donald Bren School of Information and Computer Sciences in recognition of our benefactor’s generous contribution and for his visionary leadership.
	           
	           
	           
	           
	           As an independent school focused solely on the computer and information sciences, the Bren School has a unique perspective on the information technology disciplines, allowing us a broad foundation from which to build educational programs and research initiatives that explore the many applications of the computing discipline; from circuits and systems to software engineering and human aspects of computing.
	           
	           
	           
	           By blending research with education in multiple disciplines, the Bren School is leading interdisciplinary efforts in order to meet the challenges of the future.
	           
	           
	           
	           Download the Bren:10, the top 10 reasons to choose a Bren:ICS education: Click Here.
	           

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/opportunities/honors/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Chương trình danh dự « CƠ HỘI « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                CƠ HỘI
Chương trình đào tạo của Bren:ICS đem đến cho bạn không chỉ những kiến thức trên giảng đường            
            

            

                Nghiên cứu Ứng dụngChương trình danh dựNghiên cứuQuản trị doanh nghiệp                    
            
                    
            
     Chương trình danh dự

UCI cung cấp một chương trình danh dự sôi nổi (CHP, Chương trình Danh dự Liên trường - Campuswide Honors Program), trong đó các sinh viên trường Bren:ICS hội đủ điều kiện tham gia. Chương trình này tổ chức các sự kiện có chọn lọc, dịch vụ gia sư đồng môn, khuôn viên “tụ tập” nơi bạn và bạn học, những sinh viên tham gia chương trình danh dự cùng nhau tụ họp, làm việc và giao tiếp với nhau, chia sẻ nhà ở theo chương trình danh dự và những cơ hội nghiên cứu đặc biệt. Bren:ICS đã gây dựng được hình ảnh nổi bật trong chương trình CHP. 

Bren:ICS cũng cung cấp loạt chương trình danh dự của riêng mình. Những sinh viên năm áp chót và các sinh viên năm cuối có cơ hội tìm hiểu về quy trình nghiên cứu và tham gia vào các công việc đòi hỏi kiến thức và kỹ năng cao cấp với một cố vấn của khoa. Những sinh viên được nhận vào chương trình đều tham gia vào các cuộc hội thảo danh dự, thực hiện nghiên cứu độc lập dưới sự hướng dẫn của một cố vấn khoa (tối thiểu là hai học kỳ), và viết bài luận để cố vấn khoa và Giám đốc Khoa phụ trách Chương trình Danh dự duyệt xét. 


Chương trình Danh dự Liên trường 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/informatics/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Tin học « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Tin học

Chuyên ngành này giảng dạy phương thức thiết kế, phát triển và đánh giá các ứng dụng phần mềm tập trung vào cách thức và địa điểm triển khai phần mềm trong thế giới thực. 

Trải nghiệm qua những ví dụ ở thế giới thực và các nghiên cứu theo từng trường hợp trong suốt khóa học, các sinh viên được trang bị kiến thức nền tảng vững chắc về công nghệ và thiết kế phần mềm, giao tiếp con người-máy tính, làm việc theo nhóm có sự hỗ trợ của máy tính, trực quan hóa thông tin, và ảnh hưởng của công nghệ thông tin đối với các tổ chức và xã hội. 

Chúng ta sống trong một xã hội kỹ thuật số và như thế chúng ta liên tục tương tác với phần mềm và phần mềm chi phối những xu hướng vận động của chúng ta. Những sinh viên ham thích thiết kế và quan tâm nghiên cứu cách thiết kế những hệ thống phần mềm hiệu quả và hữu dụng nên đăng ký theo học chuyên ngành này. 


Lớp đầu tiên tốt nghiệp chuyên ngành Tin học, 2008 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/informatics/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Informatics « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Informatics


   
   


                

Informatics at UC Irvine brings together software engineering, human-computer interaction and the study of information technology in organizations into a single degree program. 

Traditional computer science programs concentrate on analyzing and designing computers and computer systems, but the success of those systems depends not only on their intrinsic features but also on human users and their requirements, characteristics and organizations. Informatics focuses on understanding the effect of information technology on people, studying computer systems in their real-world context, and determining how those systems can work effectively.

Students with an affinity for design and an interest in learning how to develop effective and usable software systems are encouraged to explore this major.


















IS INFORMATICS FOR ME?  


The Informatics degree program offers a contemporary curriculum with an emphasis on group work (starting with the first course), studio-oriented design courses and a yearlong senior project. 


You may want to consider this major if you:
enjoy solving problems using all the tools you have available;
   can work not only with technical details but also with “big-picture” issues; 
   have strong reading and writing skills and can think freely, creatively and systematically.



Previous experience in computer programming is not required to start the Informatics major. Programming is just one aspect of Informatics, and the major introduces all the necessary skills at a manageable pace. Students who already have some programming experience will also find new concepts, even in the very first course. 

The first year of the program provides students with a hands-on introduction to the broad field of Informatics, centering on the Informatics Core Course. This yearlong course develops students’ basic understanding of software: how to design and construct programs, and how the programs operate as part of information technology systems.

The second year builds up a portfolio of foundational concepts and techniques that establish the discipline of Informatics; these contribute to the “toolbox” students will use in subsequent years to solve large-scale information and software design problems. As sophomores, students begin to take more advanced courses that support their specialization in either software engineering, human-computer interaction, or the study of organizations and information technology. These may involve courses in Management, Psychology, Computer Science or Engineering.

In the third year, all students study the design process, project management and the impacts of technology on the real world. Students continue to take electives in their specialized area of study.

The fourth year is built around a yearlong capstone project in which groups of students tackle a significant assignment, typically from an outside client.









WHAT COURSES DO I TAKE?  


Current requirements for this major can be found in the General Catalogue.













WHAT CAN I DO WITH A DEGREE IN INFORMATICS?  


A degree in Informatics provides excellent preparation for a career at the forefront of the computing industry. 

Our graduates work in many industrial settings — ranging from start-up companies and small software houses to consulting firms and multinational corporations — in various roles, including:
Software Engineer Human-Computer Interface Designer Information Architect Game Designer Usability Engineer Mobile Computing Systems Designer 

Many also go on to graduate school to pursue an advanced degree in computer engineering, computer science, information science, management or law. 










  




            
            
                
                Informatics students demonstrate a prototype of their senior project — an interactive comic book app that teaches English to Japanese school-age children. 
            





                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/degrees/informatics/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Informatics « Degrees « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Degrees
Our broad selection of majors lets you be as specialized or general as you like            
            

            

                OverviewBusiness Information ManagementComputer Game ScienceComputer ScienceComputer Science & EngineeringData ScienceInformaticsSoftware EngineeringICS Undeclared Pre-MajorMinors                    
            
                    
            
     Informatics


   
   


                

Informatics at UC Irvine brings together software engineering, human-computer interaction and the study of information technology in organizations into a single degree program. 

Traditional computer science programs concentrate on analyzing and designing computers and computer systems, but the success of those systems depends not only on their intrinsic features but also on human users and their requirements, characteristics and organizations. Informatics focuses on understanding the effect of information technology on people, studying computer systems in their real-world context, and determining how those systems can work effectively.

Students with an affinity for design and an interest in learning how to develop effective and usable software systems are encouraged to explore this major.


















IS INFORMATICS FOR ME?  


The Informatics degree program offers a contemporary curriculum with an emphasis on group work (starting with the first course), studio-oriented design courses and a yearlong senior project. 


You may want to consider this major if you:
enjoy solving problems using all the tools you have available;
   can work not only with technical details but also with “big-picture” issues; 
   have strong reading and writing skills and can think freely, creatively and systematically.



Previous experience in computer programming is not required to start the Informatics major. Programming is just one aspect of Informatics, and the major introduces all the necessary skills at a manageable pace. Students who already have some programming experience will also find new concepts, even in the very first course. 

The first year of the program provides students with a hands-on introduction to the broad field of Informatics, centering on the Informatics Core Course. This yearlong course develops students’ basic understanding of software: how to design and construct programs, and how the programs operate as part of information technology systems.

The second year builds up a portfolio of foundational concepts and techniques that establish the discipline of Informatics; these contribute to the “toolbox” students will use in subsequent years to solve large-scale information and software design problems. As sophomores, students begin to take more advanced courses that support their specialization in either software engineering, human-computer interaction, or the study of organizations and information technology. These may involve courses in Management, Psychology, Computer Science or Engineering.

In the third year, all students study the design process, project management and the impacts of technology on the real world. Students continue to take electives in their specialized area of study.

The fourth year is built around a yearlong capstone project in which groups of students tackle a significant assignment, typically from an outside client.









WHAT COURSES DO I TAKE?  


Current requirements for this major can be found in the General Catalogue.













WHAT CAN I DO WITH A DEGREE IN INFORMATICS?  


A degree in Informatics provides excellent preparation for a career at the forefront of the computing industry. 

Our graduates work in many industrial settings — ranging from start-up companies and small software houses to consulting firms and multinational corporations — in various roles, including:
Software Engineer Human-Computer Interface Designer Information Architect Game Designer Usability Engineer Mobile Computing Systems Designer 

Many also go on to graduate school to pursue an advanced degree in computer engineering, computer science, information science, management or law. 










  




            
            
                
                Informatics students demonstrate a prototype of their senior project — an interactive comic book app that teaches English to Japanese school-age children. 
            





                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/degrees/informatics/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
資訊學 « 學位 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                學位
本校主修科目極為多樣，要當專家還是通才任君挑選            
            

            

                總覽企業資訊管理電腦遊戲學資訊科學資訊科學工程Data Science資訊學Software Engineering資科院申報主修科系前課程輔系                    
            
                    
            
     資訊學
    	        
	       
	       本系研究如何設計、開發、評估軟體應用程式，課程側重軟體的實際應用方式與應用場合。
	       
	    
	        
	        由於全盤採用實例和個案研究，因此學生能在軟體工程、軟體設計、人機互動、電腦輔助群組合作、資訊視覺化、資訊技術對企業與社會的影響等科目，打下良好的基礎。
	        
    	    
	        
	        現代生活充滿數位科技，我們也一直與軟體進行互動、受其驅策。 喜歡設計軟體、很想了解如何設計實用軟體系統的學生，建議選擇這個科系。
	        
	        
	        
                 2008年資訊學第一屆畢業生
	        

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/degrees/informatics/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Tin học « BẰNG CẤP « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                BẰNG CẤP
Các chuyên ngành đa dạng của chúng tôi đáp ứng mọi nhu cầu học tập của bạn            
            

            

                Tổng QuátQuản trị Thông tin Kinh doanhKhoa học Trò chơi Điện toánKhoa học Điện toánKhoa học & Kỹ thuật Điện toánData ScienceTin họcSoftware EngineeringNgành học tiền chính thức ICSChuyên ngành phụ                    
            
                    
            
     Tin học

Chuyên ngành này giảng dạy phương thức thiết kế, phát triển và đánh giá các ứng dụng phần mềm tập trung vào cách thức và địa điểm triển khai phần mềm trong thế giới thực. 

Trải nghiệm qua những ví dụ ở thế giới thực và các nghiên cứu theo từng trường hợp trong suốt khóa học, các sinh viên được trang bị kiến thức nền tảng vững chắc về công nghệ và thiết kế phần mềm, giao tiếp con người-máy tính, làm việc theo nhóm có sự hỗ trợ của máy tính, trực quan hóa thông tin, và ảnh hưởng của công nghệ thông tin đối với các tổ chức và xã hội. 

Chúng ta sống trong một xã hội kỹ thuật số và như thế chúng ta liên tục tương tác với phần mềm và phần mềm chi phối những xu hướng vận động của chúng ta. Những sinh viên ham thích thiết kế và quan tâm nghiên cứu cách thiết kế những hệ thống phần mềm hiệu quả và hữu dụng nên đăng ký theo học chuyên ngành này. 


Lớp đầu tiên tốt nghiệp chuyên ngành Tin học, 2008 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/degrees/informatics/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
정보학 « 학위 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                학위
다양한 전공을 통해 원하는 분야의 필수적이며 특화된 능력을 갖출 수 있습니다.            
            

            

                개요비즈니스 정보 관리컴퓨터 게임 과학컴퓨터 과학컴퓨터 과학 및 공학Data Science정보학Software EngineeringICS 전공미정 교양과정부전공                    
            
                    
            
     정보학
     
	       
	       이 전공은 실제 현장에서 소프트웨어 어플리케이션이 어떤 부분에, 어떻게 사용되는지에 초점을 맞춰 소프트웨어 어플리케이션을 설계, 개발하고 평가하는 방법을 연구합니다.
	       
	    
	        
	        실제 본보기와 사례 연구를 통해 학생들은 공학과 설계, 인간과 컴퓨터 간의 상호작용, 컴퓨터 지원 협업, 정보 시각화, IT가 조직과 사회에 미치는 영향에 대한 탄탄한 기초 교육을 받습니다.
	        
    	    
	        
	        우리는 끊임없이 소프트웨어와 상호작용하고 소프트웨어에 의해 주도되는 디지털 사회에 살고 있습니다. 효과적이며 사용 가능한 소프트웨어 시스템의 설계 방법을 배우는 데 관심이 있는 학생들은 이 전공을 탐구하는 것이 좋습니다.
	        
	        
	        
                 정보학 첫 졸업반(2008년)
	        

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/opportunities/honors/contact/student-affairs/contact/student-affairs/contact/student-affairs/contact/student-affairs/​
##-----------------TITLE------------------------##
Honors « Opportunities « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Opportunities
A Bren School education provides you with more than just course work            
            

            

                Applied LearningHonorsResearchEntrepreneurship                    
            
                    
            
     Honors
                
               
               UCI offers a vibrant honors program (CHP, the Campuswide Honors Program), for which Bren School students are eligible. This program offers select events, peer mentorship, a campus “hang out” where you and your fellow honors students convene, work, and socialize, honors housing, and special research opportunities. The Bren School traditionally has a strong representation in the CHP program.
               
               
               
               The Bren School also offers its own research honor sequence. Juniors and seniors have the opportunity to learn about the research process and engage in advanced work with a faculty advisor. Students admitted to the program participate in an honors seminar, conduct independent research under the guidance of a faculty advisor (for a minimum of two quarters), and write a research paper for review by their faculty advisor and the Honors Program Faculty Director.
               
               
               
              
               Campuswide Honors Program
               

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/en/opportunities/honors/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Honors « Opportunities « Bren School of Information and Computer Sciences « University of California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                DegreesOpportunitiesCareers

            
        
            
                
                
            
        
            

                Student LifeAdmissionsContact

            
        
        

        
        
            

                Opportunities
A Bren School education provides you with more than just course work            
            

            

                Applied LearningHonorsResearchEntrepreneurship                    
            
                    
            
     Honors
                
               
               UCI offers a vibrant honors program (CHP, the Campuswide Honors Program), for which Bren School students are eligible. This program offers select events, peer mentorship, a campus “hang out” where you and your fellow honors students convene, work, and socialize, honors housing, and special research opportunities. The Bren School traditionally has a strong representation in the CHP program.
               
               
               
               The Bren School also offers its own research honor sequence. Juniors and seniors have the opportunity to learn about the research process and engage in advanced work with a faculty advisor. Students admitted to the program participate in an honors seminar, conduct independent research under the guidance of a faculty advisor (for a minimum of two quarters), and write a research paper for review by their faculty advisor and the Honors Program Faculty Director.
               
               
               
              
               Campuswide Honors Program
               

                
                    Share
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Comments & Questions |
                    Privacy & Legal Notice |
                    Copyright Inquiries |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/vi/opportunities/honors/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
Chương trình danh dự « CƠ HỘI « BREN: Khoa học Thông tin và Điện toán « Đại học California Irvine
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                BẰNG CẤPCƠ HỘINGHỀ NGHIỆP

            
        
            
                
                
            
        
            

                ĐỜI SỐNG SINH VIÊNTUYỂN SINHLIÊN HỆ

            
        
        

        
        
            

                CƠ HỘI
Chương trình đào tạo của Bren:ICS đem đến cho bạn không chỉ những kiến thức trên giảng đường            
            

            

                Nghiên cứu Ứng dụngChương trình danh dựNghiên cứuQuản trị doanh nghiệp                    
            
                    
            
     Chương trình danh dự

UCI cung cấp một chương trình danh dự sôi nổi (CHP, Chương trình Danh dự Liên trường - Campuswide Honors Program), trong đó các sinh viên trường Bren:ICS hội đủ điều kiện tham gia. Chương trình này tổ chức các sự kiện có chọn lọc, dịch vụ gia sư đồng môn, khuôn viên “tụ tập” nơi bạn và bạn học, những sinh viên tham gia chương trình danh dự cùng nhau tụ họp, làm việc và giao tiếp với nhau, chia sẻ nhà ở theo chương trình danh dự và những cơ hội nghiên cứu đặc biệt. Bren:ICS đã gây dựng được hình ảnh nổi bật trong chương trình CHP. 

Bren:ICS cũng cung cấp loạt chương trình danh dự của riêng mình. Những sinh viên năm áp chót và các sinh viên năm cuối có cơ hội tìm hiểu về quy trình nghiên cứu và tham gia vào các công việc đòi hỏi kiến thức và kỹ năng cao cấp với một cố vấn của khoa. Những sinh viên được nhận vào chương trình đều tham gia vào các cuộc hội thảo danh dự, thực hiện nghiên cứu độc lập dưới sự hướng dẫn của một cố vấn khoa (tối thiểu là hai học kỳ), và viết bài luận để cố vấn khoa và Giám đốc Khoa phụ trách Chương trình Danh dự duyệt xét. 


Chương trình Danh dự Liên trường 

                
                    Chia sẻ
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                Đại học California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    Góp ý & Thắc mắc |
                    Chính sách về Quyền Riêng tư & Thông báo Pháp lý |
                    Những thắc mắc về bản quyền |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/ko/opportunities/honors/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
우등생 « 기회 « BREN: 정보와 컴퓨터 과학(ICS) « 캘리포니아 대학교 어바인
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                학위기회진로

            
        
            
                
                
            
        
            

                대학 생활입학문의

            
        
        

        
        
            

                기회
Bren:ICS의 교육은 단순한 교육과정 그 이상을 선사합니다.            
            

            

                응용 학습우등생연구창업                    
            
                    
            
     우등생
    	        
	           
	           UCI는 Bren:ICS 학생이라면 신청할 수 있는 강력한 우등생 프로그램(CHP, Campuswide Honors Program)을 갖추고 있습니다. 이 프로그램은 엄선된 이벤트, 동료 멘토링, 우등생들끼리 모여서 공부하고 친목을 다지는 캠퍼스 "스터디 모임", 우등생 기숙사, 특별 연구 기회를 제공합니다. Bren:ICS는 전통적으로 CHIP 프로그램으로 강력한 두각을 나타내고 있습니다.
	           
	           
	           
	           Bren:ICS는 자체 연구 우등생 프로그램도 갖추고 있습니다. 3학년과 4학년은 연구 과정에 대해 배우고 상담 교수와 함께 심화 작업에 참여할 기회를 갖습니다. 이 프로그램에 들어온 학생들은 우등생 세미나에 참여하고, 상담 교수의 지도 아래 (최소 2학기 동안) 독립 연구를 실시하며, 연구 논문을 써서 해당 학생 담당 상담 교수와 우등생 프로그램 책임 교수의 검토를 받습니다.
	           
	           
	           
               교내 우등생 프로그램
	           

                
                    공유하기
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                캘리포니아 대학교 어바인 - Irvine, CA 92697 : 949-824-5011

                
                    의견과 질문 |
                    개인정보 보호정책과 법적 고지 |
                    저작권 문의 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/prospective/zh-tw/opportunities/honors/contact/student-affairs/contact/student-affairs/contact/student-affairs/%E2%80%8B
##-----------------TITLE------------------------##
榮譽學生 « 機會 « 貝林： 資訊電腦科學 « 加州大學爾灣分校
##------------------TEXT------------------------##
?>
   
   
    

        
        
            

                學位機會職場

            
        
            
                
                
            
        
            

                生活入學聯絡方式

            
        
        

        
        
            

                機會
貝林資科院的教育不只是唸書            
            

            

                應用所學榮譽學生研究創業精神                    
            
                    
            
     榮譽學生
    	        
	           
	           加大爾灣分校的榮譽學生計畫非常發達（全校榮譽學生計畫，CHP），貝林資科院的所有學生都可參加。 這項計畫提供精選活動、同儕指導，還有讓榮譽學生切磋、合作、交流的校內「專區」，另外設有榮譽學生宿舍和特別研究機會。 貝林資科院學生在全校榮譽學生計畫內的比例一向很高。
	           
	           
	           
	           貝林資科院也有自己的研究榮譽方案。 大三、大四生可藉此機會了解研究程序，並在指導老師的帶領之下，鑽研更高深的學問。 入選這項計畫的學生要參加榮譽學生研討會，指導老師會教學生從事獨立研究（至少兩季），最後撰寫研究報告，由指導老師和榮譽學生計畫主任審閱。
	           
	           
	           
              	 全校榮譽學生計畫
	           

                
                    分享
                    |
                    
                    
                    
                    
                
                
                
            

            

        
        
        
        
            
            
                Language: 
                English |
                Chinese (Traditional) |
                Korean |
                Vietnamese            
            
        
            
            
                University of California, Irvine - Irvine, CA 92697 : 949-824-5011

                
                    問題與意見 |
                    隱私權和法律聲明 |
                    著作權查詢 |
                    © 2016 UC Regents
                

            
            
            
            
                Site By Crisp
##------------------URL-------------------------##
http://www.ics.uci.edu/~djp3/classes/2010_09_INF133/Assignments/Assignment02/Step14.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Replace this with XML
		
		Replace this with JSON
		
		Replace this with JSONP
##------------------URL-------------------------##
http://mondego.ics.uci.edu/projects/clonedetection/tool/source/
##-----------------TITLE------------------------##
Index of /projects/clonedetection/tool/source
##------------------TEXT------------------------##
Index of /projects/clonedetection/tool/source
NameLast modifiedSizeDescriptionParent Directory   -  CloneDetector.zip09-Jun-2015 13:28   20M InstaCfV1.0.0.zip09-Jun-2015 13:27  6.4M 
Apache/2.2.22 (Ubuntu) Server at mondego.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/LabManual/11-SecondPartnerEval.html
##-----------------TITLE------------------------##
Second Partner Evaluation
##------------------TEXT------------------------##
Second Partner Evaluation



This pair programming partner evaluation is for your second partner. The questions to answer and the items to include in this evaluation are the same as the first one; see the partner evaluation section of 
Pair Programming Partner Evaluation and Choosing Your Next Partner for details. As before, email your evaluation to 21-questions@ics.uci.edu.

This second evaluation is due at the date and time given in the Course Schedule.



Written by Norman Jacobson, December 2006
Updated to state explicitly where to send the evaluation, by Norman Jacobson, January 2007
Minor edits, and changed where to email completed exam (to reflect this quarter's course staffing), by Norman Jacobson, December 2009
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/LabManual/08A-PartnerSwapAndEval.html
##-----------------TITLE------------------------##
Partner Evaluation and
Choosing Your Next Partner
##------------------TEXT------------------------##
Pair Programming Partner Evaluation and
Choosing Your Next Partner





Pair Programming Partner Evaluation


Now that it is time to switch partners, we want you to evaluate your experience with your current partner by completing the Pair Partner Evaluation Form, below. The evaluation is due at the date and time given in the Course Schedule.


Evaluation Questions


To evaluate your partner,

Copy the form into the body of an email; do not make it as an attachment.Complete the evaluation. You can indicate your choice from various options by deleting all the options for the question except the one you want to pick. Answer the open-ended questions by simply typing in your repsonses.Make the subject of the email "First Partner Evaluation"Email the completed evaluation to 21-questions@ics.uci.edu

Although the open response questions are phrased to elicit a yes or no response, you are encouraged to include comments to elaborate on your answer; the goal is to paint us a picture of the nature of your partner’s participation in paired work, and what you think about pair programming (so far). 

If you were given approval to work alone instead of in a pair, complete this evaluation about yourself as best as you can, revising it as necessary to make sense in that context. For example, the first question could be interpreted as “Did you come to lab on time and ready to work?”

Pair Partner Evaluation Form
My Name:

My UCI ID Number:

My Partner's Name:

My partner's technical competency is (choose one):

	Much better than mine
	Somewhat better than mine
	About the same as mine
	Somewhat less than mine
	Much less than mine


My partner and I were _______ compatible (choose one option to fill the blank):


	Very
	Reasonably
	Not at all


Open response questions

Did your partner come to the scheduled meetings on time and ready to work? Did you partner notify you if she or he would not be able to attend a meeting or fulfill a responsibility?Did your partner read the assignment and preparatory materials before coming to the scheduled meetings, showing up either with specific questions or ready to contribute?Did your partner cooperatively follow the pair programming model (rotating roles of driver and navigator, questioning and making observations as the navigator)?Did your partner contribute fully, fairly, and actively, to the best of his or her ability, to the completion of the lab assignment?Was your partner's participation professional and cooperative overall?Have you found pair programming helpful in completing the programming work and learning about programming in general? If you have previous experience programming alone, do you now prefer working in pairs?

Overall rating of your partner (choose one):


ExcellentConsistently went above and beyond-tutored me, carried more than her or his fair share of the loadVery goodConsistently did what she or he was supposed to do, was well prepared and cooperativeSatisfactoryUsually did what she or he was supposed to do, was acceptably prepared and cooperativeMarginalOften did what she or he was supposed to do, was minimally prepared and cooperativeInadequateSometimes failed to show up, usually showed up but was rarely preparedDeficientOften failed to show up, was unprepared when she or he did show upUnsatisfactoryConsistently failed to show up, was consistently unpreparedNegligentPractically no participationNo ShowNo participation at all

	 
Other comments:



Choosing your Next Partner

For the next two assignments, you will work with a new partner. Your new partner cannot be your current partner, unless you took on a new partner after Lab Exam 2 was given; in that case, you and your current partner can remain partners for Labs 4 and 5, if you both agree.

 As before, we prefer you and your partner chose each other, asking for a TA’s assistance if you cannot find a partner. Report the new partnership via email to 21-questions@ics.uci.edu no later than the date given in the Course Schedule. 

Why the Switch

Learning to work with different individuals is an important skill in general, and in the computer science workplace in particular; virtually all projects are accomplished by teams where membership changes ocassionally (and sometimes often).Sometimes one of a pair will drop the course, or stop participating in it, leaving the other person of the pair without a partner. Reforming pairs lets us correct that situation.Switching gives you an opportunity to pair up with another who has passed (and not passed) the same, or close to the same, lab exams; we strongly recommend you take advantage of this opportunity.  Such a pairing puts together students who have (close to) the same tasks to complete, maximizing the benefit to both partners. 




Written by Norman Jacobson, September, 2006; the section on partner evaluation was adapted
   from text in Informatics 41 Fall 2006 Pair Programming Guidelines 
  by David G. Kay, used with permission (and thanks!)
Section on switching partners added, and other edits made, by Norman Jacobson, December, 2006.
Minor revisions, by Norman Jacobson, January 2007.
Replaced the questionnaire with a significantly revised one that appears in the NCWIT Pair
   Programming in a Box module, and other minor edits, by Norman Jacobson, September 2008.
Edited to remove some redundant text; revised rating names to better describe the indicated behaviors, 
  by Norman Jacobson, December 2008.
Minor edit to make clear that completed evaluations are emailed to the TA who grades the student's lab exams, 
  by Norman Jacobson, November 2009.
Revised to make submission requirements more explicit and to reflect this quarter's staffing, and to allow  
  newly-formed partnerships to continue into Labs 4 & 5, by Norman Jacobson, December 2009.
Minor typos fixed, by Norman Jacobson, September 2010.
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/CourseGradesAfter.html
##-----------------TITLE------------------------##
ICS21 Winter 2012 Course Grades
##------------------TEXT------------------------##
Last 4Test 1Test 2Test 3Test 4Test 5# PassedHigh Poss GradeMidtermFinalPairEval#1Part.Adj.#1PairEval#2Part.Adj.#2Total PtsProv. GradeCourse Grade   % of GradePossible Pts    1011PPPPP5A+18271166.80AA  Midterm4025  1069PPPPP5A+12230150.87BB  Final6045  1116PPPPP5A+9191040.73CC       1117PPPPP5A+1630166.60AA  # Students137   1164PPPPP5A+9221145.73C+C+       1216PPPNPP4C-17221158.53A-C-       1275PPPPP5A+9171139.07CC       1317PPPPP5A+19181055.40B+B+ GradeHighLow# of Students% of StudentsCum. %% w/o F,I,NRCum %1423PPPPP5A+10181142.00CC A+1048710.7%0.7%0.8%0.8%1535NPNPNPNPP1D-581019.67FF A86.99594029.2%29.9%31.3%32.0%1544PPPPP5A+19281169.73AA A-58.995675.1%35.0%5.5%37.5%1553PPPPP5A+15212155.00B+B+ B+55.9953139.5%44.5%10.2%47.7%1607PPPNPP4C-7171135.87D+D+ B52.9949139.5%54.0%10.2%57.8%1651PPPPP5A+14231155.07B+B+ B-48.994675.1%59.1%5.5%63.3%1682PPPPP5A+17262164.87AA C+45.994353.6%62.8%3.9%67.2%1939PPPPP5A+11121034.60D+D+ C42.99392014.6%77.4%15.6%82.8%2045PPPPP5A+12181145.20C+C+ C-38.9936128.8%86.1%9.4%92.2%2139PPPPP5A+19281169.73AA D+35.993353.6%89.8%3.9%96.1%2236PPPPP5A+10171140.67CC D32.992942.9%92.7%3.1%99.2%2254PPPPP5A+15331170.00AA D-28.992610.7%93.4%0.8%100.0%2256P--NPNPNP1D-1050022.67FF F25.99096.6%100.0% 2261NPPPPP4C-11320060.27AC- I  00.0%100.0% 2268PPPPP5A+16111142.27CC NR  00.0%100.0% 2278PPPPP5A+8191140.13CC Total  137   2306PPPPP5A+20250065.33AA2332NPNPNPNPNP0F8101027.13D-F2348PPPPP5A+12171042.87CC2355PPPPP5A+5241142.00CC2361PPPPP5A+13251156.13A-A-2394PPPPP5A+17290065.87AA2426PPPPP5A+13351169.47AA2498PPPPP5A+10252152.33BB2524PPPPP5A+15281163.33AA2601PPPPP5A+152658.67A-A-2605PPPNPP4C-12251154.53B+C-2686PPPPP5A+13301162.80AA2745PPPPP5A+15220154.33B+B+2950PPPPP5A+2024165.00AA2981PPPPP5A+22330180.20AA3042PPPPP5A+1733172.20AA3130PPPPP5A+11211147.60B-B-3137PPPPP5A+14301164.40AA3302PPPPP5A+14160144.73C+C+3364--NP--NPNP0F61124.27FF3366PPPNPP4C-9240147.40B-C-3379PPPPP5A+11171142.27CC3471PPPPP5A+15211154.00B+B+3652PPNPNPP3D+13221152.13BD+3661PPPPP5A+19411187.07A+A+3668PPPPP5A+12211149.20BB3699PPPPP5A+12141139.87CC3739PPPPP5A+12211149.20BB3773PPPPP5A+152760.00AA3876PPPPP5A+12140037.87C-C-3953PPPPP5A+12201046.87B-B-3968PPPPP5A+9180038.40C-C-3977PPPPP5A+18321173.47AA3988PPPPP5A+14320166.07AA4190PPPPP5A+8140132.47DD4210PPPPP5A+1115138.60C-C-4340PPPPP5A+14141143.07C+C+4347PPPPP5A+16221156.93A-A-4396PPPPP5A+20251066.33AA4414--NPNP----0F101017.00FF4786PPPPP5A+10220146.33B-B-4838PPPPP5A+925148.73B-B-4951PPPPP5A+13281160.13AA4956PPPPP5A+11271155.60B+B+5004PPPPP5A+12222252.53BB5164PPPPP5A+15331170.00AA5247NPNP--NP--0F5008.00FF5251PPPPP5A+15290062.67AA5340PPPPP5A+6191136.93C-C-5355PPPPP5A+16251059.93AA5376PPPPP5A+9180038.40C-C-5384PPPPP5A+1327157.80A-A-5423PPPPP5A+1117141.27CC5434PPPPP5A+12341166.53AA5538PPPPP5A+720037.87C-C-5578PPPPP5A+20301174.00AA5578PPPPP5A+1525259.33AA5635PPPPP5A+14361172.40AA5649PPPPP5A+2331179.13AA5686PPPPP5A+6180134.60D+D+5731PPPPP5A+13171145.47C+C+5788PPPPP5A+16262163.27AA5914PPPPP5A+9101129.73DD6007PPPPP5A+19321175.07AA6025PPPPP5A+14201151.07BB6079PPPPP5A+14251157.73A-A-6280PPPPP5A+1112134.60D+D+6341PPPPP5A+10241150.00BB6346PPPPP5A+13252258.13A-A-6603PPPPP5A+12241153.20B+B+6645PPNPPP4C-12261054.87B+C-6647PPPPP5A+7242146.20B-B-6876NPPPNP--2D10161038.33C-D6877PPPPP5A+14271160.40AA6900PPPPP5A+16221156.93A-A-6965PPPPP5A+12151141.20CC7074PPPPP5A+16211054.60B+B+7101PPPPP5A+920142.07CC7147PPPPP5A+15242260.00AA7154PPPPP5A+14281161.73AA7317PPPPP5A+9171139.07CC7339PPPPP5A+12141139.87CC7399PPPPP5A+18221059.13AA7689PPPPP5A+13231153.47B+B+7707PPPPP5A+20290171.67AA7717PPPPP5A+14220152.73BB7756PPPPP5A+10161139.33CC7775PPPPP5A+8300153.80B+B+7864PP--PP4C-12160040.53CC-7921PPPPP5A+11211147.60B-B-7929----NPNPNP0F141023.40FF7946PPPPP5A+11271155.60B+B+8094PPPPP5A+10190142.33CC8141PPPPP5A+13221152.13BB8222PNPNPNPNP1D-12150039.20CD-8486PPPPP5A+21210162.60AA8498PPPPP5A+2233180.20AA8534PPPPP5A+12231151.87BB8779PPPPP5A+9241148.40B-B-8834PPPPP5A+17201155.87B+B+8865PPPPP5A+7121129.20DD8870PPPPP5A+22271173.20AA8981PPPPP5A+14201151.07BB9011NPNPNP----0F80012.80FF                                                9026NPNPNPNPNP0F9111131.07DF9027PPPPP5A+13131039.13CC9333PPPPP5A+11161039.93CC9342PPPPP5A+20211162.00AA9425PPPPP5A+22330180.20AA9487PPPPP5A+13201149.47BB9811PPPPP5A+12261155.87B+B+9837PPPPP5A+9180139.40CC9856PPPPP5A+14201050.07BBAve       13.0122.35    51.25  
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/CourseReference.html
##-----------------TITLE------------------------##
ICS 21 Winter 2012 Course Reference
##------------------TEXT------------------------##
ICS 21 Winter 2012
Course Reference


Introduction to Computer Science I
Norman Jacobson, Instructor





Table of Contents


   The Course
   Overview of course structure
   Enrolling in ICS 21
   Important information
   About ICS labs
   UCInetID and ICS computer accounts
   Obtaining additional assistance
   Keeping up with course announcements
   Readings
   Additional materials
   Course assignments, exams, and their grading
   Course grade calculation
   About cooperation





The course


ICS 21 is the first of three courses that introduce you to fundamental concepts
and principles of computer science; its primary objective is to teach you
the basics of designing, implementing and testing computer programs. You
will also learn a bit about object oriented design and a fair amount about
object oriented programming, using Java as the “language of practice.” You also gain experience in working with a partner; working in a team is a common industry practice that, when properly done, produces better programs — and faster than when a person works alone!

This course is also known as CSE 21; that’s its designation for the CSE major. For simplicity, we’ll refer to this class as ICS 21, though it is indeed both ICS 21 and CSE 21. CSE 21 uses different course codes than ICS 21 (and there are two sets of course codes for CSE 21, one for CSE majors within the Samueli School of Engineering and another set for those CSE majors in the Bren School of ICS). You can find these codes at the  ICS 21/CSE 21 WebSoc page.





Overview of course structure


ICS 21 consists of a lecture, lab exams sections and the ICS 21 Help Center. 

Lecture is where we impart course material and where you take the midterm
and final exams. If you miss lecture, we suggest that you arrange with your classmates to 
borrow their notes: the instructor and TAs will not repeat lecture material you missed, 
though of course they will answer questions about it.

The ICS 21 Help Center is a computer lab, with TAs and tutors on duty, where you can—and should—work on lab assignments and get help with them and other course material. TAs can answer questions on any aspect of the course, including Java programming, lecture material and grading issues. Tutors can (only) help you with your Java and programming questions. This quarter, the Help Center gets to use two rooms during the afternoon and evening hours, an often particularly busy time (see Important Information, below, for details).

When working on lab assignments, we have you use the “pair programming” approach. In pair programming, two programmers share one computer. One is the “driver,” who controls the keyboard and mouse. The other is the “navigator,” who observes, asks questions, suggests solutions, and thinks about slightly longer-term strategies. The two programmers switch roles about every 20 minutes. A pair of programmers, working as described here, nearly always beats the stereotypical solitary loner, producing more high-quality code in less than half the time (surprising, perhaps, but true). You will work with one partner for the first three labs, and another for the last two labs. Working in pairs should prepare you much more thoroughly for the lab exams than working alone.

The assignments prepare you for the lab exams, five computer-based exams to test your knowledge of programming. You take these tests on lab exam days in the Help Center. 

More about the lab assignments, lab exams, the Help Center and pair programming are discussed in the 
Lab Manual.





Enrolling in ICS 21


To be enrolled in ICS 21, you must be enrolled in lecture and one (and only one) of its lab sections; the (first hour) of your lab section is when you have a guaranteed seat to take your lab exams.

Procedures for dropping the class, changing your lab section, petitioning to add the class, changing your grade 
option and related matters are discussed in 
Enrollment Information.




Important information


Please keep this information at hand; it will likely be quite useful during the quarter!

Jacobson’s officeDonald Bren Hall (DBH) 4052Office hoursTues. & Thur. 3:30 - 4:45 pm, except on school holidays, and by appointmentJacobson’s phone949-824-7300Jacobson’s email addressjacobson@uci.eduJacobson’s home page: www.ics.uci.edu/~jacobsonICS 21 Help Center Location and Hours ICS183, Mondays and Wednesdays, 1:00 - 7:00 pm, but closed on University holidaysQuestions to course staff 21-questions@ics.uci.eduEngineering Copy Center 203 Engineering Tower; Mon-Fri 8:00 to noon and 1 to 4 pm,  closed University holidaysICS 21 WileyPlus Web page http://edugen.wileyplus.com/edugen/class/cls253067/Finding a Pair Programming Partner message board https://eee.uci.edu/toolbox/messageboard/m12062/

Click here for Lecture and Lab Exam Section Times







Course Staff
NamePositionemailGrades Last NamesHours in Help Center (ICS183)Stylianos DoudalisTAsdoudali@uci.eduF - ZMon 1:00 - 5:00, Wed 3:00 - 7:00Matt KayalaTAmkayala@uci.eduA - EMon 5:00 - 7:00, Wed 1:00 - 3:00


Guest Account
Login:ics-tempPassword:Anteat3r







About ICS labs 


Using our lab rooms (ICS183, ICS189, ICS192, ICS364): In addition to the ICS 21 Help Center, you may use ICS183, ICS189 or ICS192 if the room is open and there
is no class meeting in it. You may not use a lab room when a non-ICS 21
class is in session in that room.

You may also use the computers in ICS364. This is a first-come, first-served
open-to-all-students lab. The same computers and
software that are available in the first-floor labs are available in ICS364.

A lab attendant watches over equipment and can help you
with things such as answering questions about your computer account, reviving
a “dead computer” or adding paper to a printer. An attendant
cannot help you with your ICS 21 work.

The scheduled lab hours and open hours times for all lab rooms are posted
on the ICS Lab hours web page, 
and often on the labs’ doors.

Lab Use Policies: In order to use our computer equipment and computer
accounts, you must agree to abide by UCI’s and ICS’ policies regarding
them. The documents that describe these policies are kept on the Web; perhaps
the best way to access them is from the 
ICS Instructional Lab Guidelines web page. Read this page, and follow
its links to read the other pertinent ICS and UCI documents.

Printing: We do not require printouts in this class, so you only need a printout if you wish one for your own purposes. To use the printers in the ICS labs,  see the Printing section of the Orientation to the Lab 
section of the ICS 21 Lab Manual.  You are free, of course, to use any other printers to which
you have legitimate access.

If you find a piece of lab equipment that is broken
or otherwise needs attention, or you think someone is trying to steal or
damage software or equipment, tell the lab attendant on duty.

Additional information about the lab rooms, their equipment and software is in the 
Orientation to the Lab 
section of the ICS 21 Lab Manual.





UCInetID and ICS computer accounts


UCI provides all its students with basic computing,  including electronic mail and  
Internet services, via a “UCInetID” computer account. You will also need an ICS Windows computer account to use the computers in the lab rooms. If you have not yet activated these accounts, follow the instructions in the  Activate your UCInetID and ICS Windows Accounts 
section of the ICS 21 Lab Manual.





Obtaining additional assistance


During my office hours, course-related matters will have first priority.
Of course emergencies may come up, but I’ll try to give advance notice
of any changes to my hours. If I’m not immersed in something else, 
I’ll be glad to answer short questions whenever I’m in my office, so feel free to drop by. I’ll also make appointments for other times during the week, my schedule permitting.

You can most easily get course-related questions answered by coming
to lecture and the Help Center and asking them! In-person assistance is by far faster and better than distance communications (such as sending emails back and forth).

You can also get help by sending email to 21-questions@ics.uci.edu. (If you do not know how to use UCI's email, see the 
Lab Manual 
for some pointers.) Course staff checks this email address regularly and will respond to your question within a few hours (somewhat less frequently on weekends and holidays). 

If the response to your question would be complex or lengthy, we may provide a short response and ask you to meet with a staff member in person for a more in-depth discussion.

Any student who feels s/he may need an accommodation based on 
  the impact of a disability should contact the instructor privately to discuss 
  the specific needs.  Also contact the Disability Services 
  Center at (949) 824-7494 as soon as possible to better ensure that 
  such accommodations are implemented in a timely fashion.

If you have a question or comment of a personal
or private nature, please email your TA or the instructor directly, 
or see the appropriate party in person.




Keeping up with course announcements


Throughout the quarter, we post important messages of general interest to the 
ICS 21
announcements Web page.  Be sure to read it regularly.

We send urgent or particularly important announcements
by email to your UCInetID account, so we require that you check
your UCInetID email regularly, once daily during the week at least (and on weekends
as well if feasible). If you prefer to read these messages from another
account, you need to set your UCI account to forward your UCI email to your
preferred account; see the 

Email Delivery Point and Forwarding Email Web page for details.




Readings


See the 
Course Schedule 
for the  readings that correspond to each lecture.

Java Concepts

Java Concepts, 6th edition, by Cay Horstmann (required). This book discusses introductory programming and the basics of Java, the programming language we will be using to practice programming concepts. It is available in three forms: 1) as a paperback book, loose leaf or bound, and with or without an access code to the electronic version of the text, available from various bookstores and Websites, 2) as an “electronic book” from the publisher, Wiley Press, accessible via the Web, and 3) as an download file; you copy the text to your hard drive and read it using special software.

The Web-based version of the text has sections that the printed copy does not, in particular, a number of “special topics,” some of which we cover in this course. (And it has a number of additional chapters. The on-line text is actually a copy of the text Big Java, a book that has all that is in Java Concepts and then some. We do not cover the chapters that are in Big Java but not in Java Concepts.) I strongly urge you to obtain access to the electronic copy of the text (whether or not you obtain a hard-copy version) so that you can read the special topics. 

Option1: Getting a print version of the text

The bookstore has a new print copies of the book, loose leaf, with the code, for $94.60, and used copies (which may not have a still-valid code) for $70.95, both plus tax. For comparison, Amazon.com is selling the text, bound, for $86.16 (with free shipping) and in electronic book (Kindle) form for $77.54 (or as a Kindle rental starting at $42.71). Wiley's main site is selling it for $125.95, plus tax and shipping; you can also rent it from Barnes & Noble for $37.26 for 90 days, or buy it outright for $85.30 (with free shipping).

A new book (loose leaf) is being offered by Wiley through a UCI-specific web site; from the page //www.wiley.com/WileyCDA/Section/id-406856.html you can purchase the book with an access code for $83.95 plus shipping (from $6.00 to $25.00, depending upon how fast you want the book) and tax.

 A new printed text with an access code costs more than the on-line text alone, but you get both a printed book and access to the online version of the text. If you buy a used print copy of the book, from any source, it does not matter whether you buy a version with the online access code: the code, even if present, will likely be invalid.

Option 2: Getting access to the electronic version of the text

To get access to the electronic version of the text, go to the Computer Science section of the WileyPlus Courses website and click on Horstmann / Big Java Fourth Edition AND Java Concepts Sixth Edition, WileyPLUS Registration Code. From the dropdown menu next to state; choose CALIFORNIA.  Then, click the Search button next to the School Name box; a new School dropdown menu will appear; choose UNIVERSITY OF CALIFORNIA IRVINE and then click the Continue button. A Shopping Cart screen should appear, with the cart containing WileyPLUS eCommerce to accompany Big Java 4e & Java Concepts 6e, for (as of this writing) $55.00.

With your credit card ready, click on CHECKOUT NOW and complete the billing and shipping information. When you are done, you will be shown a registration code: copy it down; you'll need it to get access to the text.

Now, Go to the WileyPlus ICS  21 home page.
Click on the Create Account link. 
After reading through the license agreement, click on I agree to these terms.
On the next page, enter your registration code; click Continue.
Provide the requested information to create your WileyPlus Student Account.
Upon successfully completion, you will be brought to the ICS 21 home page.
To read the text, click on the Read, Study & Practice link. Links to the text's chapters will appear. Follow them and subsequent links to read the book.


To read the text in the future, go back to the WileyPlus ICS 21 screen and enter your email address and password; you’ll be taken to the course home page.

You can print out pages of the book by using your browser’s print command.

Option 3: Downloading a copy of the text

If you prefer to have a complete copy of the text on your hard drive, you can obtain said from vitalsource.com (or from Wiley directly, but it is the same text and process; Wiley uses VitalSource to deliver the text. So we just give instructions here for obtaining the text from vitalsource.com). The book itself is available for $75.50, from the Java Concepts page; add it to the shopping cart and then click on CHECK OUT (it is on the right, under “Your Cart”).  Under Sign In, you’ll need to click on New user? Register here and complete the requested information and Save it.  To complete purchase of the text, enter the School Name where indicated, click on Purchase, and follow the instructions that appear for paying for the text.

To read the book, you’ll need to download a copy of Bookshelf, available at the  Bookshelf download page. Be sure your computer meets Bookshelf&146;s system specifications; if it does not, Bookshelf may not run and you will not be able to read the downloaded text.


Lab Manual

ICS 21 Lab Manual, Winter 2012 
(“the Lab Manual”) by Jacobson and other ICS faculty. This document contains lab policies and procedures, details about the lab assignments, pair programming, taking and scoring of lab exams, and instructions on evaluating your pair programming partner.




Additional materials


Additional materials are available to give you more information,
extra practice, or a different perspective on ICS 21 topics. Some are available
on line, some in the Reserve Room of the Science Library, available for two-hour loan.
Be aware that copyright law and, in the case of software, license agreements
apply to these materials.

We will use several software packages for lab exercises, including Eclipse for our Java environment, Sun’s Java 7 Runtime Environment to run Java code, SecureCRT for you to access your UCInetID account, a web browser (e.g., Internet Explorer, Firefox) 
for Internet browsing. You may also find the tools within Microsoft Office useful. All these packages (and others) are available for your use on the machines in the ICS labs. If you want to obtain any of this software for use on your own machine, please ask the instructor for details. In brief, Office and SecureCRT must be licensed (for a fee), and Eclipse, Internet Explorer, Firefox and Sun’s Java are free.

You will also need a way to back up (make a copy) of your work.  You can use a USB memory stick or portable external hard drive, available in several capacities from many sources, including the UCI Computer store. You can also use diskettes, though they are getting harder to find and not all of our computers accept them. And you can store files to the so-called “H drive” of your ICS account; details of using the H drive are in the Orientation to the Lab 
section of the ICS 21 Lab Manual.




Course assignments, exams, and their grading


Lab assignments: The 

Lab Manual contains them (0% of the course grade!)

The lab assignments have you design, implement (in Java) and test computer programs. Perhaps surprisingly, they are not graded—but you are well advised to do them, as each prepares you for a corresponding lab exam.

You will work on the lab assignments uising the pair programming approach discussed above. Pair programming almost always enables you to learn more about programming, and to complete the labs much more quickly, than working alone. You will work with one partner for the first three assignments, and a different partner for the last two. For each of these two pairings, we expect students to choose their partners. One good way to find a partner is to go to the Help Center and ask around;  another is to post a note on the course’s Finding a Pair Programming Partner message board on eee. If you prefer not to choose your own partner, or cannot find a partner, let a TA know; she or he will assist you in finding a partner. You or your partner must email the names of your team members to 21-questions@ics.uci.edu no later than the dates given in the Course Schedule.

Details about pair programming and choosing a partner are in the 
Pair Programming section of the Lab Manual.

Programming assignments always take longer to complete than you think they will. (This phenomenon occurs among professional computer scientists, not just students of computing.) If you start each assignment no later than suggested, spend significant time in the Help Center completing assignments with your partner—working diligently and asking questions while there—and spend time as needed outside the Help Center's hours with your partner thinking through and working on your assignments, you will be ready to take the lab exams. Students who do not follow this advice typically have a much harder time passing the lab exams.

Lab exams: Five tests you take in the lab exam section to demonstrate programming competence (a minimum performance requirement)

You take each of the lab exams at the Help Center, on the days indicated in the Course Schedule. 

Each lab exam is scored as “not taken,” “not passing” or “passing”.

You must pass every lab exam to obtain a grade of C or better in the course. If you fail to pass a lab exam, you can take that test again (and again and again and...) at a scheduled  “retake session,” until you pass it, up through the last one offered, which will be during Finals Week. The place and times when retake sessions will be offered will be posted on the ICS 21 Web page by the time the first lab exam is given.

Much more detail about the lab exams and their grading is in the 
Lab Manual.

One midterm: (40 points, 40% of the base course grade)

One final exam: (60 points, 60% of the base course grade)

To help you study for the miderm and final, we have a sample exam for each; links to them are on the 
ICS 21 Web page. TAs and the instructor will happily discuss the questions (and their answers) with you after you have come up with your own answers. Most, but perhaps not all, of the topics covered by the questions in a sample exam will appear in the respective actual exam.

You will need to bring to the midterm and final exams a Scantron answer sheet, Form No. 882-E or 2052 or equivalent (that is, a mark-sense form that is one-half of a regular sheet of paper cut lengthwise that has 50 questions on the front, with five possible responses 
for each question). Form 882-E is available at the UCI bookstore and the Engineering Copy Center, among other locales.

I keep your midterm and  final exam answer sheets, so that you can review them for any errors you think may be present, for about a year after the course is over, and typically recycle them after that time.

During the quarter, your scores will be posted on UCI's 
Electronic Educational Environment (eee) web site. 
(If you have not previously used eee to look up scores, it’s quite straightforward. Just go to eee, sign in to MyEEE, and follow the instructions for viewing course grades.) 

If you think a lab exam was scored incorrectly, contact the staff member who grades your work; email often works best: Who grades your work, and that person's email address, is given in the “Important information” section, above.)  We’ll look into the matter and fix any error we find. If that does not resolve the issue, see the instructor. If you have a question about the grading of your midterm or final, contact the instructor directly.




Course grade calculation


Determining the final course grades requires several steps:

We  determine your weighted point total for the midterm and final exams. 

We add in your pair programming evaluation scores. For each of the two evaluations of your programming partner (see the Lab Manual for details), we add 0, 1 or 2 points to your total points.  You earn 1 point for a cursory evaluation, 2 for an evaluation that is particularly thoughful or insightful, or 0 points
 if you turn it in late or not at all. So you can earn from 0 to 4 additional points, which are added to your point total, thus perhaps raising your provisional course grade.

We deduct any pair programming adjustments.  You may lose up to 4 points from your total (up to 2 points for each of the two pairs of which you are a part) if you did not fully participate in pair programming as described in course documents and the relevant documents they reference. If there is not an adjustment, that is a good thing—it means that we were notified, on time,  of your partnerships, that you worked in a pair (or otherwise, with the needed permission) and we have no evidence that you were a bad partner. (In the posted scores on eee, the appearance of "--" means there was no adjustment.) 

We assign provisional course grades using the following scale, though the cutoffs may be, 
and often have been, lower: Grades in the A range (A–, A, A+), 80% and above; grades in the B range, 70%–79%; grades in the C range, 60%–69%; grades in the D range, 50%–59%; and F grades below that.  A+ grades are reserved for the top scoring student or two, and are awarded only if those scores are significantly higher than the next highest scores.

This is not a curve. If it were, the cut points would be based on the distribution of scores in the class, rather than fixed cut points. Using an established point scale means that you are not graded in direct competition with your classmates.

We determine how many exams you passed:


If you passed this # of examsYour course letter 
grade is the lower of the provisional letter grade and a grade of
5
A+

4

C-

3

D+

2

D

1

D-

0

F



Please note two particularly important consequences of the course grading algorithm:

 If you fail to pass just one lab exam, your grade in this course will be no higher than a C- —and the more exams you do not pass, the lower your grade in the course.You can pass all the lab exams and still not get at least a C in the course. Remember, your letter grade is primarily based on your midterm and final exam scores; if those are low, your grade will be low.


We will post scores on the course eee grade sheet as soon as is feasible; it typically takes a few days. Monitor these postings: if you do not see a score for a particular lab exam or  evaluation you turned when scores for the class are posted, promptly contact the person who grades your work—see the Important Information section above; promptly contact the instructor if you do not see your score for the midterm or final. We’ll work with you to determine what has happened. Often, a missing score means you did not turn in your work, or email it to, the right place, or it was lableled improperly to the extent we could not figure out whose work it was. If we can find the item, we’ll grade it; if we cannot, you’ll need to contact the instructor to determine what can be done.

Final course grades, the scores used to compute them, a number of statistics about the class and and discussion of how grades were computed will be available on the course Web page soon after the course is over.
Follow the links to Course Grades and 
A Note on Course Grade Calculation to access that information.




About cooperation


As ICS 21 students, you are expected to know and follow UCI and Bren School academic honesty policies; do read them. The ICS policy can be found  (among other
places) on the 
ICS undergraduate web site;  
the UCI policy is on the 
UCI Academic Senate site.

In addition to those rules, there are some specific rules regarding student-with-student cooperation in this class:

You may cooperate on the assignments to any degree you wish, including, of course, asking questions of your partner and course staff.

While taking exams, you must do your own work. Among other things, this means you cannot memorize someone else's code —particularly mine or a TA's—and just repeat it on the exam. The tests are closed book (and closed neighbor!), except
that for the midterm and final you can use a dictionary and a non-programmable
calculator. Lab and retake exams must be taken at the times and in the rooms in which
they are scheduled. A violation of these rules will be considered cheating,
and dealt with accordingly.





Acknowledgement. Thanks to Prof. David G. Kay for permission to adapt text from his Fall 2006 Informatics 41 Pair Programming Guidelines.
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/SettingUpJava.html
##-----------------TITLE------------------------##
ICS 21 Winter 2012
##------------------TEXT------------------------##
ICS 21 Winter 2012
Setting Up Java and Eclipse On Your Computer



A word of warning

One of the advantages of programming in Java is that it's possible to set up your own computer as a Java development environment easily and cheaply.  On the other hand, working in the lab has some genuine benefits, particularly for those of you who are fairly new to programming or to UCI.  In the lab, you'll find that help is more readily available when you get stuck, that your machine setup will generally be stable and designed well for the task of working on your assignments, and that you're free from the distractions of your home. And it's a great place to meet up and work with your programming partner.

Nevertheless, we're aware that many of you, either out of want or need, will choose to do some percentage of your work on your own machines.  What follows is enough information to turn your Windows-based or Macintosh computer into a Java development environment, including Eclipse, using freely available software.







What's in this document?

Before you get started, be aware that this document only describes how to set up Java and Eclipse on a computer running Windows or Mac OS X, and it applies toinstalling SE7 on Windows, the version of Java we use in the labs, and SE6 on the Mac (SE 7 for the Mac is not yet out of "pre production"). The few differences between the language features of SE6 and SE7 that concerns us in 21 will be discussed in class; all assignments and lab exams can be completed using SE6 features without any undue hassle.

If you use Linux or Solaris, JDK 7 Update 2 can be downloaded from Java SE Downloads, the same way it can for Windows; we do not discuss the details of installation here; there is ample documentation available on the web.

To install Java and Eclipse on Windows or on Mac OS X, see the applicable section below.







Setting up Java on Windows

Getting started

What you'll need to get started is a Java compiler and Java virtual machine, both of which support Java 7.  A great option is to download the Java SE 7 JDK (JDK 7) from Java SE Downloads, the latest version of which, as of this writing, is JDK 7 Update 2.  Just click on the  JDK Download  button in the Java SE 7 Update 2 section of the screen, accept the license agreement and then choose the version of Java that matches your operating system and save the downloaded exe file. For those using Windows 7 and earlier, related OS, such as Windows Vista, 2000, and XP, choose the download for Windows x86 systems.)

  Be sure you download the JDK and not the JRE!  The JDK includes a Java compiler (javac), a Java virtual machine (java), and all of the standard Java library components — in other words, everything you need to write Java programs in a wide variety of problem domains, and more than enough firepower for the assignments we'll be giving you.  (The JRE is the Java Runtime Environment, which includes the necessary code to allow you to run Java programs, but not to write and compile them!)

Installation: the easy part

The JDK includes an installation program, which places all of the files into the appropriate places and sets up some desktop shortcuts for you: Double-click on the exe file you downloaded; if asked, say "yes" to allowing the program to modify your computer, and then follow the instructions on the installation screens (it's typically best to just accept the default settings).  

Once Java is installed, the installation program may bring up a screen for you to install JavaFX. We do not use Java FX in this course, so fell free to cancel that (part of the) installtion.

When installation completes, you'll be taken to a web page to register your installation; registration is optional.

After running the installation program, you still won't be able to execute javac or java without making a couple of modifications "under the hood" of your system.

The (not all that) hard part: PATH and CLASSPATH

You can execute programs from a command prompt by simply typing their names, such as javac or java.  But there's a catch: Windows has to know where it can find these programs.  This is the job of the PATH environment variable.  Whenever you try to execute a program, Windows will look for it in the list of folders in the PATH. Each folder in the PATH list is separated from the next by a semicolon; forgetting or misplacing semicolons is a major cause of the PATH not finding javac or java.

Similarly, whenever the Java compiler or Java virtual machine need to be able to use a Java class (such as when you import a class from the Java library), the compiler or virtual machine needs to be able to know where to find it.  This is the job of the CLASSPATH environment variable.  CLASSPATH is a list of folders, separated by semicolons, in which the Java compiler or virtual machine will look for a Java class whenever it's trying to find one. Forgetting or misplacing semicolons is a major cause of the CLASSPATH not finding clases your program needs

So, to make the JDK work, you have to modify the PATH and CLASSPATH environment variables on your system, so that Windows will be able to find javac and java, and so that javac and java will be able to find all of the necessary Java classes.

How you get to these environment variables is slightly different on different versions of Windows.

On Windows 7 and Vista, click the start orb in the lower-left corner of the screen, move your mouse over Computer, right-click, and select Properties from the pop-up menu.  Click the Advanced System Settings link, then click the Environment Variables... button.

On Windows XP and 2000, right-click the My Computer icon on your desktop and select Properties.  Select the Advanced tab.  Click the Environment Variables... button.
	
Once you've brought up the environment variables, find the PATH variable listed under "System variables" and add this to the end of it:


;C:Program Files\Java\jdk1.7.0_02\bin


Then find the CLASSPATH variable.  If it doesn't exist (and it probably won't, if you've never used your system to develop Java code), click the New... button, specifying CLASSPATH as its name, and the following value:


.;C:Program Files\Java\jdk1.7.0_02\lib


If you're using javac and java from the command line, you will need to bring up a new Command Prompt window, in order for these changes to take effect.

That's it!

At this point, your Java installation is ready to go; you're now ready to proceed to installing Eclipse.







Setting up Eclipse on Windows

Downloading Eclipse

There are several different distirbutions of Eclipse available for download at eclipse.org, each geared toward users with different kinds of needs: Java programming, web development, and so on.  So the first thing to know is which distribution to download.  For our work in this course, we expect you to be using Eclipse Classic 3.7.1.  Start by downloading this: click on the big Download Eclipse button, then find  Eclipse Classic 3.7.1. If you are using Windows 7 or earlier, related OS such as Vista, 2000, or XP, click the Windows 32 Bit button. Then click on a download site and save the downloaded ZIP file to your computer.

Installing Eclipse

Eclipse is distributed as files in a Zip archive and, unlike most software you install on Windows, has no installation program.  Instead, you'll need to do a few things on your own in order to get it installed.

Find the .zip file that you downloaded.  Extract it to C:\eclipse, or somewhere else you feel comfortable putting it.  (On Windows 7, you can extract by opening the ZIP folder and draging the enclosed Eclipse folder to where you want to store eclipse. The extraction process is likely to take a while — several minutes or more is not uncommon.Once you've extracted Eclipse into a folder, go into that folder using Windows Explorer.  Find the file eclipse.exe — it may show up as eclipse if you have Windows Explorer configured to hide file extension, but you can recognize it because its icon will be the circular purple logo you see at eclipse.org.

From here, your next step depends on which version of Windows you're running.

On Windows 7.  Double-click on eclipse.exe to start Eclipse.  When asked for a workspace, use the default for now.  Once the program starts, you'll see the Eclipse icon show up on your taskbar.  Right-click that icon and select Pin this program to taskbar, so that you'll be able to run Eclipse any time you'd like.

On Windows 2000, XP, and Vista.  Right-click on the eclipse.exe file you found, select Create Shortcut to create a shortcut to allow you to run Eclipse.  Drag this shortcut to your desktop or Quick Launch bar.  You can then use this shortcut to open Eclipse any time you'd like.

That's it!  Eclipse is installed and ready to go.







Setting up Java on Mac OS X

Getting started

First, we assume that you're running at least version 10.5 of Mac OS X on a 64-bit Mac.  (On Mac OS X, you can find your version number by selecting About This Mac under the apple menu.)

If you're running an earlier version of Mac OS X or are running 10.5 on a 32-bit Mac, there may still be hope available at this link, though you'll need to be comfortable with the Terminal application and getting around your Mac.  Note that, if you go this route, you won't need to set up Java FX or NetBeans.

If you're running MacOS 9 (or older version of the Mac OS), it's time to upgrade — probably to a new machine.

Mac OS X 10.5 and 10.6 can be updated to the most recent version of Java through the regular Software Updates feature of Mac OS X , or by installing the latest Java update for OS X 10.5 or for OS X 10.6, whichever is appropriate.

Mac OS X 10.7 ("Lion") does not come with Java installed; you can install it by following the instructions on the  Java for OS X Lion page.

Checking if you have the latest version installed and selected as default

The first thing you should do is to check if you have the latest version of Java installed.  To do so, first open a new Terminal window (by command-N or choosing New Shell on the File menu); then type the following command:


    java -version


If you have the latest version of Java installed, you should see something like the following:


    java version "1.6.0_22"
	Java(TM) SE Runtime Environment (build 1.6.0_22-b04-307-9M3263)
	Java HotSpot(TM) 64-Bit Server VM (build 17.1-b03-307, mixed mode)


If you see that the version number starts with "1.6," you're in business!  Your machine is ready to go.

If you see a version number that starts with something other than "1.6" (like "1.5" or "1.4"), you'll need to continue following these instructions.

Checking what version of Java is the default on your machine

Mac OS X is perfectly happy to let different versions of Java coexist on your machine; installing a newer version of Java doesn't remove any earlier versions and doesn't even make the newer version the default Java on your machine.  So, the next step is to see if the latest Java is installed but is not the default.

Launch Applications, then select Utilities, then Java, then Java Preferences.  Click on the General tab, if it's not already selected.  In the Java Application Runtime Settings box, see if Java SE 6 (64 bit) is in the list; if so, drag it to the top of the list, making sure that it is the first item.  Close the dialog box.

If Java SE 6 (64 bit) is not in the list at all, you'll need to download and install the latest version of Java for your OS, then make it the default version (if it is not already) as discussed above.

What else you'll need to know

If you're used to the Mac environment and not used to Unix or other command-line processing systems, you'll want to learn at least a little Unix so you can find your way around.







Setting up Eclipse on Mac OS X

Determining which version of Eclipse is right for you

There are two separate downloads of Eclipse Classic 3.7.1 for Mac OS X on the main download page, Mac OS X 32 Bit and Mac OX X 64 Bit.  All modern Macs are 64 bit machines; you only need the 32-bit version of Eclipse if your machine is on the order of ten or more years old. 
If you are unsure which version to use, download the 64-bit version and try it. If it fails to work, then delte it and download for the 32-bit version.

Installing Eclipse on Mac OS X

To install Eclipse Classic 3.7.1:

Go to http://www.eclipse.org/downloads/.Under the last entry, Eclipse Classic 3.7.1, click on Mac OS X 64-Bit or Mac OS X 32-Bit, whichever is appropriate for your Mac.Click on the main or a mirror download site.  Choose Save File in the dialog box that appears and click OK.The file will download — this may take a few minutes.Double-click on the resulting .gz file to unzip and untar it.  The result will be a folder called "eclipse".  This, too, can take a few to several minutes.Open the "eclipse" folder and double-click on the Eclipse icon (not the "eclipse" — note lower-case — shortcut).  On first launch, a dialog box might appear asking if you're sure you want to launch; say yes.  After a minute or two, a dialog will ask you to select a workspace, at which time you'll be ready to use Eclipse!







Updated to reflect new versions of software and changes to web sites, by Norman Jacobson, January 2012.
	Updated to reflect new versions of software and changes to web sites, and to place the emphasis on Windows 7, the version of Windows now
	used in the Help Center, by Norman Jacobson, June and September 2011.
	Added direct inks to Java downloads for  OS X 10.5 and 10.6, by Norman Jacobson, January 2011.
	Updated to reflect new versions of software and new web addresses; slight changes to section on Linux and Solaris, by Norman Jacobson, December 2010.
  Added instructions for installing Eclipse on Mac OS X, thanks to Norm Jacobson, Winter 2010.Instructions for modifying environment variables using Windows Vista and Windows 7 added by Alex Thornton, Fall 2009.Link to Soy Latte version of JDK 6 for older Macs added by Alex Thornton (with a tip of the hat to Norm Jacobson and one of his students from last quarter), Winter 2009.The Mac OS X section rewritten to describe a simpler installation procedure (with thanks to Norm Jacobson for the information) by Alex Thornton, Fall 2008.The Mac OS X section reworked, to describe Java 6 availability on Mac, by Alex Thornton, Spring 2008.Tightened up a bit — removing documentation regarding ancient versions of Windows, updating version numbers — by Alex Thornton, Winter 2008.A few minor changes by Alex Thornton, Winter 2007.Restructured by Alex Thornton to include information about setting up Java on Mac OS X, mostly written by David G. Kay, Winter 2006.Brief information about Mac OS X and Linux added by Alex Thornton, Fall 2005.A few minor changes by Alex Thornton, Winter 2005.Several changes made (in light of the release of J2SE 5.0) by Alex Thornton, Fall 2004.A few minor changes by Alex Thornton, Fall 2002.Originally written by Alex Thornton for ICS 21 and ICS 22, Summer 2002.
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/LabManual/03-LabAssignments.html
##-----------------TITLE------------------------##
About Lab Assignments
##------------------TEXT------------------------##
About Lab Assignments




Completing Lab Assignments


The best strategy to do well on the lab exams by far is for your pair to complete the corresponding assignments, and to do as much of the work as you can in the Help Center. Assignments are specifically designed to prepare you for the lab exams; the Help Center provides all the software and hardware you need to work on assignments, and has course staff on hand to help you and your partner, right at your work station, should you have questions or get stuck.  Lab exams are taken individually, so it is a good idea for both members of the pair to participate fully in completion of the assignment; that way, each member is prepared for the exam.

Each lab assignment has your pair design and implement a Java program, putting to practice concepts discussed in lecture and the readings. It will be very close to the program used in the corresponding lab exam; once you complete the exam, its program should look a lot like the one you wrote for the assignment. Each assignment not only gives you the specifications for the program (and its various components) but also spells out the portions of the program that are candidates to be missing in the lab exam you take. 

We will have several versions of the lab exam. You will not know which version of the test you will be taking until the start of the exam; this is also true for retakes. So, again, you should complete the entire assignment, and understand it thoroughly— before the lab exam.

 You are free—and encouraged—to get as much help as you need to complete the assignments from any source you like. But beware: some students get so much help that they end up doing little of the work themselves, and that usually results in a lack of knowledge and not passing the lab exam. And remember that simply copying someone else’s work is considered an infringement of academic honesty rules.

If you and your partner prepare to work on your lab assignments before you come to the Center, and work diligently once there, you should have no difficulty finishing an assignment before the day of its lab exam. But it does typically takes several hours to complete an assignment, so do plan accordingly!

You may of course use the Help Center any time it is open; remember it is not available on days  when lab exams are given.  You can also use the ICS 364 lab any time it is open, and any other ICS lab when it is open and no class is in session. (See the Course Reference for more details.)  The lab attendant on duty at those times is there to watch over the equipment and the room; s/he cannot help you with your assignments.




Writing Programs that Follow Professional and Course Standards


You should always follow good design strategies in your code. We help you do that with this assignment by showing you the classes and methods you should have (and where they should be defined and used). Note especially how heavily we rely on comments, and using many classes and methods instead of doing detailed work in main(). As the assignments progress, you will be expected to complete more and more of the design yourself.

For each assignment (and lab exam) we will provide you with some skeleton Java source programs. Do not change any public method signatures or constants you find. It’s also best if you do not change any of the private information, either; that way, you won’t have to rethink your work when you take the lab exam. You can add private fields, constants and methods to “help” the methods we provided.  You should not need to import any libaries, but you may do so if they are needed to complete your work.

When writing any program, you should follow a good, consistent coding and documentation style.  Clearly name any classes, methods, fields or variables you add; consistently indent your code: base your coding style on the code  we provide and the code  you see in Horstmann's text. The instructor or the staff member grading your exams may want to modify the style somewhat; if so, do it their way! If you deviate significantly from our class’ style, the course staff could have a harder time understanding your code on the lab exam, as well as when assisting you with the assignment.




This section split from the Lab Exam Procedures and Grading section, and revised 
  to reflect pair programming, by Norman Jacobson, September 2006
Minor edits and updates by Norman Jacobson, December 2006, December 2007 & September 2008.
Edited to reflect use of the Help Center instead of priority lab sections and to add the
   section on writing good code (consolidated from the assignment write-ups),
   for ICS21 Fall 2009, by Norman Jacobson, September 2009.
Minor revisions for clarity, by Norman Jacobson, August 2010.
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/LabManual/09-Assignment4.html
##-----------------TITLE------------------------##
A Donation to the Music Archive
##------------------TEXT------------------------##
A Donation to the Music Archive
Lab Assignment 4
to prepare for Lab Exam 4



This lab gives you practice with simple nested data structures and formatted console output. You also gain additional practice in using ArrayLists and classes others have written.



Program Requirements


A serious collector of recorded music has left his collection to a music archive. You’ve been hired to create a title index and some “media counts” for the collection, using the information from a file that lists the donated items. The archive needs the title index to easily find items; it needs the counts to determine how many storage shelves are required for each kind of media.

The archive has begun making a catalog of the donated items. A catalog entry consists of an accession number (a unqiue identifier), the work’s title, and the kind of media the music is on, such as paper (a book or pages of sheet music) or vinyl record(s). An accession number is no more than 10 characters, and can be made up of digits and/or letters (and no other symbols). The title is no longer than 50 characters and always starts with a capital letter; it never contains a semicolon (for reasons that will become clear shortly). The media categories are each designated by a single uppercase letter:

Letter   Category
C        Compact media
P        Paper (sheet music, books)
V        Shellac & vinyl records
W        Wax cylinder



Technical Details

You’ve worked out with your archive contact that the input file given to you will be a text file, called music.txt. Each donated item’s information is on one line (and there is only donated item per line). Each line will have the form
acccession number;  title; media category code
that is, a line is formed by an accession number, a title, and a media category code, with these three fields separated by a semicolon (;) and a space. (There is no “;” or space at the end of the line.) Each line will end with the standard PC end-of-line mark—that is, a carriage return character followed by a line feed character; in Java terms, the characters \r\n.

 The provided music file will have been run though a testing program to ensure its format is correct and that its fields follow the specifications given for them. You can be confident that the music file will be in the correct format to be fed into your program.

In the Eclipse project, you will find the MusicFile, a class containing the methods needed to properly process the music file—to open it, read a line of information from it, and close it. Since MusicFile is provided as a class file, the project also contains the document MusicFileDoc.txt; it describes MusicFile’s public methods.


The index is to be placed into a text file called index.txt. It will have the information about each musical item on one line, nicely formatted, and be in alphabetical order by title. The details of writing to and formatting the lines of the index file have been encapsulated in the class IndexFile, which has already been written and is in the project file;  IndexFileDoc.txt documents its public methods.

The counts are to be displayed in the console window in a neat, easy-to-read arrangement, after the index file is constructed (and stored). Each count is labeled so the user knows the media to which the count refers. 

The actual list of music will be provided to you at a later date, as the cataloging of the collection is ongoing. So, you will have to test your program using a “fake” list. We’ve provided one for you, called music.txt. You should also test your program on other test lists you put together, ones designed to try and “break” your program. (And if they do not break your code, then you have reasonably certainty that the indexing part of your program works correctly.) Especially, try music files that are empty; have one, two or three items; place one item in every bucket; add a new item before all items in a bucket or after all items in a bucket...any and all cases that might uncover a potential mistake.

The program’s major steps are straight-forward: 
Construct the music file, index file, and structure to sort the music items, the MusicList. Open the music file; for each line of the music file, read in its fields and make a MusicItem object out of them. Place that item into the intermal MusicList structure; MusicList is cleverly structured so that when an item is added to it, that item is in the correct order with respect to the others.As you read each item, examine its media code and update the appropriate count.Once all items are read, open the index file. Then, for each item in the music list, pass it to the method that writes a line to the index file. 
Close the files when you process the last item on the music list. Print a message telling the user the name of the index file (so the user can find it).Print out the media counts, and compute and print the count of all the items,
all labeled so the user knows what’s what.
When you create index.txt for the first time (or re-create it when it has been deleted) you will likely need to select your project folder and issue the Refresh command (it’s in the File menu, among other places) to see it in the Package Explorer.

After you run the program, if you open index.txt in the editing window, you may very well be told the “resource is out of sync with the file system... .” This occurs because the editor has the old version of the file in its memory, but knows the version on disk has changed. Just hit F5 to display the current contents of the index file. And if you run the program with index.txt file open in the editor window, when you go back to look at its contents (after the program completes) you’ll likely see a dialog box warning you that “The file...has been changed on the file system” and asking if you want to “replace the editor contents with these changes?” Click on Yes; you will then see the current contents of index.txt in the window.

The files discussed above, along with a number of Java skeleton programs we’ve provided, are in the zipped Eclipse project file
21Lab4.zip. Using the same procedure that you followed previously, unzip the file and import this project into your Eclipse workspace.


A hint: You will probably find the String method compareTo() quite useful. s.compareTo(t), with s and t being Strings, returns 0 if s and t have the same value, a number less than 0 if s comes before t in alphanumeric order, and a number greater than 0 if s comes after t. This method comes in handy when figuring out where to place a music item in the music list so that ordering by title is maintained.

An admonition: There are two methods in the ArrayList class called add. add(item) adds an item to the end of an ArrayList. add(i, item) adds an item at position i of an ArrayList, moving all items from i to the end of the list “over by one.” You will likely need to use both of these in your program; do not confuse them!



About Lab Exam 4


Lab Exam 4 will be very similar, but perhaps not identical, to the program you have been asked to write for this assignment. The lab exam will ask you to complete one or more of the following methods:

The Bucket constructorBucket.addItemThe MusicItem constructorThe MusicList constructorMusicList.addItemMusicList.updateCountsThe MusicManager constructorMusicManager.makeIndexAndDisplayCountsMusicManager.makeMusicIndex()MusicManager.writeMusicIndex()MusicManager.displayCounts



Written by Norman Jacobson for ICS 21 Fall 2004, July 2004.
Minor revisions, by Norman Jacobson for ICS21 Winter 2005, December 2004.
Rvised to reflect encapsulation of file handling routines, by Norman Jacobson for ICS21 Fall 2006, November 2006.
Minor edits for clarity, by Norman Jacobson, December 2006 and September 2008
Minor editing to reflect use of Eclipse and for improved clarity, by Norman Jacobson, September 2009. 
  Includes some text adapted from Alex Thornton's Lab 4 for ICS 21 Summer 2009.
Minor typos fixed, by Norman Jacobson, September 2010.
Revised to remove requirement of status messages (processing is fast enough that users   will not wonder if program is hung up), and to make explicit the requirement to display
  the name of the index file, by Norman Jacobson, December 2010.
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/LabManual/01-SurvivalGuide.html
##-----------------TITLE------------------------##
Lab Survival Guide
##------------------TEXT------------------------##
Lab Survival Guide



To make your and your partner’s time in the ICS 21 Help Center as productive and pleasant as possible, we strongly recommend that you

Prepare before coming to the Center. Read the assignment beforehand, think about how to do it, talk it over with your partner and ask questions about it. Then, when you get to the Center, you’ll be your most productive.

Start early on each assignment. Lab assignments in computer science, more than in most disciplines, are time-consuming; working on a computer until a program is complete and correct typically takes much more time than on-paper assignments. Your pair should start a lab as soon as you complete the lab exam associated with the previous assignment; you can’t do a week-long lab in just a couple of days. Do not wait until  the Center is next open to begin a lab assignment: all the necessary information for each lab is in this manual. Starting promptly reduces your frustration, since you’ll have time to ask questions when difficulties arise, and will have sufficient time to finish the lab before the lab exam date. 

Pay close attention to detail. Computing, more than many other disciplines, requires precise, literal attention to detail. Take things slowly and deliberately. Wring every bit of information you can out of the assignment description; read the lab exams carefully to know what they require of you.

Remember you’re not alone. As you work on your assignments, we encourage you to seek assistance from your partner (obviously!) and from the TAs, the tutors and your colleagues. TAs and tutors will help you with the mechanical details of using the hardware and the software, and they will give you help and hints towards solving the assignments. Be careful, though: if you receive so much help that, in effect, others did the assignment for you, it’s very likely that you will not have learned enough to pass the lab exam.

Come to the Center regularly, even if you or your partner have access to a computer elsewhere. In past offerings of this class, there has been a strong correlation between attendance at labs and passing lab exams without several retakings of them; your interaction with your partner, other students and course staff helps you learn the material more completely and quickly. And it’s obviously hard to do pair programming if only half the pair comes to lab.

Feel free to experiment. Much of computing is learned by trial and error, trying things out to see what works. (That’s why little kids are so good at it; they learn most everything that way.) But adults are often uncomfortable with the “error” part; they hate to  “waste time ” and are embarrassed when they make mistakes. But to learn the practical details, you’ll have to put that discomfort aside and be willing to experiment. If you are concerned an experiment might foul up your assignment, make a copy of that work before doing the experiment. If the experiment goes awry, you can use your copy to  back up to where you were. Be prepared to tell TAs and tutors what you’ve already tried when you ask for their help. Experiment while working on the assignments—but not on the lab exam: you should have things figured out by then! 

Don ’t lose it. Computers can be frustrating; it’s challenging to communicate with a dumb machine. If you feel like losing your temper (and nearly everyone who works with computers occasionally does), take a deep breath and remember: It’s only a machine. It’s only an assignment. It’s only a class. Someone is available who can help you find a way out of your difficulty (especially if you’ve started early and left adequate time).



Written by David G. Kay, Fall 1994, and revised, Fall 1995, with excerpts from previous versions 
  prepared by Norman Jacobson, Julian Feldman, and David G. Kay
Minor revisions by Norman Jacobson, December 1995, December 1996, December 1997.
Revised for the Fall 1999 offering of ICS21 by Norman Jacobson, September 1999.
Minor revisions by Norman Jacobson, December 1999, June 2000.
Minor revisions by Dan Frost, Norman Jacobson, Alex Thornton, September 2000.
Minor revisions by Norman Jacobson, March 2002.
Revised to reflect pair programming by Norman Jacobson, September 2006.
Minor revisions by Norman Jacobson, December 2006.
Minor revisions by Norman Jacobson, September 2007.
Revised to reflect the establishment of the ICS 21 Help Center, by Norman Jacobson, September 2009.
Minor  revision by Norman Jacobson, August 2010.
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/LabManual/05-TakingLabExams.html
##-----------------TITLE------------------------##
Taking Lab Exams
##------------------TEXT------------------------##
Taking Lab Exams



Each exam is given during the first hour of each of the scheduled lab sections for this course. It begins promptly at the start of that hour and lasts for 50 minutes. 

If you report to the Help Center on an exam day at the time that corresponds to the starting time of your lab section, you are guaranteed a seat at that time for the exam. If you show up at the time another lab section starts, we’ll let you take the exam if a seat is available; first come, first served, after all students enrolled in that section have been seated.

On exam days, the Help Center is strictly for the taking of the exams; you cannot do other work in that room that day. If you do not take an exam on the day it is scheduled, you cannot take it later unless you have the instructor’s specific approval, as discussed in Lab Exam Procedures and Grading.

Taking the exam requires three basic steps: 

Downloading the exam from the Lab’s serverCompleting the exam on your workstationPlacing the completed exam into the correct folder on the server

To complete these steps, it’s important to know how our class’ server folders are organized.

The ics-21 server folder 

Many ics classes have folders on the server; ours is called ics-21. You get to it (most easily) by first clicking on the Start, then  All Programs, then Instructional Files on Masterhit (it’s at the top of the menu). A window will appear; click on the ics-21 icon. 

Once you have opened the  ics-21  folder, you access its folders in the same way as you do folders elsewhere (such as on the C: drive).

Within  ics-21 are three folders, Files, Lab Exams and Dropboxes; only the last two are used when taking lab exams. 

The Lab Exams folder 

Lab Exams contains one folder for each lab exam, labeled Lab Exam 1, Lab Exam 2, etc. Within each of these folders are several folders, each containing a version of the exam; they are labeled Version 1, Version 2, and so on. Each of these version folders is an Eclipse workspace with a project that contains the exam.

When taking a lab exam, you copy to your computer the Version folder the TA instructs you to use. 

The Dropboxes folder 

Dropboxes contains the folders into which you place your completed lab exams; these folders are collectively called dropboxes. When you turn in a lab, we often say you “turn it in to your dropbox,” which means you copy the project folder with your completed exam into the folder whose letter range contains the first letter or letters of your last name. For instance, if your last name starts with "J" you would place your exam into the dropbox folder whose label range contains "J" (in alphabetical order); for example, a folder called Last Names A-M

Dropboxes are protected so that only course staff can take documents out of them (thus protecting your submissions from tampering).



Steps for Taking a Lab Exam


Arrive at an exam session (or, if retaking an exam, at the retake room at a designated retake time) on time. If you arrive to take an initial test after someone taking it has already left the room, or arrive at the test well after it has started, you might not be allowed to take the test at that time. If we did not have this rule, someone taking the test could look it over, leave the room and tell others very specifically what was on it, and then those others could come into the room to take the exam—not exactly fair! A Retake Coordinator will not let you take a retake when you arrive late for a retake exam, if s/he thinks seating you is likely to be disruptive to the folks already engaged in taking tests. If you are not allowed to take an initial exam, go to another of the day's lab exam times and take it then. 

If you do not take the exam at all on the day that it is given, contact the instructor; you may be granted permission to make up the test, as described in Missed Lab Exams part of the Lab Exams and Grading section of this Manual. If you are not allowed to take a retake exam, just go to another retake session to (re)take the test.Take a seat. Put away everything except, if you wish, these instructions, blank scratch paper and a writing implement. These tests are otherwise closed book, closed note and especially closed neighbor: You are not to converse with another student during the test. You may not have out any other part of the Lab Manual. You may not use code other than what we provide to you at the test. You may not copy the test materials to a memory device or paper; you may not access the Web or any email; you may not listen to anything from any electronic device (e.g., no listening to music from your iPod).Log on, using the provided login and password. Do not use your account! 

Important note: During the test, the right mouse button is disabled (for security reasons). Be sure you know how to accomplish the tasks described here using the left mouse button and Windows menus.When taking a lab exam, copy to the desktop the Version  folder the TA (or Retake Coordinator) instructs you to use. You cannot do the lab exam directly on the server.Launch Eclipse; for the workspace, give it the path to the Version folder you just copied from the server.Open the project. Read and follow the instructions given in the INSTRUCTIONS!.txt window. Also, read the comments present in the source code files; they provide more particular information about that part of the program, information you will likely find very useful in completing the exam.

Note: If now, or any other time you open a file,  Eclipse reports an "out-of-synch" condition, just choose File-->Refresh View to fix things.In particular, place your  name, ID number and UCInetID at the top of each Java source file where indicated , then, for every comment *** REPLACE THIS COMMENT WITH YOUR CODE ***, do just that: replace the comment with code that will make the method in which it appears perform all its chores and perform them correctly. You may add any private constants, variables and methods; however, you cannot change any of the provided public constants or method signatures, nor the contents of any method that does not have the comment *** REPLACE THIS COMMENT WITH YOUR CODE *** in its body. (If that last sentence sounded like a foreign language, don’t worry; it will make sense before the first test!) Test your work by compiling and running it.When you are ready to submit the exam (or when time is up), rename the project folder that’s inside the workspace—details on how to do this are below—and drag it onto the dropbox folder that you were assigned to use. If you place your work into the wrong folder, you will not be able to retrieve it; just put another copy of your work into the correct folder. We do not consider your exam turned in until it is placed into the correct drop box.Important note: There is a Windows “feature” that can confuse one when making a submission. When you drag the folder over the dropbox and release the mouse button, a message may appear that warns you that once the folder is placed in the dropbox it cannot be accessed; it will ask if you wish to continue. Always click Yes. If you say No, Windows may place an empty folder into the drop box! You may be asked this question more than once; if so, answer Yes every time.

Here’s a trick for making sure your project folder ends up when intended: try to submit it again. If you try to submit a folder that has the same name as one already in the dropbox, the computer will print an error message and will not place your new folder in the dropbox. The original submission is thus in the dropbox, and you have confirmation that it is there.

It’s important that you read error and status messages, because, if you make a mistake, you could get one that really does indicate an error. For instance, if you try to submit your work to the folder Dropboxes, instead of your drop box folder within Dropboxes, you will get an error message that says you cannot store your work there. So you need to again submit your work, this time to the correct dropbox.

If you discover that you have made an error in your submitted work, reopen your folder and correct the problem. Resubmit your folder to your assigned dropbox, with the file name updated as discussed below.When you are done, or time is called, log out by selecting Shut Down…  from the Start  menu, clicking on the button labeled Close all programs and log on as a different user?  and then clicking on Yes. 
 Warning: Once you log out, all your work on the desktop will be lost, so be sure you submit your work to the dropbox before logging out!If this is an initial test, leave the room; you cannot do other work in this room during lab exam time. If you are taking this test during a retake session, you may either log out and leave, or you may ask the Retake Coordinator to retake a different exam and repeat steps 4 to 10 above; for example, if you just retook Lab Exam 3, you now retake any exam other then Exam 3. You must leave when then session is over, regardless of whether you have finished your test(s).



Naming your Exam Folder


Before renaming your Exam folder for submission, be sure you have exited Eclipse. If you rename the Exam folder while Eclipse is open, it sometimes is emptied, destroying all your work!

Go to the project folder that’s inside the provided workspace; it will be labelled LabExamx, where x is the number of the lab exam being taken (1 to 5).

For the initial taking of an exam (the one you take in your lab exam section) label the folder exam number-student id-I, where exam number is the number of the lab exam (1, 2, 3, 4 or 5) and student id is your student id number. So, 1-12345678-I would indicate the original taking of lab exam 1 for the student with ID 12345678. 

If you submitted the exam material in error, or wish to correct it, or think you might have submitted an empty folder, append a “C” onto the folder name (1-12345678-IC, for example) and submit that new folder. If you have to correct a correction(!) add another C onto the end (1-12345678-ICC) and submit it, and so on. If you submit more than one folder for an initial exam, we grade the work in the one that ends in the most C’s.

For a retake of an exam, label the folder exam number-student id-Rtimes  retaken, where exam number and student id are as above and times taken is the number of times you have retaken this test. So, 3-12345678-R2 would indicate the second retake of lab exam 3 for the student with ID 12345678. As with the initial exam, indicate a folder with corrections by appending a C on the end of its name; again, we grade the work in the one that ends in the most C’s.

Remember, if you try to submit a folder that has the same name as one already in the dropbox, the computer will give you an error message and will not place your new folder in the dropbox (hence all this renaming of subsequent submissions).

We know this numbering is cumbersome, but it’s necessary to keep straight which exams you have taken, which submission we are to grade, and to keep your work separate from your classmates’ work. You are responsible for naming your folders correctly and having your name, id number, and UCInetID in your programf files. If a properly labeled folder from you is not found in your assigned dropbox, or your name is missing from the program files, we may not be able to figure out who took the test, and you may well end up with a "--" notation for it.



Written for ICS21 by Norman Jacobson, Sept. 1999.
Revised by Norman Jacobson for ICS21 Winter & Spring 2000, December 1999, January-March 2000.
Revised by Norman Jacobson, Dan Frost & Alex Thornton for ICS21, September & October 2000.
Revised by Norman Jacobson for ICS21 Winter 2001, November & December 2000, ICS21 Spring 2001, February 2001 &ICS21 Fall 2001, September 2001.
Minor revisions to reflect Windows 2000 by Norman Jacobson, December 2001.
Minor revisions by Norman Jacobson for ICS21 Spring 2002, March 2002.
Minor revisions by Norman Jacobson to format this document for the Web and to reflect two lectures of ICS21 in Fall 2002, August 2002.
Minor revisions by Norman Jacobson, November, 2002.
Minor revisions to reflect use of Java 1.4.1, unavailability of Cafe, and only one lecture, by Norman Jacobson, December 2002
Minor revision to include a shortcut for changing directories in a command window, by Norman Jacobson, July 2003.
Minor revisions to reflect Windows XP and new shortcuts, by Norman Jacobson, September 2003.
Minor revision to admonish students to use "javac *.java", by Norman Jacobson, December 2004.
Revised to reflect use of "lettered sections" for retakes, and other minor edits made, by Norman Jacobson, December 2006.
 Minor edits by Norman Jacobson, September 2007 and October 2007
 Revised to reflect a slightly modified folder naming scheme (to try and cut down on labeling errors), by Norman Jacobson, December 2006.
 Minor edits by Norman Jacobson, December 2008.
Edited to update name of the class folder, by Norman Jacobson, late December 2008
Text added to more fully explain policys related to arriving late to a lab exam, by Norman Jacobson, February 2009.
Revised to reflect the use of the Help Center for taking of exams and the use of Eclipse, for ICS 21 Falll 2009, by Norman Jacobson, September 2009.
Minor edits for clarity and addition of text to describe resubmitting the folder as a test
 that the original submission was successful, by Norman Jacobson, December 2009.
Additions of warning about leaving Eclipse open when renaming Exam folder and getting error message on first submission of work,
  by Norman Jacobson, March 2010.
Minor edits, by Norman Jacobson, August 2010.
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/LabManual/10-Assignment5.html
##-----------------TITLE------------------------##
A Donation to the Music Archive
##------------------TEXT------------------------##
Revising the Music Archive Program
Lab Assignment 5
to prepare for Lab Exam 5



This assignment gives further practice in code reuse, and has you apply simple abstract classes, abstract methods, inheritance and polymorphism to organize data.



Program requirements


Figures! Just as you get the music archive ordered-by-title report up and running, you’re informed that more information about each item in the archive is going to be collected, that it is going to vary depending upon the type of music item, and that it is to appear, labeled and nicely formatted, as part of the report. (By the way, this changing of specifications while a project is in development happens a lot in the world of programming.)

In particular,
First off, nothing about the current information, its format, or its order is changing; what is changing is that each music file item will have additional information after the media code, on the same line. The additional field or fields will be separated from the media code (and each other) by the same “; ” (semicolon followed by a space) delimiter used on the rest of the line. For example, a compact media music item would be 
accession number; title; C; number of tracks; year releasedIf the item is compact media, two fields follow the media code: (1) the number of tracks on the media, a positive integer, and (2) the year the item was released, a positive four-digit integer starting with 19 or 20. If the item is a record, two fields follow the media code: (1) the label (which company distributed the record), a string of at least 1 character, and (2) the speed at which the record is to be played, a positive two-digit integer that is usually (but not always) 33, 45, or 78.If the item is a cylinder, one field follows the media code: the maker (manufacturer) of the cylinder, a string of at least 1 character. If the item is on paper, one field follows the media code: the number of pages the item has, a positive integer. 

As before, this revised program is to print out a report, in order by title, of all the music items, with all of one item’s information per line, but with labels as part of the printed text so that the reader can easily tell what information is what; as before, the line  should also be easy to read and nicely formatted. For example,  a line reading 
R12129  Roger Miller Classics  C  18  2002
is not very easy to understand (and what would not meet the requirements of this assignment). Writing out the line as, say,
Accession#: R12129 |  Title: Roger Miller Classics | Media:  C | # of Tracks:  18 | Yr. Released: 2002
does make it easy to tell what information is what (and does meet the requirements of this lab). 

The program is also to print the same counts to the console window, following the same format requirements, as was done in Assignment 4.


Technical details

The input file given to you will still be a text file, called music.txt, with each item’s information on one line in the format described above. 
Each line will end, as before, with the standard PC end-of-line mark, a carriage return character followed by a line feed character.

  Again, the music file will have been run though a testing program to ensure its format is correct and that its fields follow the specifications given for them. You can be confident that the music file will be in the correct format to be fed into your program. The MusicFile class has been revised so it properly processes the revised music file; it has the same routines as before. Again, the routines are documented, this time in the file MusicArchiveDoc.txt, which is provided to you in the Eclipse project for this assignment. The only difference is that MusicFile’s readItem() returns an ArrayList with as many cells as necessary to hold the item’s information, rather than always returning an ArrayList with three cells.


Music items, of course, still exist, and all music items still  have an accession number, title, and media code. But now, items have additonal information that differs by the kind of media. To encapsulate this situation in a nice way, we still have the MusicItem class, which stores all information and methods that apply to all music types. Then, from MusicItem, we extended specialty classes, one for each media type, that contain (in addition to what is inherited from MusicItem) the fields and methods needed to store and manipulate the supplemental information particular to that kind of media. Read the comments in the MusicItem file for details on these extended classes.

Some of the supplemental information is  conceptually numeric, for example, the number of tracks on a CD, but this information is encoded as a string in order for it to be placed in the music information String ArrayList. To obtain the numeric equivaluent of this encoded string, use the parseInt method, a static method in Integer that takes a string and returns its integer equivalent (or throws an exception if the string cannot be converted to an integer). For instance, to obtain the number of tracks on a CD from the music item's information array, you would say something like numberOfTracks =   Integer.parseInt(item.get(NUMBER_OF_TRACKS_POSITION)). 

The index is to be placed into a text file still called index.txt. It will have the information about each musical item on one line, nicely formatted, and be in alphabetical order by title. The IndexFile method writeItem()  has been modified so it calls  the method displaySupplementalInfo() , which returns a String of the supplemental data formatted for printing on the report;  writeItem() plaes that information in the appropriate place on the report. The format of the supplemental information is up to you; make it easy to read.

As before, the details of writing to and formatting the lines of the index file have been encapsulated in the class IndexFile, which is being made available to you as a class file. Its public methods are also documented in MusicArchiveDoc.txt

The media category code constants are now in the MusicItem class.

All other aspects of the program are the same as before; all that changes is the input data and its appearance on the by-title report. So, the Bucket and MusicList classes can be used as is from the previous assignment, since they already meet this assignment’s requirements.. These two classes are provided to you as class files, and documented in MusicArchiveDoc.txt. Some methods in MusicItem and MusicManager also can be left unchanged from the previous assignment, since they are not affected by the presence of additional music information; feel free to reuse that code from Lab Assignment 4.

Archive personnel are still compiling the revised list of music, so you will have to test your program using test files. We’ve provided one for you, again called music.txt; it, too, is in the project file for this assignment. You should also test your program on other test lists you put together, in the manner described in the previous assignment.

The files discussed above, along with, as usual, a number of Java skeleton programs, are in the zipped Eclipse project file
21Lab5.zip. Using the same procedure that you followed previously, unzip the file and import this project into your Eclipse workspace. Do look over the provided code carefully to get a good feel for what the various classes accomplish, and particularly for how the various subclasses of MusicItem work together to deal with multiple media types. 





About Lab Exam 5


Lab Exam 4 will be very similar, but perhaps not identical, to the program you have been asked to write for this assignment. The lab exam will ask you to complete one or more of the following methods:

The CompactMedia constructorCompactMedia.displaySupplementalInfoThe VinylRecord constructorVinylRecord.displaySupplementalInfoThe Paper constructorPaper.displaySupplementalInfoThe WaxCylinder constructorWaxCylinder.displaySupplementalInfoMusicManager.makeMusicIndex



Written by Norman Jacobson for ICS 21 Fall 2006, November 2006.
Minor edits for clarity, by Norman Jacobson, December 2006 and September 2008.
Edited for clarity and to reflect use of Eclipse, by Norman Jacobson, September 2009.
Minor typos fixed, by Norman Jacobson, September 2010.
Revised to require labeling of values in supplemental information string, and to change name
  of method doing so to reflect this requirement, by Norman Jacobson, December 2010.
Added text to explain need for, and use of, parseInt(), by Norman Jacobson, January, 2012.
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/LabManual/07-Assignment2.html
##-----------------TITLE------------------------##
Lab Assignment 2
##------------------TEXT------------------------##
Animated Smiley
Lab Assignment 2
to prepare for Lab Exam 2



This assignment gives you some more practice in basic Java programming, including practice with if statments and simple loops, by enhancing the previous Smiley program to handle animation of a smiley face as it interacts with the walls (boundaries) of the graphics window.



Program Behavior and General Requirements


You are to complete the Java class SmileyAnimation, which we’ve added to the Smiley program so that smiley faces can be animated. 

When you run a  (correctly) implemented version of this program, a graphics window appears, with a smiley face in it; the exact shape and color of the face are up to you, within the bounds that the face must be small enough that it can move around within the graphics window and be recognizable as a smiley face.  That smiley heads off towards a wall, an edge of the graphics window. When it hits the wall it should 

Change the color of its face to the color of the wall, and the wall color should become the color of the smiley face; in other words, the colors swap.
Rebound from the wall, either directly (going back the way it came), or at 45 degrees up or down (if it hit the left or right wall) or 45 degrees left or right (if it hit the top or bottom wall); the direction is randomly chosen and each direction has an equal probability of occurring.

This behavior continues for a number of milliseconds, set as a constant in the program; every time the smiley hits a wall, it and the wall swap colors and the smiley rebounds, heading to another wall.
Closing the window ends the program, even if the window is closed while the smiley is still moving.




Technical Details


For this assignment, we’ve again helped you get started by providing some code and lots of comments and documentation. All of your work is to be done in the SmileyAmination class. We provide several already-written classes, in compiled form, that provide functions you will likely need to use in your program. Three of these, SmileyFace, SmileyFacePart, and SmileyDisplay, have public methods you may need to employ, so we included text files, SmileyFace.txt, SmileyFacePart.txt, and SmileyDisplay.txt, that describe those methods. You may be surprised that SmileyFace and SmileyFacePart are not provided in source code form, since you wrote those classes in the last assignment. But that is exactly the point: having written and thoroughly tested them, we can now use their methods to make and manipulate smiley face characterisics without paying attention to the class’ details; we don’t need the source to use the  class’ capabilities.

These files have been collected into an Eclipse project and zipped into an archive called 
21Lab2.zip. Using the same procedure that you followed in the last assignment, import this project into your Eclipse workspace.




Testing Tips


It’s typically fastest to implement and debug a program when it is done in stages; when something goes wrong, you know it was because of changes made at the current stage, thus reducing the amount of code you have to search to find the mistake. Testing in stages can take many forms. For this assignment, since all the methods you are writing are in one class, testing in stages boils down to adding and testing a method or two at a time, judiciously choosing them so that, as you add them, you are incrementally heading to a completed program.

For example, here’s an outline of one way to incrementally implement and test your program:
Staert by just constructing and painting the initial smiley face; don’t animate it yet.
Move the smiley in one, chosen direction (not randomly) and make sure it goes that direction. Change the chosen direction a few times and re-run the program, making sure each time that the smiley face goes where it’s supposed to go.
Using a chosen direction, make the smiley stop at a wall; repeat for all four walls.
When the smiley hits a wall, swap the color of the wall with the face’s color; repeat for all four walls.
Have the smiley hit the wall “dead on,” swap colors and have the smiley return back the way it came; repeat for all four walls.
Have the smiley rebound from a wall at the three angles that can (later) randomly occur; repeat for each angle and each of the four walls.
Choose the “bounce direction” randomly, as described above.
Test the whole program with various starting positions, sizes and colors of smiley faces.




About Lab Exam 2


Lab exam 2 will be very similar, but perhaps not identical, to the program you are to code for this assignment. You will  implement one or more of the following methods (all are from the SmileyAnimation class):

the constructoranimatehitSomethingadjustColorAndDirectionadjustColoradjustDirectionhitLeftWallhitRightWallhitTopWallhitBottomWall

Remember to read over INSTRUCTIONS!.txt and  program comments before beginning; they will tell you what you are to complete and give any particulars (such as, for example, the characteristics of a smiley face you are to draw or the kind of movement it should exhibit when animated).



Written by Norman Jacobson for ICS 21 Fall 2006, October 2006.
Minor edits by Norman Jacobson, December 2006 and September 2008.
Minor edits to reflect use of Eclipse, by Norman Jacobson September 2009. 
  Includes some text adapted from Alex Thornton's "Lab 2" for ICS 21 Summer 2009.
Minor edits by Norman Jacobson September 2010. 
Minor revision to make clear that all directions of return after bouncing off a wall
  have the same probability, by Norman Jacobson November 2010.
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/LabManual/06-Assignment1.html
##-----------------TITLE------------------------##
Lab Assignment 1
##------------------TEXT------------------------##
Smiley Faces
Lab Assignment 1
to prepare for Lab Exam 1



This lab assignment gives you some practice in basic Java programming by asking you to implement the “smiley faces” example we’ve been discussing in class — with a few additional wrinkles.



Program Behavior and General Requirements


In general, you are to write a Java program that draws one, two or three smiley faces on the screen, each with characteristics you provide, such as the color and the shape of the face itself, and of the eyes and mouth. You also implement methods that translate (move) the smiley as a whole, and that let you scale and translate each of the smiley’s parts (the face, eyes and mouth). (Scaling the smiley face as a whole requires some knowledge of linear algebra, so we do not include that feature.)

The  SmileyGroup() constructor contains the code that produces the faces. We suggest you write various bodies for SmileyGroup() so that you gain experience in using the two smiley face constructors, the setAttributes() method and the smiley face translation and scaling routines, and with drawing one, two and three faces.

Program behavior is straight-forward: when run, a graphics window and SmileyGroup are created, then SmileyGroup is given to the graphics routines, which draws the one, two or three smiley faces described by that SmileyGroup; the window is then made visible on the screen so that the user actually sees the smiley group. This approach, common in graphics environments, allows the programmer to fully construct a screen before showing it to the user. 

Each face you make should have two eyes that are above an imaginary horizontal line through the center of the face, and a mouth that is below that imaginary line; the eyes and mouth should have colors that make them distinguishable from the face.  Within these parameters, you may make the faces look however you'd like.

The user clicks on the close box to close the window and stop the program.





Getting Started


Be sure that you have downloaded the ICS 21 Eclipse workspace, and have set it up as described in the 
Orientation to the Lab section of this manual.  Many settings have been changed from Eclipse defaults to appropriately support your work in this course, so be sure that you’re using this workspace. That way, not only will things be properly set up for your assignments, but your work will match the environment that you’ll be using during lab exams.

Download the Eclipse project for this assignment and import it into your workspace:

Download the Lab 1 Eclipse project, 21Lab1.zip.Unzip it, producing a folder called 21Lab1.Move the Lab1 folder that’s inside  21Lab1 into the folder containing your Eclipse workspace.  For example, if your workspace is in H:\21Workspace, you’d want to move the Lab1 folder into H:\21Workspace.Start up Eclipse and select your workspace.From the File menu, select Import..., which will pop up a dialog box.  Under General, select Existing Projects into Workspace, then click Next >.Next to Select root directory, click the Browse... button.  Find the Lab1 folder that you copied into your workspace folder, select it, then click OK.Finally, click Finish.  You should now see a project called Lab1 in Package Explorer.  Your Problems window should show some warnings; each of these warnings indicates that there is a part of the program that has yet to be built.  (Not all warnings indicate this, but these warnings do.)

As you work, Eclipse will compile your program automatically each time you save it.  Pay attention to changes in the Problems window, especially errors, because these often indicate things that you’ve either done incorrectly or things that you need to do to finish the part of the program you’re working on.



About Lab Exam 1


Lab exam 1 will be similar, but not identical, to the program you are to code for this exercise. In particular, the assignment allows you the freedom to explore different combinations of smiley faces and their attributes; the lab exam instead will be quite specific about the characteristics of the faces you are to draw. Remeber to read INSTRUCTIONS!.txt and program comments before beginning your coding; they will explain in detail what is required. Remember that you must follow the exam specifications completely to pass the exam and that a significant failure to follow class style standards can result in a “not pass” even if your program is otherwise complete and correct.

The lab exam will have you code one or more of the following methods:

From SmileyFace: the constructors; the translate methodFrom SmileyGroup: the constructorFrom SmileyFacePart: the constructors; the translate, setAttributes, scale, setColor, setCenter, setXLength, and setYLength methods



Written by Norman Jacobson for ICS 21 Fall 2006, September 2006.
  Some text, especially in Technical Details, taken or adpated from the
  August 2004 version of "Reporting Test Statistics," a previous ICS21 exercise. 
Minor edits for clarity, by Norman Jacobson, December 2006 and September 2008.
Revised to reflect use of Eclipse, addition of the SmileyFacePart copy constructor, 
  by Norman Jacobson, September 2009. 
  Includes some text adapted from Alex Thornton's "Lab 1" for ICS 21 Summer 2009.
Minor editing by Norman Jacobson, September 2010.
Revised to reflect computeUpperLeft()'s move to the graphics module, and other minor editing by Norman Jacobson, December 2010.
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/LabManual/08-Assignment3.html
##-----------------TITLE------------------------##
Lab Assignment 3
##------------------TEXT------------------------##
Smileys at the Races
Lab Assignment 3
to prepare for Lab Exam 3



In this assignment you write a program where smileys run a race and, at race’s end, shows statistics about the racers’ running times. The assignment gives you practice with simple uses of ArrayLists and additional practice with boolean expressions, if statments, loops and nested structures.



Program Behavior and General Requirements


This program begins with smiley racers, on the left edge of the graphics display, facing right; we see them in profile. They each have a name displayed, in color, in the middle of their faces, so we can root for our favorite. 

The race begins when the user presses the Go! button; these racers then begin moving to the right. When a smiley hits the right wall, it’s completed a lap. The smiley then reverses direction (so that it is facing left), its speed is adjusted (as discussed below), and it heads for the left wall. When it hits the left wall, again the profile and direction are reversed, the speed is again adjusted, and the racer heads for the right wall; another lap has been completed. As the race is run, the number of laps a smiley has completed so far is displayed next to its name. 

When a racer completes the race—that is, runs the number of laps that constitue a race—the smiley stops. When all racers finish the race, the “stats” box at the bottom of the window shows the name and time of the fastest racer, the name and time of the slowest racer, and the average of all the racers’ times.

The program then stops; the window remains open so the user can read the statistics. The user clicks on the close box to close the window and end the program; if the close box is clicked while the race is still running, the program still shuts down.



Technical Details


For this assignment, we’ve again helped you get started by providing a significant amount of code and lots of comments and documentation. All your work is done in the SmileyAnimation and SmileyRacer classes. We’ve provided several classes in compiled form; three of them (SmileyFace, SmileyFacePart, and SmileyDisplay) have public methods and constants that you may need, so we’ve included text files describing each of them. Note that SmileyFace and SmileyFacePart as the same as they were in Lab 2; we explain why below.

Some additional technical details:
Each smiley racer is a smiley face with additional characteristics; each has all the attributes of a smiley face plus its name, the name’s display color, and information to track its status while it races, such as which lap it is on, which direction it is moving, and whether it has finished the race. So, the SmileyRacer class is extended from the SmileyFace class; it automatically has all the characteristics—all the fields, constants and methods—of the SmileyFace class. We then added additional fields, constants and methods to turn the smiley into a racer. The upshot of this is that all the public methods available to manipulate or access smiley faces and their face parts are available for manipulating and accessing smiley racers and their face parts. You will not see these methods explicitly listed in the SmileyRacer class, but they are available to it.  Note that what makes up a smiley face and its parts has not changed; that’s why we can reuse the SmileyFace and SmileyFacePart classes from the last assignment. Thus, to construct a racer, you first construct a smiley face, and set its attributes as needed (see below). You then pass this smiley face into the smiley racer constructor, along with the racer’s name and name color. The constructor will use the smiley face’s attributes to set the same attributes in the smiley racer. You can also pass an exisiting smiley racer into the smiley racer constructor (along with a new name and color for it). This works because a smiley racer is a smiley face (albeit one with additional characteristics), so the constructor will treat it as a smiley face.To avoid having to write new methods to make the smiley appear in profile, make use of a couple of tricks: 

To start, make the left eye the same color as the face and the right eye a different color; switch those colors each time a wall is hit. (Think about it— it does work!) 
Place the mouth on the smiley so that the x coordinate of its center is about the same as the x coordinate of the right-most point of the smiley face; make it the same color as the display’s background color, SmileyDisplay.BACKGROUND_COLOR. This will make the smiley appear to have an open mouth. Shift the mouth to the other side of the face each time a wall is hit.Position your smileys so that, when they move left to right and right to left, they will not collide. You do not have to worry about constructing smiley faces so that, when the race starts,  their left sides touch the left-hand side of the race track; the racer constructor will translate them there—whenever feasible, it is best to have the program handle tasks, like this one, that would be tedious for a user.

To do the positioning, the constructor uses a smiley racer method called getLeftEdge(). You may well find using getLeftEdge() in a couple of methods you are to write will simplify their implementation.We measure time in ticks. A tick is just an arbitrary time unit that corresponds roughly to the time between one frame of animation and the next, kind of like saying “24 frames per second” means that the time between one frame of film and the next is 1/24th of a second; the 1/24th of a second would be a tick. The duration of a tick is set by a constant in the SmileyAnimation class.The racer’s base speed is in units of pixels per tick, and is determined when the racer is constructed. Also randomly determined at that time is the racer’s racing strategy. A racer can run the race at a constant speed, or it can decrease its speed the same amount each lap (it peaks early) or it increases its speed the same amount each lap (it paces itself and gradually pushes harder). Of course, when decreasing its speed, it cannot go to zero and still finish the race, so the racer must move at least 1 pixel per tick. The fastest a racer can go is double its starting speed.It is possible for two or more racers to run the race in the same numbers of ticks; that is, there can be ties. To simplify stats computations, if there is a tie for the fastest runner, you can declare any of those tied racers as the fastest; the same applies for identifying the slowest (“good sport”) racer. (The computation and display logic to list all the fastest and/or slowest racers in the case of ties is fairly complex, and beyond what is needed to practice the concepts this lab covers.)  Be particularly careful that, once a racer has finished the race, it does not move. A common error is for the racer to have finished, but to be moved one more time before the program knows not to move it further. The result is often a racer facing the wrong way at the finish, and not touching the finish line—and that an error!Your program should work for zero racers. All that happens is that, when the progam is run, the stats screen immediately displays a message that there was no race—and it does  do not display any statistics. Your program should also handle a large number of relatively small-sized racers, at least in the range of 10 to 20. The animation may slow down when the number of racers is large, and the racer’s names may go outside the smiley’s face; that is acceptable. 

As before, all the class and Java source files you need have been placed into an Eclipse project and zipped into an archive; download
21Lab3.zip to get it. Using the same procedure that you followed previously, import this project into your Eclipse workspace.

Do remember to test your program incrementally, as described in Assignment 2; it will very likely save you a lot of time and frustration!




About Lab Exam 3


Lab exam 3 will be very similar, but perhaps not identical, to the program you are to write for this assognment. You will be asked to code one or more of the following methods:

From the SmileyAnimation class:
the constructoranimatecomputeRaceStatisticscomputeFastestRunnercomputeSlowestRunnercomputeAverageTimeallRacersFinished

From the SmileyRacer class:
the constructorfinishedRaceraceForOneTickmoveForwardOnePixelreverseProfilehitSomethinghitLeftWallhitRightWall

Remember to read over INSTRUCTIONS!.txt and program comments before beginning; they will tell you what you are to complete.

Also recall that a significant failure to follow class style standards on a lab exam can result in a “not pass” for that exam. In particular, do not use a break statement other than as the last line of a case block in a switch statement.



Written by Norman Jacobson for ICS 21 Fall 2006, October 2006.
Revised by Norman Jacobson to explain how  to set the smile properly and to discuss the Go button, November 2006.
Minor editing for clarity, by Norman Jacobson, December 2006, September 2008.
Updated to reflect use of Eclipse by Norman Jacobson, September 2009. 
  Includes some text adapted from Alex Thornton's "Lab 3" for ICS 21 Summer 2009.
Minor edits, by Norman Jacobson, September 2010.
Updated to discuss use of getLeftEdge(), by Norman Jacobson, December 2010.
##------------------URL-------------------------##
http://www.ics.uci.edu/~jacobson/ics21/LabManual/04-LabExamsGrading.html
##-----------------TITLE------------------------##
Lab Exam Procedures and Grading
##------------------TEXT------------------------##
Lab Exam Procedures and Grading



 We give five exams where you write a portion of a Java program; all exams are given in the Help Center. We will provide you with one or more program files that have parts of the program you are to complete. You copy the project containing the programfrom our server, provide the missing program parts, and turn in the completed program project to your assigned drop box on the server; Taking Lab Exams provides details about these steps.

When evaluating the quality of your lab exam, we use three general criteria:

1. It must run, complete normally (e.g., not hang, error abort, or otherwise exhibit aberrant behavior) and produce correct and correctly formatted output when given any legal input. It is not sufficient that the program runs for some set of legal input, but not for another.

2. The code you write must meet all of the requirements stated in the lab exam and its corresponding assignment. (If there is a difference, the requirements in the exam take precedence.)

3. The code you write must conform to the class’ style standards. It must not be unnecessarily complex. It must not use any banned-from-this-course statements, constructs or approaches; in particular it may not
use a  break statement, except at the end of a case block of a switch statementuse a short-cut operator (e.g., ++, --) in a statement with any other operator or method call except when it operates on an array cell; for example, i++ and --A[i] are permissible;  i + j-- and A[i++]-- are not


You may use non-banned statements more advanced than we’ve covered (to that point of the course), but it is up to you to use them correctly and reasonably. You can also add private fields, constants and methods to those provided to you as part of the exam, within the constraints described in Taking Lab Exams, but you do so at your own risk. You can add additional comments to explain your work. You may not otherwise modify the exam's classes; in particular, you cannot add code to, or change code in, methods other than those the exams says you are to complete. All methods you are to complete have the phrase *** REPLACE THIS COMMENT WITH YOUR CODE ***. 

Your exam will be scored as follows:


-- (not taken) — the test was not turned in, the test folder was empty, or no work towards completing the exam was done (see below for details)

NP (not passed) — the program does not run, or 
it does run, but produces incorrect output for legal input, or
it violates one or more of the restrictions stated above or
 its style violates course standards to the point that it interferes with a trained reader’s ability to follow the code

P (passed) — the program meets the three criteria above, or 
it meets the criteria except that the program exhibits only some minor style problems



You must get a score of “P” on all the lab exams to get a course grade of C or higher; see the Course Reference for details. If you think your exam was graded incorrectly, take the matter up with course staff member who graded your work. (Which staff member grades your work is given in the Important Information section of the Course Reference.) If that does not resolve the issue, see the instructor.



Lab exams are mastery exams


The point of lab exams is to insure you know the basics of program design and Java coding. You can retake an exam you failed—and take it again—as much as your time and our resources allow, up through the last offered retake time.

View retakes as last resorts! There is plenty to do in this course without the added burden of retaking lab exams. You could easily spend so much time on retakes that you are unprepared for subsequent lab exams, thus putting you further and further behind in the course. 

We will not offer exams early; course resources and security issues will just not allow for it.



Missed lab exams


You are eligible to retake a lab exam only 1) if you took the test on the day when it was first offered (this prevents unprepared students from having an advantage over students who were ready for the test) or 2) you missed the test because of circumstances beyond your control, as discussed below.

If you miss, or know you are going to miss, a lab exam, email  the instructor within three days of the exam, explaining what circumstances truly beyond your control occurred.  The instructor will respond within a day or two, with an email either giving you permission to make up the exam or an explanation why you will not be allowed to do so (the latter only occurring if the reason you missed the test was not beyond your control). Once you receive permission, take the exam acording to the instructions given in the email. In particular, being sick is considered a circumstance beyond your control.

If you do not write the instructor within three days of the exam, you may not be allowed to make up the test, and will receive a score of “--”  (not taken) for it.




The “--” notation


 Because of past attempts by students to “game the system,” you will not be credited with having taken a lab exam unless you made a legitimate attempt to complete the exam’s missing sections correctly. In particular, if you were at the exam but did not turn in an exam folder, turned in one that is blank, or turned in one that has no code of your own, we will treat it as if you had not taken the test. (If an exam contains code you did not (help) write, and you did not have our explicit permission to use it, that is academic dishonesty.)

When computing your total grade,  exams scores as “--”  will be treated as a test not passed. 



Retake exams


 You may retake a lab exam (subject to the above policies) during the scheduled retake times. Retake offerings will begin after the first lab exam and continue into Finals Week. The scheduled times prior to Finals Week are posted on the ICS 21 Course Web page, and, for retake times during Finals Week, on the Announcements page.



Prepared by Norman Jacobson and Julian Feldman, with assistance from others, Fall 1986.
Revised by David G. Kay and Norman Jacobson, Winter 1991.
Minor revisions by Norman Jacobson, Fall 1991.
Revised by David G. Kay, Winter 1992.
Minor revisions by Norman Jacobson, Fall 1992, Fall 1993, Winter 1994, Fall 1994.
Revised to reflect new lab location & equipment by Norman Jacobson, Fall 1994.
Minor revisions by Norman Jacobson, Sept. 1995, December 1995, 
  December 1996, September 1997, December 1997,
  April 1998, September 1998, August 1999.
Revised by Norman Jacobson to reflect lab exams and new lab assignment rules, Sept. 1999.
Revised by Norman Jacobson for ICS21, Nov. 1999 and March 2000.
Minor revisions by Norman Jacobson, June 2000 and September 2000.
Revised to reflect new scoring scheme, by Norman Jacobson, March 2001.
Revised to reflect Java usage, by Norman Jacobson, September 2001.
Minor revisions by Norman Jacobson, December 2001.
Minor revisions by Norman Jacobson, August 2002.
Minor revisions by Norman Jacobson, December 2002.
Minor revisions to spell out some banned statements by Norman Jacobson, December 2004.
Minor format revisions by Norman Jacobson, September 2006.
Revised to remove "+" grades and make other, minor, edits,  by Norman Jacobson, September 2006.
Revised to more fully explain policy regarding missed lab exams, by Norman Jacobson, February 2007.
Revised to explain eee Gradebook encodings of exam scores, by Norman Jacobson, September 2007.
Revised to simply score exams the way eee allows them to be reported, to make it explicit
  that code in alreasdy-written methods cannot be changed and that violation of restrictions 
  results in an NP, by Norman Jacobson, December 2007.
Minor edits by Norman Jacobson, September 2008.
Revised to reflect modified procedure for dealing with missed lab exams, 
  and to include some minor edits, by Norman Jacobson, December 2008.
Minor revisions to make explicit that illness is a circumstance beyond one's control and to reflect use of the Help Center, by Norman Jacobson, September 2009.
 Minor revisions for clarity, by Norman Jacobson, December 2009, August 2010, September 2011 and January 2012.
##------------------URL-------------------------##
http://www.ics.uci.edu/~majumder/DIP/prog/
##-----------------TITLE------------------------##
Index of /~majumder/DIP/prog
##------------------TEXT------------------------##
Index of /~majumder/DIP/prog
NameLast modifiedSizeDescriptionParent Directory   -  enhance/20-May-2005 20:27    -  imgassn1-power2/19-Apr-2011 15:23    -  imgassn1/03-Apr-2012 10:48    -  imgassn2/12-Apr-2004 09:52    -  imgassn3/09-May-2008 09:25    -  noise/20-May-2005 20:29    -  prog_assn1.pdf01-Oct-2015 12:20  164K prog_assn2.pdf08-Oct-2015 15:51   56K prog_assn3.pdf26-Oct-2015 10:28  731K prog_assn4.pdf06-Nov-2015 20:56  8.6K 
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~stasio/winter06/Lectures/Lec6code/ProgressionExample/ArithProgression-Arith.html
##-----------------TITLE------------------------##
Code Fragment
##------------------TEXT------------------------##
/**
 * Arithmetic progression.
 */
class ArithProgression extends Progression {

  /** Increment. */
  protected long inc;

  // Inherits variables first and cur.

  /** Default constructor setting a unit increment. */
  ArithProgression() {
    this(1);
  }

  /** Parametric constructor providing the increment. */
  ArithProgression(long increment) {
    inc = increment; 
  }

  /** Advances the progression by adding the increment to the current value.
   * 
   * @return next value of the progression
   */
  protected long nextValue() {
    cur += inc;
    return cur;
  }

  //  Inherits methods firstValue() and printProgression(int).
}
##------------------URL-------------------------##
http://www.ics.uci.edu/~stasio/winter06/Lectures/Lec6code/ProgressionExample/Progression-Progress.html
##-----------------TITLE------------------------##
Code Fragment
##------------------TEXT------------------------##
/**
 * A class for numeric progressions.
 */
public class Progression {

  /** First value of the progression.  */
  protected long first;

  /** Current value of the progression.  */
  protected long cur;

  /** Default constructor.  */
  Progression() {
    cur = first = 0;
  }

  /** Resets the progression to the first value.
   * 
   * @return first value
   */
  protected long firstValue() {
    cur = first;
    return cur;
  }

  /** Advances the progression to the next value.
   *
   * @return next value of the progression
   */
  protected long nextValue() {
    return ++cur; // default next value
  }

  /** Prints the first n values of the progression.
   * 
   * @param n number of values to print
   */
  public void printProgression(int n) {
    System.out.print(firstValue());
    for (int i = 2; i <= n; i++) 
      System.out.print(" " + nextValue());
    System.out.println(); // ends the line
  }
}
##------------------URL-------------------------##
http://www.ics.uci.edu/~stasio/winter06/Lectures/Lec6code/ProgressionExample/GeomProgression-Geom.html
##-----------------TITLE------------------------##
Code Fragment
##------------------TEXT------------------------##
/**
 * Geometric Progression
 */
class GeomProgression extends Progression {

  /** Base. */
  protected long base;

  // Inherits variables first and cur.

  /** Default constructor setting base 2. */
  GeomProgression() {
    this(2);
  }

  /** Parametric constructor providing the base.
   *
   * @param b base of the progression.
   */
  GeomProgression(long b) {
    base = b;
    first = 1;
    cur = first;
  }

  /** Advances the progression by multiplying the base with the current value.
   * 
   * @return next value of the progression
   */
  protected long nextValue() {
    cur *= base;
    return cur;
  }

  //  Inherits methods firstValue() and printProgression(int).
}
##------------------URL-------------------------##
http://www.ics.uci.edu/~stasio/winter06/Lectures/Lec6code/ProgressionExample/TestProgression-class.html
##-----------------TITLE------------------------##
Code Fragment
##------------------TEXT------------------------##
/** Test program for the progression classes */
class TestProgression {
  public static void main(String[] args) {
    Progression prog;
    // test ArithProgression
    System.out.println("Arithmetic progression with default increment:");
    prog = new ArithProgression();
    prog.printProgression(10);
    System.out.println("Arithmetic progression with increment 5:");
    prog = new ArithProgression(5);
    prog.printProgression(10);
    // test GeomProgression
    System.out.println("Geometric progression with default base:");
    prog = new GeomProgression();
    prog.printProgression(10);
    System.out.println("Geometric progression with base 3:");
    prog = new GeomProgression(3);
    prog.printProgression(10);
    // test FibonacciProgression
    System.out.println("Fibonacci progression with default start values:");
    prog = new FibonacciProgression();
    prog.printProgression(10);
    System.out.println("Fibonacci progression with start values 4 and 6:");
    prog = new FibonacciProgression(4,6);
    prog.printProgression(10);
  }
}
##------------------URL-------------------------##
http://www.ics.uci.edu/~stasio/winter06/Lectures/Lec6code/ProgressionExample/FibonacciProgression-Fib.html
##-----------------TITLE------------------------##
Code Fragment
##------------------TEXT------------------------##
/**
 * Fibonacci progression.
 */
class FibonacciProgression extends Progression {
  /** Previous value. */
  long prev;   
  // Inherits variables first and cur.

  /** Default constructor setting 0 and 1 as the first two values. */
  FibonacciProgression() {
    this(0, 1);
  }
  /** Parametric constructor providing the first and second values.
   *
   * @param value1 first value.
   * @param value2 second value.
   */
  FibonacciProgression(long value1, long value2) {
      first = value1;
      prev = value2 - value1; // fictitious value preceding the first
  }

  /** Advances the progression by adding the previous value to the current value.
   * 
   * @return next value of the progression
   */
  protected long nextValue() {
    long temp = prev;
    prev = cur;
    cur += temp;
    return cur;
  }
  // Inherits methods firstValue() and printProgression(int).
}
##------------------URL-------------------------##
http://www.ics.uci.edu/~cs230/main.html
##-----------------TITLE------------------------##
CompSci 230 @ UCI
##------------------TEXT------------------------##
CompSci 230 - Winter 2011: Distributed Systems
Prof. Nalini
Venkatasubramanian
Announcements: 
 
Please check this page frequently for important announcements regarding course
  work  - IMPORTANT!



	Grades: If your score is 
"NR" in Student Access, please don't worry. There was a problem with the reporting. 
It will be fixed on Monday (March 28).


	Mar 14: Make sure your group chooses a slot for demo 
presentation. It is required for all groups. Please access the link and choose a 
slot:  
https://docs.google.com/document/d/1_oYw8q33dw75o9eVZtBp1oN-Og57vI2T-sftelVv_Pg/edit?hl=en&authkey=CMXR6v0N#. 




	Mar 14: The instructor is available tomorrow for project 
consultations
from 2:30 to 3:30. 



	Mar 11: The instructor changed a few grading policies. Your midterms were
  reviewed and regraded. Check new grades here.
  
  
	Mar 11: All groups are 
	scheduled to present demo with the instructor at her office on Wed/Thu/Fri 
	(Mar 16-18). Each group is given a 30 minute slot. Please access the link 
	and choose a slot:  
	https://docs.google.com/document/d/1_oYw8q33dw75o9eVZtBp1oN-Og57vI2T-sftelVv_Pg/edit?hl=en&authkey=CMXR6v0N#.
  
  
	Mar 11: Groups 9 to 17 are scheduled to present on Tuesday (Mar 15) 3:30-5:00. 
  Please send presentation files before Tuesday 11:30 to the reader. Make sure you will send before 11:30 so that the reader 
	will be 
  able to post them to the website. 

  
	Mar 5: Although the instructor is travelling, next week we still have two
  classes as usual. Leila will come and deliver the content of distributed databases. So, for those who wish to take a look at
  the midterms, please come see the reader on Wednesday (03/09) from 3:00 to 5:00 -- sorry about that. 

  
	Mar 3: Check the schedule in "Presentation Schedule" (left side).

  Access presentation files by clicking your project's name. Quickly let the 
	reader know if there is something wrong with your presentation file.
	

	Mar 1: The instructor is 
	available for project discussion today - 2:00 to 3:00.
	
  
	Feb 28: If you wish to 
	review your midterm, please come see the reader next Tuesday (3/7), 3:30 to 
	4:30, at DBH 2099.
  
  Feb 
	28: Please, check the schedule here. 
 There are 8 groups wishing to present on 
  Thursday (3/3). These groups need to send the reader the presentation files on this Thursday, before the class at least 3 hours. 
  The other groups will present in the finals week. Please quickly let the instructor and the reader know 
  if your group wants to change the plan.

  Feb 
	24: Our schedule will be changed since the instructor is busy. 
  Please prepare a project presentation (5 slides) to present (at two classes probably next week). 
  You do not need to have your full results in your presentation. The goal is just to let other groups in the class know what 
  your group is doing. 
  
  In your presentation, please clearly state (1) your problem you are solving 
	and its motivations, (2) related works, 
  (3) your solutions for the problem (initial ideas are also fine), and (4) what your final results will be. 
	
  The presentation schedule for groups is listed 
	here. 
	To save time, all of the groups will send the reader the slides (.ppt 
	please) before the class 
	at least 3 hours. The slides will be posted on the website,
	and then used for your presentation in the class. 
  
  
  Feb 
	24: Check your midterm grade here.

  Feb 
	15: Next week, the content covered is Mobile Middleware.

  Feb 
	15: Prepare/present 
	your project (5 slides max) at week 10 in the class. 
  Later, your group will be scheduled to show the demo with the instructor.
  
  Feb 
	15: Please download the review slides here. 
	Lecture Set 5 (Fault tolerance in Distributed Systems) is updated. 
	Please be on time for MIDTERM. Make sure you bring your ID.Feb 
	10: Thursday, Feb 17: 
	MIDTERM (closed-books/closed-notes) - Click here 
	to download a sample exam.
  
  Feb 
	10: Summary set 5 due Tuesday, Feb 15 11:59 PM: Fault Tolerance and Reliability.Feb 
	5: Survey paper for your project due 
	end of Week 6 (Feb 12, 11:59 PM) (Sunday, Feb 13, 11:59 PM).
	
  Feb 
	3: Summary set 4 due 
	end of Week 5 (Feb 6, 11:59 PM): Messaging and Group Communication in Distributed Systems - Click here 
	to see the set of papers. Please DO NOT SUBMIT homework late.

  Feb 
	1: Please check the list of class projects here.
  Contact the reader if there is something wrong with your project's title and your team members. If you have not sent your project proposal, please send it to us now. 
  

  Jan 
	27: Summary set 3 due 
	end of Week 4 (Jan 30, 11:59 PM): Distributed Deadlocks, Distributed File Systems, 
	Process Migration , Processing and Load Balancing - Click here 
	to see the set of papers.

  Jan 
	20: Summary set 2 due 
	end of Week 3 (Jan 23, 11:59 PM): Remote Procedure Call, Mutual Exclusion 
	and Leader Election - Click here 
	to see the set of papers.

  Jan 13: Several projects (sensor networks, clustering schemes) added at
  here.

  Jan 08: Some specific projects
  are listed here.

  Jan 07: 2 things due end of Week 2 (Jan 16, 11:59 PM) -- PDF only, send to both 
  the instructor and the reader:
  A short project proposal (Title, Members, What you plan to do, Rough timeline).
  Summary set 1 (Virtual Time and Global State in Distributed Systems - Click here to see the set of papers). 
  

  Jan 03: A tentative list of high level areas 
  for class projects has been posted. 
  Talk to the instructor if you are interested in any of these areas or any others. A list of specific projects will be available soon.

  Jan 03: MIDTERM -- The exam will be closed-books/closed-notes 
  with no reference materials permitted.

  Jan 03:
	FINAL PROJECT and DEMO will be held 
  during the final week.



Course Description:
CompSci 230 - Distributed Systems: This course
discusses concepts, techniques and issues in developing distributed systems in
large scale networked environments. The course will cover theoretical as well as
system level issues in the design and implementation of distributed systems.



Motivation and Goals:
CompSci 230 - Distributed Systems : Advances in
networking, communication, storage and computing technologies coupled with
emerging novel application areas is enabling the widespread use of large scale
distributed computing systems. These systems exhibit constant evolution as new
applications place specialized requirements from the computing and communication
infrastructure. Many applications provide QoS (Quality of Service) parameters
that define the extent to which performance specifications such as
responsiveness, reliability, resource utilization, security and
cost-effectiveness may be violated. These requirements are often implemented via
resource management mechanisms in the middleware. Distributed computing
frameworks enable the modular connection of software components to manage the
resources of an open distributed system; it can be used to constrain the global
behavior of the distributed system to ensure safety while providing
cost-effective utilization of resources. This course will cover issues in
developing distributed systems that provides distributed application
requirements while ensuring effective system utilization. 


Prerequisites:
Undergraduate level
course in operating systems and networks. A prior course on computer networking
is desirable. Working knowledge of Java is desirable. 


Class Schedule:
Lecture: 
Tuesdays/Thursdays 3:30-4:50  in DBH 1500 


Grading Policy:
Homeworks (30%): 3 homeworks (weekly paper summaries), 
randomly selected each worth 10% each.
Midterm (30%): Tentatively scheduled for end of Week 6.Class Project (40%): Includes project proposal, survey paper and final project demonstration and report.

Course Contact Information:
Your suggestions,
  comments and constructive criticisms are most welcome. Please use the
  address(es) below to contact the instructor or the reader.

      
 



      Contact
      Name
      Email
      Location
      Office Hours
      Instructor
      Nalini
      Venkatasubramanian
      nalini@ics.uci.edu
      BH
      2086
      By
      appointment
      Reader
      Ngoc
      Do
      nmdo@uci.edu
      BH
      2099
      By
      appointment

  
##------------------URL-------------------------##
http://www.ics.uci.edu/~cs230/nav.html
##-----------------TITLE------------------------##
CompSci 230 @ UCI
##------------------TEXT------------------------##
Course Info.  
Presentation Schedule  
Course Outline  
Course Materials  
Projects
##------------------URL-------------------------##
http://www.ics.uci.edu/~vbalasub/
##-----------------TITLE------------------------##
Vidhya
##------------------TEXT------------------------##
VIDHYA
    BALASUBRAMANIAN
    
    
    
    
  HOME    RESEARCH    LINKS    RESUME   PERSONAL 
  
  
    
  
    
    
     
    Welcome!! I am
    Vidhya Balasubramanian and am currently a graduate student at University of California,
    Irvine in the
    department of  Computer Science at the Donald Bren School of
    Information and Computer Science. 
     Research
    Groups:   Distributed
    Systems Middleware 
                                    ITR-ResCUE and Responsphere
      Advisor:               Prof.
    Nalini Venkatasubramanian 
      Contact Info:      
     Graduate Student Researcher 
                                    Donald Bren
     School of Information
    and Computer Science 
                                    University of California,
    Irvine                                   
    
                                    Email:
    vbalasub at ics dot uci dot edu 
                                              Vidhya dot BS at gmail
    dot com
         Office:                  2018 Donald Bren Hall
      
      
    
    
    
    
     
    
     
    
     
    
  
  
  
    
    
    
    
    
    
  
  
   
  

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~dsm/suga/
##-----------------TITLE------------------------##

##------------------TEXT------------------------##
  
      Middleware Support for Cross-Disability Access
      
      Project sponsored by Office of Naval Research (ONR) as part of the DOD Multidisciplinary University Research  Initiative (MURI) and NSF Career Award ANI-9875988
      
        
             
               
            
        
             
                  
             
       
           
      
      
                 
      Recent advances in technologies to
				capture, represent, transmit, disseminate, and visualize large
				volumes of multimedia information has truly revolutionized how
				people communicate and interact with each other. The impact cuts
				across a variety of new (and old) application domains ranging
				from internet chat rooms, to online virtual cyber societies, to
				entertainment – music, movies, games, to online classrooms
				and distance education. For example, in the context of distance
				education, high quality video lectures synchronized with power
				point presentations and accompanying lecture notes and online
				text/manuals allow students to explore the subject at their own
				pace and leisure in the comfort of their own surroundings. Such
				advances present unprecedented opportunities to society, the
				potential of which will be realized by the generations to follow.
				An important aspect in the evolution
				of the information society is that of “universal access”
				that supports mechanisms to bring the benefits of the information
				age to the disabled and the elderly.
      This
      is supported by the current legislation via ADA and rehabilitation laws. 
                   
      The SUGA project focuses on the development of middleware techniques to
      support cross-disability access to multimedia content. To date,
      application developers and service providers have focused on extensive
      functionality and optimal performance (possibly, driven by commercial
      needs) to ensure that customers can be delivered the best possible Quality
      of Service (QoS) with the least possible resource consumption overhead. SUGA 
      in Sanskrit means 'easy access'. Hence the goal of this project is
      to enhance information technology infrastructures to account for user
      abilities (and disabilities) so that personalized content can be delivered
      in a cost-effective manner.
      
      top 
      
       
				             Often times the zeal to exploit the emerging technologies to improve user
      experience ignores the goal of “universal access” to one and
      all. For example, increased network bandwidth and real-time video capture
      technologies may prompt transmission of a live event using streaming video
      but such a media is of little use to the blind. A case can also be made
      from an economic perspective as to why universal access is an important
      step in promoting the information economy. Perhaps it is the impaired,
      disabled and the aged that can benefit the most from the emergent
      technologies. Providing universal access in the distributed information
      environment requires an end-to-end approach, the realization of which
      requires advances in many areas in computer and information sciences.
      First, the design of suitable user-interfaces and assistive devices is
      critical and has been the focus of study in several recent research
      projects. Second, the generalized representation of content to allow
      access by individuals with varying disabilities (cross-disability access)
      is an important issue. Third, the extraction and delivery of personalized
      content in a cost-effective manner represents a significant challenge.
      
               
      A major step in the realization of
				the “universal access” goal is that of a content
				adaptation framework that supports personalized
				(cross-disability) access to information. Content adaptation
				refers (a) selection of appropriate modalities and (b)
                modification of the parameters of a specific modality (for
				instance, an image can be encoded using various resolutions,
				color levels and intensities) in order to enhance usability and
				manage heterogeneity.  In order that the adaptation is
      effective it is essential to characterize the accessibility of information
      for a user given his/her ability disability characteristics. We use
      studies from cognitive sciences and models of human faculty to
      characterize the ability requirements of users given the disability
      profile and to quantify the accessibility of a given modality to the user.
      Using the ability based characterization we develop algorithms to select
      the best content to the users and to adapt the selected content for
      vision, motor and cognitive impairments. 
				
				          
                There are multiple facets to
				developing such a framework foremost of which is a generalized
				representation of content to allow access to individuals with
				varying disabilities. The SUGA Project takes the approach that a
				cost-effective solution can be realized by offering the
				adaptation as a service within the distributed system middleware.
                We explore adaptive middleware
				techniques for the representation, storage, delivery and
				presentation of multimedia content for cross-disability access.
				Specifically, we focus on content adaptation and transcoding
				technologies to achieve a balance between end-user’s goal
				of  QoS satisfaction and the service provider’s goal
				of optimal resource consumption. Content adaptation may be
				carried out anywhere along the datapath - at the server, client
				or at intermediate proxies.            
      
      GROUP MEMBERS
      
      
          Nalini
Venkatasubramanian(Primary
investigator) 
        
          Vidhya
Balasubramanian 
        
      top  
      
      
      PUBLICATIONS  
      Conferences
      
       Vidhya
Balasubramanian and Nalini Venkatasubramanian. "Server Transcoding of Multimedia
Information for Cross Disability Access", ACM/SPIE Conference
on Multimedia Computing and Networking, MMCN 2003.Vidhya
Balasubramanian and Nalini Venkatasubramanian, “Adapting a Multimedia Distance Learning
Environment for Vision Impairments”, ITCC 2003.Vidhya Balasubramanian and Nalini Venkatasubramanian, "GURU:
A Multimedia Distance-Learning Framework for Users with Disabilities",
Demo Paper, ACM Multimedia 2004Vidhya Balasubramanian and Nalini Venkatasubramanian, "Customized Learning for Users with Impairments
          in GURU", submitted to ICME 2005
      Journals 
      
          Vidhya Balasubramanian and Nalini
Venkatasubramanian. “Adaptation of
Multimedia Data for Cross Disability Access”.  Submitted
for publication. 
        
      
      top 
      
      
      
      ONLINE
RESOURCES
      
      The following links will lead
you to the various resources on the internet for adaptive technology
for the disabled and resources on technology for universal
accessibility. 
       
      PRODUCT VENDORS
      Pulse Data HumanWare(For
Persons who are print impaired)
      Don Johnston (Learning
Intervention Resources)
      Synapse Adaptive (Speech
Recognition and Adaptive Technology)
      Freedom Scientific
(Assistive Technology for people with vision and sensory impairments)
      A.T.Kratter & Company
Inc (Assistive Technology and Services)
      R.J.Cooper and Associates
(Assistive Software and Hardware)
      Ai Squared (Software for
Visually Impaired)
      THE 'BIG NAMES'
      IBM Accessibility Center 
      
      Microsoft
Accessibility  
      ADAPTIVE COMPUTING RESOURCES
      EASI(Equal Access to Software and Information)
      KATS Network(Online Resources)
      High Tech Center Training Unit (Alternate Media)
      Trace Research and Development Center at
University of Wisconsin and Madison
      TechDis Website
      The New York Institute for
Special Education  
      CPC - Computer Prompting and Captioning Co.
      NCAM-National Center for Accessible Media
      LEGISLATION REGARDING DISABILITY ACCESS
      A Guide to Disability Rights Laws
      ADA Homepage
      WEB ACCESSIBILITY
      A-Prompt-Web Accessibility Verifier
      Accessibility Testing Tools,Web
Accessibility,at The University of Arizona
      Captioning Windows Media Using SAMI with Magpie
      MIT Disability Resources for Information
Technology
      World Wide Web Consortium
      WebABLE
      WebAIM-Web Accessibility in Mind
      top  
      
         Mail your comments and suggestions
      
        
      

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~dsm/contessa/Contessa_index.html
##-----------------TITLE------------------------##
Contessa @ UCI
##------------------TEXT------------------------##
CONTESSA @ UCI:


 Adaptive System Interoperability
Project sponsored by  Office
of Naval Research (ONR) 

as part of the  DoD
Multidisciplinary University Research Initiative (MURI)




The goal of the project is to develop new models of adaptive system
interoperability that provide more flexible models of integration
between components, and support coordination, mobility, scalability and
adaptability to changing conditions.

Future applications will execute in highly dynamic environments, where
communication is not uniform due to changing conditions of network
connectivity, reliability and resource availability. Designing
communication frameworks that are capable of dynamically adapting
themselves to the environment is an important challenge. Furthermore,
different applications may demand different properties and guarantees
as far as the QoS, security and failure semantics are concerned.
Although several frameworks have been designed to support modular and
reconfigurable communication, they support complex programming
interfaces and their behavior is often expressed via informal
descriptions. Clear semantic models capable of expressing dependencies
among properties required by a given communication system will help
design safe customizable communication frameworks. 

Professor (PI)

 
Nalini
Venkatasubramanian
    

Students    



      Sebastian
Gutierrez-Nolasco
        
      
      Qi Han
        
      
      Shivajit Mohapatra
          
      
      Jehan
Wickramasuriya
      







Collaborations 



      Formal Methods and
Declarative Languages Laboratory, UIUC
          
      
      Penn
Security Lab, UPenn
        
      
      Mobile Computing
Laboratory, WashU
        
      
      Computer Science Laboratory,
          SRI International
        
      



DSM Home
       Publications MURI-Contessa Home 
 Distributed Systems
Middleware Group · School of Information and Computer Science  
University of
California, Irvine  
CSE 205
· Irvine, CA 92697-3425 · USA 
Tel
949.824.3011

 Questions or comments about the website: seguti at ics.uci.edu
##------------------URL-------------------------##
http://www.ics.uci.edu/~etrainer/theseus/publications.html
##-----------------TITLE------------------------##
Theseus - Publications
##------------------TEXT------------------------##
OverviewMethodologyPublicationsFundingPersonnel







Publications

Trainer, E. and Redmiles, D.F. "Foundations for the Design of Visualizations that Support Trust in Distributed Teams," In Proceedings of the 2012 ACM International Conference on Advanced Visual Interfaces (AVI 2012, Capri Island, Italy), pp. 34-41.


Trainer, E., Al-Ani, B., and Redmiles, D.F. "Impact of Collaborative Traces on Trustworthiness,", In Proceedings of the 2011 International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE), held in conjunction with The 2011 International Conference on Software Engineering (ICSE), ACM, New York, NY, pp. 40-47. 



 
##------------------URL-------------------------##
http://www.ics.uci.edu/~etrainer/theseus/funding.html
##-----------------TITLE------------------------##
Theseus - Funding
##------------------TEXT------------------------##
OverviewMethodologyPublicationsFundingPersonnel







Funding

This research is supported by the U.S. National Science Foundation under grants 0943262, 0808783 and 1111446.

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~etrainer/theseus/approach.html
##-----------------TITLE------------------------##
Theseus - Methodology
##------------------TEXT------------------------##
OverviewMethodologyPublicationsFundingPersonnel





Approach
Information Flow

	
There are four main components of Theseus, which is designed as a web application (Figure 1):

Collector - Mines existing software development/project repositories for artifacts and stores them in a database.

Extractor/Generator - Cross-links collaborative traces in database with generated collaborative traces such as e-mail, time zones, and developer photographs.  Outputs an XML file which describes artifacts.

Analyzer - Processes information output from the Extractor/Generator and builds a socio-technical graph with nodes representing artifacts and people and edges describing the relationships between them.

Visualizer - Creates visual representations for the artifacts and people in the socio-technical graph.

	
(click for larger)Figure 1. Theseus is designed as a web application that hooks into existing data repositories and generates data (like e-mail), that is not readily available for research use.




Visual Representations

(click for larger)Figure 2. The Theseus main display is comprised of several visualizations.


Theseus uses several different visual representations. The "Contact List" uses a tree view to group contacts by the projects in which they participate.  Once a contact is selected, the visualizations will populate on the right hand side of the contact list. Alternatively you can search for a contact using the input text box below the words "Contact List."


Figure 3. The pie chart shows a developer's activity in multiple projects.

The Projects visualization (Figure 3) uses a pie chart to show a contact's activity broken down by the projects in which they participate.  The percentages are based on amount of open work items assigned to the contact in question.  Clicking on a slice of the pie displays the number of open work items that contact has in the project as well as work items across all projects that contact has resolved that were not originally assigned to them.  This indicates "extra" work the contact is undertaking.


Figure 4. A linear scale shows how fast a developer's is to respond relative to the average.

The E-mail Responsiveness visualization shows the contact's standard score of their average reply time to e-mails using a linear scale.  A standard score indicates how many standard deviations a data point is in relation to the average. Lower scores (left of the average) indicate faster reply time; higher scores (right of the average) indicate slower response time.  Mouse over the blue dot to see the contact's exact reply time.


Figure 5. The time zone overlap shows overlap in the time of day between the user and another developer, as well as when that developer is actively sending e-mail.

The Time Zone Overlap visualization shows overlap in the time of day between your current location (Irvine), and the contact's location.  It is composed of two separate parts: the time in the user's location (Irvine) is displayed to the left while the time in the contact's location appears to the right.  The seven days of the week are shown with a one letter abbreviation on top of the visualization.


Each line indicates an hour of the day starting at 8 am at the user's current location. A green line indicates normal work hours, 8 am - 5 pm. A yellow line shows the time of the day where people are awake, but not necessarily at work, 7 am and 6 pm - 9 pm.  The red line indicates sleeping hours, 10 pm - 6 am.  A black circle on a line indicates that a contact is checking and sending e-mails during that hour.




Evaluation

We evaluated Theseus in the laboratory with 12 professional developers and 28 graduate students with experience developing software to test
whether it increases trust, whether it is usable, and whether developers can make meaningful insights using it. The independent variable (control) in this experiment is the presence or absence of the Theseus tool.  To prove the hypothesis, the tool must yield significantly higher trust compared with the no tool condition.  Thus there are at least two different conditions: 1) no Thesus tool and 2) Theseus tool.  Because attributions may be situational, dispositional, or a combination of both, condition 2 was further sub-divided into three conditions: 1) Theseus situational, 2) Theseus moderate situational, and 3) Theseus dispositional.


Legenda) No Theseusb) Theseus situationalc) Theseus moderate situationald) Theseus dispositional


Trust

Figure 6. Trust scores were significantly higher when using the Theseus tool compared with not using the tool (a-b comparison). Scores range from 15 (low trust) to 75 (highest trust), with a neutral score or midpoint of 45.


Figure 7. Attributions were marginally significantly more situational when using the Theseus tool compared with not using the tool (a-b comparison). Scores range from -7 (highly situational) to 7 (highly dispositional), with a neutral score or midpoint of 0.

Usability
Table 1. Potential overall usability scores range from 21 (highest usability) to 105 (lowest usability), with a neutral score or midpoint of 63
(lower is better).

Insights
Figure 9. Participants quickly became immersed in the information visualized by Theseus.


Summary of Findings
There is significant evidence that Theseus results in higher perceived trustworthiness compared with not using the tool (Figure 6).There is marginally significant evidence (p=0.052) that Theseus results in more situational attributions compared with not using the tool (Figure 7).Developers agreed that overall, the tool's usability was high (Table 1), but it could be improved with a better mechanism for comparing more than three developers at once. Developers were quickly able to become immersed in the data provided by Theseus (Figure 9).Developers made few incorrect observations using the interface.Developers tended to give situational attributions when having no information about or no previous working experience with a remote developer. 	



 
##------------------URL-------------------------##
http://www.ics.uci.edu/~etrainer/theseus/personnel.html
##-----------------TITLE------------------------##
Theseus - Personnel
##------------------TEXT------------------------##
OverviewMethodologyPublicationsFundingPersonnel







Personnel

Professor: David Redmiles

Researchers: Erik Trainer

Department of Informatics
Information and Computer Science
University of California, Irvine CA 92697-3425
e-mail: {redmiles, etrainer}@ics [dot] uci [dot] edu

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/inf143-SQ09/Assignment2/Inf143-ExploringManyEyes.htm
##-----------------TITLE------------------------##
Project Assignment 2 - Exploring Many Eyes
##------------------TEXT------------------------##
Informatics 143 – Exploring
Many Eyes

 

This assignment is due on Tuesday, May 12 (before the start
of class at 3:30 as usual).

 

The first step is to create an account on Many Eyes.

 

Go to http://services.alphaworks.ibm.com/manyeyes/homeCreate
     an account.

 

The second step is to find a data set, edit it / clean it up,
upload it, and visualize it.

 

To
     find a dataset, go to the Census Bureau’s Statistical Abstract web page,
     at http://www.census.gov/compendia/statab/Find
     an Excel file that interests you, and download it.Add a
     new sheet to the downloaded Excel file for your edited / cleaned up data,
     and copy the main data onto that sheet.Edit
     the copy on the new sheet, so that extraneous rows are gone and all column
     headings are meaningful.Upload
     your data into Many Eyes, and give it meaningful meta
     data.Explore
     several visualizations of your data.Select
     a visualization that is particularly meaningful and interesting, and
     another that may look good but doesn’t convey any interesting
     relationships in the data.  Publish
     each of those, with helpful names.

 

The third step is to upload a short report to
Checkmate.  The report can be in Word (not
.docx), text, or PDF format.  Briefly describe the data and how you manipulated
the data.  Did you remove columns or
rows?  Give the Many Eyes names of your
two visualizations, and explain in short paragraphs why the good one is good
and the bad one is bad.

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/inf143-SQ09/Assignment1/assignment1.htm
##-----------------TITLE------------------------##
bar chart -- frequency / count -- how many students are in each major
(in the class)
##------------------TEXT------------------------##
Assignment 1 – Using
common graphics and tools – Due April 23, 2009 in class (in lieu of
weekly example)

 

Below is a partial table of data (also available at http://www.ics.uci.edu/~redmiles/inf143-SQ09/Assignment1/
in .xls format and tab separated text). It contains fictitious data for
students in a class: student id, major, class standing, completion of
prerequisites, numeric grade, and letter grade. For part of the assignment, you
should double the size of the table adding in your own data. The remainder of
the assignment is as follows. Using your favorite spreadsheet or data plotting
software, create a graphic answering each of the following questions. Also, in
each case, explain in 1-3 sentences why the graphic is appropriate / good for
answering the corresponding question. 

 

A) Frequency / counting: How many students are in each major
(in the class)?

B) Percentage: What percent of each major makes up the
class?

C) Distribution: What is the distribution of the letter
grades (A-F)?

D) Comparison: How did the performance of students with
prerequisites compare to students without them?

 

Remember to double the size of the table with your own
imaginary data before doing the graphs. Have fun with the data. 

 

The point of the exercise is two-fold. First, you should
learn how to use the graphing features of a common tool (such as Excel) to do
simple graphs. If you already know one tool, challenge yourself by trying out a
new tool (e.g. OpenOffice). Second, you should learn
to choose the best graphic for answering common questions. 

 

Starting Data

 

Student ID     Major                        Standing       Grade   Prerequisites?     Letters                       

00101           Computer Science     Junior           82        Y                       B                               

00105           Economics                 Sophomore  95        Y                       A                              

00107           Computer Science     Junior           84        N                       B                               

00217           Social Science           Freshman     83        N                       B                               

00218           Computer Science     Senior          76        N                       C                              

01005           Biology                      Freshman     92        Y                       A                              

01702           Chemistry                  Junior           93        Y                       A                              

01802           Physics                      Senior          86        Y                       B                               

02001           Medieval History       Freshman     68        N                       D                              

04001           Art                            Senior          74        N                       C                              

00501           Social Science           Senior          89        N                       B                               

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics104-WQ06/assignments/assignment1.htm
##-----------------TITLE------------------------##
ICS 104: Assignment 1 Grading Rubric
##------------------TEXT------------------------##
ICS 104: Assignment 1 (Including Grading Rubric)

 

The assignment is worth 15% and is due February 2.

 

Assignments are prepared with your favorite word processor
(e.g. MS Word). 

 

Part 1 – 10 points

 

•        
Pick an example out of your design notebook (discussed
first day of class) – ½ pt

•        
Student chose example (1/2 pt)

•        
Include a picture or sketch of the design example. ½ pt

•        
Student included picture or sketch (1/2 pt)

•        
Pick a set of guidelines from the text and pick 3
principles that are applicable to your example. – 4 pts

•        
Student listed the principles and guidelines (.25 pts
each, 1 pt)

•        
Student included citations for principles and
guidelines (.25 pts each, 1 pt)

•        
Was the set of guidelines applicable to the example?
(1/2 pt)

•        
Were the 3 principles applicable to the example (1/2 pt
each – 1.5 pts)

•        
For each guideline and each principle – 4 pts

•        
Explain how it applies to the example.  Applicable? (1/2 pt each, 2 pts)

•        
What it reveals (positive or negative) about the design
(.25 each, 1 pt)

•        
Suggest an improvement (if analysis was negative) (1
pt, 1 pt)

•        
Provide a summary judgment of the example (positive or
negative) – 1 pt

•        
Summary Judgment (1 pt)

 

Part 2 – 5 points

 

•        
Pick a web site that you use frequently. Provide 1
screen snapshot. – ½ pt

•        
Analyze it as above using these heuristics:  - 2.5
pts http://www.useit.com/papers/heuristic/heuristic_list.html 

•        
10 heuristics, .25 pts per, 2.5 pts

•        
Your analysis should address who the intended users of
the site are, what the users want to achieve by using the site, how the site
failed to serve these users and their goals (including, if applicable,
characteristics of the users and their backgrounds that the site designers
didn't understand or accommodate well), and what makes your suggested
improvements better. – 1 pt

•        
Student met requirements above (1 pt)

•        
Your analysis should focus on usability issues rather
than pure functionality; while the line is sometimes hard to draw (adding a
search feature, for example, is increased functionality that also affects the
usability of a site), don't try to solve the problems by making the system into
something that it wasn't intended to be. – 1
pt

•        
Student met requirements above (1 pt)
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-FQ01/assignments/assignment4.html
##-----------------TITLE------------------------##
untitled
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN
    Assignment 4: Design 
    




Due in Class on November 19 with Presentations November 19 and 21


Assignment Requirements

This assignment consists of two parts: 1) an update and modification
to the requirements document (see below) and 2) an in-class
presentation limited to 15 minutes and focused on you software
architecture and related design diagrams and descriptions.


Purpose and Content
The Requirements Document focused on what your system will do. 
The design document describes how it will be done, giving the overall
picture of how your system is organized.
The design document should also be an evolving document, or a living
document.  You should begin by documenting the conceptual model of
your system.  As you continue working, this model will be refined
to include more detail, and some things will change.  By the time
you turn in your design document, it should contain a reasonably accurate
description of your final system.  You will also be asked to turn
in a final version of the document at the end of the quarter that will
include changes made to the requirements and design during the later stages
of implementation.
The design document will consist of the following sections.  Sections
1-4 and 8-13 are updates of what you turned in for the Requirements Document. 
The remaining sections, 5-7 and 14, are new to the Design Document.

Title Page
Summary
Glossary
Use Cases, Scenarios, Mock-up's(whichever you focused on in Assignment 2)
 
 
 

Architecture Overview
Architectural StyleWhat style of architecture did you adopt? Provide a reference to a
defining document.

Shaw and Garlan (in Software architecture: perspectives on an
emerging discipline) have identified the following list of
architectural styles:

  1.Data Flow Style
        Batch Sequential
        Pipes and Filters
  2.Call and Return Style
        Main Program and Subroutines
        Hierarchical layers
        Object-oriented (client/server)
  3.Independent Components
        Communicating processes
        Event systems
  4.Virtual Machines
        Rule-based systems
        Interpreters
  5.Data-Centered Systems
        Transactional Database Systems
        Blackboard Systems
 

System Architecture OverviewOthers find that UML provides a sufficient architecture
specification, but requires more than class diagrams.

This is the place for your "one great diagram" that shows how your
system is built. You might want to use more than one diagram, to show,
e.g., some different abstractions of the design (such as a data flow view,
a layers of abstraction view, an object view, or an OS process view)

Subsystem NarrativeWhat each subsystem means

Major limitations on the current design


Modules Specification
List of Modules within your system
For each module, provide a Module Specification
Name
Definition/Purpose - what it is/does
Narrative/Comment - how it works
What are the interfaces or APIs? E.g., using Java terminologypublic
private
protected

Data - What state does it keep, what variables?
Access - Who has access to the module/object/data?
How does it fit into the inheritance/with/uses heirarchy?
Constraints - what constraints are there for this object/module?
Cardinality - How many will there be?



Team Specific diagramsSee your TA but likely notations include Entity-Relationship (ER)
Diagrams for database projects, UML Sequence Diagrams for
client-server applications, ontologies for knowledge-based projects,
etc.

Deliverables
Delivery Platform
Terms and Authorization
Development Platform.
Milestones and Effort
Acceptance Test PlanTo be more specific in the update of your Acceptance Test Plan, create
a script (2-4 pages) of your intended final presentation. The script may
be in the form of an outline or bulleted list. In some cases, it will be
close to your prototype demonstration. It should tell a choherent and convincing
story that will make your client enthusiastic about signing off on your
project!
You may refer to figures in other parts of your document such as use
cases and / or mock-up's.
 
 
 

Unit and Integration Test PlansEnumerate several key tests for evaluating individual modules and combinations
of modules in your system.
For each test

Test ID
Purpose of Test
Item(s) being tested
Input specification or specific data being tested
Output specification
Expected Results or Test Oracle Mechanism


Test environmental needs or special test procedures






ICS125
FQ01 Assignments
ICS125
FQ01
David F. Redmiles Home Page
Department of Information and Computer
Science
University of California, Irvine CA 92697-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-FQ01/assignments/homework02.html
##-----------------TITLE------------------------##
ICS 125 Homework 2 Team Web Page
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN

Homework 2: Team Web Page





Due Wednesday, October 17, by 5 p.m. through email to rijitg@ics.uci.edu

You are to create a Web page for your team. The Web page should contain
the information listed below. Send the URL (not the file) for the page
to Rijit as indicated above. Remember to set protections for the "world"
to browse your page.

Team Name. You may want to choose a name for your group to give
yourselves some identity. In the past, teams have given themselves nicknames
based on the longer project name. Most Project names are short enough to
serve as the team name, e.g., "Java2D GEF." However, you have
the option to invent a name.

Team Logo. Create some sort of logo or placeholder for your team.

Project Name. The "official" name of the project you
want to bid on. This name is taken from the projects Web page.

Contact Person/Client. The name and email of the client, as in
project Web pages.

Summary. You should write your own one or two paragraph (about
12 to 15 sentence) summary of the project. This summary should be in your
own words and it should capture what you see to be salient features of
the project. Therefore it is not simply the summary from the project Web
pages.

Team Members. You should include a list of the team members,
with one member listed as the "lead." Each name should link to
your individual Web page. If you are dividing responsibilities up in your
group, you can choose to list responsibilities next to the names (see e.g.
the list of roles in the Mythical Man-Month). Of course, each team member
should assist with every activity in the project, but different members
may take the lead or the responsibility for different activities (e.g.,
testing, requirements, etc.).

Additional Links. You may include an annotated list of links
at the end of the Web page. These will include at least a reference to
the appropriate projects Web page. It may include links relevant to types
of technologies that you think you will use..


ICS125
FQ01 Assignments
ICS125
FQ01
David F. Redmiles'
Home Page
Department of Information and Computer
Science
University of California, Irvine CA 92697-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-FQ01/assignments/assignment2.html
##-----------------TITLE------------------------##
untitled
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN
    Assignment 2: Requirements 
    



Due in class on October 22 with Presetations October 22 and 24

Assignment Requirements

This assignment consists of two parts: 1) a requirements document
and 2) an in-class presentation. The content of the document is
outlined below. Make it look professional but be practical (don't
waste time). Requirements documents should be clear, complete,
correct, and concise. Grading will be based on the content and quality
of the requirements document and the oral presentation. The content of
the oral presentation is outlined at the end of this
page.

Note: Requirements specification documents and oral presentations will
vary from project to project, and team to team. Use your judgement in
selecting the best approach for your project and team.

Purpose and Content

Requirements documents serve many purposes. They specifiy the goals and scope of the
project. In some cases, they are like a contract between the customer and the developers.
They are the basis for testing. And in this project, the requirements document will also
outline a development schedule.

A good requirements document desribes what the system will do, in a clear and
unambiguous way. This can be achieved through careful wording, screen mock-ups or other
graphics, and requirements analysis diagrams. A good requirements document can be used to
answer questions such as: Is the system supposed to do X or not? How will the system
handle it if the user does Y? Who will use the system and for what purposes? Under what
environments (machine type, operation system, etc.) will the system work?

The requirements document will consist of

Title Page. names of team members date assignment name project name, nickname, logo version number (use version 1.0 when you hand in the document) 
  Summary. A two page summary of the project: Who's the customer? What's the project about? What are major functional and non-functional requirements? What is anticipated as an acceptance test? What are your target implementation platforms? Consider using a hierarchical organization: first a one paragraph overview emphasizing
      goals, then more details in the following paragraphs. Remember that the customer is going to read this. The customer's boss might read it too.
      Be clear and to-the-point. Avoid jargon. Avoid hype. Double-check spelling and grammar. 
  Glossary.Define any unusual words or unusual usage of common words, e.g., application domain terms.
  Use Cases, Scenarios, Mock-up's. You may choose the best way to clarify and specify your systems funtionality. I suggest Mock-up's and Scenarios followed by an text outline of requirements. You may wish to specify Use Cases as you did in ICS 121.Some of you may choose diagrammatic presentations for complex functionality. You may use Sequence Diagrams, Activity Diagrams, etc.Some of you working on database functionality may choose to use entity relationship diagrams or another way to specify record designs.
  Deliverables. What are you going to give to the customer? (include the items that
    apply) Software: Executables? In what format/media? Dococumentation: User's manual? On-line help? Web site? What will be in these documents?
    Development artifacts: Source code? Design docs? Test cases? Supporting artifacts: Example documents? Templates? Support: Warranty? Rights to bug fixes? Rights to request improvement? 
    
  Delivery Platform. What hardware/software/database/etc. will be needed to run the
    system? This is usually specified by your client. Development Platform. What hardware/software/database/etc. will you need
    to develop the system? This is usually decided by you. Milestones and Effort. A sequence of milestones. For each milestone: What requirements (functional or non-) are addressed. What will be accomplished. Date anticipated (remember there will be updates during weeks 6,7, and 8). Estimate of your effort and cost (state assumptions, e.g., cost of man hours). 
  Acceptance Test Plan. Be specific as possible. If you have specific data sets
    from your client, describe or include them. Terms and Authorization. What sort of license agreement will you have for your software (open source, GNU, etc.)? Conclusion. What will your team members gain as
individuals and your
team gain as a whole by doing this project? Perhaps
you will talk about new
skills? Tangibles? Intangibles?
     Comments

Projects often begin vaguely. Clients do not have complete ideas about the work that
should be done. They may not fully anticipate their needs. A requirements document starts
to sort out the details and make them more clear for both you and the client. 

Ideally, you will write the requirements in their "final" form. In reality,
the requirements will be revised over time as you and the client learn more about the
project. Emphasize clarity of intent and scope over very detailed specification of
particular features. Try to meet with the customer to review and revise the document, if
possible.

Try to use document formatting that enhances clarity and will be maintainable. Use
numbered lists when order is important, bulleted list for unordered items. Use tables when
there are lots of items (rows) that must have similar parts (columns), or when computing
totals. Use mathematical notation, not English, to specify mathematical relationships. Use
digarams or pictures to specify visual or spacial requirements.Make sure you can
unambiguously refer to a specific part of the requirements document: for example, the
customer might ask you if a certain requirement is satisfied yet, you want to be sure that
you are both talking about the same requirement.

Grade yourself by using your document to answer these questions: What would it be like
to use this system? What and how much can a user do with the system? If the customer is
unhappy with the resulting system, can you confidently say "That is what you
authorized when you signed the requirements document"? Would two people who read the
same requirements document imagine the same system?

There are certain sections of the document where you need to write very precise English
text. Ask yourself how each sentence could be misunderstood. Avoid words with vauge
meanings or double meanings. Use specific amounts instead of vauge terms when possible.
Include units in any measurements. Ask one of your team members to come up with a
misinterpretation of what you wrote.





Requirements Presentations/Reviews

Each team should prepare a 15 minute presentation, after which we will
allow up to 5 minutes of questions. Your customer should be present. 


Prepare your presentation appropriately. Your presentation should include
the following:
 Title Slide (with team name, members, emails, date, etc Overview of your system (breif summary statement) Highlights of your requirements specification including Use Cases, Mock-up's, Scenarios, to communicate functionality Summary of required capabilities, with a diagram if available;one or more detailed requirements for the most important capabilities
      (pick the key issues to discuss in detail);
   
DeliverablesDelivery Platform, Development Platform Lifecycle considerationsCurrent state of your project milestones with dates, noting potential exporsures/risks
(how you intend to develop the system throughout the lifecycle);
 System test planhow you intend to both demonstrate that the system should be accepted
as well as how you intend to convince yourselves that it is more than acceptable!).
Technology Transfer, Maintenance, Other Considerations

  Be  sure  to focus your presentation on the key issues.  Don't
spend time with the obvious things.  If there's something in your presentation
that you find boring, so will your audience.  Don't gloss over problems. Your
customer wants you to succeed, your instructors want you to succeed.   They can't
help you unless you tell them where you think the problems are, or are likely to
be.






ICS125
FQ01 Assignments
ICS125
FQ01
David F. Redmiles Home Page
Department of Information and Computer
Science
University of California, Irvine CA 92697-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-FQ01/assignments/homework01.html
##-----------------TITLE------------------------##
untitled
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN

Homework 1: Individual Web Page





Due Wednesday, October 3, 2001 by 5 p.m. through email to arijitg@ics.uci.edu

You are to create a Web page for yourself for ICS 125. The Web page
should contain the information illustrated in the sample located at http://www.ics.uci.edu/~redmiles/ics125-FQ01/assignments/sample.html.
If you already have a Web page for yourself, simply update it to include
the information in the sample (or create a new one if you like). Send
the URL (not the file) for the page to Arijit as indicated above. Remember
to set protections for the "world" to browse your page.



ICS125
FQ01 Assignments
ICS125
FQ01
David F. Redmiles
Home Page
Department of Information and Computer
Science
University of California, Irvine CA 92717-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-FQ01/assignments/assignment1.html
##-----------------TITLE------------------------##
ICS 125 Assignment 1 Project Bid
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN

Assignment 1: Project Bid





Due as a Class Presentation beginning Monday, October
8, 2001

Assignment Requirements

This assignment consists of a class presentation by one or more of
the team members. Some overhead transparencies will be provided to
each team or teams can bring a disk with PowerPoint Slides for
projection from the instructor's laptop.  Transparencies may be hand
written if neatly done. Transparencies should be turned in after the
presentation. Grading is both on the content and the quality of the presentation.

Purpose and Content

The purpose of this exercise is to convince your client that you
can effectively complete the project they have
described. Effectiveness means that you can elicit further
requirements from them and reach a mutual agreement.  The project bid
should convince the hearers (primarily me) that your team has a good
understanding of the problem, are anticipating questions to elicit
further requirements from the client, have a rough idea of the process
or lifecycle you will follow (remember process and lifecycle diagrams
from ICS 121), have an idea of how you will test the project (perhaps
an "acceptance test" or initial ideas about it), have an
idea of the kinds of technology you will employ, and, finally, that
your team members provide a sufficient mix of skills and
experience.

Comments

Projects often begin vaguely. Clients do not have complete ideas about
the work that should be done. They may not fully anticipate their needs.
Therefore your project bid will not be exact. You will have to guess about
some aspects of the project. You will have to struggle with ambiguities
and uncertainties. The point however is to demonstrate that you have tried
to understand the problem as best as possible and have begun to think about
the entire project lifecycle.

You should already have contacted the potential client. I will ask about
this at the presentation.  Remember, it is best to select one person from the
team to coordinate with the (potential) client.

You might think back to ICS 121 Assignment 3 (depdending on your
instructor) Lifecycle Considerations and Validation. 


ICS125
FQ01 Assignments
ICS125
FQ01
David F. Redmiles Home Page
Department of Information and Computer
Science
University of California, Irvine CA 92697-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-FQ01/projects/kbcs.html
##-----------------TITLE------------------------##
ICS 125 KBCS Project Description
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN
    PROJECT DESCRIPTION
    




Knowledge-based Calendar System (KBCS)

This is a calendar application for a somewhat sophisticated end user. The envisioned end users are "people like computer science professors." These end users can program, though they may no longer do it very often. Moreover, they may or may not want to program in order for this calendar application to be used. In other words, most functionality must be readily available, however some way of extending the system without a lot of end user effort, be available.

The calendar should have the basic functionality of a typical calendar application. It should calculate and display the months, days of the week, dates, and years CORRECTLY. End users should be able to set appointments and optionally specify time durations of the appointments.

Unlike some calendaring applications, appointments should not force an end user to specify duration for an appointment. There should be a default possibility of a time placeholder without a time dimension (and without crashing the display of appointments). In addition to appointments on a particular date, appointments crossing over several dates should be possible.

Days should allow for a "title" as well as a set of appointments. I.e., if end users want to put in a holiday, they could put it in as a title. (Or, perhaps the entry is made as a "holiday" type of entry and it is just shown as a day’s title on the view).

Appointments and holidays should have "types" and "properties." These properties will determine display attributes and be the basis for other kinds of sophisticated functionality! Two "types" have been articulated implicitly already: appointment and holiday.

Properties of appointments should include (but not be limited to) tentative versus confirmed, optional versus obligatory, personal versus professional, and private versus public. Appointments should also include the name, location, estimated travel time, duration, as well as a title (a brief descriptor) and a description (optional but more detailed than a title). Appointments should also include an owner of the appointment. The default owner is the current end user. This non-obvious attribute would allow me to track appointments of colleagues, acquaintances, friends, family members, etc.

Properties of holidays should include (but not be limited to) association of the holiday: e.g., "American National," "European National," "Canadian National," "Christian-Catholic," "Christian-Protestant," "Jewish," "Buddhist," "Muslim," etc. Note, there could be multiple associations for holidays. E.g., in some European countries, some national holidays are Roman Catholic Holidays.

What will be unique about this calendar application is its flexibility and its knowledge-based implementation. Objects (such as days and appointments) with attributes (such as owner and duration) are a basic knowledge based as well as object-oriented paradigm. However, the customer prefers to think of these objects as pieces of knowledge and use a knowledge base substrate to store and retrieve objects in the anticipation of adding some sophisticated functionality such as implementing agents to assist with making appointments, even guessing likely used time slots. E.g., when is a likely time for a meeting with student Jane Doe? Perhaps the same time and date as a previous meeting? What is a likely time for a meeting with some random graduate student? Perhaps the same time as a meeting a previous day with a graduate student? Moreover, properties such as estimated travel time could prevent planning too tight a schedule. Intelligent agents could learn when the first appointment of a day comes. There are many possibilities.

The customer strongly urges the developers to look at http://protege.stanford.edu/ as a possible substrate for implementing the objects. The customer also strongly suggests the application be developed in Java for portability and easy extensibility. Moreover, the code should use good style (e.g., naming and other conventions, structured programming, separation of concerns, etc.) The final product must contain both a user manual and program documentation.

There are typical ways to display features of a calendar. One (inadequate) view is given below.





If you have any questions, e-mail to Dr. David Redmiles.
 


ICS125 FQ01 Project Opportunities
ICS125 FQ01
David F. Redmiles Home Page
Department of Information and Computer Science
University of California, Irvine CA 92717-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-FQ01/projects/compaq.html
##-----------------TITLE------------------------##
ICS 125 COMPAQ Project Description
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN
    PROJECT DESCRIPTION
    




ICS 125 Project Proposal: 
NonStop S-Series Simulator "Problem Control Panel"
From Mark Johnson and Henry Tsai; NonStop Division of Compaq Computer Corporation.
Proposal:
Compaq NonStop S-Series computers are very large multiprocessors.  Specially trained Service specialists service them.  Today, the training classes include labs where students can diagnose and repair hardware problems introduced into the lab equipment.  Unfortunately, the lab equipment is very costly, so students have very limited time to practice problems on very small hardware systems.  This project extends a software simulator to add a "Problem Control Panel" so the instructor can inject hardware problems into the simulator.
Background:  
The S-Series simulator is built of a number of components:TSM Service Application GUI:This C++ application is normally used to communicate with a real S-Series server via http over TCP/IP.  The application is able to build a complete model of the system in a proprietary object model and update the model via http messages.

The GUI allows operators to monitor the state of the system, and also to perform various actions on objects in the system.  Actions might include starting a disk drive (UP), or requesting a test of the power distribution system (redundant power scrub).
Dynamic Configuration File:Also known as .dcf files or snapshots.  These are text files with a complete description of a real computer system snapshot.  They are loaded into the TSM Service Application GUI to construct the initial state of any simulation run.
Simulation Engine:The simulation engine is built from a short C++ program.  This code reads the Systems, Actions and Commands XML files described below and sends the XML statements in them to the TSM client to implement the system simulation.
Systems XML file:This file contains the configuration parameters for the simulated systems.
Actions XML file:This file is used to simulate the implemented TSM actions.  Actions are simulated by getting the action request from the GUI, then locating that action response commands in the Actions file.  The response commands simulate the response expected from the action. 
Commands XML file:Today, this file contains a sequence of state change CCNs that are sent to the TSM GUI whenever a cntrl/shft d is typed by the user of the GUI.









The image at the end of this report shows a typical TSM GUI display.  An example of a .dcf file used to produce the image is attached to the electronic version of the proposal.
Proposal:
Provide a GUI program that allows an training class instructor to select a specific problem to inject into the simulator.  The output of the "Problem Control Panel" is a set of commands that sends the state changes associated with the problem to the TSM GUI.
The project team will design the GUI and build it.  The will also design the interface to the existing simulator.  (The simplest solution would be to create a new "commands" file and force the existing simulator to read it.  However, the team may find this less than satisfying.)  The project team should at least be able to inject the problems already described in the existing commands files.  In addition, the team could decide to add more interesting failures or state changes and build the XML needed to generate these changes.
The entire existing simulator package will be supplied both as a runnable set of binaries, support and control files, and also as a full set of C++ source (on the Microsoft visual C++ toolset).  All code runs on Win2000 or WinNT industry standard desktop or Notebook computers.  The project will include a TOI (Transfer Of Information) to let the team learn the key interfaces and control syntax.
View of TSM GUI showing small development system with disk actions



 


ICS125 FQ01 Project Opportunities
ICS125 FQ01
David F. Redmiles Home Page
Department of Information and Computer Science
University of California, Irvine CA 92717-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-FQ01/projects/webdav.html
##-----------------TITLE------------------------##
ICS 125 WEBDAV Project Description
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN
    PROJECT DESCRIPTION
    





I maintain a program called DAV Explorer. This is a WebDAV client
program that came out of an ICS125 project a couple of years back and
was significantly changed afterwards. The problem with the program is
that it uses a very old XML parser, which doesn't support all the
features that are needed nowadays. The idea is to replace the old
parser with a new, DOM-compliant one.  This is not easy, since the
parser code is used throughout the program. So it would be a
reengineering effort.



If you have any questions, e-mail to Mr. Joe Feise
 


ICS125 FQ01 Project Opportunities
ICS125 FQ01
David F. Redmiles Home Page
Department of Information and Computer Science
University of California, Irvine CA 92717-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-FQ01/projects/choral.html
##-----------------TITLE------------------------##
ICS 125 MUSIC Project Description
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN
    PROJECT DESCRIPTION
    




Details of this project are forthcoming.


If you have any questions, e-mail to Dr. Alex Metherell
 


ICS125 FQ01 Project Opportunities
ICS125 FQ01
David F. Redmiles Home Page
Department of Information and Computer Science
University of California, Irvine CA 92717-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-FQ01/projects/config.html
##-----------------TITLE------------------------##
ICS 125 CMS Project Description
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN
    PROJECT DESCRIPTION
    




We would like to build a configuration management awareness tool that
provides on the fly real- time visualizations of what is happening
within a configuration management repository. As different developers
check out and check in artifacts and make changes, the visualization
dynamically updates itself in real-time to graphically show developers
the effects of their and others changes in the repository.


The awareness tool should be written in Java, and most likely
interface with a wide-area event service from which the events are
delivered.



If you have any questions, e-mail to Ms. Anita Sarma or Dr. Andre van der Hoek
 


ICS125 FQ01 Project Opportunities
ICS125 FQ01
David F. Redmiles Home Page
Department of Information and Computer Science
University of California, Irvine CA 92717-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-FQ01/projects/pda.html
##-----------------TITLE------------------------##
ICS 125 IPAQ Project Description
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN
    PROJECT DESCRIPTION
    




This project is about building a networked calendaring system for a
PDA that would enable sorting for different categories. I.e., each
calendar day would have, e.g., 5 different variables, and the sorting
could be done on each variable. E.g., one variable could be location,
another oculd be sales amount.

Magi is one possible platform for this project.


If you have any questions, e-mail to Prof. Gloria Mark 
 


ICS125 FQ01 Project Opportunities
ICS125 FQ01
David F. Redmiles Home Page
Department of Information and Computer Science
University of California, Irvine CA 92717-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-WQ00/adp.html
##-----------------TITLE------------------------##
ICS Academic Dishonesty Policy
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN
    ACADEMIC DISHONESTY POLICY
    

NOTE: This edition published September 1996 ICS Undergraduate Student Affairs
Office 



The general policies on academic misconduct as outlined in the UCI Academic Senate
Policies on Academic Dishonesty apply within the Department. These policies suffice for
much of our work, including examinations and written assignments. However, they do not
deal explicitly with course work involving computers; thus the policies must be extended
to cover those cases. The specific text of UCI's policies may be found in both the UCI
General Catalogue and the quarterly Schedule of Classes; this text is also published electronically. Students may also
pick up a copy of the brochure entitled "Academic Dishonesty: Responsibilities,
Definitions and Procedures" in the UCI Dean of Students' office. 

Definition of Cheating 

The decision as to whether a student cheated depends on the intent of an assignment,
the ground rules specified by the instructor, and the behavior of the student. Two
guidelines help an instructor decide if cheating has occurred: 

Program plagiarism will be suspected if an assignment that calls for independent
    development and implementation of a program results in two or more solutions so similar
    that one can be converted to another by a mechanical transformation. Cheating will be suspected if a student who was to complete an assignment independently
    cannot explain both the intricacies of his or her solution and the techniques used to
    generate that solution. 

It is unreasonable to expect a complete definition of cheating; each case is important
enough to be given careful, individual scrutiny. It is, however, helpful to have
guidelines and precedents. Here are some examples of cases which are clearly cheating and
clearly not cheating. 

Cheating 

Turning in someone else's work as your own (with or without his or her knowledge).
    Turning in a completely duplicated assignment is a flagrant offense, but even copying
    only a portion of the assignment and turning it in as your own is considered cheating.
  Allowing someone else to turn in your work as his or her own. Several people writing one program and turning in multiple copies, all represented
    (implicitly or explicitly) as individual work. Using any part of someone else's work without the proper acknowledgment. Stealing an examination or a solution from the instructor. This is an extremely flagrant
    offense. 

Not Cheating 

Turning in work done alone with the help of the course's staff. Submission of one assignment for a group of students if group work is explicitly
    permitted (or required). Getting or giving help on how to operate the computer or terminal. Getting or giving help on how to eliminate minor syntax errors. High-level discussion of course material for better understanding. Discussion of assignments to understand what is being asked for. 

Penalties 

The procedures that are followed and the sanctions that may be imposed for an incident
of academic dishonesty are outlined in the UCI Academic Senate Policies on Academic
Dishonesty. The specific text of UCI's policies may be found in both the UCI General
Catalogue and the quarterly Schedule of Classes; this text is also published electronically. Students may also
pick up a copy of the brochure entitled "Academic Dishonesty: Responsibilities,
Definitions and Procedures" in the UCI Dean of Students'office. 

Students should be aware that an incident of academic dishonesty may be sufficient to
cause dismissal from the ICS major, denial of a petition to change majors into ICS, or
denial of admission into the ICS Honors Program. 

Students should also be aware that a recorded incident of academic dishonesty will
disqualify them for consideration for honors at graduation. 

In the event that an instructor accuses a student of academic dishonesty and imposes a
penalty, the student may prepare a statement giving hislher side of the case for inclusion
in the student's file. 

NOTE: Disciplinary procedures and sanctions will be consistent with those in the UCI
implementation of "Interim Policies and Procedures Applying to Campus Activities,
Organizations, and Students, Part A." 



ICS125 WQ00
David F. Redmiles ­ Home Page
Department of Information and Computer Science
University of California, Irvine CA 92717-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/inf143-SQ09/example4.htm
##-----------------TITLE------------------------##
Example 4 - Multivariate Data
##------------------TEXT------------------------##
Example 4 – Representing Multivariate Data

 

Choose a thing that has lots of instances with several
attributes that is common for people to search or find a relationship in. The
example I used in class was that of tea. There are thousands of types of teas
with many attributes. Some attributes are quantitative (e.g. water temperature
and steep time) and some are qualitative (e.g. “smooth” and “flavorful”). You
may choose another example. 

 

Sketch out and explain in a short paragraph, a visualization
that would help a viewer choose among the many instances to find something they
were searching for (a pattern, a single instance, etc.). 

 

The sketch does not have to be complete nor programmed. For
instance, if you use pen and paper, you can scan the image to include it in a
document. Your explanation can describe any missing details. 

 

Your explanation should include a statement whether you
think the search task is better accomplished with a non visual interface and
why. 

 

Use your imagination.
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics131-FQ03/week04privacy/PrivacyAct.htm
##-----------------TITLE------------------------##
THE PRIVACY ACT OF 1974, 5 U.S.C. § 552a -- As Amended
##------------------TEXT------------------------##
THE PRIVACY ACT OF 
1974
5 U.S.C. § 552a 

As Amended 



§ 552a. Records 
maintained on individuals 
(a) 
Definitions

For purposes of this 
section-- 


  (1) the term 
  "agency" means agency as defined in section 552(f) of this title; 
  (2) the term 
  "individual" means a citizen of the United States or an alien lawfully 
  admitted for permanent residence; 
  (3) the term 
  "maintain" includes maintain, collect, use or disseminate; 
  (4) the term 
  "record" means any item, collection, or grouping of information about an 
  individual that is maintained by an agency, including, but not limited to, his 
  education, financial transactions, medical history, and criminal or employment 
  history and that contains his name, or the identifying number, symbol, or 
  other identifying particular assigned to the individual, such as a finger or 
  voice print or a photograph; 
  (5) the term 
  "system of records" means a group of any records under the control of any 
  agency from which information is retrieved by the name of the individual or by 
  some identifying number, symbol, or other identifying particular assigned to 
  the individual; 
  (6) the term 
  "statistical record" means a record in a system of records maintained for 
  statistical research or reporting purposes only and not used in whole or in 
  part in making any determination about an identifiable individual, except as 
  provided by section 8 of Title 13; 
  (7) the term 
  "routine use" means, with respect to the disclosure of a record, the use of 
  such record for a purpose which is compatible with the purpose for which it 
  was collected; 
  (8) the term 
  "matching program"-- 
  (A) 
    means any computerized comparison of-- 
    (i) 
      two or more automated systems of records or a system of records with 
      non-Federal records for the purpose of-- 
      (I) 
        establishing or verifying the eligibility of, or continuing compliance 
        with statutory and regulatory requirements by, applicants for, 
        recipients or beneficiaries of, participants in, or providers of 
        services with respect to, cash or in-kind assistance or payments under 
        Federal benefit programs, or 
        (II) 
        recouping payments or delinquent debts under such Federal benefit 
        programs, or(ii) two or more 
      automated Federal personnel or payroll systems of records or a system of 
      Federal personnel or payroll records with non-Federal records, 
    (B) but does not include-- 
    (i) 
      matches performed to produce aggregate statistical data without any 
      personal identifiers; 
      (ii) matches 
      performed to support any research or statistical project, the specific 
      data of which may not be used to make decisions concerning the rights, 
      benefits, or privileges of specific individuals;
      (iii) matches 
      performed, by an agency (or component thereof) which performs as its 
      principal function any activity pertaining to the enforcement of criminal 
      laws, subsequent to the initiation of a specific criminal or civil law 
      enforcement investigation of a named person or persons for the purpose of 
      gathering evidence against such person or persons;
      (iv) matches of 
      tax information (I) pursuant to section 6103(d) of the Internal Revenue 
      Code of 1986, (II) for purposes of tax administration as defined in 
      section 6103(b)(4) of such Code, (III) for the purpose of intercepting a 
      tax refund due an individual under authority granted by section 404(e), 
      464, or 1137 of the Social Security Act; or (IV) for the purpose of 
      intercepting a tax refund due an individual under any other tax refund 
      intercept program authorized by statute which has been determined by the 
      Director of the Office of Management and Budget to contain verification, 
      notice, and hearing requirements that are substantially similar to the 
      procedures in section 1137 of the Social Security Act;
      (v) 
      matches--
      (I) 
        using records predominantly relating to Federal personnel, that are 
        performed for routine administrative purposes (subject to guidance 
        provided by the Director of the Office of Management and Budget pursuant 
        to subsection (v)); or 
        
        (II) 
        conducted by an agency using only records from systems of records 
        maintained by that agency; if the purpose of the 
      match is not to take any adverse financial, personnel, disciplinary, or 
      other adverse action against Federal personnel; or 
      (vi) matches 
      performed for foreign counterintelligence purposes or to produce 
      background checks for security clearances of Federal personnel or Federal 
      contractor personnel; 
      (vii) matches 
      performed incident to a levy described in section 6103(k)(8) of the 
      Internal Revenue Code of 1986; or 
      (viii) matches 
      performed pursuant to section 202(x)(3) or 1611(e)(1) of the Social 
      Security Act (42 U.S.C. § 402(x)(3), § 
      1382(e)(1); (9) the term "recipient 
  agency" means any agency, or contractor thereof, receiving records contained 
  in a system of records from a source agency for use in a matching program; 
  
  (10) the term 
  "non-Federal agency" means any State or local government, or agency thereof, 
  which receives records contained in a system of records from a source agency 
  for use in a matching program;
  (11) the term 
  "source agency" means any agency which discloses records contained in a system 
  of records to be used in a matching program, or any State or local government, 
  or agency thereof, which discloses records to be used in a matching 
  program;
  (12) the term 
  "Federal benefit program" means any program administered or funded by the 
  Federal Government, or by any agent or State on behalf of the Federal 
  Government, providing cash or in-kind assistance in the form of payments, 
  grants, loans, or loan guarantees to individuals; and
  (13) the term 
  "Federal personnel" means officers and employees of the Government of the 
  United States, members of the uniformed services (including members of the 
  Reserve Components), individuals entitled to receive immediate or deferred 
  retirement benefits under any retirement program of the Government of the 
  United States (including survivor benefits).
(b) Conditions of 
disclosure

No agency shall 
disclose any record which is contained in a system of records by any means of 
communication to any person, or to another agency, except pursuant to a written 
request by, or with the prior written consent of, the individual to whom the 
record pertains, unless disclosure of the record would be-- 

(1) to 
  those officers and employees of the agency which maintains the record who have 
  a need for the record in the performance of their duties; 
  
  (2) required under 
  section 552 of this title; 
  (3) for a routine 
  use as defined in subsection (a)(7) of this section and described under 
  subsection (e)(4)(D) of this section;
  (4) to the Bureau 
  of the Census for purposes of planning or carrying out a census or survey or 
  related activity pursuant to the provisions of Title 13; 
  (5) to a recipient 
  who has provided the agency with advance adequate written assurance that the 
  record will be used solely as a statistical research or reporting record, and 
  the record is to be transferred in a form that is not individually 
  identifiable; 
  (6) to the National 
  Archives and Records Administration as a record which has sufficient 
  historical or other value to warrant its continued preservation by the United 
  States Government, or for evaluation by the Archivist of the United States or 
  the designee of the Archivist to determine whether the record has such value; 
  
  (7) to another 
  agency or to an instrumentality of any governmental jurisdiction within or 
  under the control of the United States for a civil or criminal law enforcement 
  activity if the activity is authorized by law, and if the head of the agency 
  or instrumentality has made a written request to the agency which maintains 
  the record specifying the particular portion desired and the law enforcement 
  activity for which the record is sought; 
  (8) to a person 
  pursuant to a showing of compelling circumstances affecting the health or 
  safety of an individual if upon such disclosure notification is transmitted to 
  the last known address of such individual; 
  (9) to either House 
  of Congress, or, to the extent of matter within its jurisdiction, any 
  committee or subcommittee thereof, any joint committee of Congress or 
  subcommittee of any such joint committee; 
  (10) to the 
  Comptroller General, or any of his authorized representatives, in the course 
  of the performance of the duties of the General Accounting Office; 
  (11) pursuant to 
  the order of a court of competent jurisdiction; or
  (12) to a consumer 
  reporting agency in accordance with section 3711(e) of Title 
31.
(c) Accounting of 
Certain Disclosures 

Each agency, with 
respect to each system of records under its control, shall-- 

(1) except 
  for disclosures made under subsections (b)(1) or (b)(2) of this section, keep 
  an accurate accounting of-- 
  
  (A) the 
    date, nature, and purpose of each disclosure of a record to any person or to 
    another agency made under subsection (b) of this section; and 
    (B) the name and 
    address of the person or agency to whom the disclosure is made; 
  (2) retain the accounting made under paragraph (1) of this 
  subsection for at least five years or the life of the record, whichever is 
  longer, after the disclosure for which the accounting is made; 
  
  (3) except for 
  disclosures made under subsection (b)(7) of this section, make the accounting 
  made under paragraph (1) of this subsection available to the individual named 
  in the record at his request; and 
  (4) inform any 
  person or other agency about any correction or notation of dispute made by the 
  agency in accordance with subsection (d) of this section of any record that 
  has been disclosed to the person or agency if an accounting of the disclosure 
  was made.
(d) Access to records 


Each agency that 
maintains a system of records shall-- 

(1) upon 
  request by any individual to gain access to his record or to any information 
  pertaining to him which is contained in the system, permit him and upon his 
  request, a person of his own choosing to accompany him, to review the record 
  and have a copy made of all or any portion thereof in a form comprehensible to 
  him, except that the agency may require the individual to furnish a written 
  statement authorizing discussion of that individual's record in the 
  accompanying person's presence; 
  
  (2) permit the 
  individual to request amendment of a record pertaining to him and-- 

  (A) not 
    later than 10 days (excluding Saturdays, Sundays, and legal public holidays) 
    after the date of receipt of such request, acknowledge in writing such 
    receipt; and 
    
    (B) promptly, 
    either-- 
    (i) 
      make any correction of any portion thereof which the individual believes 
      is not accurate, relevant, timely, or complete; or 
      
      (ii) inform the 
      individual of its refusal to amend the record in accordance with his 
      request, the reason for the refusal, the procedures established by the 
      agency for the individual to request a review of that refusal by the head 
      of the agency or an officer designated by the head of the agency, and the 
      name and business address of that official; 
  (3) permit the individual who disagrees with the refusal of the 
  agency to amend his record to request a review of such refusal, and not later 
  than 30 days (excluding Saturdays, Sundays, and legal public holidays) from 
  the date on which the individual requests such review, complete such review 
  and make a final determination unless, for good cause shown, the head of the 
  agency extends such 30-day period; and if, after his review, the reviewing 
  official also refuses to amend the record in accordance with the request, 
  permit the individual to file with the agency a concise statement setting 
  forth the reasons for his disagreement with the refusal of the agency, and 
  notify the individual of the provisions for judicial review of the reviewing 
  official's determination under subsection (g)(1)(A) of this section; 
  
  (4) in any 
  disclosure, containing information about which the individual has filed a 
  statement of disagreement, occurring after the filing of the statement under 
  paragraph (3) of this subsection, clearly note any portion of the record which 
  is disputed and provide copies of the statement and, if the agency deems it 
  appropriate, copies of a concise statement of the reasons of the agency for 
  not making the amendments requested, to persons or other agencies to whom the 
  disputed record has been disclosed; and
  (5) nothing in this 
  section shall allow an individual access to any information compiled in 
  reasonable anticipation of a civil action or proceeding.
(e) Agency 
requirements

Each agency that 
maintains a system of records shall-- 

(1) 
  maintain in its records only such information about an individual as is 
  relevant and necessary to accomplish a purpose of the agency required to be 
  accomplished by statute or by Executive order of the President; 
  
  (2) collect 
  information to the greatest extent practicable directly from the subject 
  individual when the information may result in adverse determinations about an 
  individual's rights, benefits, and privileges under Federal programs; 
  
  (3) inform each 
  individual whom it asks to supply information, on the form which it uses to 
  collect the information or on a separate form that can be retained by the 
  individual-- 
  (A) the 
    authority (whether granted by statute, or by Executive order of the 
    President) which authorizes the solicitation of the information and whether 
    disclosure of such information is mandatory or voluntary; 
    
    (B) the principal 
    purpose or purposes for which the information is intended to be 
    used;
    (C) the routine 
    uses which may be made of the information, as published pursuant to 
    paragraph (4)(D) of this subsection; and 
    (D) the effects 
    on him, if any, of not providing all or any part of the requested 
    information; (4) subject to the provisions of paragraph (11) of this 
  subsection, publish in the Federal Register upon establishment or revision a 
  notice of the existence and character of the system of records, which notice 
  shall include-- 
  
  (A) the 
    name and location of the system; 
    
    (B) the 
    categories of individuals on whom records are maintained in the system; 
    
    (C) the 
    categories of records maintained in the system; 
    (D) each routine 
    use of the records contained in the system, including the categories of 
    users and the purpose of such use; 
    (E) the policies 
    and practices of the agency regarding storage, retrievability, access 
    controls, retention, and disposal of the records; 
    (F) the title and 
    business address of the agency official who is responsible for the system of 
    records; 
    (G) the agency 
    procedures whereby an individual can be notified at his request if the 
    system of records contains a record pertaining to him; 
    (H) the agency 
    procedures whereby an individual can be notified at his request how he can 
    gain access to any record pertaining to him contained in the system of 
    records, and how he can contest its content; and 
    (I) the 
    categories of sources of records in the system; (5) maintain all records 
  which are used by the agency in making any determination about any individual 
  with such accuracy, relevance, timeliness, and completeness as is reasonably 
  necessary to assure fairness to the individual in the determination; 
  
  (6) prior to 
  disseminating any record about an individual to any person other than an 
  agency, unless the dissemination is made pursuant to subsection (b)(2) of this 
  section, make reasonable efforts to assure that such records are accurate, 
  complete, timely, and relevant for agency purposes; 
  (7) maintain no 
  record describing how any individual exercises rights guaranteed by the First 
  Amendment unless expressly authorized by statute or by the individual about 
  whom the record is maintained or unless pertinent to and within the scope of 
  an authorized law enforcement activity; 
  (8) make reasonable 
  efforts to serve notice on an individual when any record on such individual is 
  made available to any person under compulsory legal process when such process 
  becomes a matter of public record; 
  (9) establish rules 
  of conduct for persons involved in the design, development, operation, or 
  maintenance of any system of records, or in maintaining any record, and 
  instruct each such person with respect to such rules and the requirements of 
  this section, including any other rules and procedures adopted pursuant to 
  this section and the penalties for noncompliance; 
  (10) establish 
  appropriate administrative, technical and physical safeguards to insure the 
  security and confidentiality of records and to protect against any anticipated 
  threats or hazards to their security or integrity which could result in 
  substantial harm, embarrassment, inconvenience, or unfairness to any 
  individual on whom information is maintained; 
  (11) at least 30 
  days prior to publication of information under paragraph (4)(D) of this 
  subsection, publish in the Federal Register notice of any new use or intended 
  use of the information in the system, and provide an opportunity for 
  interested persons to submit written data, views, or arguments to the agency; 
  and 
  (12) if such agency 
  is a recipient agency or a source agency in a matching program with a 
  non-Federal agency, with respect to any establishment or revision of a 
  matching program, at least 30 days prior to conducting such program, publish 
  in the Federal Register notice of such establishment or 
revision.
(f) Agency 
rules

In order to carry 
out the provisions of this section, each agency that maintains a system of 
records shall promulgate rules, in accordance with the requirements (including 
general notice) of section 553 of this title, which shall-- 

(1) 
  establish procedures whereby an individual can be notified in response to his 
  request if any system of records named by the individual contains a record 
  pertaining to him; 
  
  (2) define 
  reasonable times, places, and requirements for identifying an individual who 
  requests his record or information pertaining to him before the agency shall 
  make the record or information available to the individual; 
  (3) establish 
  procedures for the disclosure to an individual upon his request of his record 
  or information pertaining to him, including special procedure, if deemed 
  necessary, for the disclosure to an individual of medical records, including 
  psychological records, pertaining to him; 
  (4) establish 
  procedures for reviewing a request from an individual concerning the amendment 
  of any record or information pertaining to the individual, for making a 
  determination on the request, for an appeal within the agency of an initial 
  adverse agency determination, and for whatever additional means may be 
  necessary for each individual to be able to exercise fully his rights under 
  this section; and 
  (5) establish fees 
  to be charged, if any, to any individual for making copies of his record, 
  excluding the cost of any search for and review of the 
record.
The Office of the 
Federal Register shall biennially compile and publish the rules promulgated 
under this subsection and agency notices published under subsection (e)(4) of 
this section in a form available to the public at low cost.
(g)(1) Civil remedies 


Whenever any agency 



  (A) 
    makes a determination under subsection (d)(3) of this section not to amend 
    an individual's record in accordance with his request, or fails to make such 
    review in conformity with that subsection; 
    
    (B) refuses to 
    comply with an individual request under subsection (d)(1) of this section; 
    
    (C) fails to 
    maintain any record concerning any individual with such accuracy, relevance, 
    timeliness, and completeness as is necessary to assure fairness in any 
    determination relating to the qualifications, character, rights, or 
    opportunities of, or benefits to the individual that may be made on the 
    basis of such record, and consequently a determination is made which is 
    adverse to the individual; or 
    (D) fails to 
    comply with any other provision of this section, or any rule promulgated 
    thereunder, in such a way as to have an adverse effect on an individual, the 
    individual may bring a civil action against the agency, and the district 
    courts of the United States shall have jurisdiction in the matters under the 
    provisions of this subsection.(2)(A) In any suit brought 
  under the provisions of subsection (g)(1)(A) of this section, the court may 
  order the agency to amend the individual's record in accordance with his 
  request or in such other way as the court may direct. In such a case the court 
  shall determine the matter de novo. 
  
  (B) The 
    court may assess against the United States reasonable attorney fees and 
    other litigation costs reasonably incurred in any case under this paragraph 
    in which the complainant has substantially prevailed. 
    (3)(A) In any suit brought under the provisions of subsection 
  (g)(1)(B) of this section, the court may enjoin the agency from withholding 
  the records and order the production to the complainant of any agency records 
  improperly withheld from him. In such a case the court shall determine the 
  matter de novo, and may examine the contents of any agency records in camera 
  to determine whether the records or any portion thereof may be withheld under 
  any of the exemptions set forth in subsection (k) of this section, and the 
  burden is on the agency to sustain its action. 
  
  (B) The 
    court may assess against the United States reasonable attorney fees and 
    other litigation costs reasonably incurred in any case under this paragraph 
    in which the complainant has substantially prevailed. 
    (4) In any suit brought under the provisions of subsection 
  (g)(1)(C) or (D) of this section in which the court determines that the agency 
  acted in a manner which was intentional or willful, the United States shall be 
  liable to the individual in an amount equal to the sum of-- 
  
  (A) 
    actual damages sustained by the individual as a result of the refusal or 
    failure, but in no case shall a person entitled to recovery receive less 
    than the sum of $1,000; and 
    
    (B) the costs of 
    the action together with reasonable attorney fees as determined by the 
    court.(5) An action to enforce any liability created under this 
  section may be brought in the district court of the United States in the 
  district in which the complainant resides, or has his principal place of 
  business, or in which the agency records are situated, or in the District of 
  Columbia, without regard to the amount in controversy, within two years from 
  the date on which the cause of action arises, except that where an agency has 
  materially and willfully misrepresented any information required under this 
  section to be disclosed to an individual and the information so misrepresented 
  is material to establishment of the liability of the agency to the individual 
  under this section, the action may be brought at any time within two years 
  after discovery by the individual of the misrepresentation. Nothing in this 
  section shall be construed to authorize any civil action by reason of any 
  injury sustained as the result of a disclosure of a record prior to September 
  27, 1975. 
  
(h) Rights of legal 
guardians

For the purposes of 
this section, the parent of any minor, or the legal guardian of any individual 
who has been declared to be incompetent due to physical or mental incapacity or 
age by a court of competent jurisdiction, may act on behalf of the 
individual. 

(i)(1) Criminal 
penalties 

Any officer or 
employee of an agency, who by virtue of his employment or official position, has 
possession of, or access to, agency records which contain individually 
identifiable information the disclosure of which is prohibited by this section 
or by rules or regulations established thereunder, and who knowing that 
disclosure of the specific material is so prohibited, willfully discloses the 
material in any manner to any person or agency not entitled to receive it, shall 
be guilty of a misdemeanor and fined not more than $5,000. 

(2) Any 
  officer or employee of any agency who willfully maintains a system of records 
  without meeting the notice requirements of subsection (e)(4) of this section 
  shall be guilty of a misdemeanor and fined not more than $5,000. 
  
  (3) Any person who 
  knowingly and willfully requests or obtains any record concerning an 
  individual from an agency under false pretenses shall be guilty of a 
  misdemeanor and fined not more than $5,000.
(j) General 
exemptions

The head of any 
agency may promulgate rules, in accordance with the requirements (including 
general notice) of sections 553(b)(1), (2), and (3), (c), and (e) of this title, 
to exempt any system of records within the agency from any part of this section 
except subsections (b), (c)(1) and (2), (e)(4)(A) through (F), (e)(6), (7), (9), 
(10), and (11), and (i) if the system of records is-- 

(1) 
  maintained by the Central Intelligence Agency; or 
  
  (2) maintained by 
  an agency or component thereof which performs as its principal function any 
  activity pertaining to the enforcement of criminal laws, including police 
  efforts to prevent, control, or reduce crime or to apprehend criminals, and 
  the activities of prosecutors, courts, correctional, probation, pardon, or 
  parole authorities, and which consists of (A) information compiled for the 
  purpose of identifying individual criminal offenders and alleged offenders and 
  consisting only of identifying data and notations of arrests, the nature and 
  disposition of criminal charges, sentencing, confinement, release, and parole 
  and probation status; (B) information compiled for the purpose of a criminal 
  investigation, including reports of informants and investigators, and 
  associated with an identifiable individual; or (C) reports identifiable to an 
  individual compiled at any stage of the process of enforcement of the criminal 
  laws from arrest or indictment through release from 
supervision.
At the time rules are 
adopted under this subsection, the agency shall include in the statement 
required under section 553(c) of this title, the reasons why the system of 
records is to be exempted from a provision of this section.
(k) Specific 
exemptions 

The head of any 
agency may promulgate rules, in accordance with the requirements (including 
general notice) of sections 553(b)(1), (2), and (3), (c), and (e) of this title, 
to exempt any system of records within the agency from subsections (c)(3), (d), 
(e)(1), (e)(4)(G), (H), and (I) and (f) of this section if the system of records 
is-- 

(1) 
  subject to the provisions of section 552(b)(1) of this title; 
  
  (2) investigatory 
  material compiled for law enforcement purposes, other than material within the 
  scope of subsection (j)(2) of this section: Provided, however, 
  That if any individual is denied any right, privilege, or benefit that he 
  would otherwise be entitled by Federal law, or for which he would otherwise be 
  eligible, as a result of the maintenance of such material, such material shall 
  be provided to such individual, except to the extent that the disclosure of 
  such material would reveal the identity of a source who furnished information 
  to the Government under an express promise that the identity of the source 
  would be held in confidence, or, prior to the effective date of this section, 
  under an implied promise that the identity of the source would be held in 
  confidence; 
  (3) maintained in 
  connection with providing protective services to the President of the United 
  States or other individuals pursuant to section 3056 of Title 18; 
  (4) required by 
  statute to be maintained and used solely as statistical records; 
  (5) investigatory 
  material compiled solely for the purpose of determining suitability, 
  eligibility, or qualifications for Federal civilian employment, military 
  service, Federal contracts, or access to classified information, but only to 
  the extent that the disclosure of such material would reveal the identity of a 
  source who furnished information to the Government under an express promise 
  that the identity of the source would be held in confidence, or, prior to the 
  effective date of this section, under an implied promise that the identity of 
  the source would be held in confidence;
  (6) testing or 
  examination material used solely to determine individual qualifications for 
  appointment or promotion in the Federal service the disclosure of which would 
  compromise the objectivity or fairness of the testing or examination process; 
  or 
  (7) evaluation 
  material used to determine potential for promotion in the armed services, but 
  only to the extent that the disclosure of such material would reveal the 
  identity of a source who furnished information to the Government under an 
  express promise that the identity of the source would be held in confidence, 
  or, prior to the effective date of this section, under an implied promise that 
  the identity of the source would be held in confidence. 
At the time rules are 
adopted under this subsection, the agency shall include in the statement 
required under section 553(c) of this title, the reasons why the system of 
records is to be exempted from a provision of this section.
(1) Archival records 

(1) Each 
  agency record which is accepted by the Archivist of the United States for 
  storage, processing, and servicing in accordance with section 3103 of Title 44 
  shall, for the purposes of this section, be considered to be maintained by the 
  agency which deposited the record and shall be subject to the provisions of 
  this section. The Archivist of the United States shall not disclose the record 
  except to the agency which maintains the record, or under rules established by 
  that agency which are not inconsistent with the provisions of this 
  section. 
  
  (2) Each agency 
  record pertaining to an identifiable individual which was transferred to the 
  National Archives of the United States as a record which has sufficient 
  historical or other value to warrant its continued preservation by the United 
  States Government, prior to the effective date of this section, shall, for the 
  purposes of this section, be considered to be maintained by the National 
  Archives and shall not be subject to the provisions of this section, except 
  that a statement generally describing such records (modeled after the 
  requirements relating to records subject to subsections (e)(4)(A) through (G) 
  of this section) shall be published in the Federal Register.
  (3) Each agency 
  record pertaining to an identifiable individual which is transferred to the 
  National Archives of the United States as a record which has sufficient 
  historical or other value to warrant its continued preservation by the United 
  States Government, on or after the effective date of this section, shall, for 
  the purposes of this section, be considered to be maintained by the National 
  Archives and shall be exempt from the requirements of this section except 
  subsections (e)(4)(A) through (G) and (e)(9) of this 
section.
(m) Government 
contractors 
(1) When 
  an agency provides by a contract for the operation by or on behalf of the 
  agency of a system of records to accomplish an agency function, the agency 
  shall, consistent with its authority, cause the requirements of this section 
  to be applied to such system. For purposes of subsection (i) of this section 
  any such contractor and any employee of such contractor, if such contract is 
  agreed to on or after the effective date of this section, shall be considered 
  to be an employee of an agency. 
  
  (2) A consumer 
  reporting agency to which a record is disclosed under section 3711(e) of Title 
  31 shall not be considered a contractor for the purposes of this 
  section.
(n) Mailing lists 


An individual's name 
and address may not be sold or rented by an agency unless such action is 
specifically authorized by law. This provision shall not be construed to require 
the withholding of names and addresses otherwise permitted to be made 
public. 

(o) Matching 
agreements -- (1) No record which is contained in a system of records may be 
disclosed to a recipient agency or non-Federal agency for use in a computer 
matching program except pursuant to a written agreement between the source 
agency and the recipient agency or non-Federal agency specifying--

  (A) the 
    purpose and legal authority for conducting the program; 
    
    (B) the 
    justification for the program and the anticipated results, including a 
    specific estimate of any savings;
    (C) a description 
    of the records that will be matched, including each data element that will 
    be used, the approximate number of records that will be matched, and the 
    projected starting and completion dates of the matching program;
    (D) procedures 
    for providing individualized notice at the time of application, and notice 
    periodically thereafter as directed by the Data Integrity Board of such 
    agency (subject to guidance provided by the Director of the Office of 
    Management and Budget pursuant to subsection (v)), to--
    (i) 
      applicants for and recipients of financial assistance or payments under 
      Federal benefit programs, and 
      
      (ii) applicants 
      for and holders of positions as Federal personnel, that any information 
      provided by such applicants, recipients, holders, and individuals may be 
      subject to verification through matching programs;
    (E) procedures 
    for verifying information produced in such matching program as required by 
    subsection (p);
    (F) procedures 
    for the retention and timely destruction of identifiable records created by 
    a recipient agency or non-Federal agency in such matching 
program;
    (G) procedures 
    for ensuring the administrative, technical, and physical security of the 
    records matched and the results of such programs;
    (H) prohibitions 
    on duplication and redisclosure of records provided by the source agency 
    within or outside the recipient agency or the non-Federal agency, except 
    where required by law or essential to the conduct of the matching 
    program;
    (I) procedures 
    governing the use by a recipient agency or non-Federal agency of records 
    provided in a matching program by a source agency, including procedures 
    governing return of the records to the source agency or destruction of 
    records used in such program;
    (J) information 
    on assessments that have been made on the accuracy of the records that will 
    be used in such matching program; and
    (K) that the 
    Comptroller General may have access to all records of a recipient agency or 
    a non-Federal agency that the Comptroller General deems necessary in order 
    to monitor or verify compliance with the 
  agreement.(2)(A) A copy of each agreement entered into pursuant to 
  paragraph (1) shall-- 
  
  
    (i) be 
      transmitted to the Committee on Governmental Affairs of the Senate and the 
      Committee on Government Operations of the House of Representatives; 
      and 
      
      (ii) be 
      available upon request to the public.(B) No such agreement 
    shall be effective until 30 days after the date on which such a copy is 
    transmitted pursuant to subparagraph (A)(i). 
    
    (C) Such an 
    agreement shall remain in effect only for such period, not to exceed 18 
    months, as the Data Integrity Board of the agency determines is appropriate 
    in light of the purposes, and length of time necessary for the conduct, of 
    the matching program.
    (D) Within 3 
    months prior to the expiration of such an agreement pursuant to subparagraph 
    (C), the Data Integrity Board of the agency may, without additional review, 
    renew the matching agreement for a current, ongoing matching program for not 
    more than one additional year if--
    (i) 
      such program will be conducted without any change; and 
      
      (ii) each party 
      to the agreement certifies to the Board in writing that the program has 
      been conducted in compliance with the 
  agreement.
(p) Verification and 
Opportunity to Contest Findings
(1) In 
  order to protect any individual whose records are used in a matching program, 
  no recipient agency, non-Federal agency, or source agency may suspend, 
  terminate, reduce, or make a final denial of any financial assistance or 
  payment under a Federal benefit program to such individual, or take other 
  adverse action against such individual, as a result of information produced by 
  such matching program, until-- 
  
  (A)(i) 
    the agency has independently verified the information; or 
    
    (ii) 
      the Data Integrity Board of the agency, or in the case of a non-Federal 
      agency the Data Integrity Board of the source agency, determines in 
      accordance with guidance issued by the Director of the Office of 
      Management and Budget that-- 
      
      (I) 
        the information is limited to identification and amount of benefits paid 
        by the source agency under a Federal benefit program; and 
        
        (II) there is 
        a high degree of confidence that the information provided to the 
        recipient agency is accurate; (B) the individual 
    receives a notice from the agency containing a statement of its findings and 
    informing the individual of the opportunity to contest such findings; 
    and 
    
    (C)(i) the 
    expiration of any time period established for the program by statute or 
    regulation for the individual to respond to that notice; or
    (ii) 
      in the case of a program for which no such period is established, the end 
      of the 30-day period beginning on the date on which notice under 
      subparagraph (B) is mailed or otherwise provided to the individual. 

      (2) Independent verification referred to in paragraph (1) 
  requires investigation and confirmation of specific information relating to an 
  individual that is used as a basis for an adverse action against the 
  individual, including where applicable investigation and confirmation 
  of-- 
  
  (A) the 
    amount of any asset or income involved; 
    
    (B) whether such 
    individual actually has or had access to such asset or income for such 
    individual's own use; and
    (C) the period or 
    periods when the individual actually had such asset or 
  income.(3) Notwithstanding paragraph (1), an agency may take any 
  appropriate action otherwise prohibited by such paragraph if the agency 
  determines that the public health or public safety may be adversely affected 
  or significantly threatened during any notice period required by such 
  paragraph. 
  
(q) 
Sanctions
(1) 
  Notwithstanding any other provision of law, no source agency may disclose any 
  record which is contained in a system of records to a recipient agency or 
  non-Federal agency for a matching program if such source agency has reason to 
  believe that the requirements of subsection (p), or any matching agreement 
  entered into pursuant to subsection (o), or both, are not being met by such 
  recipient agency. 
  
  (2) No source 
  agency may renew a matching agreement unless--
  (A) the 
    recipient agency or non-Federal agency has certified that it has complied 
    with the provisions of that agreement; and 
    
    (B) the source 
    agency has no reason to believe that the certification is 
    inaccurate.
(r) Report on new 
systems and matching programs

Each agency that 
proposes to establish or make a significant change in a system of records or a 
matching program shall provide adequate advance notice of any such proposal (in 
duplicate) to the Committee on Government Operations of the House of 
Representatives, the Committee on Governmental Affairs of the Senate, and the 
Office of Management and Budget in order to permit an evaluation of the probable 
or potential effect of such proposal on the privacy or other rights of 
individuals. 

(s) [Biennial report] 
Repealed by the Federal Reports Elimination and Sunset Act of 1995, Pub. L. No. 
104-66, § 3003, 109 Stat. 707, 734-36 (1995), amended by 
Pub. L. No. 106-113, § 236, 113 Stat. 1501, 1501A-302 (1999) 
(changing effective date to May 15, 2000). 
(t) Effect of other 
laws
(1) No 
  agency shall rely on any exemption contained in section 552 of this title to 
  withhold from an individual any record which is otherwise accessible to such 
  individual under the provisions of this section. 
  
  (2) No agency shall 
  rely on any exemption in this section to withhold from an individual any 
  record which is otherwise accessible to such individual under the provisions 
  of section 552 of this title.
(u) Data Integrity 
Boards
(1) Every 
  agency conducting or participating in a matching program shall establish a 
  Data Integrity Board to oversee and coordinate among the various components of 
  such agency the agency's implementation of this section. 
  
  (2) Each Data 
  Integrity Board shall consist of senior officials designated by the head of 
  the agency, and shall include any senior official designated by the head of 
  the agency as responsible for implementation of this section, and the 
  inspector general of the agency, if any. The inspector general shall not serve 
  as chairman of the Data Integrity Board.
  (3) Each Data 
  Integrity Board--
  (A) 
    shall review, approve, and maintain all written agreements for receipt or 
    disclosure of agency records for matching programs to ensure compliance with 
    subsection (o), and all relevant statutes, regulations, and 
    guidelines; 
    
    (B) shall review 
    all matching programs in which the agency has participated during the year, 
    either as a source agency or recipient agency, determine compliance with 
    applicable laws, regulations, guidelines, and agency agreements, and assess 
    the costs and benefits of such programs;
    (C) shall review 
    all recurring matching programs in which the agency has participated during 
    the year, either as a source agency or recipient agency, for continued 
    justification for such disclosures;
    (D) shall compile 
    an annual report, which shall be submitted to the head of the agency and the 
    Office of Management and Budget and made available to the public on request, 
    describing the matching activities of the agency, including--
    (i) 
      matching programs in which the agency has participated as a source agency 
      or recipient agency; 
      
      (ii) matching 
      agreements proposed under subsection (o) that were disapproved by the 
      Board;
      (iii) any 
      changes in membership or structure of the Board in the preceding 
      year;
      (iv) the 
      reasons for any waiver of the requirement in paragraph (4) of this section 
      for completion and submission of a cost-benefit analysis prior to the 
      approval of a matching program;
      (v) any 
      violations of matching agreements that have been alleged or identified and 
      any corrective action taken; and
      (vi) any other 
      information required by the Director of the Office of Management and 
      Budget to be included in such report;
    (E) shall serve 
    as a clearinghouse for receiving and providing information on the accuracy, 
    completeness, and reliability of records used in matching 
    programs;
    (F) shall provide 
    interpretation and guidance to agency components and personnel on the 
    requirements of this section for matching programs;
    (G) shall review 
    agency recordkeeping and disposal policies and practices for matching 
    programs to assure compliance with this section; and
    (H) may review 
    and report on any agency matching activities that are not matching 
    programs.
  (4)(A) Except as 
  provided in subparagraphs (B) and (C), a Data Integrity Board shall not 
  approve any written agreement for a matching program unless the agency has 
  completed and submitted to such Board a cost-benefit analysis of the proposed 
  program and such analysis demonstrates that the program is likely to be cost 
  effective.
  (B) The 
    Board may waive the requirements of subparagraph (A) of this paragraph if it 
    determines in writing, in accordance with guidelines prescribed by the 
    Director of the Office of Management and Budget, that a cost-benefit 
    analysis is not required. 
    
    (C) A 
    cost-benefit analysis shall not be required under subparagraph (A) prior to 
    the initial approval of a written agreement for a matching program that is 
    specifically required by statute. Any subsequent written agreement for such 
    a program shall not be approved by the Data Integrity Board unless the 
    agency has submitted a cost-benefit analysis of the program as conducted 
    under the preceding approval of such agreement.
  (5)(A) If a 
  matching agreement is disapproved by a Data Integrity Board, any party to such 
  agreement may appeal the disapproval to the Director of the Office of 
  Management and Budget. Timely notice of the filing of such an appeal shall be 
  provided by the Director of the Office of Management and Budget to the 
  Committee on Governmental Affairs of the Senate and the Committee on 
  Government Operations of the House of Representatives.
  (B) The 
    Director of the Office of Management and Budget may approve a matching 
    agreement notwithstanding the disapproval of a Data Integrity Board if the 
    Director determines that-- 
    
    (i) 
      the matching program will be consistent with all applicable legal, 
      regulatory, and policy requirements; 
      
      (ii) there is 
      adequate evidence that the matching agreement will be cost- effective; 
      and
      (iii) the 
      matching program is in the public interest.(C) The decision of the 
    Director to approve a matching agreement shall not take effect until 30 days 
    after it is reported to committees described in subparagraph (A). 
    
    (D) If the Data 
    Integrity Board and the Director of the Office of Management and Budget 
    disapprove a matching program proposed by the inspector general of an 
    agency, the inspector general may report the disapproval to the head of the 
    agency and to the Congress.(6) The Director of the 
  Office of Management and Budget shall, annually during the first 3 years after 
  the date of enactment of this subsection and biennially thereafter, 
  consolidate in a report to the Congress the information contained in the 
  reports from the various Data Integrity Boards under paragraph (3)(D). Such 
  report shall include detailed information about costs and benefits of matching 
  programs that are conducted during the period covered by such consolidated 
  report, and shall identify each waiver granted by a Data Integrity Board of 
  the requirement for completion and submission of a cost-benefit analysis and 
  the reasons for granting the waiver. 
  
  (7) In the reports 
  required by paragraphs (3)(D) and (6), agency matching activities that are not 
  matching programs may be reported on an aggregate basis, if and to the extent 
  necessary to protect ongoing law enforcement or counterintelligence 
  investigations.(v) Office of Management and Budget Responsibilities 


The Director of the 
Office of Management and Budget shall-- 

(1) 
  develop and, after notice and opportunity for public comment, prescribe 
  guidelines and regulations for the use of agencies in implementing the 
  provisions of this section; and 
  
  (2) provide 
  continuing assistance to and oversight of the implementation of this section 
  by agencies.
The following 
section originally was part of the Privacy Act but was not codified; it may be 
found at § 552a (note).
Sec. 7(a) 
  (1) It shall be unlawful for any Federal, State or local government agency to 
  deny to any individual any right, benefit, or privilege provided by law 
  because of such individual's refusal to disclose his social security account 
  number. 
  
  (2) the 
    provisions of paragraph (1) of this subsection shall not apply with respect 
    to-- 
    
    (A) 
      any disclosure which is required by Federal statute, or 
      
      (B) any 
      disclosure of a social security number to any Federal, State, or local 
      agency maintaining a system of records in existence and operating before 
      January 1, 1975, if such disclosure was required under statute or 
      regulation adopted prior to such date to verify the identity of an 
      individual.(b) Any Federal, State or 
  local government agency which requests an individual to disclose his social 
  security account number shall inform that individual whether that disclosure 
  is mandatory or voluntary, by what statutory or other authority such number is 
  solicited, and what uses will be made of it. 
  
The following 
sections originally were part of P.L. 100-503, the Computer Matching and Privacy 
Protection Act of 1988; they may be found at § 552a (note).
Sec. 6 
  Functions of the Director of the Office of Management and Budget. 
  
  (b) 
    Implementation Guidance for Amendments -- The Director shall, pursuant to 
    section 552a(v) of Title 5, United States Code, develop guidelines and 
    regulations for the use of agencies in implementing the amendments made by 
    this Act not later than 8 months after the date of enactment of this 
    Act. 
    Sec. 9 Rules of Construction. 
  
  Nothing in the 
  amendments made by this Act shall be construed to authorize--
  (1) the 
    establishment or maintenance by any agency of a national data bank that 
    combines, merges, or links information on individuals maintained in systems 
    of records by other Federal agencies; 
    
    (2) the direct 
    linking of computerized systems of records maintained by Federal 
    agencies;
    (3) the computer 
    matching of records not otherwise authorized by law; or
    (4) the 
    disclosure of records for computer matching except to a Federal, State, or 
    local agency.Sec. 10 Effective Dates. 
  
  (a) In 
    Genera l -- Except as provided in subsection (b), the amendments made by 
    this Act shall take effect 9 months after the date of enactment of this 
    Act. 
    
    (b) Exceptions -- 
    The amendment made by sections 3(b) [Notice of Matching Programs -- Report 
    to Congress and the Office of Management and Budget], 6 [Functions of the 
    Director of the Office of Management and Budget], 7 [Compilation of Rules 
    and Notices], and 8 [Annual Report] of this Act shall take effect upon 
    enactment.

Go to: DOJ FOIA Page // Justice Department Home Page 


Updated 
page September 26, 2003usdoj/oip/pam
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics131-FQ03/week06everyday/LATimesIntel.html
##-----------------TITLE------------------------##
Intel and Leaky Chips
##------------------TEXT------------------------##
http://www.latimes.com/business/la-fi-intel5nov05,1,2306439.story?coll=la-headlines-business

  

Intel Finds Method to Plug 'Leaky' PC Chips

The company says its breakthrough could boost computing
power while lowering its cost.

By Terril Yue
Jones

Times Staff Writer

 

November 5, 2003

 

Intel Corp. said Tuesday that it had figured out how to
shrink transistors for PCs so that 1 billion could fit on a single chip, making
it possible to pack the power of a supercomputer into a device the size of a
deck of cards.

 

Loading a chip with so many transistors — Intel's Pentium 4
microprocessor for personal computers holds about 55 million — would give it
mind-boggling muscle while potentially lowering its price. 

 

Intel's breakthrough was in finding new materials to replace
silicon in the microscopic gates that control whether a transistor is on or
off. With silicon gates as thin as five molecules, as they are in the successor
to the Pentium 4, they leak significant amounts of energy. The new materials
not only prevent leaks but also enable a transistor to work faster, the Santa
Clara, Calif.-based company said. 

 

"It's as if the construction industry decided that
concrete and steel had reached the end of their road and need to be
replaced," said Rob Willoner, a manufacturing
technology analyst at Intel, which is the world's largest chip maker.

 

Chips built with the silicon-replacement materials would
breathe new life into Moore's Law.
Named for Intel co-founder Gordon Moore, it holds that the cost of computing
power falls steadily over time.

 

"We have removed the industry's most challenging
roadblock to ensuring Moore's Law spans into the next decade, ultimately
leading to much lower-cost computing power and enabling applications that
cannot be imagined today," said Ken David, director of Intel's components
research group. 

 

Intel said its researchers replaced the silicon in the gate
electrode, which operates like an on-off switch, with a new metal-based
material that the company wouldn't identify for competitive reasons. The new
gate will be insulated from the silicon on which transistors are etched with a
substance Intel calls High-k for its capacity to hold an electric charge. The
company wouldn't disclose the recipe for High-k either.

 

Willoner likened a silicon gate to
a faucet that drips. The High-k insulation stops the leaks, and that will
enable smaller and smaller transistors to be more efficient, he said. 

 

Martin Reynolds, an analyst with the technology market
research firm Gartner Inc., said the new chips would be "smaller, faster,
cheaper" and would "drive the continuing advance of electronics into
our lives."

 

Intel believes it can introduce the High-k and metal gate
technologies in chips set to hit the market in 2007, when the company plans to
introduce a new generation of computer microprocessors. The new technologies
shouldn't add much in cost or entail significant modifications in
manufacturing, David said.

 

With today's chip technology, the industry is "pushing
the edge of being able to do real-time recording of video, one TV channel at a
time," said Steve Kleynhans, an analyst with
META Group, a technology industry analysis firm.

 

"Maybe a billion-transistor microprocessor will be able
to record all TV channels simultaneously, in high definition, or produce
high-level, unbreakable algorithms for security, or real-time simultaneous
translation — problems that can only be handled by supercomputers today," Kleynhans said. 

 

Intel shares fell 36 cents to $33.68 in Nasdaq trading.

 

--------------------------------------------------------------------------------

 

Copyright 2003 Los Angeles Times

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics131-FQ03/week04privacy/BillOfRights.htm
##-----------------TITLE------------------------##
NARA | The Bill of Rights: A Transcription
##------------------TEXT------------------------##
 www.archives.govOctober 20, 2003  

      The Bill of Rights: A Transcription
      Note: The following text is a transcription of the first ten 
      amendments to the Constitution in their original form. These amendments 
      were ratified December 15, 1791, and form what is known as the "Bill of 
      Rights."
      

      Amendment I
      Congress shall make no law respecting an establishment of religion, or 
      prohibiting the free exercise thereof; or abridging the freedom of speech, 
      or of the press; or the right of the people peaceably to assemble, and to 
      petition the Government for a redress of grievances.
      

      Amendment II
      A well regulated Militia, being necessary to the security of a free 
      State, the right of the people to keep and bear Arms, shall not be 
      infringed.
      

      Amendment III
      No Soldier shall, in time of peace be quartered in any house, without 
      the consent of the Owner, nor in time of war, but in a manner to be 
      prescribed by law.
      

      Amendment IV
      The right of the people to be secure in their persons, houses, papers, 
      and effects, against unreasonable searches and seizures, shall not be 
      violated, and no Warrants shall issue, but upon probable cause, supported 
      by Oath or affirmation, and particularly describing the place to be 
      searched, and the persons or things to be seized.
      

      Amendment V
      No person shall be held to answer for a capital, or otherwise infamous 
      crime, unless on a presentment or indictment of a Grand Jury, except in 
      cases arising in the land or naval forces, or in the Militia, when in 
      actual service in time of War or public danger; nor shall any person be 
      subject for the same offence to be twice put in jeopardy of life or limb; 
      nor shall be compelled in any criminal case to be a witness against 
      himself, nor be deprived of life, liberty, or property, without due 
      process of law; nor shall private property be taken for public use, 
      without just compensation.
      

      Amendment VI
      In all criminal prosecutions, the accused shall enjoy the right to a 
      speedy and public trial, by an impartial jury of the State and district 
      wherein the crime shall have been committed, which district shall have 
      been previously ascertained by law, and to be informed of the nature and 
      cause of the accusation; to be confronted with the witnesses against him; 
      to have compulsory process for obtaining witnesses in his favor, and to 
      have the Assistance of Counsel for his defence.
      

      Amendment VII
      In suits at common law, where the value in controversy shall exceed 
      twenty dollars, the right of trial by jury shall be preserved, and no fact 
      tried by a jury, shall be otherwise reexamined in any Court of the United 
      States, than according to the rules of the common law.
      

      Amendment VIII
      Excessive bail shall not be required, nor excessive fines imposed, nor 
      cruel and unusual punishments inflicted.
      

      Amendment IX
      The enumeration in the Constitution, of certain rights, shall not be 
      construed to deny or disparage others retained by the people.
      

      Amendment X
      The powers not delegated to the United States by the Constitution, nor 
      prohibited by it to the States, are reserved to the States respectively, 
      or to the people.
      Amendments 
      11-27
      
      Note: The capitalization and punctuation in 
      this version is from the enrolled original of the Joint Resolution of 
      Congress proposing the Bill 
      of Rights, which is on permanent 
      display in the Rotunda of the National Archives Building, Washington, 
      D.C. 

      Page URL: http://www.archives.gov/national_archives_experience/bill_of_rights_transcript.htmlU.S. National 
      Archives & Records Administration700 Pennsylvania Avenue NW, 
      Washington, DC 20408 • 1-86-NARA-NARA • 1-866-272-6272
##------------------URL-------------------------##
http://www.ics.uci.edu/~staceyah/210/index.html
##-----------------TITLE------------------------##
Statistics 210 - Fall 2015
##------------------TEXT------------------------##
Statistics 210: Statistical Methods for Data
      Analysis I
    Linear Models
    
    Fall 2015 
    
    Department of
        Statistics
    University of California, Irvine
    
    Jump to...
    
    Course SyllabusAdditional References
      Lecture and Discussion
          Locations and TimesInstructor Information and
          Office HoursR ResourcesData Sets Used in Class and on Homework
      Class Calendar: Material
        covered, lecture notes, and homework assignmentsHomework and Midterm Exam
          Solutions
      
    ANNOUNCEMENTS
    GRADE DISPUTE REQUEST FORM (pdf):
          If you would like to submit a request
            for a grade dispute on any of the homeworks or midterm
            exams, download and fill out this form (read the directions
            carefully!), then turn it in to Prof. Hancock along with the
            homeworks and/or midterms that you are contesting any time
            before Tuesday, December 8 at 5:00pm. You must
            turn in the original homework/exam with the grade dispute
            request form, so if you need the homework/exam to study for
            the final exam, make a copy before turning it in. Grade
            dispute forms and the homework/exam under dispute will not
            be returned to you.
                
              Please post any questions
        about homeworks, course material, lectures, discussions, etc. on
        our course message board: https://eee.uci.edu/boards/f15/stats210
    rather than emailing your instructor. (You will have to log in to
    EEE to view the message board). 
    
    
    Course Syllabus
    
    Download the course syllabus here.
    
    
    Read my expectations for
        academic honesty.
     Texbook
    For the book companion website (which includes a primer on computing
    in R, data sets, and solutions to odd-numbered homework problems),
    click here.
    There is also a list of errata to the textbook, plus some errors I
    have found (which will be updated throughout the quarter):
    Weisberg


































          errataAdditional errata to the
          textbook
    If you find further errors in the textbook, please let me know.
    
    Additional Recommended
      References
    A
            Modern Approach to Regression with R by Sheather
        (can download book for free if on UCI wireless network)Applied Linear Statistical Models by Kutner,
        Nachtsheim, Neter, and LiThe Statistical Sleuth by Ramsey and Schafer
      
    A useful reference for reviewing introductory statistics material
      is the OpenIntro


















































        Statistics free online textbook.
    
    
     
    Lecture and Discussion
      Locations and Times
    Lecture:  Tue/Thurs 11:00am-12:20pm in Information
      & Computer Science (ICS) 180
    Discussion:  Wed 4:00-4:50pm in ICS 180
    Instructor Information and
      Office Hours
    Instructor
          Office Hours (held in DBH 2013)
          Prof. Stacey
              Hancock
            Office: DBH 2204
            Office Hours: DBH 2013
            Phone: (949) 824-9795
            email: stacey.hancock_at_uci.edu
          
            
            Mon 8-9am (Stats 7 given preference)
            Tue 2-3pm (Stats 7 given preference)
            Wed 1-2pm (Stats 210 given preference)
             Thurs 9-10am (open)
            or by appointment
            
          
    
    R Resources
    
      Installing R and RStudio and Getting Started
    
    Step 1: Download
          and install RClick on "CRAN" on the left under "Download, Packages".
          Click any nearby site (e.g., UCLA) to download R from.
          Download R for your platform (Linux, Mac, or Windows).
        
      Step 2: Download
















































































































          and install RStudioDownload the installer for your platform under "Installers
          for ALL Platforms".
        
      R
          for Windows FAQR
          for Mac FAQ
    Access R and R Studio through UCI Virtual Computer Lab (VCL)
    
    You may access R and R Studio without downloading the software
    through UCI's Virtual Computer Lab: http://www.oit.uci.edu/labs/vcl/.
    To use this resource, 
    Click on "Click Here to Start Using VCL".Select "UCI Login" and click "Proceed to Login".Click "New Reservation" in the left menu.Select "Irvine Win7 CranR Rcmdr RStudio" from the drop down
        menu for the environment. Click "Now" or schedule a future
        reservation time. Choose a duration. Click "Create Reservation".After a few moments, a "Connect!" button should appear. Click
        "Connect!" and then click "Get RDP File". Enter the User ID and
        Password displayed on the Virtual Computing webpage, uniquely
        assigned to you for the specific session.
      
    More information for Mac users can be found here.
    
    Information on UCI Computer Labs (with R and RStudio installed)
    
    How





























































































































































































































































































          to get an account to use the ICS Labs ICS





























































































































































































































































































          Lab Hours
    Quick R References
    Jones'
          R Reference PageShort's






























































































































































          R Reference Card
      
    Online R Tutorials and Documentation
    R FAQR WikiAn






























































































































































          Introduction to RVerzani's






























































































































































          SimpleR Notes
      
    Even more R webpages recommended by students who have learned
        R...
      
    Codeschool
          Free Online R Course
      Quick-R TutorialsFree



















































































































































          R Programming ManualsWhat



















































































































































          is the best way to learn R?
      
    Books on R
      Two popular introductory books on R are:
    
    A Beginner's Guide to R
        by Alain F. Zuur, Elena N. Ieno, and Erik Meesters; Springer,
        2009.Introductory Statistics with R
        by Peter Dalgaard; Springer, 2008.
    These two books can be downloaded for free if you are on the UCI
    campus network from http://link.springer.com/.
    There are many other books written on R, and a simple search will
    produce many results. In particular, Springer has a book series of
    "Use R" books which you can explore here.
    
    A book that our textbook author recommends is An


















































        R Companion to Applied Regression by Fox and Weisberg,
    and offers a free R Primer
    available on the textbook website.
    
    Data Sets
    SAT State Data 1994-1995 (Lecture 1)
    Weisberg cathedral data (Homework
    1)
    Birthweight data (Discussion 1)
    Current Population Survey 1985 (Homework
    3)
    Height and Weight data (Lecture 6)
    Alcohol and Tobacco use in Britain
    (Lecture 8)
    Kutner, Nachtsheim and Neter Appendix
      C7 Real Estate Data (Lecture 8)
    Physical Measurement data (Lecture
    8)
    Kutner, Nachtsheim and Neter Appendix C2 CDI
      Data and Description
    (Homework 6)
    GPA vs. Seat Location and Alcohol
    (Lectures 11 and 12)
    Tip Percentage vs. Happy face and
      gender (Lecture 12)
    Class Calendar
    This calendar will be updated after each class. Check back
      periodically for required reading, homework assignments, lecture
      slides, and extra references.
    
    Date
            Material
              Covered
              (Tentative schedule; may be updated after each class)
            Homework
              Assignment
            Week 0:
          
          
          Thurs. Sep. 24
          Overview of course and syllabus; case study
            demonstrating the linear model approach.
            Chapter 1; Chapter 2 Sections 2.1-2.5.
            Lecture 1
              Slides
            Lecture 1 Notes
            Least Squares Graphical Example
            R code from case
                  study
              
          
          Week 1:
          
          
          Tue. Sep. 29
          Finish Lecture 1.
            R code from SAT
                  exampleR consoleLeast













































                  Squares Regression Applet
              
          Homework














































              #1 Due Tue. Oct. 6 by 5pm
          Disc. Sep. 30
          Review of
              basic statistical concepts; introduction to R and R
            Studio. If you have one, please bring your laptop with R
              and R Studio installed!
            
            Getting started with R and
                  RStudioBasic R functionsSimple linear regression in RR code from discussionR console
              
          
          Thurs. Oct. 1
          Chapter 2 Sections 2.6-2.8; Chapter 3 Section
            3.5.
            Lecture 2 Notes
            (Updated Oct. 8 at 10am)
          
          Week 2:
          
          
          Tue. Oct. 6
          Finish Lecture 2 Notes.
            R example:
                  Simulated residual plots
              R example:
                  SLR with birthweight study
          Homework






































              #2 Due Tue. Oct. 13 by 5pm Disc. Oct. 7
          Simulated residual plots R example from Oct.
            6; finish basic statistical concepts worksheet; more
            practice with R Studio.
            R console
              
          
          Thurs. Oct. 8
          Chapter 3 Sections 3.1-3.4.
            Lecture 3 Notes
            R example:
                  MLR with birthweight studyR console
              
          
          Week 3:
          
          
          Tue. Oct. 13
          Finish Chapter 3 Section 3.4; Chapter 4
            Sections 4.1.1-4.1.3; Chapter 5 Section 5.1.
            Lecture 4 Notes
            R example:
                  Interaction vs. additive models with birthweight study
              
          Homework
































              #3 Due Tue. Oct. 20 by 5pm
            (Updated Oct. 15 at 12:30am)
          Disc. Oct. 14
          Data





























              Analysis Case Study
            Dan Gillen's Data
                  Analysis PlanR codeR console
              
          
          Thurs. Oct. 15
          Chapter 4 Section 4.5; Chapter 6 Sections
            6.1-6.2.
            Lecture 5 Notes
            R example:
                  Overall F-tests and partial F-tests with birthweight
                  study
              
            Bonus R Simulations (addressing student questions):
            Interaction






























                  with independent predictorsPartial
                  r-squared relation to multiple r-squared
              
          
          Week 4:
            
          
          Tue. Oct. 20
          Chapter 5 Sections 5.1-5.2; Chapter 6 Section
            6.5; simultaneous inference (multiple comparisons); F-test
            for lack of fit in simple linear regression.
            Lecture 6 Notes
            R example:
                  Categorical predictors with Current Population Survey
                  dataSequential F-tests
                  with Current Population Survey worksheet
              Height and
                  weight data: F-test for lack of fit example (Utts)R code for Height
                    and weight data example
                
            
          (No homework this week.)
          Disc. Oct. 21
          Review for midterm exam 1. Bring questions
            for discussion.
            
          
          Thurs. Oct. 22
          Midterm Exam 1:
            Covers material up to and including lecture on Oct. 15.
            Midterm Exam 1 Information
             
          Week 5:
          
          
          Tue. Oct. 27
          Finish Lecture 6 Notes. Read Chapter 6
            Section 6.6 on your own.
          Homework

























              #4 Due Wednesday Nov. 4 by 5pm
            (Updated Oct. 28 at 11:30pm)
          Disc. Oct. 28
          Finish data analysis case study from Oct. 14.
            R codeR console
              
          
          Thurs. Oct. 29
          Chapter 9.
            Lecture 7 Notes
          
          Week 6:
          
          
          Tue. Nov. 3
          Chapter 9; Chapter 4 Sections 4.1.4 and
            4.1.5. 
            Lecture 8 Notes
            Case
                  Diagnostics in R Handout (Utts)R examples
              Real





















                  Estate Example Handout (Utts)Multicollinearity





















                  Example Handout (Utts)R console
              
          Homework



















              #5 Due Tue. Nov. 10 by 5pm Disc. Nov. 4
          Review solutions and common mistakes from
            Midterm Exam 1. Solutions are available in EEE Dropbox.
          
          Thurs. Nov. 5
          Chapter 8; Chapter 4 Sections 4.1.6 and
            4.1.7; Chapter 5 Section 5.3; Chapter 7 Section 7.5.
            Lecture 9 Slides
            Lecture 9 Notes
            R examples:
                  Transformations with real estate data and SAT dataR console
                (examples from Nov. 3)
              
          
          Week 7:
          
          
          Tue. Nov. 10
          Finish Lecture 9 Notes.
            R console
              
          Homework















              #6 Due Wednesday Nov. 18 by 2:00pm
          Disc. Nov. 11
          Veteran's Day: No
                class
          Thurs. Nov. 12
          Chapter 10.
            Lecture 10
              Slides
            Lecture 10
              Notes
            R code
                  for slidesR console
              
          
          Week 8:
          
          
          Tue. Nov. 17
          Analysis of variance. Additional references
            on analysis of variance available in EEE Dropbox.
            Lecture 11
              Notes
            See Section 5.4 of the OpenIntro
            textbook for additional notes on calculating power and
            sample size.
            R example: Calculating
                  power and sample sizeR example: One-way ANOVA
                  with GPA vs. seat location dataR console
              
          (No homework this week.)
          Disc. Nov. 18
          Review for midterm exam 2.
          
          Thurs. Nov. 19
          Midterm Exam 2:
            Covers material up to and including lecture on Nov. 12,
            focusing on material covered after Midterm Exam 1.
            Midterm Exam 2 Information
          
          Week 9:
          
          
          Tue. Nov. 24
          Analysis of variance.
            Lecture 12
              Notes
            Falk








              Scholer reference on types of SS
            R examples:
                  Two-way ANOVA with Tip % vs. Happy face and gender
                  data, and GPA vs. seat location and alcohol
                  consumption data
              
          Homework






              #7 Due Thursday Dec. 3 by
            5pm Disc. Nov. 25
          No discussion this week! Prof. Hancock will
            be in her office during discussion time if you have
            questions.
          
          Thurs. Nov. 26
          Thanksgiving: No class 
          Week 10:
          
          
          Tue. Dec. 1
          Finish Lecture 12 Notes.
            R console
              
          
          Disc. Dec. 2
          Finish Lecture 12 R examples and review
            material for final exam.
            R console
              
          
          Thurs. Dec. 3
          Catch up, summarize, and review.
            Lecture 13
              Slides
            R console
              
          
          Final Exam:
            Tue. Dec. 8
            10:30am-12:30pm
           The final exam is
                comprehensive!
            Final Exam Information
            Previous Stats 210 exams and solutions:
            Fall 2011 midterm



                  exam and solutions
                - skip problem 2.
              Note that the solutions to Problems 1 part c. and
                  Problem 4 part b. are not quite correct. Instead,
                  suggest what you would need to do in order to test for
                  a non-linear relationship between the two variables.
                
              Fall 2014 final exam
                and solutions -
                skip problems 1-4.
            
          
          
    
    
    Homework and Midterm Exam
      Solutions
    Homework solutions and midterm exam solutions, including
    instructions on how the exam was graded and common student mistakes,
    will be posted in our "Stats 210 Solutions" EEE Dropbox. Sign into
    EEE to access this resource.
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/links/conferences.shtml
##-----------------TITLE------------------------##
Database Research Group @ UCI
##------------------TEXT------------------------##
[ Home |
      Research | 
      Publications | 
      People | 
      Partners | 
      Demos ]
      [ Courses | 
      Software | 
      Links  |
      Internal |
      Search | 
      Joining Our Group ]
    





      
    
      Upcoming Conferences
    
      
    


      Conference/ Journal20002001OctNovDecJanFebMarAprMayJunJulAugSepOctNovDecMM 2000C:10/30c:11/3. ............FQAS 2000C:10/25-27..............ICDE 2001N: 10/18= = ===C: 4/2-6........SIGMOD 2001=A:11/17 P:11/24= N: 1/29 =CR: 3/2=C: 5/21-24.......VLDB 2001====A: 2/19 P: 2/26==N: 5/13CR: 6/10==C: 9/11-14...IEEE Multimedia===P: 1/15==N: 4/20CR: 5/31==C: 8/22-25....ACM Multimedia 2001====P: 2/28===N: 6/15CR: 7/15=C: 9/30-10/5...SSTD 2001====A: 2/12 P: 2/19=N: 4/2 CR: 4/23==S: 7/12-15.....

A : Abstract submission deadline
P : Paper submission deadline
N : Notification of acceptance
CR: Camera-Ready version due
C/S/W/J : Conference/Symposium/Workshop/Journal date



DISCLAIMER:
We try to make the information on this page as updated and correct
as possible.
However, we do not guarantee that it is free of error.
If you rely on this information, you do so at your own risk.

SIGMOD
2000 : Management of Data

Abstract: Oct 11, 1999
Submission: Oct 18, 1999
Notification: Jan 24, 2000
Conference: May 14-19, 2000
Dallas, TX, US
PODS
2000 Symposium : Principles of Database Systems

Abstract: Nov 2, 1999
Submission: Nov 8, 1999
Notification: Feb 8, 2000
Conference: May 14-19, 2000
Dallas, TX, US (with SIGMOD)
SIGIR
2000 : Information Retrieval

Submission: Jan 21, 2000
Notification: Apr 1, 2000
Conference: Jul 24-28, 2000
Athens, Greece
IEEE
ICME 2000 : 1st IEEE Int'l Conf. on Multimedia and Expo

Submission: Dec 15, 1999
Notification: Mar 1, 2000
Conference: Jul 30 - Aug 2, 2000
New York City, New York, USA
VLDB
2000 : 26th Int'l Conf. on Very Large Data Bases

Abstract: Feb 18, 2000
Submission: Feb 25, 2000
Notification: May 10, 2000
Conference: Sep 10-14, 2000
Cairo, Egypt
KRDB
2000 : Knowledge Representation meets Databases

Submission: Mar 20, 2000
Notification: May 1, 2000
Final Paper: Jun 10, 2000
Workshop: Aug 21-22, 2000
Berlin, Germany
ACM MM
2000 : 8th ACM Multimedia

Submission: Mar 20, 2000
Notification: Jun 12, 2000
Conference: Oct 30 - Nov 3, 2000
Los Angeles, CA, USA
FQAS
2000: 4th Int'l Conf. on Flexible Query Answering Systems

Submission: Mar 20, 2000
Notification: May 1, 2000
Conference: Oct 25-27, 2000
Warsaw, Poland

ICDE 2001: International Conference on Data Engineering

Submission of abstracts: Jul 28, 2000
Submission of papers: Aug 4, 2000
Notification of acceptance: Oct 18, 2000
Camera-ready copies: Dec 18, 2000
Conference: April 2-6, 2001
Heidelberg, Germany


SIGMOD 2001: ACM SIGMOD/PODS 2001 Conference

Paper Abstract: Nov 17, 2000
Paper Due: Nov 24, 2000
Notification: Jan 29, 2001 
Camera Ready: Mar 2, 2001 
Conference: May 21-24, 2001
Santa Barbara, California


SSTD 2001: 7th Int'l Symposium on Spatial and Temporal Databases

Paper Abstract: Feb 12, 2001
Paper Due: Feb 19, 2001
Notification: Apr 2, 2001 
Camera Ready: Apr 23, 2001 
Conference: Jul 12-15, 2001
Los Angeles, California




Other sources of information on upcoming conferences:

DBWorld
SIGMOD
SIGIR
SIG Multimedia
ACM SIG Conferences
VLDB
IEEE Computer Society
Database
Events by Renato Busatto
List of Conferences
by Michael Ley
Links
to online proceedings and journals
Computer
Science Bibliography by Michael Ley
The NECI Scientific Literature
Digital Library


DISCLAIMER:
We try to make the information on this page as updated and correct
as possible.
However, we do not guarantee that it is free of error.
If you rely on this information, you do so at your own risk.
We welcome suggestions for improvements.


For any problems, questions or suggestions about this page, please contact 
Kaushik Chakrabarti - kaushik@ics.uci.edu
Revised on

Feb. 15, 2001
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/links/proceedings.shtml
##-----------------TITLE------------------------##
Database Research Group @ UCI
##------------------TEXT------------------------##
[ Home |
      Research | 
      Publications | 
      People | 
      Partners | 
      Demos ]
      [ Courses | 
      Software | 
      Links  |
      Internal |
      Search | 
      Joining Our Group ]
    





      
    
      Online Proceedings and Journals
    
      
    


ACM Journals
    and Proceedings

    JACM : Journal of the ACM : 
        1989-
    TODS : Database Systems : 
        1985-
    TOIS : Information Systems : 
        1985-
  
    SIGMOD : Management of Data :
        1986-
    PODS : Principles of Database Systems : 
        1986-
    ICKM : Information and Knowledge Management :
        1993-
    GIS : Geographic Information Systems :
        1996-
  
    MM : ACM Multimedia : 
        1993-

    SIGIR : Information Retrieval :
        1973-
    DL : Digital Libraries :
        1996-
    TREC : Text REtrieval Conferences :
        1-
    Hypertext / Hypermedia :
        1989-
    

IEEE Transactions
    and Proceedings

    TKDE : Knowledge and Data Engineering : 
        1995-
    IEEE Multimedia : 
        1995-
    TPAMI : Pattern Analysis and Machine Intelligence : 
        1995-
  
    ICDE : Data Engineering : 
        1999, 
        1998
    RIDE : Research Issues on Data Engineering :
        1999, 
        1998
    DEXA : Database and Expert Systems Applications : 
        1998
    SSDBM : Scientific and Statistical Database Management : 
        1998
    IDEAS : Database Engineering and Applications : 
        1998
    DASFAA : Database Systems for Advanced Applications : 
        1999
    TIME : Temporal Representation and Reasoning : 
        1999,
        1998
   
    ADL : Advances in Digital Libraries : 
        1999,
        1998
   
    ICMCS : Multimedia Computing and Systems : 
        1999,
        1998
    MMM : MultiMedia Modeling : 
        1998
    CVPR : Computer Vision and Pattern Recognition :
        1998
    CAIVD : Content-based Access of Image and Video Databases :
        1998
    CAIVL : Content-based Access of Image and Video Libraries :
        1998
    IW-MMDBMS : Multimedia Database Management Systems : 
        1998
    

Computer Science Online Library
by Springer

    VLDB Journal : 
        1996-
    Multimedia Systems Journal : 
        1996-
    Int'l Journal on Digital Libraries : 
        1997-

    LNCS : Lecture Note in Computer Science : 
        proceedings
   
    EDBT : Extending Database Technology :
        1998
    ICDT : Database Theory :
        1999
    MIS : Multimedia Information Systems :
        1998
    Visual : Visual Information Systems :
        1998
    SSD : Advances in Spatial Databases :
        1999
    Temporal Databases: Research and Practice :
        book

    

Database Systems (-1998)
by Michael Ley

    TKDE : Knowledge and Data Engineering : 
        1989-
    IS : Information Systems : 
        1975-
    TODS : Database Systems : 
        1976-
    VLDB Journal : Very Large Data Bases :
        1992-
        SIGMOD : Management of Data :
        1975- 
    PODS : Principles of Database Systems : 
        1982- 
    VLDB : Very Large Data Bases : 
        1975- 
    ICDE : Data Engineering : 
        1984- 
    RIDE : Research Issues in Data Engineering : 
        1991- 
    EDBT : Extending Database Technology : 
        1988-
    

CHOROCHRONOS : 
    A Research Network for Spatiotemporal Database Systems

NCSTRL : 
    Networked Computer Science Technical Reference Library (searchable)




We welcome suggestions for improvements. 


 This part under development

JASIS - Journal of the American Society for Information Science
D-Lib Magazine - The Magazine of Digital
Library Research
Journal of Digital Information
KDDNuggets Directory
Data Mining and Knowledge Discovery Journal





      For any problems, questions or suggestions about this page, please contact,
      Mario Espinoza - ( espinoza@ics.uci.edu )
      rev. 
       Feb. 07, 2001
##------------------URL-------------------------##
http://kdd.ics.uci.edu/
##-----------------TITLE------------------------##
UCI KDD Archive
##------------------TEXT------------------------##
Welcome to the UCI Knowledge Discovery in Databases Archive

Librarian's note [July 25, 2009]: We no longer maintaining this web page as we have 
merged the KDD Archive with the UCI Machine Learning 
Archive.  For any questions, please contact us at ml-repository '@' ics.uci.edu.  




 This is an online repository of  large data sets which encompasses a wide variety of data types, analysis tasks, and application areas. The primary role of this repository is to enable researchers in knowledge discovery and data mining to scale existing and future data analysis algorithms to very large and complex data sets. 

 Creation of this archive was supported by a grant from the Information
and Data Management Program at the National Science Foundation.
The archive is intended to serve as a permanent repository of 
publicly-accessible data sets for research in KDD and data mining. It 
complements the original 

UCI Machine Learning Archive
, which typically focuses on smaller classification-oriented data sets.


 In addition to storing data and description files, we also archive task files that describe a specific analysis, such as clustering or regression, for the data sets stored. The call for data sets lists typical data types and tasks of interest.


Contents

      Data Sets                                Task Files
  by data type 
    by application area
    by name
    by date (reverse chronological)
    Machine Learning Repository

   
  by task type
    by application area
    by name
    by date (reverse chronological)










Citation Information

If you publish material based on databases obtained from this repository, then, in your acknowledgments, please note the  assistance you received by using this repository. This will help others to obtain the same data sets and replicate your experiments. We suggest the following pseudo-APA reference format for referring to this repository:


      Hettich, S. and Bay, S. D. (1999). The UCI KDD Archive [http://kdd.ics.uci.edu].
      Irvine, CA: University of California, Department of Information and 
      Computer Science.


 We also request that you send the citation information for your 
article to kdd '@' ics.uci.edu. If your article is available online 
and 
you provide us with a url, we will link the data set's documentation to your file. 





How to Donate Data and Task Files

We are always looking for additional data sets and task files. Note that you may submit: (1) data and a description file, (2) a task file describing a particular analysis for a data set, or (3) both. There may be multiple task files for the same data set and the author of a task file may be different from the data donor.

If you are in doubt as to whether a data set or task file would be of interest, please contact the librarian. Donations may be made with anonymous ftp as follows:

 ftp kdd.ics.uci.edu
   user name: anonymous
   password: your complete email address
   cd incoming
   put filename (note: you will not be able to list the placed files)
   bye
   send e-mail to kdd '@' ics.uci.edu specifying the donated 
file(s).


Alternatively, you may provide us a web url and we will download the data. If neither of these methods is suitable, please contact the librarian and we will arrange the transfer of data in the most convienent manner for you.

As many researchers use this archive, please carefully fill out a data documentation form when you submit data. If you are submitting an analysis of data, please fill out a task documentation form:

  data documentation guidelines (a description of the data)
    task documentation guidelines (a description of the analysis task)


There are several sample files, which may help you fill out the documentation:

  sample data form
    sample task form



We prefer that the data have a standard format.  For multivariate data sets
that can be represented by a table, please format the data to have
one instance/example per line, no spaces, commas separated attributes 
values, and missing values denoted by "?". For other types of data, use your 
best judgment.

Thank you for your donations.

David Newman (librarian)




kdd '@' ics.uci.edu

Information and Computer Science
University of California, Irvine
Irvine, CA 92697-3425

Last modified: Sept 9, 2005
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/links/research_groups.shtml
##-----------------TITLE------------------------##
Database Research Group @ UCI
##------------------TEXT------------------------##
[ Home |
      Research | 
      Publications | 
      People | 
      Partners | 
      Demos ]
      [ Courses | 
      Software | 
      Links  |
      Internal |
      Search | 
      Joining Our Group ]
    





      
    
      Other Research Links
    
      
    


      This list is under construction
      DatabasesDatabase Research Laboratory at the
University of Illinois WinslettStanford University Database
Group Garcia-Molina, Ullman, Widom, LORE, GLOSSDatabase Systems Lab -
UMass Mohan, RamamrithanComputer Science Research at
Almaden, IBM Garlic, QBICUC Berkeley DBMS Research
Group StonebrakerUCSD Database Laboratory
MIX (Mediation of Information using XML) projectUW-Madison
DBMS Research Group Ioannidis, NaughtonCooperative DataBase (CoBase)
Project, UCLAKnowledge-Based
Multimedia Medical Distributed Database System (KMeD), UCLAPenn Database Research
GroupDatabase
Research Group, Indian Institute of Technology, Bombay Sudarshan


Information SystemsCenter for Intelligent Information
Retrieval (CIIR), UMass Croft, Callan, INQUERY systemBell Laboratories
Information Sciences Research Center Silbershatz, KorthDatabase and
Information System Laboratory, UI Chicago WolfsonNatural Language
Processing & Information Retrieval (NLPIR) Group, NIST TREC,
TIPSTERCenter for
Information Technology, Stanford WinogradLawrence Livermore National 
Lab (LLNL) XDIR, XFTP


Multimedia SystemsUIUC Multimedia Operating Systems
and Networking Group NahrstedC & C Research Lab, NEC
USA Advanced Multimedia Oriented Retrieval Engine (AMORE)Columbia U New Media 
Technology Center (CNMTC)


Digital LibrariesStanford Digital
Libraries Project  Garcia-Molina, WinogradDigital Library
Initiative, UIUC Project
InfoMine, UC Riverside Tsotras


XMLW3C's XML pageXML Links by
Adam Rifkin and Rohit Khare


Another list
of DB Research Groups by Michael Ley
Course textbook: "Database Systems
Concepts"




      For any problems, questions or suggestions about this page, please contact,
      Mario Espinoza - ( espinoza@ics.uci.edu )
      rev. 
       Feb. 07, 2001
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/links/irvine.shtml
##-----------------TITLE------------------------##
Database Research Group @ UCI
##------------------TEXT------------------------##
[ Home |
      Research | 
      Publications | 
      People | 
      Partners | 
      Demos ]
      [ Courses | 
      Software | 
      Links  |
      Internal |
      Search | 
      Joining Our Group ]
    






      
    
      Orange County Links
    
      
    




Weather
 Irvine Weather report Orange County News, Events, etc.
Edwards Cinemas On Line. Movies in Irvines only Movie Theater chain.
Orange County NewspaperYahooYahoo's directory of Orange CountyUCI Restaurant GuideIncomplete, but better than nothing.CybermealsOrder food online.UCI Campus MapHyperlinked map of the campus. We're in the middle rectangle,
    in grid F7, Building 304 (ICS2), office number 170.UCI LocationLocation of UCI in Orance County. UCI is the big purple thing. See a sample.FloorplansFloorplans of ICS buildings and office locations. Our office is in 
ICS 170.IACIrvine Apartment Communities, the Irvine Apartment rental company.The Irvine CompanyA planned community.HistoryIrvines History (with pictures).




      For any problems, questions or suggestions about this page, please contact,
      Mario Espinoza - ( espinoza@ics.uci.edu )
      rev. 
       Feb. 07, 2001
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/demos/desc_java_based.shtml
##-----------------TITLE------------------------##
Database Research Group @ UCI
##------------------TEXT------------------------##
[ Home |
      Research | 
      Publications | 
      People | 
      Partners | 
      Demos ]
      [ Courses | 
      Software | 
      Links  |
      Internal |
      Search | 
      Joining Our Group ]
    






      
    
      Java Based Demo
    
      
    


      The MARS image database management system currently supports the similarity
      queries based on:
      
      Key WordsCreator's name Creator's culture Material used Year 
        
        Image Content Global Color 
          We compute the color histogram in HSV space and use histogram intersection
          method to compute the similarity distance. Global Texture 
          We compute the three texture features for each image, i.e. Coarseness,
          Contrast, and Directionality. We use histogram intersection and Euclidean
          distance to calculate the similarity distance. Color/Texture Layout 
          We divide each image into 5 by 5 sub-images and compute the color/texture
          features for each sub-image separately. We have a color picker and texture
          picker in our demo so the use can fill in the 5 by 5 grid using these color/texture
          feature and then make a query based on this color/texture layout information.
          Shape 
          We first use Attraction-based grouping to segment out the object in the
          image. Then, we use a modified Fourier Descriptor to represent the object
          boundary. Since this MFD is invariant to translation, rotation, scaling
          and starting point of the boundary, the matching is extremely fast. 
      
      
      The image collection comes from the Fowler Museum and is a collection
      of ancient African artifacts.
      
      Selected Publications
         Sharad Mehrotra, Yong Rui, Michael Ortega-Binderberger and Thomas S. Huang,
          "Supporting Content-based Queries over Images in MARS", submitted to ICMC 97. 

          Thomas S. Huang, Sharad Mehrotra and Kannan Ramchandran, "Some Challenging Issues in 
          Image Content-based Access and Retrieval", 33rd Annual Clinic on Library Application of
          Data Processing "Digital Image Access and Retrieval", March 1996.
          
          Yong Rui, Alfred C. She, and Thomas S. Huang, "Automated Shape Segmentation Using 
          Attraction-based Groupingc in Spatial-Color-Texture Space", ICIP-96, Lausanne, Switzerland.
          
          Yong Rui, Alfred C. She, and Thomas S. Huang, "Modified Fourier Descriptors for Shape 
          Representation - A Practical Approach", First International Workshop on Image Databases
          and Multi Media Search, 1996, Amsterdam, The Netherlands.
        
    




      For any problems, questions or suggestions about this page, please contact,
      Mario Espinoza - ( espinoza@ics.uci.edu )
      rev. 
       Feb. 07, 2001
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/demos/desc_terrain.shtml
##-----------------TITLE------------------------##
Database Research Group @ UCI
##------------------TEXT------------------------##
[ Home |
      Research | 
      Publications | 
      People | 
      Partners | 
      Demos ]
      [ Courses | 
      Software | 
      Links  |
      Internal |
      Search | 
      Joining Our Group ]
    






      
    
      Terrain Similarity Demo Description
    
      
    


      This demonstration applies the current MARS back end prototype
      to the field of remotely sensed data. The MARS prototype is better
      described elsewhere, but essentially consists
      of a search engine capable of searching images based on their content.
      To this end a series of image processing tools are used to extract desirable
      features from images so as to query based on them.
      
      MARS provides a simple querying interface taken form the 
      Information Retrieval community. Currently MARS supports the boolean retrieval
      model in which queries over images can be combined via the boolean operators
      AND, OR and NOT. Each simple term is formed by specifying
      the desired measure (i.e. color similarity, texture similarity, etc.) and
      an identifying number of the query image. MARS then computes for each
      simple term all matching images and the degree of the match and then combines
      them according to one of two criteria: distance and probability.
      
      Project description
     
      Database Size 
        For this demonstration, we have 30 meter satellite imagery of the Fort
        Irwin Area. Our data is composed of seven bands described here:
      
        Band 1 - (0.45-0.52 micrometers) Water penetrationBand 2 - (0.52-0.60 micrometers) Visible greenBand 3 - (0.63-0.69 micrometers) Chlorophyll absorption
          (vegetation detection)Band 4 - (0.76-0.90 micrometers) Soil-crop, land-water
          contrastBand 5 - (1.55-1.75 micrometers) Crop and soil moistureBand 6 - (2.08-2.35 micrometers) Discrimination of rock
          formationsBand 7 - (10.4-12.5 micrometers) Thermal infrared
        
        This data covers 50 x 50 kilometers and we chose to divide
        it up into one by one kilometer regions. These image subsets are then used
        to extract the required features and stored in a database. Additionally, 
        we have elevation data for the same area. This was used to
        construct the colored image shown upon entry and was height color coded
        according to a fairly standard color scheme for elevation data.
        Modules Of This Project
        This project can be divided into 4 main components Back End Algorithm (Image Feature Extraction)
            The algorithms that extract images features.
            The other algorithm in use is a combination of the first three moments
            of the intensity level of each pixel. Other algorithms are available in
            the back end query engine and feature extractors, but were not used for
            this demonstration.Back End Query Engine
            The feature extraction described above is done off-line and once to build
            the database. The query engine then uses these databases to process queries
            submitted from the user interface.Front End Interface 
            We have a GUI and the demo is accessible from the web. Although this interface
            covers the back end query engine, it serves as a conduit for the user to
            access it. 
            The user interface constructs a query which is then submitted to the query
            engine. The user can see the query at different stages of completion and
            just before submission.Relational Database Design
            The image features extracted are then stored in an image database
        
        
        

        User Interface Output
        The User interface outputs a color coded sequence of images. The first
        one shown is the above mentioned color coded by height data. From then
        on, a series of images representing individual bands are shown. Each of
        these images corresponds to a band that was selected by the user.
        Each of these images has a colored overlay ranging from red to blue. Areas
        colored are good matches, the red being the best and the blue the worst,
        but still better that any non colored area. The user is given the option
        to zoom in on one of the images to see more detail. A sample output is shown 
        here, click it for a larger view.
    




      For any problems, questions or suggestions about this page, please contact,
      Mario Espinoza - ( espinoza@ics.uci.edu )
      rev. 
       Feb. 07, 2001
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/software/ldr.shtml
##-----------------TITLE------------------------##
Database Research Group @ UCI
##------------------TEXT------------------------##
[an error occurred while processing this directive]




      
    
      Local Dimensionality Reduction Code
    
      
    



  Here  is the code local dimensionality reduction.
After downloading it (on a SUN SPARC machine running Solaris), 
first gunzip it ("gunzip ldr.tar.gz") and then untar it ("tar xvf ldr.tar").
Please read the "readme" first before running the software.
  

 For more information, please read the paper 
on  Local Dimensionality Reduction  or
contact  kaushik@ics.uci.edu .
 

 Among others, the LDR code is being used by:
 Jon Guerin of our group for selectivity estimation at high dimensionalities

 Cathy Blake in the Information Retrieval group here at UCI for text mining

 OuYang WeiMin at Anhui University, China for research

 Sheng Heng Tao at National University of Singapore for research
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/software/htree.shtml
##-----------------TITLE------------------------##
Database Research Group @ UCI
##------------------TEXT------------------------##
[an error occurred while processing this directive]




      
    
      Hybrid Tree Code (main memory version) 
    
      
    



  Hybrid Tree code .
 

 After downloading the file (on a SUN SPARC 
machine running Solaris), first do "gunzip htree.tar.gz" 
and then do "tar xvf htree.tar". 
 


  The  README  file describes how to
compile, run and customize the code. Please read it before compiling/running
the code.
 

 For more information, please read the paper 
on  Hybrid Tree  or
contact  kaushik@ics.uci.edu .
 

 To understand how multipoint queries and arbitrary distance functions 
(e.g., arbitrary Lp metric with arbitrary weight along each dimension)
are handled in the hybrid tree, please read sections 2 and 3 of the paper 
on  query refinement .
 

 To run query refinement on top of hybrid tree, download 
 this  code. The code contains
a  README_relfeed  file that describes
how to run the code along with the hybrid tree code. Note that 
the refinement code would not work unless you have downloaded the 
hybrid tree code (from above).
 

 Among others, the hybrid tree code is being used by:
 Prof. Hyo Jong Lee and his students at Chonbuk National University in Korea

 Dave Thomas at AdInjection.com for a project in his company

 Dr. Progress Q. T. Mtshali for student projects
data mining class at the Nova Southeastern University .

 Devasis Bassu at Telcordia Technologies

 Huang Wu at the National University of Singapore for his research work

 OuYang WeiMin at Anhui University, China for research

 Dang Tran Khanh at Johannes Kepler Universität Linz

 Database Lab at University of California at Riverside for research



[an error occurred while processing this directive]
##------------------URL-------------------------##
http://www.ics.uci.edu/~ics184/
##-----------------TITLE------------------------##
CS 122 Course Website
##------------------TEXT------------------------##
CS 122 - Introduction to Data Management 
           Fall 2006  
   Dr. Naveen Ashish and Prof. Sharad Mehrotra 
  










 
Time and Place
 Location: SH 134 
 Time: 12:30- 1:50 PM Tuesdays and Thursdays 

 


Course Objectives and Goals

This course provides students with an introduction to the design of databases and the use of database management systems for applications. We will cover the entity relationship (E/R) approach to database design. We will cover the relational data model, mapping E/R designs to relations, relational design theory, abstract query language such as relational algebra, and programming in SQL. Students will get exposure to how relational database management systems are used to implement a database. Time permitting, we will also consider advanced database management features such as object-oriented and object-relational database systems. This course is aimed at database design and use of database management systems in implementing database applications. It does NOT cover the implementation of database management systems which will be covered in extensive details in the follow-on courses ICS214a, ICS214b and ICS215.
 
 

 Prerequisites 

 Students should have experience of programming in either C++ or Java. Proficiency of the UNIX environment will be helpful. 

 

 Collaboration Policy 


Students are encouraged to work in a group for their project assignment. The groups should not have more than 3 students. The assignments on the other hand should be individually. Students can however feel free to discuss the assignment with their peers.


 

 Grading Criteria 

Online Assignments15%Project25%Midterm25%Final Exam35%

 

 Textbooks 


A First Course in Database systems, by Jeff Ullman, and Jennifer Widom.



Database Systems Concepts, by Silberschatz, Korth, and Sudarshan


 











Navigation
Course DetailsInstructor and TA InformationLecture NotesAssignments and Project Resources 

Announcements









 (New)   Click here  to access the sample final.
   Click here to access the solution.    





 (New) To access Midterm solutions  click here 












 © Fall 2006 CS 122 |

Design by Cirkuit Networks, Inc. Modified by Ravi Chandra Jammalamadaka, ICS
##------------------URL-------------------------##
http://www.ics.uci.edu/~ics215/
##-----------------TITLE------------------------##
ICS215 - Spring, 2002
##------------------TEXT------------------------##
ICS215- Advances in Database Management
System Technology Spring,
2006Professor Sharad
Mehrotra

Index
Announcements
		
	Course
	Information
	
	Projects
	
	More papers
	
	Resources
	


Announcements

Course Information
General
	Information. The following are a few important entries:
	
	Course
		Goals
		
	
	Instructor
	and Office Hours
	
	Working
	in Groups
	
	Course
	Requirements
	
	Grading
	Policy
	
	Prerequisites
		
	Time
	and Place
	
	Textbooks
		
	Electronic
	Lists
	
	Paper readings
	


Schedule

			Date 
			
		
			Topic
		
			Sub-Topic 
			
		
			Description
		
			Lecture Note
			
			
		
			April 5th
		
			Introduction to the
			Course & Introduction to the Class Project
		
			 
		
			ICS 215 Project Description:
			Multimedia Stream Projects for Pervasive Spaces
		
			[updated slides to be posted
			soon] slides
			Class
			projects description.
		
			April 12th
		
			Guest Lecture on Search
			and project planning update
		
			 
		
			The
			web you trust: the next generation of  vertical searchDr.
			Claude Vogel, Chief Techonology OfficerMr. Paul Gardner,
			Convera
			(class
			will meet in Calit2 Room 3008 at 9.15 –refreshments will be
			served followed by  a talk).
			We
			will continue meeting in a Room 4301 Calit2 after the talk.
		
			 
			Detailed
			flyer
			
		
			 
		
			Towards Multimedia Stream
			Systems for Pervasive Spaces
		
			 
		
			 
		
			 
		
			April 19th
		
			 
		
			Query Language for streams
		
			CQL
			  (Shengyue): Arasu et al, "An Abstract Semantics
			and Concrete Language for Continuous Queries over Streams and
			Relations"
			
			Cayuga  
			(Hojjat): Demers
			et al, "Towards Expressive Publish/Subscribe Systems"
						
			Bao’s work on
			extending CQL for multimedia streams  (Ray):
			
		
			 
			 
		
			April 26th
		
			 
		
			Query Lang & Stream
			Processing Systems
			
		
			VERL &
			pervasive space language paper   (Dani)
			
			Stanford Streams project  
			(Jinhwan)
			
		
			 
		
			May 3rd
		
			 
		
			Multimedia Stream Systems
		
			Aurora  
			(Rabia):Garlan et al, "Project
			Aura: Toward Distraction-Free Pervasive Computing", Pervasive
			computing, April-June 2002, page 22-31
			Media broker   
			& Stampede (Johnathan): Modahl
			et al, "MediaBroker: An Architecture for Pervasive
			Computing", PERCOM'04Ramachandran
			et al, "Stampede: A Cluster Programming Middleware for
			Interactive Stream-Oriented Applications", IEEE Transactions
			on parallel and distributed systems, vol. 14, no. 11, November
			2003
			
		
			 
			 
		
			 
		
			Privacy and Security in
			Pervasive Spaces
		
			 
		
			.
			 
		
			 
		
			May 10th
		
			 
		
			Privacy and Security
			Challenges in Pervasive Spaces
			 
		
			TBD
			
		
			 
		
			May 17th
		
			 
		
			Towards privacy definitions
			& languages
		
			TBD
			
		
			 
		
			May 24th
		
			 
		
			Location privacy challenges
			&solutions
		
			TBD
		
			 
		
			May 31st
			 
		
			 
		
			Inference & disclosure
			Control
		
			Statistical
			inference control  (Ben & Houton):
		
			 
		
			June 6th
		
			Multimedia Stream System
			Project Presentations
		
			 
		
			½
			hour each for each group to make presentations
		
			 
		



Projects
The project proposal deadline is
	4/28, Monday at 5pm. Please email it to the instructor.
	
	It is OK for you to combine your other research commitment
	with your course project. However, if you do so, you must make sure
	to increase your workload correspondingly to get the course credit.
	


			Configuration Manager
		
			SATL 
			
		
			Virtual Sensor
		
			Privacy in pervasive spaces
		
			Dani, Jinhwan, Jonathan
			
		
			Ray, Shengyue
		
			Rabia, Hojjat
			
		
			Houton, Ben
			
		

More papers
Paolo Bellavista, Antonio Corradi,
	Carlo Giannelli "Efficiently Managing Location Information with
	Privacy Requirements in Wi-Fi Networks: a Middleware Approach"
	[pdf]
	
	Robert P. Minch, "Privacy
	Issues in Location-Aware Mobile Devices," Proceedings of the
	37th Annual Hawaii International Conference on System Sciences
	(HICSS'04) [pdf]
	
	Yih­Chun Hu, Helen J. Wang "A
	Framework for Location Privacy in Wireless Networks" [pdf]
		
	Marco Gruteser and Dirk Grunwald,
	"Anonymous Usage of Location-Based Services Through Spatial and
	Temporal Cloaking," MobiSys 2003 [pdf].
		
	Bugra Gedik, Ling Liu "Location
	Location Privacy in Mobile Systems: A Personalized Anonymization
	Model," ICDCS 2005 [pdf]
	
	Andreas Goerlach, Andreas
	Heinemann, Wesley W. Terpstra "Survey on Location Privacy in
	Pervasive Computing" [pdf]
	
	Alastair R. Beresford "Location
	privacy in ubiquitous computing" PhD Thesis [pdf]
		
	Bin Liu, Amarnath Gupta, Ramesh
	Jain, "A Live Multimedia Stream Querying System" [pdf]
		
	Bin Liu, Amarnath Gupta, Ramesh
	Jain, "MedSMan: A Streaming Data Management System over Live
	Multimedia [pdf]
		
	Kathleen Fisher, Robert E. Gruber,
	"PADS: Processing Arbitrary Data Streams", 2003 [pdf]
		
	Brian D. Noble, M. Satyanarayanan, Dushyanth Narayanan, James
	Eric Tilton, Jason Flinn, Kevin R. Walker "Agile
	Application-Aware Adaptation for Mobility" [pdf]
		


Resources
Places to find papers:
	
	DBLP
				
	
	ACM
	Digital Library
	
	ACM
	SIGMOD Anthology.
	
	Google.
		
	NEC
	CiteSeer.
	
	Other major DB courses at UCI:
	ICS184, ICS214.
		
	A sample
	crawler (in Java) written by Chen Li a few years ago.
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/research/distrib.shtml
##-----------------TITLE------------------------##
Database Research Group @ UCI
##------------------TEXT------------------------##
[ Home |
      Research | 
      Publications | 
      People | 
      Partners | 
      Demos ]
      [ Courses | 
      Software | 
      Links  |
      Internal |
      Search | 
      Joining Our Group ]
    






      
    
      Distributed Systems Research
    
      
    


      Welcome to the home page of Distributed Systems Research at UCI
    
      
            This page is currentlly under construction...
          
    




For any problems, questions or suggestions about this page, please contact
Kaushik Chakrabarti - kaushik@ics.uci.edu
Revised on

Feb. 07, 2001
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/research/aware.shtml
##-----------------TITLE------------------------##
Database Research Group @ UCI
##------------------TEXT------------------------##
[ Home |
      Research | 
      Publications | 
      People | 
      Partners | 
      Demos ]
      [ Courses | 
      Software | 
      Links  |
      Internal |
      Search | 
      Joining Our Group ]
    





      
    
      Aviation Weather Awareness and Reporting Enhancements (AWARE)
    
      
    



Overview


AWARE (Aviation Weather Awareness and reporting
Enhancements) is a NASA Cooperative Research and
Development program conducted jointly by Rockwell
Science Center, Rockwell Collins, University of California,
Irvine, and NASA.

AWARE is an enhanced weather briefing and reporting
tool that integrates text-based and graphical aviation
weather data for superior situational awareness in the
context of a mission and equipment profile. It is designed
to benefit general aviation pilots who, due to cognitive
overload, may not absorb and retain all flight-critical
weather information from a vast stream of data that they
are legally required to review.


People
Faculty
    Sharad Mehrotra
  
  Students
    Hakan Hacigumus
    Michael Ortega
    Kaushik Chakrabarti
  



For any problems, questions or suggestions about this page, please contact
Hakan Hacigumus - hakan@ics.uci.edu.
Revised on

Feb. 07, 2001
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/research/mars/index.shtml
##-----------------TITLE------------------------##
Multimedia Analysis and Retrieval System
##------------------TEXT------------------------##
[an error occurred while processing this directive]




      
    
      Multimedia Analysis and Retrieval System (MARS)
    
      
    

	


[ People | Motivation
| Overview | Demos | Relevant
Bibliography | Related Projects | Acknowledgements
]






People

FacultySharad MehrotraDepartment of Information and Computer Science424 Computer Science,University of California at Irvine,Irvine, CA 92697-3425
StudentsMichael OrtegaKaushik ChakrabartiKriengkrai Porkaew
Previous MembersThomas S. Huang (Faculty, U of Illinois at Urbana)Yong RuiYueting Zhuang




NSF Project Reports

2002 NSF IDM Project Reports [ MSWord | PDF ]
2001 NSF IDM Project Reports [ MSWord | PDF ]
2000 NSF IDM Project Reports [ MSWord | PDF ]




Motivation

Many emerging applications such as multimedia digital libraries, medical
image databases require accessing multimedia information based on their
content. Traditional text based information retrieval techniques do not
suffice due to the complexity of capturing visual content using textual
description and the high degree of human effort in developing the suitable
descriptions. An alternative approach is to describe images/videos based
on visual properties (such as color, texture, and shape) and support retrieval
based on these features. Such an approach to visual information retrieval
requires interdisciplinary research in the areas of image processing and
computer vision (to extract salient features from the visual media that
capture its content), information retrieval (to define a notion of similarity
between multimedia objects), and database management (to support efficient
storage of multimedia objects and retrieval based on the degree of match).
Our research addresses the information retrieval and database management
challenges in content-based multimedia retrieval.


Overview

The goals of the MARS project is to design and develop an integrated multimedia
information retrieval and database management infrastructure, entitled
Multimedia Analysis and Retrieval System (MARS), that supports multimedia
information as first-class objects suited for storage and retrieval based
on their content. Specifically, research in the MARS project is categorized
into the following four sub-areas each of which contribute to the development
of the integrated infrastructure.

 Multimedia Content Representation:
 
 extraction of multimedia content including low-level visual features from images, 
 shots and scenes from videos, textual annotations (user-provided or automatically extracted
 from videos). Content-based representation of multimedia objects in databases.
 Multimedia Information Retrieval:
 development of content-based multimedia retrieval techniques including 
 multimedia retrieval models and interactive query refinement techniques to map 
 user's high-level semantic queries to low-level feature based representations.
 Multimedia Feature Indexing:
 
 to efficiently support retrieval based on feature similarity. Techniques will be 
 developed for overcoming the high dimensionality and non-Euclidean nature of 
 feature data.
 Multimedia Database Management:
 
 techniques to effectively and efficiently incorporate content-based retrieval 
 of multimedia information into structured database processing. Exploration of 
 extensions to existing data models to support ranked retrieval and interactive query 
 refinement and approaches to integrate multimedia feature indexing techniques as access
 methods in database management systems. Study impact of ranked retrieval
 on query processing techniques.
 


Our work has focused on exploring techniques for multimedia object and
query representation, multimedia information retrieval, and developing
mechanisms for efficient indexing of highly multidimensional feature spaces.
Our progress can be categorized into the following:

 Video Representation: 
 
 Motivated with the role of a table of content (ToC) used in accessing a book, 
 we developed algorithms to structure a video into a set of scenes which represents 
 a video ToC. This ToC can be used to support effective user access (browsing and 
 retrieval) of video. We then explored a clustering based approach to extract key 
 frames from scenes identified in the video ToC. Some references
 (below) are: 7, 8, 9, 10, 12, and 13.
 Indexing Highly Multidimensional Spaces:
 
 We developed a hybrid tree data structure to support high-dimension feature indexing 
 in multimedia databases. The hybrid tree combines the positive aspects of bounding region
 (BR)-based data structures (e.g., R-tree, SS-tree) and space partitioning
 (SP) based approaches (e.g., KDB-tree, hB-tree) into a single search structure
 to achieve superior performance and scalability to high dimensionalities
 than either of the two approaches. Some references
 include (below): 1, and 18.
 Multimedia Information Retrieval:
 
 We made significant progress on multimedia information retrieval specially on adapting 
 relevance feedback as an approach to learning user's information need in image databases.
 With relevance feedback, the user is relieved of the burden to state their
 exact information need based on the feature sets supported in the system.
 Instead, the system learns both the query representation, and the distance/similarity
 measures that a user has in mind for the feature spaces using positive/negative
 feedback over examples from the user. Some references
 (below) are: 2,5, 6, 1.
 Supporting Multidimensional Data Structures as Access Methods:
 
 We have developed the first granular locking approach to concurrency control
 in multidimensional data structures. Our solution provides a scalable solution
 to integrating multidimensional data structures into DBMSs as an access
 method. Some references (below) are: 3, and 23.
 



Demos

 Some of the demos based on MARS research 




Relevant Bibliography

For online access to these publications follow this link.

1999

K. Porkaew, K. Chakrabarti, and S. Mehrotra,
"Query Refinement for Content-based Multimedia Retrieval in MARS",
(submitted for publication), 1999

K. Porkaew, S. Mehrotra, M. Ortega, 
"Query Reformulation for Content-based Multimedia Retrieval in MARS",
In Proceedings of the IEEE International Conference on Multimedia Computing and Systems, (ICMCS), Florence, Italy, June 7-11, 1999 (poster paper).

K. Porkaew, S. Mehrotra, M. Ortega, and K. Chakrabarti,
"Similarity Search Using Multiple Examples in MARS", 
In Proceedings of the International Conference on Visual Information Systems, Amsterdam, Netherlands, June 2-4, 1999

Kaushik Chakrabarti, and Sharad Mehrotra, "Efficient Concurrency Control in Multidimensional Access Methods", To Appear in Proceedings of ACM SIGMOD Conference on Management of Data", 1999.


Kaushik Chakrabarti, and Sharad Mehrotra, "The Hybrid Tree: An Index Structure for High Dimensional Feature Spaces", To Appear in Proceedings of the International
Conference on Data Engineering (ICDE), Sydney, Australia, March 23-26,
1999.
Michael Ortega, Yong Rui, Kaushik Chakrabarti, Kriengkrai Porkaew, Sharad
Mehrotra, and Thomas S. Huang, Supporting Ranked Boolean Similarity
Queries in MARS, Appeared in IEEE
Tran on Knowledge and Data Engineering , Vol. 10, No. 6, December 1998.
Kaushik Chakrabarti, and Sharad Mehrotra, "Dynamic Granular Locking
Approach to Phantom Protection in R-trees", Appeared in Proceedings
of the International Conference on Data Engineering (ICDE), Orlando, Florida,
February 23-27, 1998.
Michael Ortega, Kaushik Chakrabarti, Kriengkrai Porkaew, and Sharad Mehrotra,
Cross media validation in a multimedia retreival system , ACM Digital
Libraries 98, Workshop on Digital Library Metrics, Pittsburgh, PA, June
23-26, 1998
Yong Rui, Thomas S. Huang, Michael Ortega, and Sharad Mehrotra, Relevance
Feedback: A Power Tool in Interactive Content-Based Image Retrieval,
IEEE Tran on Circuits and Systems for Video Technology, Special Issue on
Segmentation, Description, and Retrieval of Video Content, Vol 8, No. 5,
pages 644-655, Sept, 1998
Yong Rui, Thomas S. Huang, Michael Ortega, and Sharad Mehrotra, Information
Retrieval Beyond the Text Document, Appeared in Proceedings of Library
Trend, 1998
Yong Rui, Thomas S. Huang, and Sharad Mehrotra, Browsing and Retrieving
Video Content in a Unified Framework , Appeared in Proceedings of IEEE
MMSP98 workshop, LA, CA
Yueting Zhuang, Yong Rui, Thomas S. Huang, and Sharad Mehrotra, Applying
Semantic Association to Support Content-Based Video Retrieval, Appeared
in Proceedings of IEEE VLBV98 workshop, Urbana, IL
Yueting Zhuang, Yong Rui, Thomas S. Huang, and Sharad Mehrotra, Adaptive
Key Frame Extraction Using Unsupervised Clustering , Appeared in Proceedings
of IEEE Int Conf on Image Processing , Oct, 1998, Chicago, IL
Yong Rui, Thomas S. Huang and Sharad Mehrotra, Exploring Video Structure
Beyond The Shots , Appeared in Proceedings of IEEE International Conference
on Multimedia Computing and Systems (ICMCS), June 28-July 1, 1998, Austin,
Texas USA
Yong Rui, Thomas S. Huang, and Sharad Mehrotra, Relevance Feedback Techniques
in Interactive Content-Based Image Retrieval , Appeared in Proceedings
of IS&T and SPIE Storage and Retrieval of Image and Video Databases
VI, January 24-30, 1998, San Jose, CA.
Yong Rui, Thomas S. Huang, and Sharad Mehrotra,
Constructing Table-of-Content
for Videos , ACM Multimedia Systems Journal, Special Issue Multimedia
Systems on Video Libraries,1998


Yong Rui, Thomas S. Huang, and Sharad Mehrotra, Suggestions to the Draft
of MPEG-7 Requirements, ISO/IEC JTC1/SC29/WG11 M3107, MPEG98
Kaushik Chakrabarti, Sharad Mehrotra, Michael Ortega, Kriengkrai Porkaew
and Robert Winkler, "Processing Uncertainty Queries in Database Management
Systems", Appeared in Proceedings of the 2nd Symposium on the Federated
Lab on Interactive and Advanced Display, Army Research Labs, College Park,
MD, February 2-6, 1998.
Michael Ortega, Yong Rui, Kaushik Chakrabarti, Sharad Mehrotra, and Thomas
S. Huang,
"Supporting Similarity Queries in MARS", Appeared in Proceedings
of the 5th ACM Int. Multimedia Conference, Seattle, Washington, November
8-14, 1997.
Sharad Mehrotra, Yong Rui, Kaushik Chakrabarti, Michael Ortega, and Thomas
S. Huang, "Multimedia Analysis and Retrieval System", Appeared in
Proceedings of the 3rd Int. Workshop on Multimedia Information Systems,
Como, Italy, September 25-27, 1997.
Sharad Mehrotra, Yong Rui, Michael Ortega, and Thomas S. Huang,
"Supporting
Content-based Queries over Images in MARS", Appeared in Proceedings
of the 4th IEEE Int. Conf. Multimedia Computing and Systems, Chateau Laurier,
Ottawa, Ontario, Canada, June 3-6, 1997.
Kaushik Chakrabarti, Yong Rui and Sharad Mehrotra,
"Dynamic Clustering
for Multimedia Information Retrieval ",
Yong Rui, Thomas S. Huang, Sharad Mehrotra, and Michael Ortega, "Automatic
Matching Tool Selection via Relevance Feedback in MARS", Appeared in
Proceedings of the 2nd Int. Conf. on Visual Information Systems, San Diego, 
California, December 15-17, 1997.
Yong Rui, Thomas S. Huang, Sharad Mehrotra, and Michael Ortega, "A Relevance
Feedback Architecture in Content-based Multimedia Information Retrieval
Systems", Appeared in Proceedings of IEEE Workshop on Content-based Access of
Image and Video Libraries, Puerto Rico, June 20, 1997.
Yong Rui, Thomas S. Huang, and Sharad Mehrotra, "Content-based Image
Retrieval with Relevance Feedback in MARS", Appeared in Proceedings
of IEEE Int. Conf. on Image Processing (ICIP'97), Santa Barbara, California, 
October 26-29, 1997.
Yong Rui, Thomas S. Huang, and Sharad Mehrotra "MARS and Its Applications
to MPEG-7", Submitted as MPEG-7 proposal, ISO/IEC JTC1/SC29/WG11 MPEG97/2900.
Kaushik Chakrabarti, and Sharad Mehrotra,
"Concurrency Control in R-trees",
Appeared in Proceedings of the 1st Symposium on the Federated Lab on Interactive
and Advanced Display, Army Research Labs, Aberdeen, MD, January 28-30, 1997.
Thomas S. Huang, Sharad Mehratra, and Kannan Ramchandran, "Multimedia
Analysis and Retrieval System (MARS) project", Appeared in Proceedings
of the 33rd Annual Clinic on Library Application of Data Processing - Digital
Image Access and Retrieval , University of Illinois at Urbana-Champaign,
March, 1996.
Yong Rui, Alfred C. She, and Thomas S. Huang, "Modified Fourier Descriptors
for Shape Representation -- A Practical Approach", Appeared in Proceedings
of the 1st Int. Workshop on Image Databases and Multi Media Search, Amsterdam,
Netherlands, 22-23 August, 1996.
Yong Rui, Alfred C. She, and Thomas S. Huang, "Automated Shape Segmentation
Using Attraction-based Grouping in Spatial-Color-Texture Space", Appeared
in Proceedings of 1996 IEEE International Conference on Image Processing
(ICIP'96), Lausanne, Switzerland, September 16-19, 1996.



Related Projects
Examples of other related projects funded by the IDM program 
include the work by:

Prof. R. Jain (UC, San Diego),Prof. S.F Chang (Columbia),Prof. Sistla, C. Yu., Ben Arie, and O. Wolfson (UIC),Prof. Hellerstien (UC, Berkeley),Prof. Ramakrishnan (Wisconsin),Prof. Ozsoyoglu (Case Western),Prof. Manjunath (UCSB),Prof. Wesley Chu (UCLA)Prof. Zhang (SUNY, Buffalo).



Acknowledgements

This work was supported by NSF CAREER award IIS-9734300, and in part by
the NSF CISE Research Infrastructure Grant CDA-9624396, and in part by
the Army Research Laboratory under Cooperative Agreement No. DAAL01-96-2-0003.




[an error occurred while processing this directive]
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/raccoon/
##-----------------TITLE------------------------##
Our Project Homepage
##------------------TEXT------------------------##
Our Project homepage has been moved to: http://www.ics.uci.edu/~raccoon/


 
##------------------URL-------------------------##
http://www-db.ics.uci.edu/pages/research/saturn.shtml
##-----------------TITLE------------------------##
Database Research Group @ UCI
##------------------TEXT------------------------##
[ Home |
      Research | 
      Publications | 
      People | 
      Partners | 
      Demos ]
      [ Courses | 
      Software | 
      Links  |
      Internal |
      Search | 
      Joining Our Group ]
    






      
    
      Spatio-Temporal Uncertainty Reasoning System (SATURN)
    
      
    


    Welcome to the Web Page of the SATURN Project
             
    The work on Saturn is being conducted under two separate tasks.
    

     The AWARE Project :
    whose goal is to develop a spatio-temporal database to support pilot
    advisory and weather event notification for general aviation pilots.
    
    
      
        The VGIS Project: whose goal is to 
 support army exercise data within Saturn.


For any problems, questions or suggestions about this page, please contact
Kaushik Chakrabarti - kaushik@ics.uci.edu.
Revised on  

Feb. 07, 2001
##------------------URL-------------------------##
http://www.ics.uci.edu/~xzhu/face/
##-----------------TITLE------------------------##
Face Detection Matlab Code
##------------------TEXT------------------------##
Face Detection, Pose Estimation and Landmark Localization in the Wild 
 Last updated on 02/10/2013 




 

 We present a unified model for face detection, pose estimation, and landmark estimation in real-world, cluttered images. Our model is based on a mixtures of trees with a shared pool of parts; we model every facial landmark as a part and use global mixtures to capture topological changes due to viewpoint. We show that tree-structured models are surprisingly effective at  capturing global elastic deformation, while being easy to optimize unlike dense graph structures. We present extensive results on standard face benchmarks, as well as a new "in the wild" annotated dataset, that suggests our system advances the state-of-the-art, sometimes considerably, for all three tasks. Though our model is modestly trained with hundreds of faces, it compares favorably to commercial systems trained with billions of examples (such as Google Picasa and face.com).


 X. Zhu, D. Ramanan. "Face detection, pose estimation and landmark localization in the wild"  Computer Vision and Pattern Recognition (CVPR) Providence, Rhode Island, June 2012.

[pdf]

[slides (Keynote file,36M)]

[slides (PPT file, converted from keynote, animation may
not work correctly,17M)]





Updates 
 [NEW] The AFW testdata.
 [NEW] Our own landmark annotations of 400 side-view faces.


 Fixed a small bug in the basic version code when visualize the output of the independent model. (07/11/2012)
 Posted the two models in our CVPR2012 paper. You can use them to reproduce the results in the paper. The independent model is the best-performing one for landmark localization. (07/03/2012)
 Added Windows compatible mex files(.cc). (07/01/2012)



Movies The following movies are DIVX encoded. 

  


Downloads
 
FilenameDescriptionSizeREADME
Description of contents.
2.3 KB

face-release1.0-basic.zip
Basic code (matlab) for face detection, pose and landmark estimation with pre-trained models.
 8.3 MB

face-release1.0-full.zip
Full code (matlab) for training and testing. You need MultiPIE dataset to run it.
 59 MB

MultiPIE_annotations.zip
 Landmark annotations of multipie faces.
 11 M






mex-windows-compatible.zip
 Windows compatible mex files(.cc).
 11 KB

models_CVPR2012.zip
 The fully shared and independent model we used to produce the curves in our CVPR2012 paper.
 6.8 MB
AFW.zip
 The Annotated Faces in the Wild (AFW) testset.
 47 MB


FAQs
Can you release the images and annotations of MultiPIE you used in the paper?
- Unfortunately, we can't. We don't own the copyright of the data, and are not authorized to release them. You can purchase MultiPIE from here. The curator's contact information is also available on their website, if you have any questions regarding the data. 
Your detector could not find faces on my image. Why?
- The most common reason is that the faces in your image are smaller than what the released models can handle. We put three pre-learned models online. One of them (face_p146_small.mat) works for faces larger than 80x80 pixels (eyebrows to chin, ear to ear); the other two work best on faces larger than 150x150. This is simply because they were trained on large faces where all landmarks are clearly visible.
If landmark is not your main concern, and you are really interested in detecting small faces, we recommend training your own model on smaller faces (you may need to use fewer parts accordingly). AFLW could be a nice dataset to use for doing that.
I saw too many false detections (or missed detections), what can I do?
- You could try tuning the threshold saved in model.thresh. You may want to use a higher threshold if you see too many false detections, and a lower threshold if you miss a lot of faces.
##------------------URL-------------------------##
http://www.ics.uci.edu/~yyang8/research/pose/
##-----------------TITLE------------------------##
Articulated Human Pose Estimation with Flexible Mixtures of Parts - UC Irvine
##------------------TEXT------------------------##
Articulated Human Pose Estimation with Flexible Mixtures of Parts
	    Yi Yang and Deva Ramanan
	    
	    
			
		
	

  
    	Introduction
		We describe a method for human pose estimation in static images based on a novel representation of part models. Notably, we do not use articulated limb parts, but rather capture orientation with a mixture of templates for each part. We describe a general, flexible mixture model for capturing contextual co-occurrence relations between parts, augmenting standard spring models that encode spatial relations. We show that such relations can capture notions of local rigidity. When co-occurrence and spatial relations are tree-structured, our model can be efficiently optimized with dynamic programming. We present experimental results on standard benchmarks for pose estimation that indicate our approach is the state-of-the-art system for pose estimation, outperforming past work while being orders of magnitude faster.
  

	

	
		Publications
		Yi Yang, Deva Ramanan. Articulated Pose Estimation with Flexible Mixtures of Parts. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), Colorado Spring, USA, 2011.
    	Paper • Slides • Poster • News
		Yi Yang, Deva Ramanan. Articulated Human Detection with Flexible Mixtures of Parts. IEEE Transactions on Pattern Analysis and Machine Intelligence (PAMI), 2013. 
		Paper
	

	
		Code
		The latest copy of our code: DOWNLOAD
		Please check README for proper installation.
	

	
		Examplar Results
		
		
		

		

		
		
		
	

	
		Related Links
		 Object Detection with Discriminatively Trained Part Based Models Face Detection, Pose Estimation and Landmark Localization in the Wild MPII Human Pose Dataset for Human Pose Estimation Buffy Stikckmen Dataset for 2D Human Pose Estimation Leeds Sports Pose Dataset for Human Pose Estimation
##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L7/L7.ppt_files/navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L7/L7.ppt_files/outline_navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L7/L7.ppt_files/frame.htm
##-----------------TITLE------------------------##
PowerPoint Presentation  -   Introduction and Overview
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L3/L3_files/outline_navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L3/L3_files/navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L3/L3_files/frame.htm
##-----------------TITLE------------------------##
PowerPoint Presentation  -   Introduction and Overview
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L1/L1_files/navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L1/L1_files/outline_navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L1/L1_files/frame.htm
##-----------------TITLE------------------------##
PowerPoint Presentation  -  ICS155B   Computer Design Lab
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L6/L6_files/frame.htm
##-----------------TITLE------------------------##
PowerPoint Presentation  -   Introduction and Overview
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L6/L6_files/navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L6/L6_files/outline_navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L5/L51_files/outline_navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L5/L51_files/navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L5/L51_files/frame.htm
##-----------------TITLE------------------------##
PowerPoint Presentation  -   Introduction and Overview
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L2/L2_files/outline_navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L2/L2_files/frame.htm
##-----------------TITLE------------------------##
PowerPoint Presentation  -   Introduction and Overview
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L2/L2_files/navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L4/L4_files/frame.htm
##-----------------TITLE------------------------##
PowerPoint Presentation  -   Introduction and Overview
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L4/L4_files/navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L4/L4_files/outline_navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L8/L8_files/navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L8/L8_files/outline_navigation_bar.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/HTML/L8/L8_files/frame.htm
##-----------------TITLE------------------------##
PowerPoint Presentation  -   Introduction and Overview
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/cs141/index.html
##-----------------TITLE------------------------##
CompSci 141 / CSE 141 / Informatics 101 Spring 2013
##------------------TEXT------------------------##
CompSci 141 / CSE 141 / Informatics 101 Spring 2013 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








CompSci 141 / CSE 141 / Informatics 101 Spring 2013
   Course News







Check back here every day or so.  I will generally post important coursewide announcements here.  They will be listed in reverse-chronological order (i.e., newest items first).

Date AddedNews ItemW 6/19Final course grades are now available.Tu 6/4The due date for Project #5 has been postponed until Friday, June 7.Th 5/30Today's code examples are now available.W 5/29Yesterday's code example is now available, along with a Schedule update estimating the rest of the quarter's lectures.W 5/22Project #5 is now available.F 5/17The stack ADT code example is now available.M 5/13Project #4 is now available.Sa 5/11Thursday's code example is now available, along with a Schedule update, including some non-lecture reading, which wil be covered on the final exam but will not be discussed in lecture, so we can focus on more interesting topics.W 5/8As we talked about in lecture last week, the due date for Project #3 has been extended to Monday, May 13.Th 5/2Some code examples from the Haskell lectures are now available, along with a Schedule update that adds some complementary reading on Haskell for those who want something more in-depth to read about it.Tu 4/30Project #3 is now available.Tu 4/23A Schedule update, including some very good reading on Java generics, is now available.W 4/17Project #2, the first of our code examples (more to come), and a Schedule update are available.Th 4/4My office hours will be Tuesdays and Thursdays from 7:30-9:15pm in ICS 253, beginning tonight.M 4/1Welcome!  A few things:
      The lab sections will meet for the first time on Monday, April 8.I encourage you to spend some time reading through the material on this course web site.  It will be updated periodically throughout the quarter, and there will always be an announcement here describing each update.  For now, notice the set of links at the top of this (and every) page, leading you to the Course Reference, the Schedule, and the Project Guide, as well as a set of commented Code Examples that will be posted during the course of the quarter.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/cs141/CourseReference.html
##-----------------TITLE------------------------##
CompSci 141 / CSE 141 / Informatics 101 Spring 2013, Course Reference
##------------------TEXT------------------------##
CompSci 141 / CSE 141 / Informatics 101 Spring 2013 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








CompSci 141 / CSE 141 / Informatics 101: Concepts of Programming Languages I
   Spring 2013
   Course Reference







Instructor information

Alex ThorntonOffice: DBH 4048Email:  thornton@ics.uci.edu

Contacting me: I tend to be much easier to reach via email than any other way, so I would suggest using email to contact me under normal circumstances.  When you write me an email, please take a few moments to make sure that the following information is placed somewhere in your message: your name, your student ID#, and which course you're enrolled in (important since I'm teaching more than one this quarter).







Teaching assistant

In addition to me, this course is staffed by a teaching assistant, who will be attending the lab sections, and will be the primary point of contact with regard to the grading of projects.

Stylianos Doudalis (sdoudali@uci.edu)







Times and places

Lecture

The lecture meets on Tuesdays and Thursdays from 5:00pm-6:20pm in DBH 1100.  Given the course's size, attendance is not graded, but we certainly recommend it.  (Naturally, attendance is required on the days when exams are held, which are listed in the Schedule.)

Labs

There are four lab sections, meeting throughout the day on Mondays and Wednesdays at the following times and locations.

Mondays and Wednesdays 9:00-9:50am and 11:00-1:50pm in ICS 189

While you are required to be enrolled in a lab section, you are generally free to attend lab sections whenever you need them, regardless of which lab section you are enrolled in, with this caveat: you will only be guaranteed a seat in your enrolled lab section — and, hence, it is possible that you may occasionally be asked to leave to make room for someone else if we are beyond full capacity and you are not officially enrolled in a section.

While it is not a required part of the course, and nothing will be graded in the labs this quarter, attendance does offer some significant benefits:

You will have a chance to console your TA regarding your work; this kind of instant feedback and help can be invaluable as you work through your projects.You will be surrounded by a large group of other people facing the same problems that you're facing.  This kind of shared journey will build a social network that will last you, in some cases, for the rest of your life.  Don't squander that opportunity!

The labs will begin meeting on Monday, April 8.

Office hours

I will be available on Tuesdays and Thursdays from 7:30-9:15pm in ICS 253 — not my office, as it's in a building that will be locked during at least part of that time — during which I'm available to chat with you about whatever's on your mind.







Textbooks

Programming Language Pragmatics, 3rd Editionby Michael L. ScottMorgan Kauffman 2009ISBN 0-123-74514-4REQUIRED







Obtaining additional assistance

Asking questions of course staff

You can most easily get course questions answered by coming to lecture, a lab section, or office hours and asking them.  I am happy to help you in person when I'm available.  You can also ask questions by sending email to me or your TA (or both); we check our email frequently throughout the day, so you can usually get an answer to course-related questions within a few hours (and often much more quickly).  If the questions require a complex or lengthy response, we may ask you to see one of us in person.  As projects approach their due date, particularly on days when projects are due, we begin to receive quite a bit of email all at once, so we may not be able to respond to all messages before the project is due.  We aren't ignoring you on purpose, but unfortunately it's not always possible for the relatively small course staff to answer questions from a large number of students at once.

Accommodations for disabilities

Any students who feel that they may need an accommodation based on the impact of a disability should contact me privately to discuss these specific needs.  Also, contact the Disability Services Center online at (949) 824-7494 as soon as possible to better ensure that such accommodations, such as alternative test-taking environments or note-taking services, can be arranged for you in a timely way.







Grading

Weights of graded artifacts

Your course grade will be determined from the weighted combination of your scores on each of five projects, one Midterm, and one Final Exam.  The weights of each of these are:

Five projects, 30% (weighted equally at 6% each)Midterm, 30%Final Exam, 40%

Determining final grades

Course grades will be determined neither on a normal curve nor a straight scale.  It is guaranteed that overall scores over 90% will receive an A- or better, scores over 80% will receive a B- or better, and scores over 70% will receive a C or better.  However, the actual cutoffs may be lowered at the end of the quarter.  In short, it is not my intention to fail half of the students, nor am I planning on giving only 2% of the students A's, but I find that I'm able to achieve a fairer outcome overall by not constraining myself to a rigid scale up front.

If you're curious about how you're doing in the course, I'm happy to discuss your estimated grade at any time.  It's generally best to have this conversation in person, so that we can explore issues other than just the raw numbers; I'm happy to have this conversation at any time that I'm available, and I'm also glad to do it via email if we can't find a mutually available time.







Dropping the course or changing grade option

Through the end of Week 2 (Friday, April 12), you may drop the course by simply going to WebReg and dropping it.  If you wish to drop the course after that date, you will need to use the Enrollment Exceptions system to request a drop; I do not have the final say over those, ultimately, as the Dean of the Bren School (and your major, if you are majoring in something outside of the Bren School) must approve them.  It is not generally the case that an exception will be accepted simply because you're not doing well in a course, though extenuating circumstances are certainly considered.

Similarly, changing your grade option (to Pass/NotPass or back again) can be done via WebReg through the end of Week 2 (Friday, April 12), after which you must use the Enrollment Exceptions system to request the change.  As with exceptional drops, you must receive approval from the appropriate Deans.







Academic honesty

The policy

As CompSci 141, CSE 141, or Informatics 101 students, you are expected to know and follow the academic honesty policies of both the Bren School of ICS and the University as a whole.  Please take a few minutes to read the policies, which can be found at this link.

All of your project work is expected to be completed solely by you.  Worker in larger groups and/or sharing of code or solutions between students is not permitted.  Note that "high-level discussion of course material for better understanding" is permitted and encouraged, but when it comes time to sit down and write code or other graded artifacts, that is expected to be done by you and you alone.  All submissions are compared to one another using an automated plagiarism detection system.  This system is extraordinarily good at finding similarities between submissions, even when there are superficial differences.  (Note that we also compare your submissions to those submitted during previous quarters whenever one of these assignments was given during a previous quarter, so it is an exceedingly bad idea to turn in, or even refer to, code or solutions written by a friend of yours who took the course already.)

Since all of your work is expected to be completed solely by you (and your partner, on paired assignments), you will be held responsible even if you plagiarize only a small portion of someone else's work.

Academic honesty is a two-way street.  Providing your code to other students for them to turn in as their own is not permitted any more than turning in someone else's code.  Resist the temptation to give code to your friends "for reference."  Based on my experience, I can say that your "friends" may very well betray you and turn it in, anyway, and then you'll have a lot to answer for.

Naturally, the Midterm and Final Exam are also expected to be individual efforts.  Dishonest behavior during an exam will not be tolerated.

Violators of academic honesty policies are subject to the penalties described in the Bren School of ICS policy.  They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade.  Also be aware that a single documented case of academic dishonesty may preclude you from switching into computing majors, registering for computing minors, joining the ICS Honors Program, and graduating from a computing major with honors.

The lesson

Okay, so the moral of the story is that it's wise to avoid cheating.  I believe that it's relatively rare that students enter a course with the conscious intent to cheat their way through it; why come to UCI if you're not planning to get something out of the coursework?  So why do people cheat every quarter in every course?  The answers vary, but here's the easiest way I can boil down the numerous conversations I've had with students caught cheating in my courses over the years: I fell behind and couldn't figure out how to catch up.  Things happen and ten-week quarters are unforgiving.  You might get sick, you might have issues crop up in your family, you might have misunderstood one of the earlier topics in the course on which later topics dependend, you might have an off-campus job that's demanding too much of your time, you might be trying to decide whether you're on the path you want to be on... Any of those things (and many others) can make it hard to keep up.  You fall a little behind, you fall a little further behind, and pretty soon the situation seems hopeless.  You're under pressure, temptation gets the better of you, and suddenly it seems better to submit someone else's work than to submit nothing.  It's not.

If you feel like you're beginning to slip off course or things are getting beyond your control, the best thing to do is to talk to us sooner rather than later.  We're here to help; we understand.  But the reality of taking large-sized courses at a large-sized institution is that we're not going to know you're in need unless you tell us.  If things are happening in your life, tell us; you don't have to be specific if you're not comfortable with it.  Before the fact, there's often a way to work things out.  After the fact, it's usually too late.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/DAPD04_dvk.html
##-----------------TITLE------------------------##
Efficient Evaluation of Continuous Range Queries on Moving Objects (DEXA 
			2002)
##------------------TEXT------------------------##
Main Memory Evaluation of Monitoring Queries Over Moving Objects.
		Appeared in Distributed and Parallel Databases, An International Journal, vol. 15(2), Mar 2004.
		
		
		
			
				Dmitri V. Kalashnikov, Sunil Prabhakar, and Susanne E. Hambrusch
			
			
			
				Department of Computer Sciences
				Purdue University
				PLACE project (http://www.cs.purdue.edu/place/)
			
			
			Abstract
			
				In this paper we evaluate several in-memory algorithms for efficient and 
				scalable processing of continuous range queries over collections of moving 
				objects. Constant updates to the index are avoided by query indexing. No 
				constraints are imposed on the speed or path of moving objects or fraction of 
				objects that move at any moment in time. We present a detailed analysis of a 
				grid approach which shows the best results for both skewed and uniform data. A 
				sorting based optimization is developed for significantly improving the cache 
				hit-rate. Experimental evaluation establishes that indexing queries using the 
				grid index yields orders of magnitude better performance than other index 
				structures such as R*-trees.
			
			
			
				Keywords: 
				Moving objects, query indexing, Q-indexing, continuous 
				queries, long-running queries, monitoring queries, in-memory processing, main 
				memory processing, continuous range queries, region queries, grid index, 
				location-aware computing, sensor databases, cache conscious algorithms
			
			
			
			
				Downloadable files:
				Paper: DAPD04_dvk.pdf
				Thesis, Chapter 3 (more detailed)
				Source code: DAPD04_dvk.src.zip
				See also a disk-based 
					solution to the same problem. 
				
			
			
			
			BibTeX entry:
			@article{DAPD04::dvk,
   author    = {Dmitri V. Kalashnikov and Sunil Prabhakar and Susanne Hambrusch},
   title     = {Main memory evaluation of monitoring queries over moving objects},
   journal   = {Distributed and Parallel Databases, An International Journal},
   volume    = 15,
   number    = 2,
   pages     = {117--135},
   month     = mar,
   year      = 2004
} 

			
			Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/DEXA02_dvk.html
##-----------------TITLE------------------------##
Efficient Evaluation of Continuous Range Queries on Moving Objects (DEXA 
			2002)
##------------------TEXT------------------------##
Efficient Evaluation of Continuous Range Queries on Moving Objects.
		Appeared in DEXA 2002 Conference.
		
		
		
			
				Dmitri V. Kalashnikov, Sunil Prabhakar, Susanne Hambrusch, and Walid Aref
			
			
			
				Department of Computer Sciences
				Purdue University
				PLACE project (http://www.cs.purdue.edu/place)
			
			
			Abstract
			
				In this paper we evaluate several in-memory algorithms for efficient and 
				scalable processing of continuous range queries over collections of moving 
				objects. Constant updates to the index are avoided by query indexing. No 
				constraints are imposed on the speed or path of moving objects. We present a 
				detailed analysis of a grid approach which shows the best results for both 
				skewed and uniform data. A sorting based optimization is developed for 
				significantly improving the cache hit ratio. Experimental evaluation 
				establishes that indexing queries using the Grid index yields orders of 
				magnitude better performance than other index structures such as R*-trees.
			
			
			
				Keywords: 
				Moving objects, query indexing, Q-indexing, continuous 
				queries, long-running queries, monitoring queries, in-memory processing, main 
				memory processing, continuous range queries, region queries, grid, 
				location-aware computing, sensor databases, cache conscious algorithms
			
			
			
				Downloadable files:	
				Paper: DEXA02_dvk.ext.pdf (extended version)
				Thesis, Chapter 3 (more detailed)
				Source code: DEXA02_dvk.src.zip
				See also a disk-based solution to the same problem. 
					
			
			
			
			BibTeX entry:
			@inproceedings{DEXA02::dvk,
   author    = {Dmitri V. Kalashnikov and Sunil Prabhakar and 
                Susanne Hambrusch and Walid Aref},
   title     = {Efficient Evaluation of Continuous Range Queries on Moving Objects},
   booktitle = {Proc. of Int'l Conf. on Database and Expert Systems 
                Applications (DEXA 2002)},
   year      = {2002},
   month     = {September 2--6},
   address   = {Aix en Provence, France}
} 


			Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~ics143/menu.html
##-----------------TITLE------------------------##
ICS 143 - Principles of Operating Systems
##------------------TEXT------------------------##
CS 143A / CSE 104
    
    
    Principles of Operating Systems
    
    
    Spring 2015    

    
    
     
    Administration
    
    - Syllabus
    
    - Staff
    
    - Classes

    
    Work
    
    - Lecture Notes
    
    - Reading Assignments
    
    - Homework
    
    - Discussions
    
    - Supplemental Reading
##------------------URL-------------------------##
http://www.ics.uci.edu/~ics143/classes.html
##-----------------TITLE------------------------##
CS 143A / CSE 104 - Principles of Operating Systems
##------------------TEXT------------------------##
 



    
    CS 143A / CSE 104 Principles of Operating Systems
    
  
  Announcements
    Check the course webpage daily!

 
    2015-06-04: A sample final exam is now available on the Homework page.
    2015-05-29: Next Friday, 5 June, we will have two classes at 11:00am and 3:00pm in the usual rooms.
    2015-05-28: Next week, Michael's office hours will be moved to Wed, 3 June 2015, 1:00-2:00pm.
    2015-05-24: Homework #4 has been posted and is due Thu, 4 June 2015, 11:55pm via EEE DropBox.
       Also, Solutions to Homework #3 are now available online.
    2014-05-22: There will be no class or office hours next Monday, 25 May (Memorial Day). Next Friday, 29 May, we will have two classes at 11:00am and 3:00pm in the usual rooms. Discussion will be moved to Mon, 1 June instead.
    2014-05-13: The description of the Programming Assignment has been updated and moved to the README.md on GitHub. The PDF from the website is deprecated as of now. Other updates can be found in the latest commit. We encourage everybody to share their public tests via GitHub, so that you can expose and fix as many bugs as possible.
    2014-05-12: Homework #3 has been posted and is due Thu, 21 May 2015, 11:55pm via EEE DropBox.
    2014-05-08: The Programming Assignment is now available on the Homework page.
    2014-05-06: There will be different office hours this week. Prof. V: Thu 2:30-3:30pm, Fri 9:00-10:00am. Ekin: Wed 4:00-5:00pm.
    2014-05-04: Solutions to Homework #2 and the sample midterm exam are now available on the Homework page.
    2014-05-01: A sample midterm exam is now available on the Homework page.
    2015-04-23: Michael's office hours have been changed to Tues, 1:00-2:00pm in SBSG 2236.
    2015-04-22: The mid-term exam will take place on Friday, 8 May 2015 (Week 6) in class.
    2015-04-22: This Friday (4/24) Lecture and Discussion will be swapped. Discussion section will be 11:00-11:50am in EH 1200.
         Lecture will be 3:00-3:50pm in HIB 100.
    2015-04-21: Solutions to Homework #1 are now available online.
    2015-04-18: Homework #2 has been posted and is due Thu, 30 April 2015, 11:55pm via EEE DropBox.
    2015-04-10: The slides from Friday's Discussion section are now available on the Discussion page. You'll be able to find future slides there, too.
    2015-04-08: Homework #1 has been posted and is due Thu, 16 April 2015, 11:55pm via EEE DropBox. Please submit a single PDF file. No late homeworks will be accepted. For detailed instructions see Piazza.
    2015-04-05: Office hours announced for Prof. V (Thu 10:00-11:00am in DBH 2086), Michael (Mon 4:00-5:00pm in SBSG 2236) and Ekin (Mon 2:00-3:00pm in ICS 468A).
    2015-04-02: If you haven't already, sign up for the bulletin/message board on Piazza!
	We will be using this platform to make class announcements, share resources, and ask/answer questions.
    2015-03-30: Course web page created for Spring 2015. Important announcements will be posted in this page. Please check daily!

  Classes
	Mons, Weds, Fris: 11:00-11:50pm at EH 1200
    Consultation / Discussion
  
    Prof. Nalini Venkatasubramanian
  
	Thu 10:00-11:00am in DBH 2086 (second floor of Building 314 on the UCI Campus Map)
  
      Michael Beyeler (TA):
  
	Tue 1:00-2:00pm in SBSG 2236 (second floor of Building 214 on the UCI Campus Map)
  
      Ekin Oguz (TA):
  
        Mon 2:00-3:00pm in ICS 468A (fourth floor of Building 302 on the UCI Campus Map)
  
    Discussion Sections

  Fri: 3:00-3:50pm in HIB 100 
	Final Exam

  Tue, Jun 9, 1:30-3:30pm in EH 1200
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/GIS06_dvk_index.html
##-----------------TITLE------------------------##
Index for Fast Retrieval of Uncertain Spatial Point Data (ACM GIS 2006)
##------------------TEXT------------------------##
Index for Fast Retrieval of Uncertain Spatial Point Data.
Appeared in ACM GIS 2006 Conference  

 
  
  
Dmitri V. Kalashnikov, Yiming Ma, Sharad Mehrotra, Ramaswamy Hariharan

  
  
Computer Science Department
University of California, Irvine  
  
  

Abstract  

  
  
Location information gathered from a variety of sources in
the form of sensor data, video streams, human observations,
and so on, is often imprecise and uncertain and needs to
be represented approximately. To represent such uncertain
location information, the use of a probabilistic model that
captures the imprecise location as a probability density function
(pdf) has been recently proposed. The pdfs can be arbitrarily
complex depending on the type of application and
the source of imprecision. Hence, efficiently representing,
storing and querying pdfs is a very challenging task. While
the current state of the art indexing approaches treat the
representation and storage of pdfs as a black box, in this
paper, we take the challenge of representing and storing any
complex pdf in an efficient way. We further develop techniques
to index such pdfs to support the efficient processing
of location queries. Our extensive experiments demonstrate
that our indexing techniques significantly outperform the
best existing solutions.
  

Categories and Subject Descriptors:
H.2.8 [Information System]: Database Management—Spatial databases and GIS

 
Keywords: 
Spatial Database, Uncertainty Indexing, U-grid, Probability  
  
  

Downloadable files:  
 
Paper: GIS06_dvk_index.pdf 
Presentation: GIS06_dvk_index.ppt 

  
  

BibTeX entry: 
@inproceedings{ACMGIS06::dvk_index,
   author    = {Dmitri V.\ Kalashnikov and Yiming Ma and Sharad Mehrotra and Ram Hariharan},
   title     = {Index for Fast Retrieval of Uncertain Spatial Point Data},
   booktitle = {Proc. of Int'l Symposium on Advances in Geographic Information Systems (ACM GIS 2006)},
   year      = {2006},
   month     = {November 10--11},
   address   = {Arlington, VA, USA}
}


Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/SIGMOD04_dvk.html
##-----------------TITLE------------------------##
CAMAS: A Citizen Awareness System for Crisis Mitigation (ACM SIGMOD 2004)
##------------------TEXT------------------------##
CAMAS: A Citizen Awareness System for Crisis Mitigation.
Appeared in ACM SIGMOD 2004 Conference.

 
  
  
Sharad Mehrotra, Carter Butts, Dmitri V. Kalashnikov, Nalini Venkatasubramanian, et al.

  
  
Computer Science Department  
University of California, Irvine  
Project RESCUE (http://www.itr-rescue.org) 
  
  
Abstract  
  
This demo paper provides a brief description of the  intuition and design 
philosophy of CAMAS, one of the main testbeds being  developed in the context 
of the RESCUE (Responding to the Unexpected)  project [9]. The goal of our 
work is to enhance the mitigation capabilities  of first responders in the 
event of a crisis by dramatically transforming  their ability to collect, 
store, analyze, interpret, share and disseminate  data. CAMAS specifically is 
a system designed to allow a variety of users,  including the average citizen 
to report incidents and potentially hazardous  situations, analyze and 
evaluate these reports and notify appropriate  personnel for further action. 
The multidisciplinary approach incorporates a  variety of information 
technologies: networks; distributed systems;  databases; image and video 
processing; GIS; and machine learning, together  with subjective information 
obtained through social science. Besides  providing an overview of the CAMAS 
architecture, we describe the  demonstration platform and specific experiments 
that will illustrate issues  of event extraction, ranking, access control and 
visualization.    


 
Keywords:  
CAMAS, ITR-RESCUE, crisis management, situational awareness, domain awareness, human as sensor, community input 
  

  

Downloadable files:  
Paper: SIGMOD04_dvk.pdf 
  
  


BibTeX entry: 
@inproceedings{SIGMOD04::dvk,
   author    = {S. Mehrotra  and C. Butts and D. Kalashnikov and N. Venkatasubramanian and et al.},
   title     = {{CAMAS}: A Citizen Awareness System for Crisis Mitigation},
   booktitle = {Proc. of ACM SIGMOD Conf. on Management of Data, demo publication},
   year      = {2004},
   month     = {June 13--18},
   address   = {Paris, France}
}
 

Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/IS07_dvk_join.html
##-----------------TITLE------------------------##
Fast similarity join for multi-dimensional data (Information Systems Journal, 2007)
##------------------TEXT------------------------##
Fast similarity join for multi-dimensional data.
Information Systems Journal, 32(1), March 2007. 
 


 
Dmitri V.  Kalashnikov and Sunil Prabhakar
 
 

	Department of Computer Sciences
	Purdue University

 
Abstract
 
 
The efficient processing of multi-dimensional similarity joins is important for a large
class of applications. The dimensionality of the data for these applications ranges
from low to high. Most existing methods have focused on the execution of high-dimensional
joins over large amounts of disk-based data. The increasing sizes of
main memory available on current computers, and the need for efficient processing
of spatial joins suggest that spatial joins for a large class of problems can be processed
in main memory. In this paper, we develop two new in-memory spatial join
algorithms, the Grid-join and EGO*-join, and study their performance. Through
evaluation, we explore the domain of applicability of each approach and provide
recommendations for the choice of a join algorithm depending upon the dimensionality
of the data as well as the expected selectivity of the join. We show that the
two new proposed join techniques substantially outperform the state of the art join
algorithm, the EGO-join.  
 


 Keywords:  
efficient similarity join, 
epsilon join, 
multi-dimensional join, 
spatial join, 
high-dimensional join, 
selectivity, 
grid join, 
main memory join, 
fast join



 Remarks:
One of the algorithms covered in the paper, called EGO*-join,
is so simple, that it can be implemented from scratch
literally in one day. The paper demonstrates that that algorithm
also outperforms the state of the art, when applied to high-dimensional data. 
Thus, EGO*-join is a good choice for an in-memory join algorithm in general, 
and, due to its simplicity, it is also a good choice for a baseline 
join algorithm.  




			

Downloadable files: 

Paper: IS07_dvk_join.pdf
 


			
BibTeX entry:
@article{IS07::dvkJ,
   author    = {Dmitri V.\ Kalashnikov and Sunil Prabhakar},
   title     = {Fast similarity join for multi-dimensional data},
   journal   = IS,
   volume    = 32,
   number    = 1,
   pages     = {160--177},
   month     = mar,    
   year      = 2007
}


Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/DASFAA03_dvk.html
##-----------------TITLE------------------------##
Similarity Join for Low- and High- Dimensional Data (DASFAA 2003)
##------------------TEXT------------------------##
Similarity Join for Low- and High-Dimensional Data.
Appeared in DASFAA 2003 Conference. 
 


 
Dmitri V.  Kalashnikov and Sunil Prabhakar
 
 

	Department of Computer Sciences
	Purdue University

 
Abstract
 
 
The efficient processing of similarity joins is important for a large 
class of applications. The dimensionality of the data for these 
applications ranges from low to high. Most existing methods have 
focused on the execution of high-dimensional joins over large 
amounts of disk-based data. 
	The increasing sizes of main memory 
available on current computers, and the need for efficient processing  
of spatial joins suggest that spatial joins for a large class of
problems can be processed in main memory. 
	In this paper we develop two new spatial join algorithms,
the Grid-join and EGO*-join,  and study their performance 
in comparison to the state of the art algorithm, EGO-join, and the
RSJ algorithm. 
 
Through evaluation  we explore the domain of applicability of each 
algorithm and provide recommendations for the choice of join algorithm 
depending upon the dimensionality of the data as well as the critical 
epsilon parameter. We also point out the significance of the choice 
of this parameter for ensuring that the selectivity achieved is 
reasonable. 
The proposed EGO*-join algorithm always, often significantly, outperforms
the EGO-join. For low-dimensional data the Grid-join outperform both the
EGO- and EGO*- joins. 

An analysis of the cost of the Grid-join is presented and highly accurate cost 
estimator functions are developed. These are used to choose an appropriate 
grid size for optimal performance and can also be used by a query optimizer
to compute the estimated cost of the Grid-join.   
 


 Keywords:  
Similarity join, epsilon join, multidimensional join, high-dimensional join, selectivity, grid join, main memory join, EGO* join


			

Downloadable files: 

Paper: DASFAA03_dvk.pdf
Paper (revised extended version): DASFAA03_dvk.ext.pdf 
 


			
BibTeX entry:
@inproceedings{DASFAA03::dvk,
   author    = {Dmitri V. Kalashnikov and Sunil Prabhakar},
   title     = {Similarity Join for Low- and High- Dimensional Data},
   booktitle = {Proc. of Int'l Conf. on Database Systems for Advanced 
                Applications (DASFAA 2003), {IEEE Computer Society Press}},
   year      = {2003},
   month     = {March 26--28},
   address   = {Kyoto, Japan}
}
 


Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/ICDE03_dvk.html
##-----------------TITLE------------------------##
Querying Imprecise Data in Moving Object Environments (IEEE ICDE 2003)
##------------------TEXT------------------------##
Querying Imprecise Data in Moving Object Environments.   
 Appeared in IEEE ICDE 2003 Conference.

 
  
  
Reynold Cheng, Sunil Prabhakar, and Dmitri V. Kalashnikov  
  

	Department of Computer Sciences
	Purdue University
	PLACE project (http://www.cs.purdue.edu/place/)

  
Abstract
  
  
In moving object environments it is infeasible for the database tracking the movement of objects to  
store the exact locations of objects at all times. Typically the location of an object is known with certainty  
only at the time of the update. The uncertainty in its location increases until the next update. In this  
environment, it is possible for queries to produce incorrect results based upon old data. However, if the  
degree of uncertainty is controlled, then the error of the answers to certain queries can be reduced. More  
generally, query answers can be augmented with probabilistic estimates of the validity of the answer.  
In this paper we study the execution of such probabilistic, or imprecise, range and nearest-neighbor  
queries. The imprecision in queries is an inherent property of these applications due to uncertainty  
in the data, unlike the techniques for approximate nearest-neighbor processing that trade-off accuracy  
for performance. Algorithms for computing these queries are presented for a generic object movement  
model, and detailed solutions are discussed for two common models of uncertainty in moving object  
databases. Furthermore, we study approximate evaluation of these queries that allow a trade-off between  
execution time and accuracy. The use of indexes for efficient execution of approximate queries over large  
collections of moving objects is also presented.  
  

 
 Keywords: 
			Moving objects, 
			querying imprecise data, 
            uncertainty, 
            uncertainty region, 
            models of uncertainty, 
            nearest neighbor query, NN query,   
            probabilistic answer, 
            handling uncertainty, 
            location-aware computing 
  

  
  
Downloadable files:
Extended version: ICDE03_dvk.ext.pdf
See also our sensor environment solution to a similar problem.  
  


			
BibTeX entry:
@inproceedings{ICDE03::dvk,
   author    = {Reynold Cheng and Sunil Prabhakar and Dmitri V. Kalashnikov},
   title     = {Querying imprecise data in moving object environments},
   booktitle = {Proc. of IEEE Int'l Conf. on Data Engineering (IEEE ICDE 2003)},
   year      = {2003},
   month     = {March 5--8},
   address   = {Bangalore, India}
}
 


Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/TKDE04_dvk.html
##-----------------TITLE------------------------##
Querying Imprecise Data in Moving Object Environments (IEEE ICDE 2003)
##------------------TEXT------------------------##
Querying Imprecise Data in Moving Object Environments.   
Appeared in IEEE TKDE, vol. 16(9), 2004.
  
 
  
  
Reynold Cheng, Dmitri V. Kalashnikov, and Sunil Prabhakar

  
  
Department of Computer Sciences  
Purdue University  
PLACE project (http://www.cs.purdue.edu/place/)	
  
  
Abstract
 
In moving object environments it is infeasible for the database tracking the movement of
objects to store the exact locations of objects at all times. Typically the location of an object is
known with certainty only at the time of the update. The uncertainty in its location increases
until the next update. In this environment, it is possible for queries to produce incorrect results
based upon old data. However, if the degree of uncertainty is controlled, then the error of the
answers to queries can be reduced. More generally, query answers can be augmented with
probabilistic estimates of the validity of the answer. In this paper we study the execution of
probabilistic range and nearest-neighbor queries. The imprecision in answers to queries is
an inherent property of these applications due to uncertainty in data, unlike the techniques
for approximate nearest-neighbor processing that trade accuracy for performance. Algorithms
for computing these queries are presented for a generic object movement model, and detailed
solutions are discussed for two common models of uncertainty in moving object databases. We
also study approximate evaluation of these queries to reduce their computation time.
  


 
Keywords:  
Data Uncertainty, Probabilistic Queries, Range and Nearest-Neighbor queries. 
  

  
  
Downloadable files:
Paper : TKDE04_dvk.pdf
See also our sensor environment solution to a similar problem.  
  
  


BibTeX entry: 
@article{TKDE04::dvk,
   author    = {Reynold Cheng and Dmitri V. Kalashnikov and Sunil Prabhakar},
   title     = {Querying Imprecise Data in Moving Object Environments},
   journal   = {IEEE Transactions on Knowledge and Data Engineering (IEEE TKDE)},
   volume    = 16,
   number    = 9,
   month     = sep, year = 2004
}


Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/IEEETC02_dvk.html
##-----------------TITLE------------------------##
Query Indexing and Velocity Constrained Indexing: Scalable Techniques for 
      Continuous Queries on Moving Objects (IEEE Transactions on Computers 2002)
##------------------TEXT------------------------##
Query Indexing and Velocity Constrained 
         Indexing: Scalable Techniques for Continuous Queries on Moving Objects.
   Appeared in IEEE Transactions on Computers, vol. 51(10), 2002.
    
   
   
     
       Sunil Prabhakar, Yuni Xia, Dmitri V. Kalashnikov, Walid G. Aref, and 
       Susanne E. Hambrusch
     
     
     
	Department of Computer Sciences
	Purdue University
	PLACE project (http://www.cs.purdue.edu/place/)
	
     
     Abstract
     
       Moving object environments are characterized by large numbers of moving objects 
       and numerous concurrent continuous queries over these objects. Efficient 
       evaluation of these queries in response to the movement of the objects is 
       critical for supporting acceptable response times. In such environments, the 
       traditional approach of building an index on the objects (data) suffers from 
       the need for frequent updates and thereby results in poor performance. In fact, 
       a brute force, no-index strategy yields better performance in many cases. 
       Neither the traditional approach nor the brute force strategy achieve 
       reasonable query processing times. This paper develops novel techniques for the 
       efficient and scalable evaluation of multiple continuous queries on moving 
       objects. Our solution leverages two complimentary techniques: Query Indexing 
       and Velocity Constrained Indexing (VCI). Query Indexing relies on 1) 
       incremental evaluation, 2) reversing the role of queries and data, and 3) 
       exploiting the relative locations of objects and queries. VCI takes advantage 
       of the maximum possible speed of objects in order to delay the expensive 
       operation of updating an index to reflect the movement of objects. In contrast 
       to an earlier technique [29] that requires exact knowledge about the movement 
       of the objects, VCI does not rely on such information. While Query Indexing 
       outperforms VCI, it does not efficiently handle the arrival of new queries. 
       Velocity constrained indexing, on the other hand, is unaffected by changes in 
       queries. We demonstrate that a combination of Query Indexing and Velocity 
       Constrained Indexing enables the scalable execution of insertion and deletion 
       of queries in addition to processing ongoing queries. We also develop several 
       optimizations and present a detailed experimental evaluation of our techniques. 
       The experimental results show that the proposed schemes outperform the 
       traditional approaches by almost two orders of magnitude.
     
     
     
     
     
       Keywords:  
       Moving objects, query indexing, Q-index, velocity constrained 
       indexing, VCI, continuous queries, long-running queries, monitoring queries, 
       continuous range queries, location-aware computing
     
     
     
       
	   Downloadable files:
       Paper: IEEETC02_dvk.www.pdf
       See also main memory 
         solution to the same problem. 
     

			
BibTeX entry:
@article{IEEETC02::dvk,
    author = {S. Prabhakar and Y. Xia and D. Kalashnikov and 
              W. Aref and S. Hambrusch},
    title  = {Query Indexing and Velocity Constrained Indexing: 
              Scalable Techniques for Continuous Queries on Moving Objects},
    journal = {IEEE Transactions on Computers},
    volume = 51,
    number = 10,
    pages = {1124--1140},
    month = oct, year = 2002
}



Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/GIS06_dvk_model.html
##-----------------TITLE------------------------##
Modeling and Querying Uncertain Spatial Information for
Situational Awareness Applications (ACM GIS 2006)
##------------------TEXT------------------------##
Modeling and Querying Uncertain Spatial Information for
Situational Awareness Applications.
Appeared in ACM GIS 2006 Conference




Dmitri V. Kalashnikov, Yiming Ma, Sharad Mehrotra, Ramaswamy Hariharan, Carter Butts



Computer Science Department
University of California, Irvine



Abstract



Situational awareness (SA) applications monitor the real world and the entities therein to support tasks such as rapid decision-making, reasoning, and analysis. Raw input about unfolding events may arrive from variety of sources in the form of sensor data, video streams, human observations, and so on, from which events of interest are extracted. Location is one of the most important attributes of events, useful for a variety of SA tasks. In this paper, we propose an approach to model and represent (potentially uncertain) event locations described by human reporters in the form of free text. We analyze several types of spatial queries of interest in SA applications. Our experimental evaluation demonstrates the effectiveness of our approach.


Categories and Subject Descriptors:
H.2.8 [Information System]: Database Management—Spatial databases and GIS


Keywords:
Modeling, Retrieval, Uncertain, Probability



Downloadable files:

Paper: GIS06_dvk_model.pdf
Presentation: GIS06_dvk_model.ppt




BibTeX entry:
@inproceedings{ACMGIS06::dvk_model,
   author    = {Dmitri V.\ Kalashnikov and Yiming Ma and Sharad Mehrotra and Ram Hariharan and Carter Butts},
   title     = {Modeling and Querying Uncertain Spatial Information for Situational Awareness Applications},
   booktitle = {Proc. of Int'l Symposium on Advances in Geographic Information Systems (ACM GIS 2006)},
   year      = {2006},
   month     = {November 10--11},
   address   = {Arlington, VA, USA}
}


Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/TKDE08_dvk_SAT.html
##-----------------TITLE------------------------##
Towards Managing Uncertain Spatial Information for Situational Awareness Applications (IEEE TKDE 2008)
##------------------TEXT------------------------##
Towards Managing Uncertain Spatial Information for Situational Awareness Applications.
Appeared in IEEE TKDE 2008 Journal, Vol. 20(10), October 2008




Yiming Ma, Dmitri V. Kalashnikov, and Sharad Mehrotra.



Computer Science Department
University of California, Irvine



Abstract



Situational awareness (SA) applications monitor the real world and
the entities therein to support tasks such as rapid
decision-making, reasoning, and analysis. Raw input about
unfolding events may arrive from variety of sources in the form of
sensor data, video streams, human observations, and so on, from
which events of interest are extracted. Location is one of the
most important attributes of events, useful for a variety of SA
tasks. In this article, we consider the problem of reaching
situation awareness from textual input. We propose an approach to
probabilistically model and represent (potentially uncertain)
event locations described by human reporters in the form of free
text. We analyze several types of spatial queries of interest in
SA applications. We design techniques to store and index the uncertain locations, to support the efficient processing of queries. Our extensive experimental evaluation over real and synthetic datasets demonstrates the effectiveness and efficiency of our approach.



Categories and Subject Descriptors:
H.2.8 [Information System]: Database Management—Spatial databases and GIS


Keywords:
Location Disambiguation, Uncertain Location Modeling, Probabilistic Indexing, Probabilistic Representation, Histogram Compression.



Downloadable files:

Paper: TKDE08_dvk_SAT.pdf




BibTeX entry:
@article{TKDE08::dvk_SAT,
   author    = {Yiming Ma and Dmitri V.\ Kalashnikov and Sharad Mehrotra},
   title     = {Towards Managing Uncertain Spatial Information for Situational Awareness Applications},
   journal   = {{IEEE Transactions on Knowledge and Data Engineering (IEEE TKDE)}},
   year      = 2008,
   volume    = 20,
   number    = 10,
   month     = oct,
   year      = 2008
}

Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/EDBT10_dvk.html
##-----------------TITLE------------------------##
Efficient and Scalable Multi-Geography Route Planning. (EDBT 2010)
##------------------TEXT------------------------##
Efficient and Scalable Multi-Geography Route Planning
Appeared in EDBT 2010




Vidhya Balasubramanian, Dmitri V. Kalashnikov, Sharad Mehrotra, and Nalini Venkatasubramanian



Computer Science Department
University of California, Irvine



Abstract



This paper considers the problem of Multi-Geography Route Planning (MGRP) where the geographical information may be spread over multiple heterogeneous interconnected maps.  We first design a flexible and scalable representation to model individual geographies and their interconnections. Given such a representation, we develop an algorithm that exploits precomputation and caching of geographical data for path planning.  A utility-based approach is adopted to decide which paths to precompute and store. To validate the proposed approach we test the algorithm over the workload of a campus level evacuation simulation that plans evacuation routes over multiple geographies: indoor CAD maps, outdoor maps, pedestrian and transportation networks, etc. The empirical results indicate that the MGRP algorithm with the proposed utility based caching strategy significantly outperforms the state of the art solutions when applied to a large university campus data under varying conditions.




Categories and Subject Descriptors
H.2 [Database Management];
H.2.8 [Database Applications]: Spatial databases and GIS;
G.2.2  [Graph Theory];


Keywords
Multi-Geography Route Planning, MGRP, Caching, A* Algorithm



Downloadable Files
Paper: EDBT10_dvk.pdf
Presentation: EDBT10_dvk.ppt



BibTeX Entry
@inproceedings{EDBT10::dvk,
   author    = {Vidhya Balasubramanian and Dmitri V.\ Kalashnikov and
                Sharad Mehrotra and Nalini Venkatasubramanian},
   title     = {Efficient and Scalable Multi-Geography Route Planning},
   booktitle = {International Conference on Extending Database Technology (EDBT 2010)},
   year      = {2010},
   month     = {March 22--26},
   address   = {Lausanne, Switzerland}
}




Back to Kalashnikov's homepage


 © 2011 Dmitri V. Kalashnikov. All Rights Reserved.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/EMWS09_dvk.html
##-----------------TITLE------------------------##
Speech-Based Situational Awareness for Crisis Response. (EMWS 2009)
##------------------TEXT------------------------##
Speech-Based Situational Awareness for Crisis Response
Appeared in EMWS 2009




Dmitri V. Kalashnikov, Dilek Hakkani-Tur, Gokhan Tur, and Nalini Venkatasubramanian



Computer Science Department
University of California, Irvine



Abstract



The goal of our work is to explore research in the
framework of an end-to-end speech processing system that
can automatically process human conversations to create
situational awareness during crisis response. Situational
awareness refers to knowledge about the unfolding crisis
event, the needs, the resources, and the context. Accurate
assessment of the situation is vital to enable first responders
(and the public) to take appropriate actions that can have
significant impact on life and property. Consider, for instance,
a situation of a large structural fire wherein teams of fire
fighters enter into a burning building for search and rescue.
Knowledge of the location of fire fighters, their physiological
status, the ambient conditions and environment are critical for
the success and safety of both the victims and fire fighters.
Appropriate situational awareness is critical not just at
incident level, but at all levels of response. For instance,
knowledge of occupancy levels, the special needs of the
populace, the road-closures, the geographical scope of the
disaster (e.g., the fire perimeter), etc. play a vital role in
evacuation and shelter planning and in organizing medical
triage.

The importance of accurate and actionable situational
awareness in crisis response is now well recognized [1] and
has led to significant research on appropriate sensing,
networking, sensor processing, information sharing, data
management, and decision support tools. The research team at
the UC Irvine, Center for Emergency Response Technologies
(CERT) has been extensively involved in working with a
variety of first responder organizations to build a variety of
such tools in the context of the NSF funded RESCUE
(Responding to Crises and Unexpected Events) project [2]
and the DHS funded SAFIRE project [3]. Our experience
working with rescue personnel has clearly established that
while sensors (including motes, video, physiological, location,
environmental) are important, speech is undoubtedly the
single most important source of situational information. The
very first point of contact of citizens with the responders
during an emergency is through a telephone call to the 911
dispatch system. In case of large disasters that involve a larger
team of responders (such as a fire-fighting team), the primary
mechanism used for communication and coordination among
response teams is through radios carried by the first
responders. Such conversations contain perhaps what
constitutes the most important situational information that has
direct implications on the efficacy of the response. Despite
importance of speech, today, assimilation of situational
information from speech is almost entirely done manually.




Categories and Subject Descriptors
H.2.m [Database Management] Miscellaneous - Situational Awareness;
I.2.7  [Natural Language Processing]: Speech recognition and synthesis;


Keywords
Speech Processing, Situational Awareness, Crisis Response



Downloadable Files
Paper: EMWS09_dvk.pdf
Presentation: EMWS09_dvk.ppt



BibTeX Entry
@inproceedings{EMWS09::dvk,
   author    = {Dmitri V. Kalashnikov and Dilek Hakkani-Tur and Gokhan Tur
                and Nalini Venkatasubramanian},
   title     = {Speech-Based Situational Awareness for Crisis Response},
   booktitle = {The U.S. DHS Workshop on Emergency Management: Incident, Resource,
                and Supply Chain Management (EMWS09)},
   year      = {2009},
   month     = {November 5--6},
   address   = {Irvine, CA, USA}
}



Back to Kalashnikov's homepage


 © 2011 Dmitri V. Kalashnikov. All Rights Reserved.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/VLDB02_dvk.html
##-----------------TITLE------------------------##
Issues and Evaluations of Caching Solutions for Web Application Acceleration  (VLDB 2002)
##------------------TEXT------------------------##
Issues and Evaluations of Caching Solutions for Web Application Acceleration.
Appeared in VLDB 2002 Conference.




 
 
Wen-Syan Li, Wang-Pin Hsiung, Dmitri V. Kalashnikov, Radu Sion, 
Oliver Po, Divyakant Agrawal, and Selcuk Candan. 
 
 
 
NEC Research
(NEC CachePortal system won  Best of CeBIT award in category Enterprise Platform Software, 5/2004.)
 
 
Abstract 
  
Response time is a key differentiation among 
electronic commerce (e-commerce) applications. For many e-commerce applications, 
Web pages are created dynamically based 
on the current state of a business stored in 
database systems. Recently, the topic of Web 
acceleration for database-driven Web applications has drawn a lot of attention in both the 
research community and commercial arena. 
In this paper, we analyze the factors that have 
impacts on the performance and scalability of 
Web applications. We discuss system architecture issues and describe approaches to deploying caching solutions for accelerating Web 
applications. We give the performance matrix 
measurement for network latency and various 
system architectures. The paper is summarized with a road map for creating high  
performance Web applications. 
works, caching appliances, Web servers, application 
servers, and databases. 
  


 
Keywords: 
Caching dynamic web content. 
  

  
  
Downloadable files: 
Paper: VLDB02_dvk.pdf.zip 
 
  


BibTeX entry: 
@inproceedings{VLDB02::dvk,
   author    = {Wen-Syan Li and Wang-Pin Hsiung and Dmitri V. Kalashnikov and Radu Sion and 
                Oliver Po and Divyakant Agrawal and Selcuk Candan},
   title     = {Issues and Evaluations of Caching Solutions for Web Application Acceleration},
   booktitle = {Proc. of Int'l Conf. on Very Large Data Bases (VLDB)},
   year      = {2002},
   month     = {August 20--23},
   address   = {Hong Kong, China}
}


Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/SIGMODR04_dvk.html
##-----------------TITLE------------------------##
QUASAR: Quality Aware Sensing Architecture (ACM SIGMOD Record 2004)
##------------------TEXT------------------------##
QUASAR: Quality Aware Sensing Architecture.
Appeared in ACM SIGMOD Record, vol. 33(1), March 2004.

 
  
  
I. Lazaridis, Q. Han, X. Yu, S. Mehrotra, N. Venkatasubramanian, and Dmitri V. Kalashnikov 
  
  
Computer Science Department
University of California, Irvine
  
  
Abstract  
  
Sensor devices are promising to revolutionize our interaction with 
the physical world by allowing continuous monitoring and reaction to 
natural and artificial processes at an unprecedented level of spatial and 
temporal resolution. As sensors become smaller, cheaper and more 
configurable, systems incorporating large numbers of them become feasible. 
Besides the technological aspects of sensor design, a critical factor 
enabling future sensor-driven applications will be the availability of an 
integrated infrastructure taking care of the onus of data management. 
Ideally, accessing sensor data should be no difficult or burdensome than 
using simple SQL.  In this paper we investigate some of the issues that 
such an infrastructure must address. Unlike conventional distributed 
database systems, a sensor data architecture must handle extremely high 
data generation rates from a large number of small autonomous 
components. And, unlike the emerging paradigm of data streams, it is 
infeasible to think that all this data can be streamed into the query 
processing site, due to severe bandwidth and energy constraints of 
battery-operated wireless sensors. Thus, sensing data architectures must 
become  quality-aware, regulating the quality of data at all levels of 
the distributed system, and supporting user applications' quality 
requirements in the most efficient manner possible. 

  


Keywords: Sensor databases, quality-aware querying.
  

  

Downloadable files:  
Paper: SIGMODR04_dvk.pdf 
  
  


BibTeX entry: 
@article{SIGMODR04::dvk,
   author    = {I. Lazaridis and Q. Han and X. Yu and S. Mehrotra and Nalini Venkatasubramanian
                and Dmitri V. Kalashnikov and W. Yang},
   title     = {{QUASAR}: Quality Aware Sensing Architecture},
   journal   = {ACM SIGMOD Record},
   volume    = 33,
   number    = 1,
   pages     = {26--31}, 
   month     = mar, 
   year      = 2004
}
 


Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/SPIE04_dvk.html
##-----------------TITLE------------------------##
Project RESCUE: challenges in responding to the unexpected (SPIE 2004)
##------------------TEXT------------------------##
Project RESCUE: challenges in responding to the unexpected.
Appeared in SPIE, vol. 5304, Jan 2004.

 
  
  
Sharad Mehrotra, Carter Butts, Dmitri V. Kalashnikov, Nalini Venkatasubramanian, Ramesh Rao, et al.
  
  
Computer Science Department  
University of California, Irvine  
Project RESCUE (http://www.itr-rescue.org) 
  
  
Abstract  
  
This paper provides an overview of Project RESCUE, which aims to enhance the 
mitigation capabilities of first responders in the event of a crisis by 
dramatically transforming their ability to collect, store, analyze, interpret, 
share and disseminate data. The multidisciplinary research agenda incorporates a 
variety of information technologies: networks; distributed systems; databases; 
image and video processing; and machine learning, together with subjective 
information obtained through social science. While the IT challenges focus on 
systems and algorithms to get the right information to the right person at the 
right time, social science provides the right context. Besides providing an 
overview of the nature of RESCUE research activities the paper highlights 
challenges of particular interest to the Internet imaging community.


 
Keywords:  
CAMAS, ITR-RESCUE, crisis management, situational awareness, domain awareness, human as sensor, community input 
  

  

Downloadable files:
Paper: SPIE04_dvk.pdf 
  
  


BibTeX entry: 
@inproceedings{SPIE04::dvk,
   author    = {Sharad Mehrotra and Carter Butts and Dmitri V. Kalashnikov and    
                Nalini Venkatasubramanian and Ramesh Rao and et al.},
   title     = {Project {RESCUE}: challenges in responding to the unexpected},
   booktitle = {Proc of {SPIE}},
   volume    = 5304,
   pages     = {179--192},
   month     = jan, 
   year = 2004
} 

Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/SIGMOD03_dvk.html
##-----------------TITLE------------------------##
Evaluating probabilistic queries over imprecise data (ACM SIGMOD 2003)
##------------------TEXT------------------------##
Evaluating probabilistic queries over imprecise data.   
Appeared in ACM SIGMOD 2003 Conference.

  
 
  
  
Reynold Cheng, Dmitri V. Kalashnikov, and Sunil Prabhakar 
  
  
Department of Computer Sciences  
Purdue University  
PLACE project (http://www.cs.purdue.edu/place/)	
  
  
Abstract
  
Many applications employ sensors for monitoring entities 
such as temperature and wind speed.  A centralized 
database tracks these entities to enable query processing.
Due to continuous changes in these values and limited resources (e.g., 
network bandwidth and battery power), it is often infeasible to store
the exact values at all times.
A similar situation exists for 
moving object environments that track the constantly changing locations of objects.
In this environment, it is possible for database queries to produce incorrect or invalid 
results based upon old data.  However, if the degree of error (or uncertainty) between
the actual value and the database value is controlled, we can place more confidence in 
the answers to queries. 
More generally, query answers can be augmented with probabilistic estimates
of the validity of the answers.  In this paper we study probabilistic query evaluation
based upon uncertain data. A classification of queries is made based upon the nature
of the result set. For each class, we develop algorithms for computing probabilistic 
answers.  We address the important issue of measuring the quality of 
the answers to these queries, and provide algorithms for efficiently pulling data from 
relevant sensors or moving objects in order to improve the quality of the executing queries. 
Extensive experiments are performed to examine the effectiveness of several data update 
policies. 
  


 
Keywords: Sensor databases, 
			querying imprecise data, 
            uncertainty, 
            uncertainty region, 
            handling uncertainty, 
            models of uncertainty, 
            aggregate query,   
            entity-based query, 
            value-based query, 
            probabilistic queries, 
            quality of probabilistic answer, 
            update heuristics, 
            location-aware computing,  
  

  
  
Downloadable files:
Paper: SIGMOD03_dvk.pdf (close to the final version) 
Slides: SIGMOD03.ppt 
See also a moving-object environment solution to a similar problem.  
  
  


BibTeX entry: 
@inproceedings{SIGMOD03::dvk,
   author    = {Reynold Cheng and Dmitri V. Kalashnikov and Sunil Prabhakar},
   title     = {Evaluating probabilistic queries over imprecise data},
   booktitle = {Proc. of ACM SIGMOD Int'l Conf. on Management of Data (ACM SIGMOD 2003)},
   year      = {2003},
   month     = {June 9--12},
   address   = {San Diego, CA, USA}
}



Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/CV/cv.html
##-----------------TITLE------------------------##
Dmitri V. Kalashnikov: CV
##------------------TEXT------------------------##
Main Page
                    
                    Publications
                    CV, etc
                
            
                
                    Dmitri V. Kalashnikov

                    

                    CV
                    
                    Research Statement
                    
                    Teaching Statement
                    
                    Paper1:
                    ACM TODS'06 paper on Entity Resolution
                    
                    Paper2:
                    ACM TODS'12 paper on Selection queries on probabilistic objects
                    
                    Paper3:
                    ACM TODS'12 paper on Web People Search
                    
                    PhD Thesis: Efficient
                    querying of constantly evolving data
                    
                    
 © 2013 Dmitri V. Kalashnikov. All Rights Reserved.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/ICDE09_dvk_Speech.html
##-----------------TITLE------------------------##
Using Semantics for Speech Annotation of Images (IEEE ICDE 2009)
##------------------TEXT------------------------##
Using Semantics for Speech Annotation of Images.
Appeared in IEEE ICDE Conference, March 2009.




Chaitanya Desai, Dmitri V. Kalashnikov, Sharad Mehrotra, and Nalini Venkatasubramanian



Computer Science Department
University of California, Irvine



Abstract



Digital cameras and multimedia capture devices are becoming
increasingly popular to take pictures.Annotating these pictures
is important to support their browsing and retrieval. Fully
automatic image annotation techniques typically rely entirely on
visual properties of the image. The state of the art image
annotation systems of this kind work well in detecting generic
object classes: car, horse, motorcycle, airplane, etc. However,
certain characteristics of the image are hard to capture using
strictly the visual properties. These include location (Paris,
California, San Francisco, etc), event (birthday, wedding,
graduation ceremony, etc), people (John, Jane, brother, etc) and
abstract qualities referring to objects in the image (beautiful,
funny, sweet, etc) among others. The more conventional method of
annotation that relies completely on human input has several
limitations as well. Typing tags using the keypads of such devices
can be cumbersome and error-prone. Secondly, delay in tagging may
result in a loss of context in which the picture was taken (e.g.,
user may not remember the names of the people/structures in the
image).

This presents an opportunity for using speech as a modality to
annotate images and/or other multimedia content. Most camera
devices have a built-in microphone. In principle, some of the
challenges associated with both, fully automatic annotation as
well as manual tagging can be alleviated if the user were to use
speech as a medium of annotation. Ideally, the user would take a
picture and speak the desired tags into the device's microphone. A
speech recognizer would transcribe the audio signal into text. The
speech to text transcription can happen either on the device
itself or be done on a remote machine. The transcribed text can be
used as tags for the image, exactly as the user intended. One of
the biggest bottlenecks facing such systems is the accuracy of the
underlying speech recognizer. Even speaker dependent recognition
systems can make mistakes in noisy environments. If the
recognizer's output is considered as is for annotation, then poor
recognition will lead to poor quality tags. Our work tries to
address this issue by incorporating outside semantic knowledge to
improve interpretation of the recognizer's output, as opposed to
blindly believing what the recognizer suggests. To improve
interpretation of speech output, we exploit the fact that most
speech recognizers provide alternate hypotheses for each
utterance.
 The main contribution of this paper is our approach for annotating
images using speech as the input modality. The approach employs a
 probabilistic
 model for computing the joint probability of a given combination of tags
 using a Maximum Entropy solution. The extensive empirical evaluation demonstrates
 the advantage of the proposed solution, that leads to a significant improvement
 of quality of speech annotation.



Categories and Subject Descriptors:
H.2.m [Database Management]: Miscellaneous - Semantic Image Tagging;
H.2.8 [Database Management]: Database Applications - Data mining;
H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval


Keywords:
Speech Annotation,
Image Tagging,
Disambiguation



Downloadable files:
Paper: ICDE09_dvk_Speech.pdf
Presentation: ICDE09_dvk_Speech.ppt



BibTeX entry:
@inproceedings{ICDE09::dvk,
   author    = {Chaitanya Desai and Dmitri V.\ Kalashnikov and Sharad Mehrotra and Nalini Venkatasubramanian},
   title     = {Using Semantics for Speech Annotation of Images},
   booktitle = {Proc.\ of the 25th IEEE Int’l Conference on Data Engineering (IEEE ICDE 2009)},
   note      = {short publication},
   year      = {2009},   
   month     = {March 29 - April 4},
   address   = {Shanghai, China}   
}





Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/EDBT06_dvk_demo.html
##-----------------TITLE------------------------##
SAT: Spatial Awareness from Textual input (EDBT 2006)
##------------------TEXT------------------------##
SAT: Spatial Awareness from Textual input.
Appeared in EDBT 2006 Conference.

 
  
  
Dmitri V. Kalashnikov, Yiming Ma, Sharad Mehrotra, Ram Hariharan, Nalini 
Venkatasubramanian, and Naveen Ashish.

  
  
Computer Science Department  
University of California, Irvine  
Project RESCUE (http://www.itr-rescue.org) 
  
  
Abstract  
  
This paper describes the SAT system for creating spatial awareness from textual input and
enabling reasoning and decision-making on spatially uncertain data.  


 
Keywords:  
SAT, ITR-RESCUE, crisis management, situational awareness, spatial awareness, spatial uncertainty, domain awareness, human as sensor, community input
  

  

Downloadable files:  
Paper: EDBT06_dvk_demo.pdf 
  
  


BibTeX entry: 
@inproceedings{EDBT06::dvk_demo,
   author    = {Dmitri V.\ Kalashnikov and 
                Yiming Ma and 
                Sharad Mehrotra and 
                Ram Hariharan and 
                Nalini Venkatasubramanian and 
                Naveen Ashish},
   title     = {{SAT}: {S}patial {A}wareness from {T}extual input},
   booktitle = {Proc.\ of International Conference on Extending Database Technology (EDBT 2006)},
   year      = {2006},
   month     = {March 26--30},
   note      = {demo publication}, 
   address   = {Munich, Germany} 
}
 

Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/ISI07_dvk.html
##-----------------TITLE------------------------##
On-Demand Information Portals for Disaster Situations (IEEE ISI 2007)
##------------------TEXT------------------------##
On-Demand Information Portals for Disaster Situations.
Appeared in IEEE International Conference on Intelligence and Security Informatics (IEEE ISI) 2007




Yiming Ma, Dmitri V. Kalashnikov, Sharad Mehrotra, Nalini Venkatasubramanian, Ram Hariharan, Naveen Ashish and Jay Lickfett



Computer Science Department
University of California, Irvine



Abstract



This paper describes our work on developing technology
for rapidly assembling information portals that provide
integrated access to and analysis of information from multiple
sources in the case of any disaster. Many recent disasters (the
S.E. Asian Tsunamis, the London subway bombings, the Katrina
hurricane, to name a few) have demonstrated that a lot of
valuable information becomes available in the hours and days
immediately following the disaster, and such information is indeed
valuable to disaster managers or even citizens in their response.
In this paper we describe our work on developing information
portals for disasters in general; we describe many key information
processing capabilities and challenges that we consider
important in such portals and also describe our approach to
developing such capabilities.


Categories and Subject Descriptors:
H.2.8 [Information System]: Database Management—Spatial databases and GIS


Keywords:
Spatial Database, Uncertainty Indexing, U-grid, Probability, Disaster portal



Downloadable files:

Paper: ISI07_dvk.pdf
Presentation: ISI07_dvk.ppt




BibTeX entry:
@inproceedings{ISI07::dvk,
   author    = {Yiming Ma and Dmitri V.\ Kalashnikov and Sharad Mehrotra and Nalini Venkatasubramanian 
                and Ram Hariharan and Naveen Ashish and Jay Lickfett},
   title     = {On-Demand Information Portals for Disaster Situations},
   booktitle = {Proc.\ of IEEE International Conference on Intelligence and Security Informatics
   (IEEE ISI 2007), short paper},
   year      = {2007},
   month     = {May 24--24},
   address   = {New Brunswick, NJ, USA}
}


Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/SV07_dvk.html
##-----------------TITLE------------------------##
Situational Awareness Technologies for Disaster Response (Springer 2007)
##------------------TEXT------------------------##
Situational Awareness Technologies for Disaster Response.
Book Chapter in "Terrorism Informatics: Knowledge Management and Data Mining for Homeland Security", Springer, 2007.

 
  
  
Naveen Ashish, Dmitri Kalashnikov, Sharad Mehrotra, Nalini Venkatasubramanian, Ron Eguchi, Rajesh Hegde, and Padhraic Smyth.

  
  
Computer Science Department  
University of California, Irvine  
Project RESCUE (http://www.itr-rescue.org) 
  
  
Abstract  
  
Responding to natural or man-made disasters, in a timely and effective 
manner, can reduce deaths and injuries, contain or prevent secondary disasters, 
and reduce the resulting economic losses and social disruption. During
a crisis, responding organizations confront grave uncertainties in making
 critical decisions. They need to gather situational information (e.g., 
 state of the civil, transportation and information infrastructures), 
 together with information about available resources (e.g., medical 
 facilities,  rescue and law enforcement units). There is a strong correlation 
 between the accuracy, timeliness, and reliability of the information available to the decision-makers, 
 and the quality of their decisions. Dramatic improvements in the speed 
 and accuracy at which information about the crisis flows through the 
 disaster response networks has the potential to revolutionize crisis response, 
 saving human lives and property.
 
This chapter highlights some of the key information technology challenges 
being addressed in the Project RESCUE, with a particular focus on situational 
awareness technologies. Appreciating the IT challenges in improving 
crisis response requires a thorough understanding of how communication 
and control networks form among responding organizations, and how the 
response process is organized. Since the crisis domain might be new to a 
large number of readers, we begin by first briefly summarizing the crisis 
response process. This is done to set the stage for a discussion of the 
challenges being addressed by RESCUE and particularly the situational 
awareness thrust within it.  


 
Keywords:  
SAT, ITR-RESCUE, crisis management, situational awareness, spatial awareness, spatial uncertainty, domain awareness, human as sensor, community input
  

  

Downloadable files:  
Paper: SV07_dvk.pdf 
  
  


BibTeX entry: 
@incollection{SV07::dvk,
  author     = {Naveen Ashish and Dmitri V.\ Kalashnikov and Sharad Mehrotra and 
                Nalini Venkatasubramanian and Ron Eguchi and Rajesh Hegde and Padhraic Smyth},
  editor     = {Hsinchun Chen and Edna Reid and Joshua Sinai and Andrew Silke and Boaz Ganoz},
  title      = {Situational Awareness Technologies for Disaster Response},
  booktitle  = {Terrorism Informatics: Knowledge Management and Data Mining for Homeland Security},
  publisher  = {Springer},
  month      = dec,
  year       = 2007
}
 

Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/ICDE09_dvk_WEST.html
##-----------------TITLE------------------------##
WEST: Modern Technologies for Web People Search (IEEE ICDE 2009)
##------------------TEXT------------------------##
WEST: Modern Technologies for Web People Search.
Appeared in IEEE ICDE Conference, March 2009.




Dmitri V. Kalashnikov, Zhaoqi Chen, Rabia Nuray-Turan, Sharad Mehrotra, and Zheng Zhang



Computer Science Department
University of California, Irvine
GDF project (http://www.ics.uci.edu/~dvk/GDF)



Abstract



In this paper we describe WEST (Web Entity Search Technologies) system that we have developed to improve people search over the Internet. Recently the problem of Web People Search (WePS) has attracted significant attention from both the industry and academia. In the classic formulation of WePS problem the user issues a query to a web search engine that consists of a name of a person of interest. For such a query, a traditional search engine such as Yahoo or Google would return webpages that are related to {\em any} people who happened to have the queried name. The goal of WePS, instead, is to output a set of clusters of webpages, one cluster per each distinct person, containing all of the webpages related to that person. The user then can locate the desired cluster and explore the webpages it contains... 



Categories and Subject Descriptors:
H.2.m [Database Management]: Miscellaneous - Web People Search;
H.2.8 [Database Management]: Database Applications - Data mining;
H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval


Keywords:
Web People Search, WEPS, clustering,
Skyline Based Classifier,
Web co-occurrence,
Entity Resolution,
Disambiguation



Downloadable files:
Paper: ICDE09_dvk_WEST.pdf
Presentation: ICDE09_dvk_WEST.ppt



BibTeX entry:
@inproceedings{ICDE09::dvk_demo,
   author    = {Dmitri V. Kalashnikov and Zhaoqi Chen and Rabia Nuray-Turan and Sharad Mehrotra and Zheng Zhang},
   title     = {{WEST}: {M}odern Technologies for {Web People Search}},
   booktitle = {Proc.\ of the 25th IEEE Int’l Conference on Data Engineering (IEEE ICDE 2009)},
   note      = {demo publication},
   year      = {2009},   
   month     = {March 29 - April 4},
   address   = {Shanghai, China}   
}




Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/EncGIS08_dvk.html
##-----------------TITLE------------------------##
Query Indexing and Velocity Constrained Indexing (Encyclopedia of GIS 
			2008)
##------------------TEXT------------------------##
Query Indexing and Velocity Constrained Indexing.
		Appeared in Encyclopedia of GIS, Springer Science, 2008.
		
		
		
			
				Sunil Prabhakar, Dmitri V. Kalashnikov, and Yuni Xia
			
			
			
				Department of Computer Sciences
				Purdue University
				PLACE project (http://www.cs.purdue.edu/place)
			
			
			Abstract
			
				Moving object environments are characterized by large
numbers of moving objects and numerous concurrent continuous queries over these objects. Efficient evaluation of
these queries in response to the movement of the objects is
critical for supporting acceptable response times. In such
environments the traditional approach of building an index
on the objects (data) suffers from the need for frequent
updates and thereby results in poor performance. In fact,
a brute force, no-index strategy yields better performance
in many cases. Neither the traditional approach, nor the
brute force strategy achieve reasonable query processing
times. The efficient and scalable evaluation of multiple
continuous queries on moving objects can be achieved by
leveraging two complimentary techniques: Query Indexing
and Velocity Constrained Indexing (VCI). Query Indexing
relies on i) incremental evaluation; ii) reversing the role
of queries and data; and iii) exploiting the relative locations 
of objects and queries. VCI takes advantage of the
maximum possible speed of objects in order to delay the
expensive operation of updating an index to reflect the
movement of objects. In contrast to techniques that require
exact knowledge about the movement of the objects, VCI
does not rely on such information. While Query Indexing
outperforms VCI, it does not efficiently handle the arrival
of new queries. Velocity constrained indexing, on the other 
hand, is unaffected by changes in queries. A combination 
of Query Indexing and Velocity Constrained Indexing
enables the scalable execution of insertion and deletion of
queries in addition to processing ongoing queries.
			
			
			
				Keywords: 
				Moving objects, query indexing, Q-index, velocity constrained 
       indexing, VCI, continuous queries, long-running queries, monitoring queries, 
       continuous range queries, location-aware computing
			
			
			
				Downloadable files:	
				Paper: EncGIS08_dvk.pdf
				
			
			
			
			BibTeX entry:
			@incollection{GISEnc08::dvk,
  author     = {Sunil Prabhakar and Dmitri V. Kalashnikov and Yuni Xia},
  editor     = {Shashi Shekhar and Hui Xiong},
  title      = {Query Indexing and Velocity Constrained Indexing},
  booktitle  = {Encyclopedia of GIS},
  publisher  = {{Springer Science}},
  year       = 2008
}



			Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~dvk/pub/IS07_dvk_pqry.html
##-----------------TITLE------------------------##
Evaluation of Probabilistic Queries over Imprecise Data in
Constantly-Evolving Environments (Information Systems Journal 2007)
##------------------TEXT------------------------##
Evaluation of Probabilistic Queries over Imprecise Data in
Constantly-Evolving Environments.   
Information Systems Journal, 32(1), March 2007.

  
 
  
  
Reynold Cheng, Dmitri V. Kalashnikov, and Sunil Prabhakar 
  
  
Department of Computer Sciences  
Purdue University  
  
  
Abstract
  
Sensors are often employed to monitor continuously changing entities like locations of moving objects
and temperature. The sensor readings are reported to a database system, and are subsequently
used to answer queries. Due to continuous changes in these values and limited resources (e.g., network
bandwidth and battery power), the database may not be able to keep track of the actual values
of the entities. Queries that use these old values may produce incorrect answers. However, if the
degree of uncertainty between the actual data value and the database value is limited, one can place
more confidence in the answers to the queries. More generally, query answers can be augmented with
probabilistic guarantees of the validity of the answers. In this paper, we study probabilistic query
evaluation based on uncertain data. A classification of queries is made based upon the nature of the
result set. For each class, we develop algorithms for computing probabilistic answers, and provide
efficient indexing and numeric solutions. We address the important issue of measuring the quality of
the answers to these queries, and provide algorithms for efficiently pulling data from relevant sensors
or moving objects in order to improve the quality of the executing queries. Extensive experiments
are performed to examine the effectiveness of several data update policies.
  


 
Keywords: Sensor databases, 
			querying imprecise data, 
            uncertainty, 
            uncertainty region, 
            handling uncertainty, 
            models of uncertainty, 
            aggregate query,   
            entity-based query, 
            value-based query, 
            probabilistic queries, 
            quality of probabilistic answer, 
            update heuristics, 
            location-aware computing,  
  

  
  
Downloadable files:
Paper: IS07_dvk_pqry.pdf 
See also a moving-object environment solution to a similar problem.  
  
  


BibTeX entry: 
@article{IS07::dvkPQ,
   author    = {Reynold Cheng and Dmitri V.\ Kalashnikov and Sunil Prabhakar},
   title     = {Evaluation of Probabilistic Queries over Imprecise Data in Constantly-Evolving Environments},
   journal   = IS,
   volume    = 32,
   number    = 1,
   pages     = {104--130},
   month     = mar,    
   year      = 2007
}



Back to Kalashnikov's homepage
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-WQ00/projects/projects.html
##-----------------TITLE------------------------##

##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN
    PROJECT OPPORTUNITIES
    



Error Injection Tool

offered and sponsored by Compaq
    Computer Corp. Customer Contact: Rajnesh Avtar  

FlowersWeb Project

offered and sponsored by the FlowersWeb, Inc. Customer Contact: Al Devile 

Workflow Model Editor

offered by the Software Group of the ICS Department at UC Irvine Customer Contact: Mark Bergman 

Complex Problem Discovery Capture

offered by the Software Group of the ICS Department at UC Irvine Customer Contact: Mark Bergman 

Klax Game Extension

offered by the Software Group of the ICS Department at UC Irvine Customer Contact: Peyman Oreizy 

Wireless Access Protocol

offered by the Software Group of the ICS Department at UC Irvine Customer Contact: Arthur Hitomi 

Visualizing and Exploring Document Spaces

offered by the Information Access & Management Group of the ICS Department at UC Irvine Customer Contact: Dave Goggin 

Athletics Helper

offered by the Athletic Department at UC Irvine Customer Contact: Paul Hope  



ICS125 WQ00
David F. Redmiles ­ Home Page
Department of Information and Computer Science
University of California, Irvine CA 92717-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-WQ00/students.html
##-----------------TITLE------------------------##
ICS 125 Participants
##------------------TEXT------------------------##
ICS 125 Teams



FlowersWeb
Project (TA: Jie Ren)


Team 2: Umoja (email)
Giang, Linda
Hovland, August (spokesperson)
Kahf, Baraa
Musisi, Frank
Olivas, Jesse
 

Team 5: ITFusion (email)
Nguyen, Kevin
Nguyen, Khoi
Nguyen, Tung (spokesperson)
Nguyen, Vuong
Phung, Binh
Vu, Hien
 

Team 6: Websoft 2000 (email)
Azma, Wissam (spokesperson)
Chao, Ming
Le, Tuan
Nguyen, Thy
Vo, Duyen
Vo, Khanh
Vo, Tuan
 

Team 8: E-Solutions
(email)
Chan, Matthew
Fajardo, Alvin
Garcia,
Alfred
Le, Khang
Pham, James
Widarto,
Marcel (spokesperson)
 

Team 12: JoyRide (email)
Caoile, Alexander
Chan, Sheldon
Fatolahzadeh, Shali
Yeung, Antonia (spokesperson)
 

Team 13: DevPro (email)
Asuncion, Hazeline (spokesperson)
Chun, Eun
Hang, Jenny
Long, Peggy
Wei, Cindy
 


Error
Injection Project (TA: Chris Lüer)


Team 7: Sisquo Technologies
(email)
Chan, Brian
Ho, Maximilian
Hsu, Chris
Raymundo, Martin (spokesperson)
Reyes,
Ryan
 

Team 9: EP Solutions (email)
Hamid, Hassan (spokesperson)
Le, Robert
Moret, Steve
Singh, Jasminder
Stark, Jeremiah
 


Stadium
Sound Project (TA: Chris Lüer)


Team 10: ImaginaTech Solutions
(email)
Kuo, Wei-Chih
Lu, Allan
Palavivatana, Greg
(spokesperson)
Yao, Bernard
Yeh, Hugo
 

Team 14: Inventive
Development & Consulting (email)
Collin, Nikolas
(spokesperson)
Sellberg,
Rasmus
 


Endeavors
Project (TA: Jie Ren)


Team 4: JTML (email)
Hong, Trinh Ngoc
Khuong, Dang-Linh
Le, Tracy
Nguyen, Loc (spokesperson)
Tran, Joan
 


Wireless
Email Project (TA: Chris Lüer)


Team 3: Wappers (email)
Cheng, William
Kwak, Kyong
Lin, Chun Kai Mike (spokesperson)
Ly, Linh
Nguyen, Nghia
Steve
Nguyen, Van
 

Team 11: Synergy Solutions
(email)
Jo, Won Sang (spokesperson)
Kwak, Minsang
Lou, Chi Fong Albert
Ohashi,
Tetsu
Su, Douglas Yu-Cheng
 


Document
Visualization Project (TA: Chris Lüer)


Team 1: VEDS (email)
Le, Tam
Nguyen, Hai Kim
Nguyen, Hai Ngoc (spokesperson)
Nguyen, Huy Ngoc
Tran, Huyentran
Truong, Hong-Nga
 


ICS125
WQ00
David F. Redmiles ­
Home Page
Department of Information and Computer
Science
University of California, Irvine CA 92717-3425
 
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-WQ00/syllabus.html
##-----------------TITLE------------------------##
ICS 125
##------------------TEXT------------------------##
 


UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN


SYLLABUS




Instruction


Professor: David Redmiles
Office: ICS2 215
Office hours: available by email appointment
Email: redmiles@ics.uci.edu


Newsgroup: ics.125b


Teaching Assistant: Chris Lüer
Office: ICS2 253
Office hours: by email appointment
Email: cluer@ics.uci.edu


Teaching Assistant: Jie Ren
Office: ICS2 246
Office hours: by email appointment
Email: jie@ics.uci.edu


Lecture


Time: Tuesdays and Thursdays 2:00-3:20
Room: SH 128


Discussion


Time: Mondays, Wednesdays, and Fridays 1:00-1:50 (as scheduled)
Room: IERF B011, IERF B015


Course Description (from catalog)
Specification, design, construction, testing, and documentation of a complete
software system using concepts learned in ICS 52, 121, and 141. Special
emphasis on the need for and use of teamwork, careful planning, and other
techniques for working with large systems.

Course Description (Redmiles' version)
ICS 121, Introduction to Software Engineering, focused on the conceptual
issues of software development: problem analysis, definition, lifecycle
considerations, verification and validation, requirements specification,
and architectural design. In this class, we will focus on applying these
concepts in a realistic problem setting. Students will work in teams to
carry a project through all the phases of software development, from problem
definition to implementation. The problems are drawn from actual industry
and research domains. The experience is crucial in developing skills for
team efforts and application-specific processes. No two project teams are
exactly alike and no two projects follow exactly the same development process
in detail. In class presentations by teams and discussion will help all
to understand the commonalities and differences and learn from the variety
of projects.

Add/Drop Policy
No drops after week2 ( except for medical reasons )

Prerequisites


ICS 51 (Grade C or better)
ICS 121 and ICS 141
MATH 2A-B-C


Grading
A variety of project topics will be introduced during the first week and
a half of class. You will split into teams of about 5 students each, bidding
on and being assigned a project in the second week. You will implement
the project through a series of 5 assignments (see below) that will constitute
80% of the Grade. The next 20% of the grade will be determined by a variety
of assignments including occasional in class updates. There will be a final
constituting the remaining 5% of the grade. Normally, team members will
all receive the same grade.
The five major assignments constituting the term project are as follows:

Project Bid (Due Week 2, 5% Grade)
Problem Analysis and Requirements (Due Week 4, 15% Grade)
Prototype (Due Week 5, 10% Grade)
Architectural Design (Due Week 6, 20% Grade)
Final Project (Due Finals Week, 25% Grade)
Additional assignments constituting 20% of the grade are as follows:

Individual Web Page
Team Web Page
Project Updates
Team Logs ( Due weekly )
There will be a final worth 5% of the grade

Optional Texts
The folowing texts are recommended:

Brooks, F. (1995). The Mythical Man-Month. (Anniversary Edition).
Reading, MA: Addison-Wesley Publishing Company.
Fowler, M., Scott, K. (1997) UML Distilled : Applying the Standard Object
Modeling Language. Reading, MA: Addison-Wesley Publishing Company.
Flanagan, D. (1997) Java in a Nutshell : A Desktop Quick Reference,
2nd Edition. Cambridge, MA: O'Reilly & Associates.
Flanagan, D. (1997) Java Examples in a Nutshell : A Tutorial Companion
to Java in a Nutshell. Cambridge, MA: O'Reilly & Associates.
The course assumes that you have already read The Mythical Man-Month
in ICS 121. The texts on UML will assist you in completing your architectual
design assignment. The texts on Java will assist those of you who choose
to do your implmentation in Java.

Computer Usage
Project implementation platforms will vary by project, although some platforms
will be recommended. Teams will be given offices to meet, beginning approximately 
the second week of class.
You should check the class bulletin board ics.125a (or ics.125b) daily, 
for updates, news messages, etc.

Academic Dishonesty
Cheating in ICS 125 will be dealt with in accordance with ICS
policy. Please familiarize yourself with that policy.


ICS125
WQ00
David F. Redmiles ­
Home Page
Department of Information and Computer
Science
University of California, Irvine CA 92717-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-WQ00/links.html
##-----------------TITLE------------------------##

##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN
    RELATED LINKS
    




Software Engineering Institute the group that does the CMM and more.UML Distilledsupplementary information about one of our class texts.Gamelon: The
    Official Directory for JavaTHE place to find reusable components for your 
    Java implementations. 


  



ICS125 WQ00
David F. Redmiles ­ Home Page
Department of Information and Computer Science
University of California, Irvine CA 92717-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~redmiles/ics125-WQ00/assignments/assignments.html
##-----------------TITLE------------------------##
untitled
##------------------TEXT------------------------##
UC IRVINE - ICS 125 PROJECT IN SYSTEM DESIGN
    ASSIGNMENTS
    



Assignment 1: Project Bid, Due Jan 18

Homework 1: Individual Web Page, Due Jan 28
Homework 2: Team Web Page, Due Jan 28
Assignment 2: Requirements, Due Feb 1

Assignment 3: Prototype, Scheduled Demonstrations starting on Feb 17 ( Varies according to team )

Assignment 4: Design, Due 2 weeks after prototype ( Each group has its own due date )  

Assignment 5: Final, Due on final demo date

Ongoing Homework: Team Logs



ICS125 WQ00
David F. Redmiles Home Page
Department of Information and Computer Science
University of California, Irvine CA 92717-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics142/CourseReference.html
##-----------------TITLE------------------------##
ICS 142 Winter 2004, Course Reference
##------------------TEXT------------------------##
ICS 142 Winter 2004 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.142 newsgroup |
About Alex








ICS 142: Compilers and Interpreters
   Winter 2004
   Course Reference







Instructor information

Alex ThorntonOffice: CS 408FPhone: (949) 824-6624Email:  thornton@ics.uci.edu

Office hours: I will be available in or around my office Mondays 2-4pm, and Tuesdays and Thursdays 1-2pm, during which all course-related issues will have the highest priority.  I'm in my office at many other times during the week, and if I'm not working on something urgently, I'll be glad to sit down and talk with you.

Contacting me: I tend to be much easier to reach via email than by phone, so I would suggest using email to contact me under normal circumstances.  When you write me an email, please take a few moments to make sure that the following information is placed somewhere in your message: your name, your student ID#, and which course you're enrolled in (as I'm teaching more than one).







Times and places

The lecture meets on Wednesdays and Fridays from 4:00-5:20pm in ELH 100.







Textbook

Engineering a Compilerby Keith D. Cooper and Linda TorczonElsevier 2004ISBN 1-55860-698-XREQUIRED







The TA and discussion section

The TA is Carmen Badea (carmen@ics.uci.edu).  She will be in charge of the discussion sections and will oversee the process of grading (though we will have separate graders who will do the actual grading work).  Discussion sections will focus on a combination of lecture- and homework-related material.

Discussion sections will begin meeting Wednesday, January 14.  The meeting times and places are:

SectionTime and PlaceSec. 1W 1:00-1:50pmCS 174Sec. 2F 1:00-1:50pmCS 174









Obtaining additional assistance

You can most easily get course questions answered by coming to lecture and/or discussion and asking them!  You can also ask questions by sending email to me and/or the TA; we both read and respond to our email often.  Thus, you can usually get a response to your course-related questions within a few hours (sometimes less frequently on weekends and holidays).  If the questions require a complex or lengthy response, we may ask you to see one of us in person.  As assignments approach their due date, particularly on days when assignments are due, we begin to receive quite a bit of email all at once, so we may not be able to respond to all messages before the assignment is due; if that's the case, we will not send a response if we can't get to it before the assignment is due.  We aren't ignoring you on purpose, but unfortunately it's not always possible for the relatively small course staff to answer questions from a large number of students at once.

You are also more than welcome to participate on the ics.142 newsgroup.  Those of you who have taken ICS courses in previous quarters will likely be familiar with how to use newsgroups.  If you aren't, ask us, and we'll help you get set up.  Your participation on the newsgroup is encouraged; I hope that this will become an effective mechanism for discussion throughout the quarter, and that students can help other students.  At the very least, read it periodically, as I will be using it to make coursewide announcements from time to time.  You are responsible for knowing what goes on there.  Please make sure that you read the ground rules that I have posted there, as I will expect that you follow them.

If you don't know what a newsgroup is or how to connect to it, no problem!  I've written a document that explains everything you'll need to know to get connected.

Any student who feels he or she may need an accommodation based on the impact of a disability should contact me privately to discuss his or her specific needs.  Also, contact the Disability Services Center at (949) 824-7494 as soon as possible to better ensure that such accommodations, such as alternative test-taking environments or note-taking services, are implemented in a timely fashion.







Grading

Your course grade will be determined from the weighted combination of your scores on each of eight assignments, one Midterm, and one Final Exam.  The weights of each of these are:

Six assignments, 30% total (weighted equally at roughly 5% each)Midterm, 30%Final Exam, 40%

Course grades will be determined neither on a normal curve nor a straight scale.  It is guaranteed that overall scores over 90% will receive an A- or better, scores over 80% will receive a B- or better, and scores over 70% will receive a C or better.  However, the actual cutoffs may be lowered at the end of the quarter.  (In short, it is not my intention to fail half of the students, nor am I planning on giving only 2% of the students A's.)







Dropping the course or changing grade option

ICS has instituted a second-week drop policy for all ICS courses.  What this means is, regardless of your major, you will not be allowed to drop this course after the end of the second week under any circumstances (except for extreme medical or financial hardship).

Similarly, changing grade option to Pass/NotPass is not permitted after the end of the second week.  Regardless of your major, you will not be allowed to change your grade option after this deadline under any circumstances.

I will sign all drop and change cards, so please do not approach your TA with these cards.  Your TA is not authorized to sign them!







Academic dishonesty

As ICS 142 students, you are expected to know and follow the academic dishonesty policies of both the ICS Department and the University as a whole.  Please take a few minutes to read the policies, which can be found at this link.

All of your lab work is expected to be completed solely by you.  Group work and/or sharing of code between students is not permitted.  Note that "high-level discussion of course material for better understanding" is permitted and encouraged, but when it comes time to sit down and write code, that is expected to be done by you and you alone.  All submissions are compared to one another using an automated plagiarism detection system.  This system is extraordinarily good at finding similarities between submissions, even when there are superficial differences.  (Note that we also compare your submissions to those submitted during previous quarters whenever one of these assignments was given during a previous quarter, so it is an exceedingly bad idea to turn in, or even refer to, code written by a friend of yours who took the course already.)

Since all of your work is expected to be completed solely by you, you will be held responsible even if you plagiarize only a small portion of someone else's project.

Academic dishonesty is a two-way street.  Providing your code to other students for them to turn in as their own is not permitted anymore than turning in someone else's code.  Resist the temptation to give code to your friends "for reference."  Based on my experience, I can say that your "friends" may very well betray you and turn it in, anyway.

Naturally, the Midterm and Final Exam are also expected to be individual efforts.  Dishonest behavior during an exam will not be tolerated.

Violators of academic dishonesty policies are subject to the penalties described in the ICS Department's policy.  They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade.  Also be aware that a single documented case of academic dishonesty may preclude you from switching into the ICS major, registering for the ICS minor, joining the ICS Honors Program, and graduating from ICS with honors.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics142/LabManual/SettingUpJava.html
##-----------------TITLE------------------------##
ICS 142 Winter 2004, Setting Up Java At Home
##------------------TEXT------------------------##
ICS 142 Winter 2004 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.142 newsgroup |
About Alex








ICS 142 Winter 2004
   Setting Up Java At Home







A word of warning

One of the advantages of programming in Java is that it's possible to set up your own computer as a Java development environment easily and cheaply.  On the other hand, working in the lab has some genuine benefits, particularly for those of you who are fairly new to programming.  In the lab, you'll find that help is more readily available when you get stuck, that your machine setup will generally be stable and designed well for the task of working on your assignments, and that you're free of the distractions of your home.

Nevertheless, I'm aware that many of you, either out of want or need, will choose to do some percentage of your work at home.  What follows is enough information to turn your Windows-based machine into a Java development environment at little or no cost.







Getting started

Before you get started, be aware that this document only describes how to set up Java on a Windows machine.  If you're using a Macintosh or running Linux, I'm sorry to say that you're on your own -- though you may find that many of the concepts here will translate fairly well to your system.

First and foremost, you need a Java compiler and Java virtual machine.  There are several packages that include these tools, but a great option is to download the Java 2 Standard Edition (J2SE) SDK from java.sun.com.  J2SE is absolutely free!  The latest stable version if 1.4.2_03.  J2SE includes a Java compiler (javac), a Java virtual machine (java), and all of the standard Java library components -- in other words, everything you need to write Java programs in a wide variety of problem domains, and more than enough firepower for the assignments we'll be giving you.  Make sure that you download the SDK, not the JRE.  The JRE is the Java Runtime Environment, which includes the necessary code to allow you to run Java programs, but not to write and compile them!

Secondly, you'll need a text editor, which you'll use to write and edit your program code.  There are many inexpensive and/or free options available.  In the lab, we provide TextPad, which you can download from www.textpad.com.  TextPad requires a modest registration fee, which you should pay if you plan to use it on a continuous basis.  You may be able to find free text editors, particularly those written in Java, at shareware/freeware download sites such as www.download.com.







Installation: the easy part

Presumably, your text editor will include an installation program to set it up and make it completely ready for your use.

J2SE also includes an installation program, which places all of the files into the appropriate places and sets up some desktop shortcuts for you.  However, after running the installation program, you still won't be able to execute javac or java, without making a couple of modifications "under the hood" of your system.







The (not all that) hard part: PATH and CLASSPATH

You can execute programs from a Command Prompt (or, as Windows 95/98 call it, an "MS-DOS prompt") by simply typing their names, such as javac or java.  But there's a catch: Windows has to know where it can find these programs.  This is the job of the PATH environment variable.  PATH is a list of folders, separated by semicolons, in which Windows will look for a program whenever you try to execute one.

Similarly, whenever the Java compiler or Java virtual machine need to be able to use a Java class (such as when you import a class from the Java library), the compiler or virtual machine needs to be able to know where to find it.  This is the job of the CLASSPATH environment variable.  CLASSPATH is a list of folders, separated by semicolons, in which the Java compiler or virtual machine will look for a Java class whenever it's trying to find one.

So, to make J2SE work, you have to modify the PATH and CLASSPATH environment variables on your system, so that Windows will be able to find javac and java, and so that javac and java will be able to find all of the necessary Java classes.

How you modify these variables depends on which version of Windows you're using.  In either case, I'll assume that you've installed J2SE into the default directory during installation, which is C:\j2sdk1.4.2_03.  If you installed it somewhere else, you'll need to use your installation directory instead of the one above.

On Windows 95, 98, and probably ME.  (I say "probably" because I don't have a version of ME handy to test this with.)  On these versions of Windows, you can set the PATH and CLASSPATH by modifying the file C:\AUTOEXEC.BAT.  Add the following two lines to the end of this file:


set PATH=%PATH%;C:\j2sdk1.4.2_03\bin
set CLASSPATH=%CLASSPATH%;.;C:\j2sdk1.4.2_03\lib


You'll probably need to restart your system for these changes to take effect.

On Windows 2000 and XP.  Right-click the My Computer icon on your desktop and select Properties.  Select the Advanced tab.  Click the Environment Variables... button.  Under "System variables," find the PATH variable and add this to the end of it:


;C:\j2sdk1.4.2_03\bin


Then find the CLASSPATH variable.  If it doesn't exist (and it probably won't, if you've never used your system to develop Java code), click the New... button, specifying CLASSPATH as its name, and the following value:


.;C:\j2sdk1.4.2_03\lib


You may need to restart your system, or at least start up a new Command Prompt window, in order for these changes to take effect.







That's it!

At this point, you should be good to go.  Happy coding!







A few minor changes by Alex Thornton, Fall 2002.Originally written by Alex Thornton for ICS 21 and ICS 22, Summer 2002.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics142/MidtermAnswers.html
##-----------------TITLE------------------------##
ICS 142 Winter 2004, Midterm Answer Sheet
##------------------TEXT------------------------##
ICS 142 Winter 2004 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.142 newsgroup |
About Alex








ICS 142 Winter 2004
   Midterm Answer Sheet







Introduction

There were three versions of the exam.  Though all three asked essentially the same questions, some minor changes were made to distinguish them from one another.  The answers for all three versions appear below; it should be evident from your exam sheet which answers are relevant for your version.

If you're wondering about your score, have a look at the Midterm scores.







The answers

Problem 1

Results on this problem were mixed, with an average score of 4.6 out of 8.  Many people lost a point on the first part, as they didn't answer the question that was asked.  Several others didn't write regular expressions, but instead wrote grammars or some other kind of notation that we couldn't unscramble.

a)

The answers here were:

Version AVersion BVersion Ca+b+x+y+y+x+

Other equivalent regular expressions, such as aa*bb* were accepted, as well.  The most common wrong answer was one of the form ab+, which was awarded half-credit.

b)

There are certainly multiple reasonable solutions to this problem (which mimicked a problem you faced on one of the lab assignments), but straightforward answers were:

Version AVersion BVersion C[A-Z] [a-z]* ($ [A-Z] [a-z]*)*[A-Z] [a-z]* (- [A-z] [a-z]*)*[a-z] [A-Z]* (^ [a-z] [A-Z]*)*

Other answers that were equivalent were accepted.  Of the three points possible, one was allocated to the first part (building one word) and two more were allocated to the second part (the subsequent words, separated by the appropriate character).

c)

Again, more than one answer was acceptable here.  Some students used JFlex-style shorthands; if we could decipher them (i.e. they were clear and were not recursive!), we still tried to award credit when we could.  This question was the same on all three versions, and one possible good answer was:

All Three Versions(0 | [1-9] [0-9]*) (. (0 | [0-9]* [1-9]))?



Problem 2

This problem asked for the output of a JFlex script, given a set of patterns with actions that called System.out.println.  It essentially tested whether you understood the greedy matching algorithm used by JFlex (i.e. one that always takes the longest possible match).  By and large, students did very well on this question, averaging 4.5 out of 6 points.

Roughly speaking, one point was deducted for each kind of mistake found, such as matching substrings of a-e and 1-5 separately, not matching the longest one, etc.  Also, 1 point was deducted for an output format not matching the requirements, such as a long sequence of numbers (e.g. "245341353").

The JFlex script was the same on the three versions, though the input strings were different.  The correct answers were:

Version AVersion BVersion C
      2 abcd
      4 77
      5 cabc234
      3 Q
      4 7
      1 abc
      3 J
      5 3c2a1
      3 H
    
      2 abcd
      4 00
      5 babc123
      3 Z
      4 0
      1 abc
      3 G
      5 5a3b4
      3 F
    
      2 abcd
      4 99
      5 cbab234
      3 V
      4 9
      1 abc
      3 F
      5 4b2c3
      3 G
    



Problem 3

By and large, students did pretty well on the first part and not well at all on the second part.  The average score overall on the problem was 4.5 out of 8.

a)

The three versions differed only in terms of the regular expression that appeared in part (a), though all three regular expressions were of a similar form, so I'll just show the answer for one of the versions (for which the regular expression was a | (bc)*).  Since the problem specifically asked you to use Thompson's construction, equivalent NFA's (i.e. NFA's that are different -- including DFA's! -- but accept the same language) were not accepted.



b)

This part of the problem was the same on all three versions.  Since the problem specifically asked you to use the subset construction to build the DFA, equivalent DFA's (i.e. DFA's that are different but accept the same language) were not accepted.  Naturally, NFA's were not accepted either.  State names were not considered relevant.



It should be pointed out that, even though all three of this DFA's are accept states, it still doesn't accept all strings.  Strings such as b or abab are not accepted by it.



Problem 4

Answers for this problem (which I graded myself) were all over the map.  The average score on it was 3.9 out of 8, with a substantial portion of that coming from part (a).  Part (b) was a disaster, but it was a great deal more difficult than I'd originally intended.

a)

This problem had a wide variety of answers, many of which were clearly not LL(1).  Many students tried a variety of transformations that don't make any sense, such as flip-flopping rules like Y → Ybc to Y → bcY.  More than one answer was considered correct, but it had to be an LL(1) grammar that accepted the same language.

The straightforward answer, which you could arrive at by performing the transformations we discussed in class on the original grammar, was:

Version AVersion BVersion C
      X → Ya | Zbc
      Y → abaY' | cabaY'
      Y' → bcY' | ε
      Z → bZ'
      Z' → bc | c
    
      A → Bx | Cyz
      B → xyxB' | zxyxB'
      B' → yzB' | ε
      C → yC'
      C' → yz | z
    
      D → Er | Fst
      E → rsrE' | trsrE'
      E' → stE' | ε
      F → sF'
      F' → st | t
    

Partial credit was given for transforming portions of the grammar correctly, even if the entire grammar was not LL(1).  Students were much more commonly able to transform Z → bbc | bc to Z → bZ' and Z' → bc | c than they were able to perform the left recursion elimination on Y correctly.

b)

This problem actually couldn't be solved using strictly the techniques shown in class.  For that reason, I accepted some answers that were arrived at by applying as many of these transformations as could be applied, even if the final grammar was not LL(1).  (Few students got this far, as it turned out, and the most common score on this part of the problem was 1 out of 4, awarded for attempting to perform some kind of transformation to the grammar.)  A few students applied some ingenuity, reverse engineering the grammar and building a new one.  After inspecting the behavior of the grammar, you can discover that the grammar describes a language that can be described by the regular expression ab (bb | cb)*, from which you can build a grammar.

The incorrect but acceptable answer looked like this:

Version AVersion BVersion C
      X → Yb
      Y → aY'
      Y' → ε | bY''
      Y'' → bY' | cY'
    
      A → By
      B → xB'
      B' → ε | yB''
      B'' → yB' | zB'
    
      D → Es
      E → rE'
      E' → ε | sE''
      E'' → sE' | tE'
    

(These grammars are not LL(1) because, for example, starting with this derivation: X ⇒ Yb ⇒ aY'b ⇒ ...it is not clear now, with the next character of input being a b, whether we should expand by Y' → bY'', or by Y' → ε.)

Correct answers looked like one of these grammars (or something very much like them):

Version AVersion BVersion C
      X → abY
      Y → bbY | cbY | ε
      
      or
      
      X → aY
      Y → bY'
      Y' → ε | bbY' | cbY'
    
      A → xyB
      B → yyB | zyB | ε
      
      or
      
      A → xB
      B → yB'
      B' → ε | yyB' | zyB'
    
      D → rsE
      E → ssE | tsE | ε
      
      or
      
      D → rE
      E → sE'
      E' → ε | ssB' | tsB'
    

The answers are inspired by two different regular expressions: ab (bb | cb)* and a (bb | bc)* b.



Problem 5

After the homework assignment I gave on this topic, students seem to have gotten the point about FIRST and FOLLOW sets.  The average score on this problem was 7.8 out of 9.

a)

The first five sets had only one element each; they were worth a total of one point.  The others were worth one point each.

Version AVersion BVersion C
      FIRST(ε) = { ε }
      FIRST(a) = { a }
      FIRST(b) = { b }
      FIRST(c) = { c }
      FIRST(d) = { d }
      FIRST(S) = { b, c, d, a, ε }
      FIRST(X) = { b, c }
      FIRST(Y) = { d, a, ε }
    
      FIRST(ε) = { ε }
      FIRST(x) = { x }
      FIRST(y) = { y }
      FIRST(z) = { z }
      FIRST(w) = { w }
      FIRST(S) = { y, z, w, x, ε }
      FIRST(A) = { y, z }
      FIRST(B) = { w, x, ε }
    
      FIRST(ε) = { ε }
      FIRST(r) = { r }
      FIRST(s) = { s }
      FIRST(t) = { t }
      FIRST(v) = { v }
      FIRST(S) = { s, t, v, r, ε }
      FIRST(D) = { s, t }
      FIRST(E) = { v, r, ε }
    

b)

Results were strong here, too, with some of the most common mistakes being including ε and not including eof.  These were worth one point each.

Version AVersion BVersion C
      FOLLOW(S) = { eof }
      FOLLOW(X) = { eof, d, a }
      FOLLOW(Y) = { eof, c }
    
      FOLLOW(S) = { eof }
      FOLLOW(A) = { eof, w, x }
      FOLLOW(B) = { eof, z }
    
      FOLLOW(S) = { eof }
      FOLLOW(D) = { eof, v, r }
      FOLLOW(E) = { eof, t }
    

c)

This was worth two points, all or nothing.  The answer was Yes!!! (though the exclamation marks were not required :) ).



Problem 6

Students didn't do particularly well on this question, with the average score being 4.4 out of 9.  As with most other questions on the exam, a wide variety of answers were given.

For all three parts of the problem, the following rubric was used for grading (and marks were made accordingly with the notation shown in parentheses):

-0.25 points for each wrong or missing lookahead (WL / NL)-1 point for not computing the closure of a set (NC)-0.5 points for missing an item in a set (MI)-2 points for a wrong set of LR(1) items in part b (TWS, WS)-1 point for missing the first item in goto in part b (MFI)-2 points for missing first set of LR(1) items in part b (N1S)-2 points for missing second set of LR(1) items in part b (N2S)-2 points for missing third set of LR(1) items in part b (N3S)If many more items than needed were listed, no credit was given.

a)

The initial state of the parser consisted of six LR(1) items.  Each was worth a half-point.

Version AVersion BVersion C
      { [Goal → • S, eof], 
      [S → • YY, eof], 
      [Y → • fY, f], 
      [Y → • fY, g], 
      [Y → • g, f], 
      [Y → • g, g] }
    
      { [Goal → • S, eof], 
      [S → • BB, eof], 
      [B → • eB, e], 
      [B → • eB, f], 
      [B → • f, e], 
      [B → • f, f] }
    
      { [Goal → • S, eof], 
      [S → • EE, eof], 
      [E → • gE, g], 
      [E → • gE, h], 
      [E → • h, g], 
      [E → • h, h] }
    

b)

If we apply goto to Sz, we can reach three distinct parse states.

Version AVersion BVersion C
      goto(Sz, Y) = { [S → YY •, eof] }
      
      goto(Sz, f) = { [Y → f • Y, eof],
      [Y → • fY, eof], [Y → • g, eof] }
      
      goto(Sz, g) = { [Y → g •, eof] }
    
      goto(Sz, B) = { [S → BB •, eof] }
      
      goto(Sz, e) = { [B → e • B, eof],
      [B → • eB, eof], [B → • f, eof] }
      
      goto(Sz, f) = { [B → f •, eof] }
    
      goto(Sz, E) = { [S → EE •, eof] }
      
      goto(Sz, g) = { [E → g • E, eof],
      [E → • gE, eof], [E → • h, eof] }
      
      goto(Sz, h) = { [E → h •, eof] }
    

Problem 7

This problem was thrown out, as it had at least one mistake on every version, and at least one more mistake on at least one of the versions.  Ugh!
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics142/MidtermStudyGuide.html
##-----------------TITLE------------------------##
ICS 142 Winter 2004, Midterm Study Guide
##------------------TEXT------------------------##
ICS 142 Winter 2004 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.142 newsgroup |
About Alex








ICS 142 Winter 2004
   Midterm Study Guide







Introduction

This study guide is a summary of the material covered in lecture thusfar.  I've estimated where we would end up by the conclusion of Wednesday's lecture.  Material we haven't covered by the end of Wednesday's lecture (and the readings that correspond to it) will not be included on the Midterm, even if it's listed below.  (This is the hazard presented by posting a study guide early, but I thought you'd rather have an estimated version earlier than a perfect version later.)

While I don't intend to include questions on the Midterm testing tiny details from the textbook that were not covered in lecture, you are responsible for the assigned readings.  Broad ideas and important points from the readings are fair game for the exam, even if we didn't cover them in lecture.  I haven't included this material in the study guide.  However, there are a few things that I've specifically listed below as off-limits for the exam (e.g. the DFA minimization algorithm), which will slightly reduce the amount of reading material you'll need to study.







The study guide

The big picture: What does a compiler do?

A compiler is a program that takes a program in some source language as its input, and emits an equivalent program in some target language as output.
    The notion of equivalent program needs to be defined.  An equivalent program is one that may or may not perform the same specific set of operations in the same order, but will generate the same observable result as the original one.In general, we'd like our compilers to make improvements to our programs, so long as the observable result is the same.  Such improvements are generally called optimizations.Of course, we need to think very carefully as compiler writers about what constitutes an "observable result."
  Compilers do a pretty big job.  Like any large piece of software, it makes sense to separate concerns, splitting the program into smaller pieces.
    For many years, a typical design strategy was to split the compiler into two pieces: a front end and a back end.
        The front end focused on validating the source program and understanding its meaning.The back end concerned itself with generating an equivalent program in the target language.
      The output of the front end was a simplified version of the source program, often called an intermediate representation (IR).
        The name intermediate representation arises because it's neither the source nor the target program, and is used only within the compiler.
      The back end assumes that the IR is well-formed, since it was built by the front end, rather than a fallible human programmer.This approach has a couple of clear advantages:
        Separation of concerns.  The jobs performed by the front and back ends are largely distinct, so it makes good software engineering sense to separate them.Reuse.  By building a library of front ends that build the same kind of IR, and a library of back ends that emit target programs for various architectures using that same kind of IR, one can easily build a large collection of compilers by simply connection different front ends to different back ends.
      
    A more recent overall design strategy includes a third component, an optimizer.  Optimizers take as input a program in some kind of IR and generate as output a "better" version of the program in some kind of IR (either the same kind or a different kind).
        What constitutes "better" is a matter of some debate.  There are many attributes of the program we could optimize: execution speed, code size, and power consumption are three examples.
      Not surprisingly, passing IR's between the phases allows you to plug together a front end, an optimizer (or a sequence of optimizers), and a back end to yield a compiler.
  Along the way, a compiler may use some global data structures, such as symbol tables, to record information about the program that is determined at different phases.

Desirable properties of a compiler

Ideally, we'd like compilers to exhibit certain desirable properties.
    Execution speed of compiled code.  If necessary, we'd like our compiler to be able to generate the most speed-efficient code possible.Size of compiled code.  We'd also like our compiler to be able to generate the most space-efficient code possible.  Oftentimes, this represents a tradeoff, whereby you give up execution speed for size and vice versa.  Ideally, programmers would be able to specify which is more important and instruct the compiler to trade one for the other.Error reporting.  We'd like our compiler to emit understandable error messages when an error is encountered in the source program.  (This is easier said than done.)Support for debugging.  Debugging is partially supported by a compiler.  To use a symbolic or graphical debugger on, say, a compiled C++ program, a compiler will need to be instructed to include information like variable names and function signatures into the generated code, information that's generally left out of a compiled C++ program.Execution speed of compiler.  All other things being equal, a fast compiler is better than a slow one.  Of course, we're often willing to use a slower compiler if it gives us other, more desirable benefits.
  

More details about the front end of a compiler

The front end's performs the following tasks:
    Reads the source program from some input source such as a file.Validates the source program, ensuring that it's a legal program in the programming language expected.Comes to an understanding of the meaning of the source program.Conveys that meaning (as concisely as possible) by building and returning an intermediate representation and passing it to later stages of compilation.
  Extracting and conveying the meaning of the source program is a big job.  It makes sense to divide it into smaller ones.
    The first stage is called scanning, in which the compiler takes the program, which is a stream of characters, and turns it into a stream meaningful patterns called tokens.  The rest of the compiler, then, does not need to concern itself with every character of the input program, but instead deals with larger abstractions such as identifiers and string literals.The next stage is called parsing, in which the compiler takes that stream of tokens and discovers whether these tokens form a syntactically legal program.  In this stage, only the syntax (the form of the program) is checked.  The semantics (or meaning) of the program is checked later.The third stage is called semantic analysis or context-sensitive analysis.  In this stage, the meaning of the program is determined, and semantic errors, such as using undeclared variables, are detected.
  

Scanning

A scanner's job is to recognize patterns in the input program and use those patterns to group characters togethers into tokens or words.A scanner is unconcerned with whether the sequence of tokens makes sense.  It is only concerned with recognizing legal tokens.One way to solve this problem is to build a hand-coded scanner, in which you write a sequence of conditional statements and loops to detect these patterns.
    While plausible for a very simple language, this can become very tedious in a big hurry.Some theory helps us to solve the problem in a better way.
  A deterministic finite automaton (DFA) is a five-tuple (S, Σ, δ, s0, SF):
    S is a finite set of statesΣ is the alphabet (the character set) used by the DFAδ is a function.  The value δ(s, c) indicates the state that the DFA should move to if it is in state s and sees the character c on the input.s0 ∈ S is the start stateSF ⊆ S is the set of final states
  A DFA begins in its start state, consuming each input symbol in order, and using the δ function to determine which state to move to.  If, after consuming all the input, the DFA is in a final state, the input is accepted.  If the DFA is not in a final state, the input is rejected.We say that the set of strings accepted by a DFA D is the language of D, denoted L(D).Implementing a DFA in a computer program turns out to be relatively straightforward:
    Declare a variable, say an integer, to keep track of the current state.Initialize that variable to the start state.Process the input characters in a loop, setting the state variable to the new state after each character.To easily look up the value of the δ function, store it in a two-dimensional array, with states as the rows and input characters (or groups of input characters) as the columns.
  In trying to use DFA's directly to build a scanner, we realize two things:
    Implementing a DFA in this way is tedious.  Specifying the δ function in a two-dimensional array will be painful.  A tool would help.Even with a tool that would take the definition of a DFA as input and spit out code for it as output, there's a problem.  There's quite a semantic distance between the problem we're trying to solve -- specifying the patterns we're interested in recognizing -- and the formalism we're using to solve it.
      Ideally, we'd rather specify the patterns in some more intuitive notation, and let a tool convert it to a DFA and spit out the code for it.
  

Regular expressions

A regular expression defines a language over some alphabet Σ.ε is a regular expression denoting the set containing only the empty string.A character c ∈ Σ is, itself, a regular expression that denotes a language consisting only of a string containing only c.The concatenation of two regular expressions R and S, denoted RS, is a regular expression.  The resulting regular expression describes a language of all strings that consist of a string in L(R) followed by a string in L(S).The alternation of two regular expressions R and S, denoted R | S, is a regular expression.  The resulting regular expression describes a language of all strings that are in L(R) ∪ L(S).The Kleene closure of a regular expression R, denoted R*, is a regular expression.  The resulting regular expression describes a language of all strings that consist of zero or more occurrences of strings in L(R) concatenated together.To simplify the notation, we specify operator precedences as follows:
    Kleene closure has the highest precedenceConcatenation has the next-highest precedenceAlternation has the lowest precedenceParentheses are used to override precedence, in much the same way as we use them in mathematics and programming languages.
  While the above is a complete definition of regular expressions in a mathematical sense, we use a few shorthands sometimes, too:
    We use the notation R+ to denote a language of all strings that consist of one or more occurrences of strings in L(R) concatenated together.  (In other words, RR*.)We use the notation R? to denote a language of all strings that consist of zero or one occurrences of strings in L(R).  (In other words, ε | R.)Character classes are shorthands for a set of characters.  For example, the character class [0-9] denotes one occurrence of a character that is either 0, 1, 2, ..., 9.  Naturally, you can combine character classes with other operators, to yield regular expressions like [0-9]+ to denote patterns.
  Examples:
    Two regular expressions that recognize either the word "public", "protected", or "private":public | protected | privatep(ublic | r(otected | ivate))
      A regular expression that recognizes integers without leading zeroes:
        0 | [1-9][0-9]*
      A regular exrpession that recognizes real-number constants for a hypothetical programming language (including scientific notation):
        [0-9]* . [0-9]+ ((e | E) [0-9]+)?
      
  
  Regular expressions are a much more intuitive notation for humans to use to specify patterns.  Unfortunately, they make a lousy implementation strategy.Fortunately, some theory can help.  Regular expressions can be converted to DFA's mechanically, which implies that a tool could do the following:
    Take a regular expression as input.Convert the regular expression to a DFA.Emit code that implements the DFA.
  

Converting regular expressions to DFA's

A useful theoretical result is that regular expressions and DFA's describe the same set of languages.
    In other words, any language that can be described by a regular expression can be recognized by a DFA and vice versa.The algorithm given in the book for converting a DFA to a regular expression will not be covered on the exam.
  This implies that it must be possible to convert a regular expression to a DFA.  Unfortunately, it needs to be done in multiple steps.The first step is to convert the regular expression to an intermediate form called a non-deterministic finite automata or NFA.  An NFA is just like a DFA, with two differences:
    It can specify more than one transition from some state on a given input character.It can specify ε-transitions, which can be followed without consuming an input character.Perhaps surprisingly, even with these differences, NFA's and not theoretically more powerful than DFA's are.
        In other words, any language that can be recognized by an NFA can also be recognized by a DFA.This implies that any NFA can be converted to a DFA.
      
  An NFA processes an input string differently from a DFA.
    A DFA is in exactly one state at any given time.  It begins in the start state.  Upon consuming each input character, it moves to exactly one state.An NFA is in a set of states at any given time.  
        It begins in the ε-closure of the start state, which is the start state along with any states that can be reached from the start state by taking only ε-transitions.Upon consuming each input character, it moves to the ε-closure of all the states it reaches by following transitions on that character from all the states it was in.
      
  An NFA can be constructed from a regular expression mechanically, using a construction called Thompson's construction.
    It should be noted that there are other constructions that can be used to construct an NFA from a regular expression.Thompson's construction is used in automated tools because it can be implemented more efficiently than others.The principle it is built upon is that the NFA it constructs (and all of the intermediate ones it constructs) have a single start state and a single final state, with no transitions entering the start state and no transitions leaving the final state.
  Thompson's construction proceeds by taking a regular expression and applying operators to it in precedence order.
    Applying each operator requires taking the NFA for its operands and pasting it together into one NFA using a template.The templates are shown in the textbook and were shown in lecture.After applying the templates for all of the operators in the regular expression, the resulting NFA recognizes the same language described by the regular expression.
  An NFA, unfortunately, is not a very good implementation tool.  No problem!  We'll convert it to a DFA, using the subset construction.
    The subset construction builds a DFA that simulates the behavior of the NFA.Each state in the DFA corresponds to a subset of the states in the NFA.  (The total number of states in the DFA could be the size of the power set of the states in the NFA, but in practice they turn out to be much smaller, since most of these states cannot be reached.)For every state s in the DFA, there is a transition on an input character to the state s' if the NFA would go from the subset of its states corresponding to s to the subset of its states corresponding to s' on that input character.
  After constructing a DFA using the subset construction, we can run a DFA minimization algorithm to minimize the number of states in the DFA.
    This algorithm was not covered in lecture and will not be covered on the exam.
  

Constructing an automated scanner

A DFA takes an input string and, ultimately, says "accept" or "reject" as its output.We need a tool that takes an input program, a stream of characters, and returns a stream of tokens.  In other words, we need a DFA to recognize many words, not just one.Using an automated tool such as JFlex, you specify a list of regular expressions that specify all the patterns you'd like your scanner to recognize.The tool will do a few things:
    Use alternation ('|') to build one regular expression out of all of your patterns.Convert the regular expression to an NFA using Thompson's construction.Convert the NFA to a DFA using the subset construction.Minimize the number of DFA states using a minimization algorithm.Emit code that recognizes patterns using the DFA.
  One approach would involve using the DFA as a recognizer.  Whenever a final state was reached in the DFA, we could consider the consumed input to be a token, return that token, then go back to the start state.  There's a problem with this approach:
    Due to overlapping of patterns, this would result in some very odd behavior.  For example, the word fork in a Java program should be considered an identifier.  But our pattern matcher would recognize it as the keyword for followed by the identifier k.To solve problems like this, automated scanners search for the longest possible pattern instead, using the following approach:
        Continue running the DFA and consuming input until it reaches a situation in which there is no output transition on the current character.If, at that point, the DFA is in a final state, you've recognized the pattern represented by that final state.If not, backtrack through the input you consumed until you encounter a final state, and that's your pattern instead.If you were never in a final state, the input does not begin with a lexeme, and an error will be reported.
      Since more than one pattern will often be matched by the same sequence of input, an automated tool will generally disambiguate by choosing the first pattern listed in the input script.
  

Will you be covering JFlex on the exam?

Intimate details of JFlex will not be covered, but I do expect you to understand the underlying theory discussed above.

Parsing

The job of a parser is to determine if the sequence of tokens recognized by the scanner can be combined to form a syntactically legal input program.
    Its output, theoretically speaking, is a parse tree for the input program.In practice, a boiled-down version of the parse tree, or a flat intermediate representation, is emitted instead.
  A context-free grammar is a formalism that is suitable for specifying the syntax of a programming language.  It consists of:
    A set of terminal symbols, which correspond to the tokens that can be recognized by the scanner.A set of nonterminal symbols, which are abstractions for groupings of tokens that are considered legal in an input program.A start symbol, which is a nonterminal symbol that is considered to be an abstraction for an entire input program.A set of rules (sometimes called productions) that explain how nonterminal symbols can be replaced legally with a sequence of nonterminal and/or terminal symbols.
  A grammar describes a (potentially infinite) set of syntactically legal input programs.  This set is called the language of the grammar.An example grammar for identifiers surrounded by a matched set of parentheses:
    S → '(' S ')' | identifier
  There are two ways to demonstrate that an input program is in the language described by a grammar.
    One is to draw a tree, with the start symbol as the root node, terminal symbols as leaves, and each node containing a nonterminal symbol having zero or more child nodes corresponding to the symbols on the right-hand side of one of its rules.Another is to write a derivation.  A derivation corresponds to some parse tree.  Examples:
        S ⇒ ( S ) ⇒ ( identifier )S ⇒ ( S ) ⇒ (( S )) (( identifier ))
      Compiler writers are primarily interested in two kinds of derivations:
        leftmost derivations.  Derivations in which the leftmost nonterminal is replaced at each step.rightmost derivations.  Derivations in which the rightmost nonterminal is replaced at each step.
      
  A parser's job, then, is to discover either a parse tree or a derivation that indicates that the input program is in the language of the grammar.If there is some input program for which there is more than one parse tree (or more than one leftmost or rightmost derivation), the grammar is said to be ambiguous.
    Since a compiler typically infers the program's meaning from the structure of the parse tree, ambiguity is generally considered to be a very bad thing in the grammar of a programming language.
  There isn't one way to resolve ambiguity in a context-free grammar, though there are techniques that help.  One such technique is the stratification technique, which is used to establish precedence and associativity of operators.
    Starting with this grammar for arbitrarily nested expressions:
        E → E + E | E - E | E * E | E / E | ( E ) | identifier
      We can transform it to this:
        E → E + E2 | E - E2 | E2E2 → E2 * E3 | E2 / E3 | E3E3 → ( E ) | identifier
      We often call this grammar the classic expression grammar.The resulting grammar establishes that:
        + and - have the lowest precedence and are left-associative* and / have the next-highest precedence and are left-associativeparenthesized expressions have a higher precedence than those that are not parenthesized
      
  

Top-down parsing

A top-down parser begins with a parse tree whose root contains the start symbol.
    At every step, it attempts to expand one of the nonterminals at the lower fringe of the tree (i.e. a nonterminal in a leaf node) by one of its rules.To expand the nonterminal, the symbols on the right-hand side of the selected rule 
    
  A top-down parser, theoretically, could expand the nonterminals in any order.  In practice, however, top-down parsing algorithms are limited by a couple of desirable properties:
    We'd like to be able to parse the input in the natural order that we'd read and scan the input file: left-to-right.We'd like to parse the input as efficiently as possible, ideally making the "right decision" at every step and only looking at each input token once.
  In order to solve the first problem, parsing left-to-right, we could start with this algorithm:
    

make new parse tree, with start symbol in root
node = root of parse tree

loop
{
    if node contains a terminal t
        if next input token is t
            advance node to next node on lower fringe of tree
        else
            backtrack
    else if node contains a nonterminal nt
        pick a rule nt → β
        extend tree using that rule
        node = leftmost symbol in β
}

      This algorithm works, theoretically speaking.  It is capable of finding a parse tree for the input program (provided that the rules are picked nondeterministically).However, as a practical matter, this algorithm is terribly inefficient.  It essentially amounts to an exhaustive search of all possible parse trees (or derivations), looking for the right one!
  To solve the second problem, we need to find an algorithm that allows us, when looking at a nonterminal nt, always to choose the right rule to expand by.
    In order to do this, we need some support from the grammar.  The grammar needs to be constructed in such a way that we can always make the right choice by looking only at the next token of input.
  

Recursive descent parsing

This topic is discussed in a great deal of detail in Assignment #2 and also in the textbook.

Table-driven LL(1) parsing

Recursive descent parsing is one form of top-down LL(1) parsing.
    While it is straightforward to code by hand, it has a problem: the size of the code is directly proportional to the size of the grammar.Yet the code all follows a very regular, predictable pattern, directly encoding information from the grammar and its FIRST+/FOLLOW sets.If we were to restructure the program somewhat, we might be able to write code for the recurring pattern once, then encode the rules for expanding nonterminals into a table.
  A table-driven LL(1) parser does just that!
    It is built around a parsing table, with nonterminal symbols labeling the rows and terminal symbols (and eof) labeling the columns.Intuitively, the cell Table[X, y] contains an indication of the rule that should be used to expand X if the next input symbol is y.
        The rules are generally numbered consecutively, and these numbers are stored in the table.
      More precisely:
        Table[X, y] = n if n is the number of a rule X → β and y ∈ FIRST+(β).If the rule X → ε is also in the grammar, Table[X, y] should be the number of this ε-rule for all symbols in FOLLOW(X).
      It should be reiterated that this is exactly the same information that is encoded into the structure of the code of a recursive descent parser.  The information is encoded into the table, so that the code size is not affected by the size of the grammar.  (Obviously, the size of the table is, but the table is much more compact than the code was.)Once you have the table, the algorithm works like this:
        

push eof
push start symbol
loop
{
    if (top of stack is eof and next token is eof)
        ACCEPT!
    else if (top of stack is terminal or eof)
        if (top of stack is same as next token)
            pop terminal from stack
            consume next token
        else
            ERROR!
    else if (Table[top of stack, next token] is a rule A → β1 β2 ... βk)
        pop A from stack
        push βk ... β1
    else
        ERROR!
}

          
      Naturally, you wouldn't want to hand-code one of these table-driven LL(1) parsers, but you can certainly imagine a tool that would take an LL(1) grammar as input and emit a table-driven LL(1) parser as output.
  

Bottom-up parsing

Top-down parsers, specifically recursive descent or table-driven LL(1) parsers, are simple and efficient.On the other hand, implementing them may require a number of transformations (e.g. left factoring, left recursion elimination) on the grammar of the programming language...
    ...making a formerly intuitive, clear grammar into a much clunkier one.
  Particularly if we're using tools to generate our parser, in which the grammar is actually part of the source code of our compiler, keeping the grammar readable is important.Also, although most programming language constructs can be expressed using LL(1) grammars, some can't.For these reasons, we need bottom-up parsers.A bottom-up parser begins with the input program as leaves in a parse tree, and the start symbol in the root.
    It endeavors, at every step, to combine a sequence of orphaned nodes (i.e. those with no parents) that represent the right-hand side of some grammar rule together, putting the nonterminal on the left-hand side of the rule above them.The process terminates when either there are no more sequences of orphaned nodes that can be combined in this fashion, or when the entire input program has been connected into one tree with the start symbol at the root.
  

Shift-reduce parsing

A typical bottom-up parser uses a shift-reduce technique.  A shift-reduce parser is one that is built around a parser stack.
    The parser stack consists of (at least) nonterminal and terminal symbols.At every step, the parser makes a decision about whether to do one of two things:
        Shift.  Push the next token of input on to the stack.Reduce.  Pop k symbols off the top of the stack and replace them with a nonterminal symbol whose righthand side is those k symbols.  (In other words, apply one of the grammar rules in reverse.)
      
  The tricky part is knowing whether to shift or reduce.  If a sequence of symbols β on the top of the stack is supposed to be reduced by the rule A → β, we say that β is a handle.
    By "supposed to," I mean that if the correct move to make is to reduce by the rule A → β, we call the top symbols on the stack β a handle.
  With this in mind, here's a simple shift-reduce parsing algorithm:
    

loop
{
    if the top of the stack is β and A → β is a handle
        pop |β| symbols off the stack
        push A on the stack in their place
        // this action is called a reduction
    else if there are more tokens in the input
        push the next token
        // this action is called shifting
    else if the stack has only the start symbol on it
        ACCEPT!
    else
        ERROR!
}

      
  The problem with this algorithm, of course, is that it's left the most important part -- determining if there is a handle on top of the stack -- as voodoo magic.
    We need an algorithm for finding handles.If we can develop such an algorithm, particularly one that can make the decision in constant time at each step, the entire parse will be linear with respect to s + r, where s is the total number of shifts and r is the total number of reductions.
  

LR(1) parsing

An LR(1) parser is a bottom-up, shift-reduce parser that uses one such mechanism for finding handles.At every step, the LR(1) parser is considered to be in one out of a finite set of states (somewhat like a DFA).  It encodes the knowledge of how to find handles into two tables:
    An Action table, with the rows labeled with parser states and the columns labeled with terminal symbols (and eof).  Each entry in the table indicates one of four actions:
        shift s', meaning that the parser should shift the next token of input and move to parser state s'.reduce A → β, meaning that the parser should reduce by the rule A → β.  (In a typical LR(1) parser, all rules are numbered consecutively and uniquely, so a reduce action might be "reduce 3", meaning that the reduction should be done using rule #3 in the grammar.)accept, meaning that the parser should accept the input program as being legal.error, meaning that the parser has determined that there is an error in the input program.
      A Goto table, with the rows labeled with parser states and the columns labeled with nonterminal symbols.  Each entry in the table is a parser state, and means that if the parser was in state s and then recognized an A, it should proceed to state Goto[s, A].
  Given these tables, here is the LR parsing algorithm:
    

push start state s0
loop
{
    if Action[top of stack, next token] is shift s1
        push next token
        push si
    else if Action[top of stack, next token] is reduce A → β
        pop 2|β| symbols
        s = top of stack
        push A
        push Goto[s, A]
    else if Action[top of stack, next token] is accept
        ACCEPT!
    else
        ERROR!
}

      An example of this algorithm in action appears in the textbook (and was covered in lecture).
  Of course, this algorithm only works if the Action and Goto tables have been constructed.
    To construct these tables, use the algorithm discussed in Section 3.5 of the textbook.
  Fortunately, there are tools (e.g. CUP) that, given a grammar an a set of associated actions, will generate an LR parser for you, crunching through the details of the LR(1) construction (or a related construction, such as LALR) for you.  After each reduction, the associated action will be taken.

A subset of the following topics will be covered in lecture on Wednesday, February 11.  These topics will be covered on the Midterm in whatever detail we cover them in that lecture.

Semantic analysis (a.k.a. context-sensitive analysis).  What is it?  Why is it different from syntax analysis (parsing)?Abstract syntax trees as an intermediate representation of an input program.Symbol tables.  What are they?  What do they store?  How can they be used to implement static scoping?Type checking.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics142/FinalGrades.html
##-----------------TITLE------------------------##
ICS 142 Winter 2004, Final Course Grades
##------------------TEXT------------------------##
ICS 142 Winter 2004 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.142 newsgroup |
About Alex








ICS 142 Winter 2004
   Final Course Grades







Explanation (please read this first!)

Please spend a couple of minutes reading this section.  It will answer the vast majority of the questions that you may have about the grading process, and will save me a lot of time answering emails, and save you a lot of upset waiting for a response.

Here are the final grades for ICS 142.  By University regulations, at this stage, the cutpoints and the grades are non-negotiable, unless we made a clerical error, such as recording a score incorrectly.  (Seriously!  This means you!  Every quarter, I get at least two emails that begin with the phrase "I know you said that the cutpoints are non-negotiable, but...")

There were 59 points possible on the Final, and the average score was 41.4 (70.2%).

The IDSuffix column contains the last four digits of your UCI ID# or Access ID#.

The Proj1..Proj6 columns are your raw scores (out of 100) on each project.  The ProjTotal column lists the sum of the raw scores on the projects.  The total number of points possible on all the projects was 600.  There is also a column titled AdjProjTotal; this contains your total project score after adjusting it for the differences between graders.  Those differences were removed by attempting to equalize the percentage of points lost.

The TotalPct column is your overall percentage in the class, figured by adding the weighted percentages of the Midterm, Final, and AdjProjTotal together, as described in the Course Reference.

There are a few words to be said about the selection of cutpoints.  People are cutpoints; whole-numbered percentages are not.  That means that the cutpoint for a particular grade is simply the lowest-scoring person who received that grade.  For the sake of argument, if you received a percentage of 54.99% in the class, and someone who received a 55.52% received a higher grade than you (with no person in between), you didn't miss the cutpoint by 0.01%; you missed it by 0.53% -- a substantial margin.

It was a challenging and educational quarter, but I hope ya'all had as much fun as I did.  Enjoy the break!







The grades

IDSuffixProj1Proj2Proj3Proj4Proj5Proj6ProjTotalAdjProjTotalMidtermFinalTotalPctGrade10817578849710081515529.6030.54072.66%B10911009886323085431446.052651.573.47%B11541008850729286488488.002435.563.47%C+11561001001009710097594594.00405692.67%A1231908362949184504504.0028.542.571.83%B1245938891769891537547.821828.557.96%C12981008520979594491493.582851.577.09%A-134003400003434.0019.522.529.14%F1357107510607989323323.003245.567.00%B-135910096006483343343.00213251.97%D+13699310066979683535540.79163762.12%C1439888569272054343360.86304265.27%C+145496100941009596581582.69435693.98%A1468844630944072366406.192134.556.82%C-1555100969610010096588589.073549.584.89%A1558703810103061219253.522538.554.40%C-1578829610010010080558565.2129.2543.576.03%B+159474949810010093559566.043453.585.82%A1672975850886581439466.65234165.50%C+170410092981009394577580.95365186.12%A175810094881009291565565.00385186.58%A183077946210010091524537.0533.55283.04%A1833732925219475317326.9616.533.549.37%D+18371008174965084485495.2436.544.577.74%A-18411003262508885417417.00323564.58%C+185590918110010082544553.623330.568.98%B-18631008450707294470470.00324876.04%B+1924837872534586417448.4331.54673.30%B1971928320326082369382.4521.52851.54%D+20169810060959976528540.3638.53373.45%B2055985422829490440454.08264972.17%B2071919698979696574576.323537.576.11%B+209980780879771413413.0027.52454.11%C-21199896921009378557560.833752.586.76%A21192015000397484.4811.522.526.67%F2134304120102039160192.6326.53751.28%D+2148959264949891534534.00414180.12%A214997785610010098529541.1931.54979.97%A21609593941009794573573.0033.545.580.43%A2193100909510010092577577.002233.565.31%C+22471008872976282501501.00414983.90%A231593582503082288311.5333.52956.17%C-2348878130887484444457.8927.53765.17%C+2356100100921009291575575.0034.55386.24%A2414103230103075187187.0014.545.549.26%D+2420967460323093385404.1420.543.562.51%C2518869896979187555559.0131.546.579.16%A-2548808730605063370370.00224160.05%C2592759784979281526538.713250.581.17%A2650305515101035155185.911838.546.65%D2652902698979194496496.0023.54469.32%B-26543041003039113147.521934.542.64%D-26891007130106896375375.002650.569.24%B-2699827527103068292316.9031.53659.94%C2755100948810010087569571.7636.54783.26%A2764507410322020206218.82203748.53%D+276996100901007596557560.83373776.25%B+28539297941008283548552.633051.581.30%A288000000000.002125.530.41%F29071009278709677513513.0036.551.583.38%A2924985927533048315351.4131.537.562.68%C292610086100988890562565.38365084.67%A29499981881009095553561.07383978.24%A-2963959650109078419419.003548.575.71%B+30111001009610010091587588.163748.585.41%A30141009594979994579582.6131.538.574.92%B+30251008060707583468479.7520.536.561.55%C305900000000.0020012.50%F3088966230328292394412.3435.546.574.33%B+3132100891001009298579582.61385992.88%A31878058981009388517531.2527.54171.55%B321992900000182183.6035.552.566.96%B-3228100690000169169.0017.5019.39%F32491005030326094366386.843147.570.92%B3313301910320091114.7026.511.530.09%F335490550109093338338.001434.549.04%D+33609849301005973409441.8031.546.573.30%B336810293003020119119.002025.535.74%F3374855050973076388388.0019.54058.71%C3402100989010010098586586.00465796.69%A34371036150006171.9912011.10%F35701009210010010087579579.0037.55186.96%A363585670103092284284.0034.539.562.54%C36668910060917084494503.44233160.56%C368395100401003573443456.98262354.69%C-37079096681009585534534.0030.544.575.93%B+3760100100841009697577579.0540.547.586.47%A3777100948710010085566571.84395187.54%A3836961009810010097591591.8040.255290.00%A383750763032094282301.41283656.98%C-3888985496974092477498.12224367.81%B-38929855981009887536546.993849.584.66%A392486745610010092508523.803130.566.24%C+3931985456859785475496.472634.564.46%C+393595946810010092549549.0030.53972.95%B39951008094958098547547.0036.755889.64%A40121009684889183542547.1632.543.577.16%A-40121008410105090344344.0030.538.562.36%C4027969110010010088575577.2341.54685.99%A4088108700009797.0036.538.553.76%C-410150640000114121.6624.5021.40%F431894100400850319326.2140.53364.00%C+442410096841009597572574.4930.558.587.45%A44311007860659195489489.0021.2543.567.22%B-46289858301005286424454.2225.54971.87%B4638100631003030233233.0024.521.541.54%D-4655859830846539401435.1733.53767.78%B-4680859850789089490490.003344.575.29%B+46881008950695081439439.00352158.06%C48261001009810010098596596.0036.55187.19%A48941005030323588335358.602234.555.07%C-5012505020322020192206.96162537.30%F5046908830749289463486.53234065.82%C+5101839287978294535546.16404280.78%A51351009480896092515515.00324374.90%B+514110099981007097564570.1834.553.586.34%A5312887620323059305324.14333963.27%C+53461009298976086533533.00324778.51%A-542003500003535.001818.525.54%F542110010010010010097597597.004055.592.48%A5464848480949085517524.3930.546.576.81%A-5492988832539092453478.24303868.42%B-551505420103039153183.40233748.63%D+55609380861009580534539.8820.53664.21%C+56301008450959680505521.3128.551.578.79%A-56339897921009188566569.033440.577.16%A-5637985887987390504520.4925.534.565.35%C+5656107020322058210222.47233448.55%D+5662954810809478405405.00415482.49%A57089810098979597585586.3440.550.588.87%A5764828817459377402421.7521.53658.93%C5934959850889079500500.0036.541.575.95%B+5954100953310010092520533.74375184.39%A600096680322079295306.1322.535.553.44%C-6011905476949284490508.8933.255382.16%A6027989510010010098591592.55425593.17%A60679181951007990536546.992145.571.32%B607290900979671444448.992829.559.95%C6107967586919280520533.74273466.61%B-62089587003095307307.0023.544.560.21%C6353100811001009490565565.00264776.36%B+6360907769539593477498.1229.541.571.48%B63926597788610079505521.311744.566.86%B-6422989298977091546550.81224873.83%B64721009672809587530530.0029.53971.38%B650910010090949594573575.4038.54784.70%A6559100901001009994583583.0039.54685.02%A6597106900007979.0011010.83%F66291006780609983489489.0028.54572.77%B6657927388943083460472.47274067.62%B-6719948730324048331354.95313460.17%C676710098941009698586586.00465595.34%A676910042941009792525525.002936.569.12%B-67791009396926890539549.4827.534.568.05%B-6779088100020118119.07293245.77%D6886968890949688552556.27364379.47%A-69121009882979298567567.0038.54582.92%A6928309610302039225260.2132.539.560.10%C6956969384947068505513.46283667.58%B-6970987630799593471482.493147.575.70%B+70131007530328490411427.8318.53959.39%C70821009810010010092590590.8939.554.591.18%A71129898921006793548556.93313872.98%B71788093621006882485504.7524.534.563.94%C+7307958750947077473473.0027.534.564.23%C+73191009890979693574576.3232.536.573.87%B7400100100781009395566566.0027.54072.61%B7411801710106064241241.0011.534.542.63%D-7457100960329795420433.7425.54366.78%B-747300000000.00000.00%F7544958010103087312312.00214659.91%C7546979910010010098594595.033848.586.38%A7551908488959087534534.00223362.82%C76761008350889286499499.0033.54375.04%B+773910093841008478539539.002235.564.77%C+782802400002424.0024.52734.82%F79831001009810010095593593.00475898.35%A+7988070009187248256.9330.254360.91%C799110010090858295552552.0032.53974.35%B+80175061103210084337352.4036.54470.26%B804896958410010075550558.5931.2544.577.63%A-8065859593919193548556.933253.584.12%A81351009898978093566566.00315282.93%A81405011100300101101.0013.52832.47%F817910010010010010089589589.984150.589.36%A8180959378609486506506.00344073.67%B8238949430872092417426.173641.571.94%B8323959250609394484484.003345.575.67%B+8344104100005151.0022.51526.78%F83471001007897870462462.0039.54678.97%A-83581009484946595532538.0532.54879.76%A8366907840854089422437.8527.530.559.76%C84311009010010010096586587.2536.752971.99%B84821009184919380539539.0026.54070.63%B8550302430374039200255.6416.521.537.67%F8573908680949476520520.00292963.79%C+8646984830948084434448.782743.568.81%B-8688772430536169314350.0613.533.548.65%D+877700000000.00000.00%F88581009797988098570575.152855.583.88%A8901100100949110088573575.4039.548.586.34%A89011001004910010071520533.74313469.11%B-893698946010010086538543.52243968.62%B-89841009186978389546550.8135.53472.78%B904910010010010010096596596.3640.548.588.01%A9078909050658089464464.0037.54174.43%B+908295966410010091546546.0025.53667.64%B-91239688888310095550554.4533.542.577.47%A-914294969897098483484.51355382.03%A9196988530828593473484.3122.553.574.55%B+921090959910010088572576.8130.55182.48%A92471009888948183544544.0037.54681.82%A93761006068784590441455.16274771.50%B9508989495999488568573.504348.588.43%A9525918530837584448461.5320.541.564.02%C+9525100814010010087508516.192233.562.27%C9653100999310010098590591.72375590.00%A9761985460639870443469.962436.563.24%C+9793335915000107125.5522.525.537.63%F9844979110324073343357.873226.555.86%C-9850928098979885550558.5937.54783.23%A99731007786979483537537.003241.574.99%B+99879510068946086503503.0026.53867.48%B-
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics142/FinalExamStudyGuide.html
##-----------------TITLE------------------------##
ICS 142 Winter 2004, Final Exam Study Guide
##------------------TEXT------------------------##
ICS 142 Winter 2004 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.142 newsgroup |
About Alex








ICS 142 Winter 2004
   Final Exam Study Guide







Introduction

This study guide is a summary of the lecture material covered since the midterm.

The final exam will be comprehensive, so you should be sure to understand the concepts and algorithms that we covered before the midterm.  As you prepare for the exam, be sure to look over the Midterm Study Guide, which is a summary of lecture material that was covered before the midterm.

While I don't intend to include questions on the final testing tiny details from the textbook that were not covered in lecture, you are responsible for the assigned readings.  Broad ideas and important points from the readings are fair game for the exam, even if we didn't cover them in lecture.  I haven't included this material in the study guide.  Off-limits topics from before the midterm (listed in the Midterm Study Guide) will remain off-limits for the final.







The study guide

First of all, what about JFlex and CUP?

I would expect you to understand the basic principles behind these tools, though I won't ask you to write either a JFlex or a CUP script.  However, I might ask you to evaluate simple ones, to ensure that you understand how they work.

Semantic analysis and abstract syntax trees

These topics are explained in quite a bit of detail already in the Assignment #3 write-up; I'm not sure there's much worthwhile that I can add.

Symbol tables

Much of a compiler's ability to understand the meaning of a source program revolves around its ability to know the meaning of the identifiers that appear in it.To manage the problem of tracking the meaning of identifiers, compilers use a symbol table.
    A symbol table is a mapping between identifiers and their meanings.The most important information that is maintained in a symbol table in early stages of compilation is type information, which facilitates much of static semantic checking.As compilation proceeds, additional information may be added, such as statically-determined memory addresses or offsets into activation records.
  Of course, in most programming languages, the meaning of a particular identifier may vary throughout a program.
    A language's scoping rules explain how the meaning of names is tied to declarations or uses elsewhere in the program.Almost all commonly-used programming languages employ static scoping rules, meaning that the use of an identifier can always be mapped back to its declaration unambiguously at compile time.The most common kind of static scoping rules enforce a kind of block structure on the program.
        Declarations within one block (say, a procedure, or a block statement within a procedure) only take effect within that block.Declarations in inner scopes (e.g. block statements within block statements) take precedence over declarations in outer ones.
      A common implementation technique for a symbol table in such a case is a scoped symbol table.
        A scoped symbol table is, essentially, a stack of symbol tables.Each lookup in a scoped symbol table involves looking up the name in each symbol table on the stack, starting with the top and proceeding until either the name is found or until all tables have been consulted.If the name is not found in any of the tables in the stack, an error is reported.
      This approach lends itself very nicely to analysis during parsing in a language in which all names must be declared before use.
        Entering a new scope causes a new symbol table to be pushed on to the stack.Exiting a scope causing a symbol table to be popped from the stack.
      Languages with more complex scoping rules (e.g. Java, which includes lookups throughout inheritance hierarchies) will require a more complex symbol table implementation.
  

Interpreters vs. compilers

Once the scanner, parser, and semantic checker have determined a program to be lexically, syntactically, and (static) semantically correct, we've reached a fork in the road.
    From here, we could continue with intermediate code generation, optimization, and code generation, if we're interested in building a compiler.We can also continue in a different direction, instead building a simulator that executes the program directly.  Such a simulator is generally called an interpreter.
  Compilers and interpreters share some techniques: most notably, the techniques that are used in the front end.  Either way, the source program must be scanned, parsed, and its meaning must be understood.
    The difference is what is done with that understood meaning: a compiler translates it to an equivalent program in a target language, while an interpreter executes the program and generates output.
  

Source-level interpreters using abstract syntax trees

A source-level interpreter is one that interprets the source code somewhat directly, rather than first translating it to an intermediate form (such as how Java is first compiled to bytecodes that are then interpreted).
    To build a source-level interpreter, some representation of the source code will need to be available to the interpreter.A common solution for this problem is to use an abstract syntax tree, traversing it and evaluating it as the program executes.
  In theory, any language can be interpreted.
    Of course, interpretation represents a tradeoff: flexibility for speed.
        An interpreter is capable of reporting errors in terms of the original source code, which is more difficult in a compiled program.Interpretation allows programs to be executed piecemeal for testing purposes, without a lengthy compilation step.Interpretation also makes it easier to support features such as rewriting portions of a program while executing it in a debugger.Unfortunately, interpretation is orders of magnitude slower than the execution of a compiled program.
      For some languages, the tradeoff is not as great as others.
        Languages with highly dynamic characteristics, such as Scheme (with dynamic typing) or early versions of LISP (with not only dynamic typing, but also dynamic scoping) pay less of a penalty when interpreted relative to execution of a compiled version, since so much housekeeping work (maintenance of symbol tables, tracking the types of symbols) needs to be done at run time, whether the program is interpreted or compiled.
      
  

Linear intermediate representations

The result of scanning and parsing is often the creation of an intermediate representation (IR) of the source program.
    An abstract syntax tree (AST) is one form of IR, one that graphically (i.e. in terms of an object graph) represents the source program.A typical AST represents source program abstractions, such as if statements and while loops, directly, though it is possible to build a lower-level IR.
  If we want to ultimately generate assembly code equivalent to the source program, then it is often necessary to work with a lower-level IR, one that is closer to the level of abstraction provided by an assembly language.
    Typically, this means that the IR will be linear (i.e. a list of instructions), so that it will more closely resemble assembly language.
  There are three benefits to a linear IR:
    It's closer to the assembly code that we will eventually generate, which simplifies the instruction-selecting portion of code generation somewhat.Since linear IR's are often more compact than graphical ones such as AST's, it is faster to process them.Most importantly, opportunities for optimization may be found in a linear IR that simply don't show up in an AST built directly from source code, since a well-designed linear IR conveys more information than the source code does.
  One form of linear IR is stack machine code.
    Stack-machine code assumes the presence of an operand stack, which holds the results of intermediate calculations.Most operations take their operands from the stack, then push their result back on to the stack.
        For example, an integer add would take the top two elements from the stack, add them, then push the result.
      Often included is a swap operation, which swaps the top two stack elements.There is also generally a representation for memory, which is used to store values for longer terms.Advantages: Simple to generate; a post-order traversal of an AST, for example, can be used to generate it.  Very compact, since it doesn't need to store operands in instructions.Disadvantage: It is not a good IR unless you're targeting a stack machine (i.e. a processor that actually uses an operand stack).
  In a compiler that targets a more conventional processor, a more appropriate representation is three-address code.
    In three-address code, most operations look roughly like this: x = y op z, where op is some operator, y and z are source operands, and x is the target operand.  The target operand may be different from the source operands.This is a convenient representation, because it is easy to represent in a compiler as an object with four values stored in it (an opcode, along with the three operands).It also matches up nicely with many "real" instruction sets.  (One notable exception is Intel 80x86, which has destructive two-address instructions.)An example of a three-address code that we used this quarter is ILOC.
  

Do you really expect me to have memorized all the ILOC instructions?

You should be familiar enough with the ILOC instructions to...
    ...understand what a chunk of ILOC does, and also understand trade-offs in generating different blocks of ILOC for control-flow structures and expressions, as we discussed in lecture....you should be able to apply optimizations similar to the ones you implemented in Assignment #6 (or perhaps others, given descriptions of them).
  The thing to remember about ILOC instructions is that they follow a regular naming convention that makes them easy to understand, even if you haven't got all the instructions memorized.
    As always, understanding trumps memorization here.Know the difference between regular instructions, "I" instructions (immediate), "AI" instructions (address + immediate), and "AO" instructions (address + offset).Know, in general, what instruction groups like "load" and "store", "add", "lshift", etc., do.In many cases, you can infer meaning based on the name and prior understanding of assembly-style languages from prior courses.
  The best place to get a description of all the instructions is in Appendix A of the textbook.  Most of the instructions are listed in a table in the Assignment #6 write-up, though I left some out that I didn't intend for us to use in the assignment.  (Notably missing from the assignment, for example, are the "comp" and "cbr_*" instructions.)

Run-time organization

A compiler's job is very similar to the job of a programmer.
    A programmer maps the abstractions of some problem to the abstractions of the source language.  For example, in building a Java program to manage student enrollment information, classes such as Student, Course, and Enrollment might be created.A compiler maps the abstractions provided by a source language into the abstractions provided by a target language.  This generally means taking higher-level abstractions like classes, procedures, and expressions and turning them into lower-level ones such as instructions, memory usage, and the management of a run-time stack.There are a number of standard techniques for structuring high-level language abstractions in assembly-level target programs that are widely used.
  Execution of a program begins when the operating system invokes it, either on behalf of a user or for its own ends.
    Program invocation involves four major steps:
        OS allocates space for the program in memory.  (This usually means allocating a logical address space unique to that program, then mapping it into virtual memory.OS loads the code for the program into the logical address space.OS executes initialization code, if any (e.g. initializations of global variables, such as constructor calls on global objects in a C++ program).OS jumps to the entry point of the program (e.g. "main").
      
  The logical address space is typically organized with the code at one end of the address space, and all the data organized after the code.
    In an implementation of a typical programming language, the data area is split into separate portions:
        The global area, in which global variables are allocated at compile-time.The run-time stack, in which information about each procedure call is kept, in the form of a stack of activation records.The heap (or free store), in which dynamically-allocated variables with indeterminate lifetimes are stored.
      Qualities of the programming language being implemented will determine whether this design makes sense.
        For example, in Scheme, where activations of procedures are not necessarily last-in/first-out, activation records must be allocated in the heap, rather than stored on the run-time stack.In languages that do not support recursion, activation records can be allocated statically, instead.
      
  Perhaps the most important construct that we'll need to manage at run time is that of the subprogram.
    The problem is that processors do not support the high-level concept of a subprogram directly.  So it must be simulated with low-level instructions instead.
  An activation of a subprogram is a complete use of it (i.e. a call to it, its execution to completion, and the return from it).In order for subprograms to communicate with each other, while knowing as little as possible about one another, an agreed-upon convention must be followed by both the caller and the callee.
    This convention, in total, is called subprogram linkage.It lists, among other things, responsibilities for callers and callees.
        For example, the caller must pass parameters to the callee in a previously agreed-upon way, so that the callee can find them.The caller and callee, together, must agree on who will save the processor's state (i.e. registers) so that it can be restored upon return.
      We'd like code written in different languages to be able to communicate with one another, if possible...
        ...and we'd even like code written in the same language, but compiled with different compilers for the same platform, to be able to communicate.For this reason, subprogram linkage is often agreed upon at operating system design time.
      
  In order to separate information about activations from one another, information about each subprogram is stored in an activation record (AR).
    The contents of AR's will vary, but a typical one might look something like this:
        local data area
            includes local variables and compiler-generated temporariesmay be of variable size, since number of temporaries may vary per execution of a subprogram, depending on control-flow
          caller's AR pointer (dynamic link)static link (pointer to AR of static ancestor)return addressreturn value pointerregister-save areaparameters
            in a language that supports the passing of variable numbers of parameters, this may also be of variable sizein such a language, it is typical to pass parameters in backward order, with the first one at the top and later ones below it, which allows the first n arguments to be at known offsets
          
      
  Implementation of parameter passing modes:
    pass by value and pass by value-result.  Copy the value of the actual parameter into a slot in the activation record.  All uses of the formal parameter access (or modify) the copy.pass by reference.  Pass a pointer to the actual parameter instead of the actual parameter itself.  Store that pointer in callee's AR.  Whenever formal parameter is accessed, pointer is dereferenced.
    
  Returning values is slightly more complicated, since the returned value must live on after the callee dies (along with its AR).
    One strategy is to store a return value pointer in the callee's AR, which points to an allocated slot in the caller's AR (perhaps in its local data area).This strategy doesn't work if the caller is unaware of how large the return value may be.  In this case, a pointer to a heap-allocated return value should be returned instead.
  Accessing variables:
    Accessing global variables is straightforward.  They can be accessed directly at their statically-determined address.Local variables are also straightforward to access.  Assuming that each is laid out at a known offset in its AR, it can be accessed at that known offset, assuming some register points to the current AR.Non-local variables are trickier.
        Assuming a block-structured language, each AR can maintain a static link, which points to the AR for the most recent activation of the lexically-enclosing subprogram.Any of use a nonlocal variable can be denoted by a static-distance coordinate, which is explained in more detail in the Assignment #5 write-up.Maintaining the static links at run-time can be done with a simple algorithm, assuming that each subprogram has a level number that indicates its depth (i.e. how many subprograms it is nested within):
            A call to a level 0 subprogram results in the callee's static link pointing to null.A call from level n to level n + 1 results in the callee's static link pointing to the caller's AR.A call from level n to level n results in the callee's static link pointing where the caller's static link points.A call from level m to level n (where n < m), the callee's static link points to where the static link n - m static links away points.
          
      
  

Intermediate code generation

When implementing high-level constructs with low-level intermediate instructions, a compiler has many options.
    Some strategies will yield code that runs faster.  Some will yield code that uses less memory or less power.
  Many of the trade-offs that must be made in selecting an implementation strategy for a high-level construct revolve around the memory hierarchy.
    From a simplistic point of view, there are four places where information is typically stored:
        Registers.  Fast but expensive, so there typically aren't very many of them.  Can usually be accessed in one cycle.Cache.  Nearly as fast as registers, but cheaper so that there can be more.  Can usually be accessed in a few cycles.Main memory.  Significantly slower than cache, but significantly cheaper.  At least tens to hundreds of times slower than registers, a disparity that's getting progressively worse as processors are speeding up more rapidly than memory.Disk.  Millions of times slower than registers, but extremely cheap.
      
  The most obvious way to speed a program up is to keep data in registers whenever possible.
    But, of course, there are a finite number of registers available.In intermediate code, we sidestep this problem by using an unlimited number of virtual registers...
        ...and counting on a register allocator to map the set of virtual registers to a set of actual registers toward the end of compilation.
      Even with an infinite number of registers, not all data can be stored in registers.
        If more than one name can be used to access a variable, it can't be stored in a register, unless the compiler is fully aware of all the possible names for it in every context.When multiple names can be used and procedure boundaries are crossed (e.g. when pass by reference parameter passing is used), the value must be stored in memory before the call, and loaded afterward.In fact, as soon as the address of the variable is taken, it becomes significantly more difficult to keep a value in a register.And in a language like C, with arbitrary pointer arithmetic, the difficulty level is even higher, since pointers can theoretically point anywhere and treat any value as being of any data type.
      An additional compilation that affects whether (and how) values might be stored in registers is the presence of multiple threads.
  Generating intermediate code for the arithmetic expression a + b requires three steps:
    First, generate code to load the value of a into a register (if it's not in a register already).Next, generate code to load the value of b into a register (if it's not already).Finally, generate an add instruction.The resulting ILOC sequence might look something like this, assuming a and b are local variables stored in the current activation record:
        loadI @a ⇒ r1loadAO rarp, r1 ⇒ raloadI @b ⇒ r2loadAO rarp, r2 ⇒ rbadd ra, rb ⇒ ra+b
      A naive approach for generating code for expressions, then, is a postorder tree traversal.
        We keep track of which variables are stored in registers as we go along.We load values into registers only when necessary (i.e. only when we need them and they're not loaded already).We generate code for the operators only after the operands are loaded.
      The main problem with this approach is that it may not minimize register usage:
        If the left-hand side requires more registers in order to perform its computation than the right-hand side does......we'd be better off doing the right-hand side of the computation first.So the best move is to first traverse the tree and decide which subtree will require the most registers, and generate code for that subtree first.
      The presence of function calls in expressions complicates matters somewhat, since functions may have side effects.
        It will be necessary to store values in memory before the call and load them afterward, if it's possible for the function to change them.
      
  A separate document titled ILOC Examples demonstrates and explains intermediate code generation for boolean expressions and loops, as we discussed them in lecture.
          
Optimization

An optimizer takes as input a set of intermediate code.  Its output is a "better" set of intermediate code, one that is equivalent in effect but does the job in a better way (i.e. faster, with less memory usage, etc.).The primary job of an optimizer is to understand the details of some portion of the intermediate code program.  The scope of an optimization is the portion of the program that is analyzed.
    The smallest scope is typically one basic block.  A basic block is a straight-line list of instructions, with a label appearing (optionally) on the first instruction and a jump or conditional branch (optionally) appearing as the last instruction.
        In other words, all of the instructions of a basic block are guaranteed to execute completely and in sequence from beginning to end.
      
  The first step for many optimizations is to build a control-flow graph (CFG).
    A CFG captures the control flow between basic blocks.  Individual nodes of the graph represent basic blocks.  Edges indicate possible flows of control between them.I provided the code for this in Assignment #6.  Here's (roughly) the algorithm to find all the leaders (i.e. the instructions that begin basic blocks).
        For each instruction i:
            If i has a label on it, it's a leader.If i follows an instruction that is a conditional branch of a jump, it's a leader.
          
      Once all the leaders have been found, nodes can be built to represent each basic block, and edges can be added based on the labels appearing on leaders and in jumps/branches.
  There are a variety of optimizations that can be performed.  As a starting point, be sure you understand the ones that were implemented in Assignment #6.Local optimizations can be extended to become superlocal optimizations.  A superlocal optimization operates on an extended basic block (EBB), rather than one basic block.
    An EBB is a set of basic blocks B1, B2, ..., Bn, in which B1 may have more than one predecessor in the CFG, but all other blocks will have a unique predecessor in the EBB.
        In other words, the basic blocks in an EBB are a subset of the nodes in the CFG that are, themselves, a tree.
      Since an EBB is, essentially, a tree of basic blocks, optimizations such as constant propagation and folding can easily be extended to work on EBB's instead of basic blocks.Since a unique predecessor is guaranteed to execute before each node in the EBB, optimizations can be done in a treelike fashion, with information carried down from one node to another along each path in the tree.Complications in optimization typically arrive at join points in the CFG (i.e. nodes with multiple predecessors).  Superlocal optimizations deal with such nodes as though they have no predecessors, i.e. discarding any known information before beginning to process them.
  

Instruction scheduling

This topic will not be covered on the exam.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics142/MidtermScores.html
##-----------------TITLE------------------------##
ICS 142 Winter 2004, Midterm Scores
##------------------TEXT------------------------##
ICS 142 Winter 2004 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.142 newsgroup |
About Alex








ICS 142 Winter 2004
   Midterm Scores







A few comments

Here are the scores for the Midterm.  Problem 7 was thrown out, so there were 48 points possible.  The average score was 29.6 (61.6%), with a high score of 47.

The Midterms are available in my office for redistribution starting on Monday, February 23.  Note that once you leave my office with your Midterm, I will no longer entertain any regrade requests, so be sure to take a quick look through it before leaving my office.  I also suggest printing and bringing with you a copy of the Midterm answer sheet, which will allow you to understand whether your answers were right without having to get too many questions answered.  It will allow you to get in and out of my office much faster, so you can go do other things.

Please note that I do not assign letter grades to individual components of your final course grade, so there is no official correlation between Midterm scores and letter grades.  I only deal with letter grades once, at the end of the quarter.

(Yes, in case you're wondering, we really did grade one of the questions down to the quarter-point, so a few scores that end in .25 and .75 exist.)







The scores

The IDSuffix column lists the last four digits of your UCI ID# (or Access ID#).  In a few cases, I had to go out to five digits in order to disambiguate people.  The Score column lists your raw score out of 48 points possible.

IDSuffixScore108130.5109124115424115640123128.5124518129828134019.5135732135921136916143930145443146821155535155825157829.25159434167223170436175838183033.5183316.5183736.5184132185533186332192431.5197121.5201638.5205526207135209927.502119373211911.5213426.5214841214928.5216033.5219322224741231533.5234827.5235634.5241414.5242020.5251831.5254822259232265018265223.5265419268926269931.5275536.5276420276937285330288021290736.5292431.5292636294938296335301137301431.5302520.5305920308835.5313238318727.5321935.5322817.5324931331326.5335414336031.5336820337419.5340246343712357037.5363534.5366623368326370730.5376040.5377739383640.25383728388822389238392431393126393528.5399536.751401232.54401230.5402741.5408836.5410124.5431840.5442430.5443121.25462825.5463824.5465533.5468033468835482636.5489422501216504623510140513532514134.5531233534632542018542140546430.5549230551523556020.5563028.5563334563725.5565623566241570838.5576421.5593436.5595437600022.5601133.25602742606721607228610727620823.5635326636029.5639217642222647229.5650938.5655939.5659711662928.56657276719316767466769290677927.57677929688636691238.5692832.5695628697031701318.5708239.5711231717824.5730727.5731932.5740027.5741111.5745725.5754421754638755122767633.5773922782824.5798347798830.25799132.5801736.5804831.25806532813531814013.5817938818034823836832333834422.5834739.5835832.5836627.5843136.75848226.5855016.5857329864627868813.58858284890139.58890131893624898435.5904940.5907837.5908225.5912333.5914235919622.5921030.5924737.59376279508435952520.59952522965337976124979322.5984432985037.5997332998726.5
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics142/ILOCExamples.html
##-----------------TITLE------------------------##
ICS 142 Winter 2004, ILOC Examples
##------------------TEXT------------------------##
ICS 142 Winter 2004 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.142 newsgroup |
About Alex








ICS 142 Winter 2004
   ILOC Examples







The examples

Here are some of the ILOC examples from the intermediate code generation lecture on Friday, March 12.  Most of these examples will be legal in your Assignment #6, since the condition-code-based approach for conditional branching, using the comp and cbr_* instructions, is not supported in Assignment #6, and since I've used registers with descriptive names like r_result.  Instead, I've made a separate bundle of examples that you can actually use with your Assignment #6, along with the output from my solution:

Examples for use with Assignment #6

Boolean expressions

Suppose, first, that we want to emit intermediate code that implements this boolean expression:


    x < y and z < w


All of the examples for this boolean expression will assume that x, y, z, and w already reside in registers.

One approach for implementing boolean expressions is numerical encoding, which stores the value of each subexpression in a register, then uses logical instructions such as and to compute the value for the entire expression.  Using a condition-code-based approach, the intermediate code would look something like this:


    comp rx, ry => cc1;       // compare x to y, setting condition code
                              //     register cc1 with the result
    cbr_LT cc1 -> L1, L2;     // if the last comparison set the "less than"
                              //     flag in the condition code register
                              //     (i.e. x < y), branch to L1, else
                              //     branch to L2
L1: loadI true => r1;         // if x < y, store true in r1
    jumpI -> L3;              // skip over the assignment of false into r1
L2: loadI false => r1;        // if x >= y, store false in r1
    jumpI -> L3;              // we always have some kind of jump at the end
                              //     of a basic block, so that blocks can be
                              //     safely reordered
L3: comp rz, rw => cc2;       // now we compare z and w
    cbr_LT cc2 -> L4, L5;     // if z < w, branch to L4, else branch to L5
L4: loadI true => r2;         // if z < w, store true in r2
    jumpI -> L6;              // skip over the assignment of false into r2
L5: loadI false => r2;        // if z >= w, store false in r2
    jumpI -> L6;
L6: and r1, r2 => r_result;   // now that r1 and r2 have the results of the
                              //     two relational comparisons, we can and
                              //     the results together and store the
                              //     final result in r_result


The two downsides of this approach are that two conditional branches are always executed, and the storing of values in r1 and r2 are really unnecessary.  With a condition code approach, we can do better by using positional encoding, which uses a position in the code to indicate the value of subexpressions.


    comp rx, ry => cc1;       // compare x to y
    cbr_LT cc1 -> L1, L2;     // if x < y, branch to L1, else branch to L2
L1: comp rz, rw => cc2;       // at this point, we know that x < y, so why
                              //     store a value in r1, when we could just
                              //     proceed immediately with the next
                              //     comparison instead?
    cbr_LT cc2 -> L3, L2;     // if z < w, branch to L3 (which will set the
                              //     final result to true), else branch to L2
                              //     (which will set the final result to
                              //     false)
L2: loadI false => r_result;  // there are two ways to get here, but in both
                              //     cases, we know the overall answer should
                              //     be false
    jumpI -> L4;
L3: loadI true => r_result;   // if we get here, we know the overall answer
                              //     should be true
    jumpI -> L4;
L4: ...                       // at this point, r_result contains the result
                              //     of the entire expression


Given a condition code approach for doing comparisons, this is a great improvement.  Short-circuiting is now taking place, which eliminates one of the conditional branches in the short-circuited case.  Also, the useless loads of immediate true or false into temporary registers are now eliminated as well.

Still, if we had boolean comparison instructions that stored a true/false result in a register instead, the implementation would be greatly simplified if we used numerical encoding:


    cmp_LT rx, ry => r1;      // if x < y, store true in r1, else store false
                              //     in r1
    cmp_LT rz, rw => r2;      // if z < w, store true in r2, else store false
                              //     in r2
    and r1, r2 => r_result;   // now that the results of both subexpressions
                              //     are sitting in r1 and r2, we can simply
                              //     "and" them together and store the
                              //     result in r_result


This was a dramatic improvement, since no branching was required (which should keep a pipelined machine much happier).  It should be noted that this version is not short-circuited.  In order to implement short-circuiting with this approach, we'd actually have to slow down the code by doing a check of r1's result and conditionally branching based on it, or perhaps going to a positional encoding approach instead.  The moral of this story: short-circuited operations are not always better in the end.

Loops

We also discussed intermediate code generation for loops.  The example loop was this:


    for (int i = 1; i loop body


A good intermediate code pattern for this loop looks like this:


    loadI 1 => ri;            // ri will store the value of i throughout
                              //     the loop; we'll initialize it to 1
    loadI 10 => r1;           // since there are comparison instructions
                              //     in ILOC that take constant operands,
                              //     we'll need to store the upper bound
                              //     (10) in a register... a good code
                              //     generator will get rid of this
                              //     register if the target machine's
                              //     instruction set has an instruction
                              //     that compares a register to an
                              //     immediate constant
    cmp_LE ri, r1 => r2;      // compare i to the upper bound for the loop
                              //     and store the result in r2
    cbr r2 -> L1, L2;         // if i loop body                 // the intermediate code for the loop body
                              //     would appear here
    addI ri, 1 => ri;         // ++i
    cmp_LE ri, r1 => r3;      // compare i to the upper bound for the loop
                              //     and store the result in r3
    cbr r3 -> L1, L2;         // if i 

The reasons why this pattern is a good one are:

The intermediate code for each loop iteration may fit in one basic block.  Of course, the loop body may have control flow and require more than one.  But if the loop body is simple, each loop iteration will consist of one basic block, keeping a pipeline happy, and also enabling local optimization to have an effect on the entire loop, rather than just a piece of it.Separately testing the initial loop condition and subsequent ones allows us to perform separate optimization.  In the case of a loop like this one with constant boundaries, which is not at all uncommon in real programs, would allow us to optimize away the initial comparison.  If it can be proven at compile time that the loop's body will never execute, the entire loop can be optimized away altogether.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics142/index.html
##-----------------TITLE------------------------##
ICS 142 Winter 2004
##------------------TEXT------------------------##
ICS 142 Winter 2004 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.142 newsgroup |
About Alex








ICS 142 Winter 2004
   Course News







Check back here every day or so.  I will generally post important coursewide announcements here.  They will be listed in reverse-chronological order (i.e. newest items first).

Date AddedNews ItemM 3/29The final course grades are now available.F 3/19The Final Exam Study Guide is now available, along with the latest Schedule update.  (Yes, it really is available now.)W 3/17The Final Exam Review Session will be held on Saturday, March 20, from 2-4pm in IERF 101.  As it the typical rule in my review sessions, I won't be bringing prepared materials.  Since you know better than I do what you need help with, I'll take your questions either for two hours or until there are no more questions.  So be sure to bring questions!T 3/16Some commented ILOC examples from Friday's lecture are now available.  I've also included a Zip archive with a couple of examples for use in testing your Assignment #6, along with the output from my solution.Th 3/11Assignment #6 is available.Su 3/7More Schedule updates are available.Su 3/7One typo in the second sample input/output (the one I added yesterday) was found.  The type of the variable j was intended to be boolean, but I left it as string.  It's now boolean, which makes the output match the input.Sa 3/6A couple of fixes have been made to the sample input and output provided in the Assignment #5 write-up.  Also, as we discussed in class yesterday, I've provided a second example, one that includes overlaying of local variables in an activation record.Th 3/4Assignment #5 is now available.F 2/27As discussed in Wednesday's lecture, the due date for Assignment #4 has been postponed to Thursday, March 4, 11:59pm.Th 2/26A fairly significant bug was found in the version of the SymbolTable that I included with the Assignment #4 Starting Point.  It used dynamic scoping to resolve non-local variable references, rather than static scoping.  Argh!  A fixed version of SymbolTable.java is now in the Starting Point.  I've also included a README-NewSymbolTable.txt file in the Starting Point, which explains how to use two new symbol table methods that are required to implement static scoping.W 2/25A new version of the Starting Point for Assignment #4 has been posted.  It has only three very minor changes in it:
      Statement.java is now included, since it was originally left out by accident.One line of code in Interpreter.java has changed.  A call to a non-existent initialize() method has been changed to a call to declare(), which does exist.The constructor for the Type class had a bug in it; it didn't initialize the initialValue field.
    Someone also asked me earlier today whether SubprogramDeclaration.java was missing from the Starting Point.  The answer is no; SubprogramDeclaration is an AST node, so it's my assumption that each of you already has a similar class (or classes) yourself, so providing mine would be of little benefit (and probably cause more problems than it would solve).M 2/23Assignment #4 is available.M 2/23A minor typo was found on the Midterm answer sheet.  I left one set of parentheses out of the answer to Problem 1c.Sa 2/21The Midterm scores and a Midterm answer sheet are now available.  Midterms may be picked up in my office beginning on Monday; as soon as you leave my office with it, I will no longer entertain a regrade request.  I suggest printing a copy of the answers and bringing them with you, as it will drastically reduce the number of questions that you'll need answered as you scan through your exam.Th 2/19Two changes regarding Assignment #3:
      The due date has been postponed until Monday, February 23, 11:59pm.  This is motivated by two goals.  Firstly, I want everyone to have a chance to get this assignment finished, because it's a very satisfying one to complete -- it feels like you've finished a significant portion of a "real" compiler.  Secondly, and perhaps more importantly, at least Part 1 of your solution to Assignment #3 will need to be reused in Assignment #4.I've made a couple of updates to the assignment.  The write-up has been updated to reflect them, but to keep things simple for those of you who have already started, here is a Zip archive containing only the updates.  Be sure you read the README.txt file first; it explains what the changes are.  (In short, if you aren't very far into Part 2 yet, they won't affect what you've already done.  If you are deeply into Part 2, it's likely that they will only affect one or two lines of your code.)
    Th 2/12The Schedule has been updated with the reading that corresponds to the lecture material from yesterday.  It should be pointed out that I will not be testing you on this reading material on the Midterm.M 2/9The Midterm Study Guide is now available.Su 2/8Assignment #3 and another minor Schedule update (covering today's lecture) are available.  A midterm study guide is forthcoming soon.  By the way, I went ahead and included a completed, downloadable version of the Homer example from lecture in the Assignment #3 write-up.Su 2/8Now that Java 1.5.0 Beta 1 is available (which includes not only plenty of great library updates, but also some fairly fundamental language changes), it is necessary for us to decide whether we'll allow the new language features to be used in this course.  Since this is an early beta, the language features are new for everyone (including the course staff), and tool support for the new language features is still very much up in the air, the clear decision here is to disallow the use of the new Java 1.5 language features for the remainder of this course.  As much as I'd like to allow you to use the latest and greatest, be warned: if the code you submit cannot be compiled and run using Java 1.4, you won't get credit for your assignment.T 2/3
      The assignment grades will be posted to the EEE GradeBook when finished, which you can access via EEE.  Included for each assignment will be your score and an explanation of what you were marked down for.  There are a couple of things that you need to know, however.  (Please note that the scores aren't there yet, but will be soon.)
      There are three graders who are working on assignments this quarter.  Essentially, the class has been split (alphabetically) into three sections, with each grader handling all of the assignments for one of the sections.  The consequence here, of course, is that different graders may grade differently.  A statistical adjustment will be made at the end of the quarter, which will seek the equalize the percentage of points lost by each section.  That means that comparing your score to a score from a student in another section is not necessarily meaningful.  If you're in the "hard" section where the scores are lower, the scores will be boosted somewhat at the end of the quarter to compensate.If you're interested in having your assignment regraded, you should first contact the grader.  If you're unable to resolve the issue with the grader, then you should contact the TA, Carmen Badea (carmen@ics.uci.edu).  If you're still unable to resolve the issue, then you should contact me.  In short, the TA and graders are entirely responsible for this quarter's grading.  They know the intimate details of how it was done; I don't.  So I prefer only to arbitrate in a case when you think you've really been treated unfairly and can't find a resolution to the matter by communicating with the graders and/or TA.To maintain some sanity in this very large class, the statute of limitations on regrade requests is seven days after the time when they were posted.  So, supposing that the grades for Assignment #1 were posted tomorrow (W 2/4), any regrade requests would have to be submitted by email no later than W 2/11.Here are the names and email addresses of the graders:
          If your last name begins with A-H, your assignments will be graded by Bo Xing (bxing@uci.edu).If your last name begins with I-O, your assignments will be graded by Paolo D'Alberto (paolo@ics.uci.edu).If your last name begins with P-Z, your assignments will be graded by Jie Ren (jie@ics.uci.edu).
        
    Sa 1/31The Schedule has been updated.F 1/30I found a bug in the Monkie2004 grammar given in Assignment #2.  The rules for NonEmptyParameterList recursed back to ParameterList instead of NonEmptyParameterList, allowing formal parameter lists that look like this: "x: integer, y: integer,".  A similar problem existed in a rule for NonEmptyExpressionList.  These have both been fixed.W 1/28Assignment #2 is now available.  Also, as discussed in class today, there will be only six assignments this quarter, rather than eight; I've opted for fewer, but meatier, assignments than I'd originally planned.  The Course Reference has been updated with the new grading scale.M 1/26Round 2 of the enrollment is now done.  I think you're going to like what I have to say...Sa 1/24More Schedule updates are up.Th 1/22The latest Schedule updates are now available.M 1/19The Enrollment List (Round 1) is now available, which lists students who are now authorized to add the course, as well as students who requested and were granted a change of section.Su 1/18I made a very minor change to Assignment #1 this morning.  I modified the rule for Monkie2004 identifiers to allow digits in them.Sa 1/17My office hours will be: Mondays 2-4pm, Tuesdays and Thursdays 1-2pm.  Since this coming Monday is a holiday, I won't be in, but I will be available starting on Tuesday.Sa 1/17Assignment #1 is now available.  I've also made an update to the Schedule and added a document that explains how to set up Java on your Windows system.M 1/12It occurs to me that there hasn't been enough lecture material covered to warrant having a discussion on Wednesday, January 14.  Wednesday's discussion is canceled.  Discussions will begin Friday, January 16 and Wednesday, January 21 instead.Su 1/11The Schedule for Week 1 is now available.Th 1/8The discussion sections will begin meeting Wednesday, January 14 and Friday, January 16.  For more information about discussion section meeting times and locations, see the Course Reference.Th 1/8This course will be a work-in-progress throughout the quarter, with the Schedule and Lab Manual updated periodically throughout.  Keep an eye on this page for information about updates.









This course Web site has been validated against the XHTML 1.1 and CSS 2.0 standards.  To ensure that your own Web pages meet established Web standards, visit validator.w3.org.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics142/Schedule.html
##-----------------TITLE------------------------##
ICS 142 Winter 2004, Schedule
##------------------TEXT------------------------##
ICS 142 Winter 2004 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.142 newsgroup |
About Alex








ICS 142 Winter 2004
   Schedule









All assigned readings are from the Cooper text.  It is a good idea to skim the assigned reading before the lecture for the main ideas, attend lecture, and then to go through the assigned reading again to fill in the details that you missed, both in your initial skim of the reading and in the lecture.

Some lectures will have little or no reading corresponding to them.  In some cases, this is because a block of reading corresponds to more than one lecture.  In other cases, the material covered in that lecture is not discussed in the textbook.

DateLecture TopicsReadingsProject DueWeek 0F 1/9
      Introduction to the courseWhy study compilers?A brief overview of a compiler
    
      Ch. 1
    Week 1W 1/14
      Scanning vs. parsingHand-coded scannersDeterministic finite-state automata (DFA's)Regular expressions
    
      Ch. 2.1 - 2.3
    F 1/16
      Non-deterministic finite-state automata (NFA's)Constructing DFA's from regular expressions
    
      Ch. 2.4
    Week 2W 1/21
      Automatic scanner generationParsingA brief review: grammars, parse trees, derivations, and ambiguity
    
      Ch. 2.5 - 2.7Ch. 3.1 - 3.2
    F 1/23
      Grammar review, continuedTop-down vs. bottom-up parsing, conceptually
        Top-down parsing with backtrackingEliminating left recursion from a grammar
    
      Ch. 3.3
    Week 3M 1/26Assignment #1 due 11:59pmW 1/28
      Top-down parsing without backtrackingFIRST and FOLLOW setsLeft factoring a grammarRecursive descent parsing
    
      
    F 1/30
      Table-based LL(1) parsersBottom-up parsing, conceptualThe intuition behind shift-reduce parsing
    
      Ch. 3.4.1 - 3.4.2
    Week 4W 2/4
      LR(1) parsersConstructing LR(1) parsing tables
    
      Ch. 3.4.3Ch. 3.5
    F 2/6
      Constructing LR(1) parsing tables, continuedUsing CUP to specify an LR(1) parser
    
      
    Assignment #2 due 11:59pmWeek 5W 2/11
      Semantic checkingAbstract syntax treesType checking (briefly)Symbol tables (briefly)
    
      Ch. 4.1 - 4.2Ch. 4.4 - 4.6Ch. 5.1 - 5.3Ch. 5.7
    F 2/13
      MIDTERM (regular lecture time and location)
    
      
    Week 6W 2/18
      More about abstract syntax trees and semantic checking
    
      
    F 2/20
      A fork in the road: interpreters vs. compilersInterpreters for dynamic vs. static languagesA Monkie2004 interpreter
    
      
    Week 7M 2/23Assignment #3 due 11:59pmW 2/25
      More about the Monkie2004 interpreterLinear IR'sStack-machine code
    
      Ch. 5.4
    F 2/27
      Three-address codeILOC
    
      Appendix A
    Week 8W 3/3
      Run-time organizationSubprogram linkageActivation recordsSubprogram call and return
    
      Ch. 5.6Ch. 6.1 - 6.2Ch. 6.3.1 - 6.3.2
    Th 3/4Assignment #4 due 11:59pmF 3/5
      Parameter passingAccessing nonlocal variables in block-structured languages
    
      Ch. 6.4 - 6.6
    Week 9W 3/10
      (More information about Assignment #5)Intermediate code generationThe effect of the memory hierarchyKeeping values in registers
    
      Ch. 7.1 - 7.3
    Th 3/11Assignment #5 due 11:59pmF 3/12
      Implementing boolean values and boolean expressionsImplementing control-flow constructsBasic blocks and control-flow graphs
    
      Ch. 7.4Ch. 7.8
    Week 10W 3/17
      Local optimizationExtended basic blocks and superlocal optimizationThe difficulties of global optimization (briefly)Cloning of blocks and inlining of procedures
    
      Ch. 8.1 - 8.2Ch. 8.7
    F 3/19
      The instruction scheduling problemList scheduling
    
      Ch. 12.1 - 12.3
    Assignment #6 due 11:59pmFinals WeekW 3/24FINAL EXAM: 4:00-6:00pm, ELH 100
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics142/EnrollmentRound1.html
##-----------------TITLE------------------------##
ICS 142 Winter 2004, Enrollment List, Round 1
##------------------TEXT------------------------##
ICS 142 Winter 2004 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.142 newsgroup |
About Alex








ICS 142 Winter 2004
   Enrollment List, Round 1







Introduction (please read this first!)

As we've discussed a few times in lecture, this course is unfortunately quite full.  By the end of last week (Friday, January 16), I had received 23 petitions from students wanting to add the course, plus another five from students who wanted to switch sections.  After some drops last week, and my agreement to admit a total of 226 students into the course (113 per section) instead of 225, there were seven available seats for adds as I sat down to deal with the first round of enrollments.

Things you need to know:

If you appear on the change list below.  You indicated with an enrollment petition that you wanted to change sections.  Everyone who submitted such a petition was granted his/her request.  It's important for me to note that if you asked to change sections and I granted your request, I gave another student your seat in your current section.  Thus, you are now required to change sections by the end of this week (Friday, January 23).  See me with an already-filled-out change card and I'll gladly sign it.  If you fail to get your section changed by the end of this week, I'll give your seat in your new section to someone else and require you to drop the course.  (I hate to be so bureaucratic about this, but I have a finite number of seats and a large number of students wanting them.)If you appear on the add list below.  Seven students have been authorized to add the course as of today.  See me with an already-filled-out add card and I'll gladly sign it.  The add card must be submitted by Friday, January 23 in order for you to add the course.  Anyone on the list who has not added by then will be replaced by someone else in the second round of adds!If you do not appear on the add list below.  I intend to do one more round of adds after the end of the second week, since students are still eligible to drop the course until then.  If I get additional drops this week (or if students who are authorized to add this week fail to get their add card signed), I will authorize more students to add next week.  After that, I will no longer be able to add new students, as the course will be full.







Students who must now change sections

IDSuffix lists the last four digits of your UCI ID#.

IDSuffixNew section1924Sec. 12016Sec. 22099Sec. 13059Sec. 14424Sec. 1







Students who are now authorized to add

IDSuffixSection2689Sec. 23219Sec. 13837Sec. 24088Sec. 25560Sec. 26779Sec. 18220Sec. 2
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics142/EnrollmentRound2.html
##-----------------TITLE------------------------##
ICS 142 Winter 2004, Enrollment List, Round 2
##------------------TEXT------------------------##
ICS 142 Winter 2004 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.142 newsgroup |
About Alex








ICS 142 Winter 2004
   Enrollment List, Round 2







You're going to like this...

Since the beginning of the quarter, we've been talking about enrollment issues, given that the course has been full since the very beginning, with a rather large number of students wanting to add.  For the first time in my teaching career, it appeared that I would need to turn people away from one of my courses.  I wasn't happy with the prospect, but there wasn't much choice.

Then a rather amazing thing happened.  Some people dropped the first week.  Some more people dropped the second week.  Not everyone who was authorized to add during the first round of adds got their add cards signed on time.  20 seats had materialized that I didn't think I was going to have.  I started to think about my options.

Look, there technically isn't space in the class for everyone.  So I've decided that I'm going to make the class a little bit bigger.  There was no way I was going to bloat the class to 260 students (which is what it looked like on Day 1).  But roughly 235 (which is where it would end up if I added everyone who was not offered a seat during Round 1) is a manageable number given our resources.  All of this leads me to the following conclusion:

If you were denied the opportunity to add during Round 1, you are now welcome to get your add card signed by me anytime this week.  If you do not get your add card signed this week, there will not be another opportunity.

If you're one of these students, come see me before or after class or during office hours with an add card and I'll take care of it.

Happy compiling... :)
##------------------URL-------------------------##
http://www.ics.uci.edu/~jie/visio_for_xadl_old.html
##-----------------TITLE------------------------##
Visio for C2/xADL: Archived
##------------------TEXT------------------------##
Jie Ren (任杰)AreaSoftwareAdvisorRichard N. TaylorE-mailjie@ics.uci.edu



 Biography 
  Research  
   Teach   
    Work    
  Service  
Publication
  Contact  





Visio for C2/xADL: Archived

Download!

Visio for C2/xADL is a graphical front end of ArchStudio 3. It can be used
to create xADL 2.0
document graphically, with special support for C2
architecture style 

Features 

    Extend Microsoft Visio to work as ArchStudio 3.0 front end editor
    Integration with COM, Microsoft Java and Sun Java
    Create both generic and C2-style architectures, using drag-and-drop,
    supporting undo and layout
    Full synchronization between xADL content and Visio format
    Support xADL 2.0's instance, type, structure, and implementation schemas
    Event visualization
    Easy installation and upgradability

System Requirements
Windows operating system. ( 95, 98, ME, NT, 2000, XP )Microsoft Visio 2000 or better. ( Any edition: standard, professional,
    technical, or enterprise)Microsoft Java Virtual Machine. (The latest version used to be downloadable from here. Microsoft no longer distributes its JVM. An old version of Windows (pre-XP SP1a) is needed to get the JVM.) Sun Java environment, JDK 1.4 or better. Make sure its bin directory is in
    your PATH. AT&T Graphviz, an open source visualization package. It can be
    downloaded here.
    Make sure it's executable, dot, is in your PATH.

Installation
You should download/install ArchStudio 3
and the required software listed above first. 
This package requires Windows Installer to install.
  If you are using Windows 2000 or Windows ME or better, you already have
      it.If you are using Windows 9x, you can get Windows Installer from here.If you are using Windows NT, you can get Windows Installer from here.
Please download and open this package.It should be installed at the same directory as ArchStudio. The default is \Tools\ArchStudio.



User Manual
You have to understand the concepts in both Visio and xADL 2.0 to use this
tool.

Start the environment
You can use ArchStudio 3 to start the environment. (What it does is: start
rmiregistry, start ArchStudio with Sun's Java environment, start Visio Bridge
with Microsoft's Java interpreter (jview)).

After you start Visio, you can find a xADL solution in Software solutions
(Software/xADL in the New menu). You can start creating a new xADL document by
choose the appropriate solutions, as you would do in general Visio.

Use ArchStudio's FileManager
Use the menu in FileManager to create, open, save xADL documents. Visio
solution will not do file input/output directly.

Create a new document
	Choose New/xADL, you will see a blank document.There is an Architecture Menu. Choose "read xADL file"Choose one item from the list. The content of that file will be displayed
    graphically in Visio.
   

Open an existing document
Just open the document. The system will load the Visio file and parse
the associated xADL document. If there is any incompatibility, it will give an
warning.

Create Type
You must have a set of component and connector types to design a software
architecture. The types will be displayed as Masters in Stencil, which you can
drag and drop to create an instance for the type.
First, you need to create interface type. Choose "Create New Type"
from Architecture Menu. Choose "Interface Type". Type an id and a
description for the interface type, click OK.
Second, you can create component types and connector types. Choose
"Create New Type" from Architecture Menu. Choose "Component
Type" or "Connector Type". Type an id, a description, and a
signature. ( The signature should be in this format "DirectionOfInterfaceType,IDofInterfaceType;...;DirectionOfInterfaceType,IDofInterfaceType;
)
After you create types, you can either reload the xADL document (through
"read xADL file") if you still have a blank Visio file, or you can
close the old Visio file(The content in ArchStudio is not lost) and then create
a new one, choose "read xADL file" again. In both cases the types will
be used to create new stencils.

Component/Connector operations
To create a component or connector, drag the icon from the stencil into the
drawing, then type a unique name for it. Hit Esc when you finish typing new
name.
To connect a connector to a component or another connector, drag the handle of the connector to
the center of the component or the other connector, release it when the big red
spot appears.
To change the name of a component/connector, select it and type the new name.
Hit Esc when you are done.
To delete a component/connector, select it and hit Delete. (Deleting
component/connector will also delete connected links.)
To delete a link, select it and hit Delete.
To view the property of a component/connector, right click on it and select
"Property" from the pop-up menu.

Group Operations
To create a group, select the members of group (components, connectors, and
subordinate groups), then choose group from Architecture Menu in the Menu bar.
Type the name of the group.
To ungroup a group, click the group, then click it again ( The boundary would
change to a different line pattern. ) Right click, choose Ungroup.

Using Architecture Browser
To toggle the display of architecture browser, select "Architecture
Browser".
You can see all the components/connectors/links in the right tree. The group
has its members as the children. All items are sorted alphabetically. Hit on any
node will lead you to corresponding shape in Visio file.

Sub Architecture Support
Choose "Create New Structure" from Architecture menu. Input an id
and a description for the new ArchStructure. A new page will be created. You can
add new components/connectors/links to this ArchStructure.
When create a new component/connector type, you can check "Use current
structure" box in the "Create New Type" dialog box to specify
using current structure as sub architecture for the newly created
component/connector type.
When right click on a component/connector, if its type contains sub
architecture, you can choose "GotoSubarchitecture" do bring in a new
page for the sub Architecture.

Event Visualization
To see the visualization, choose set sender color and set receiver color from
Architecture Menu, set the colors to what you want. Run the events source
application. You will see messages sending between
components and connectors.

Other Operations
Toggle "Check Unique Name" will enable or disable uniqueness
checking for names. Disable it when you want to do multiple pasts form previous
copies.
"Bind xADL file" connects current Visio file to the selected xADL
document, but does not do any loading or checking.





  Last Modified: 
		August 1, 2005
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/issachar.htm
##-----------------TITLE------------------------##
The Tribe of Issachar
##------------------TEXT------------------------##
The Tribe of Issachar



Our family has a tradition that we descend from the tribe of Issachar.
If you have a similar tradition, please consider joining our DNA project. See our website for more information: https://www.familytreedna.com/surname_join.aspx?code=P84934&special=true 
Our orthodox cousins frequently contest the claim on the grounds that the Ten Tribes are lost (perhaps beyond the river Sambatyon). Although this may be true, two other facts are evident from scripture and basic commentaries. 
Some members of tribes other than Judah, Benjamin and Levi remained scattered throughout the land after Sennacherib's exile. On two separate occasions, after the exile of the ten tribes, a wave of people returned to the land.
		After the fall of Sennacherib outside of Jerusalem (3213).During the reign of King Josiah (3303).
	

T I M E L I N E   (see RaShi to Isaiah 8:23)Exile IAssyrian King Tiglath-pileser exiles Zebulun & NaftaliExile IIAssyrian King Pul exiles Reuben, Gad & ½ ManassehExile IIIAssyrian King Shalmaneser exiles balance of tribes of Israel to Halah, Habor & MediaReturn IDefeat of SennacheribReturn IIJeremiah retrieves tribesExile IVBabylonian King Nebuchadnezzar exiles King Jehoiachin & nobilityExile VBabylonian King Nebuchadnezzar exiles King Zedekiah & remnant (except poor)Purim31873195320632133303332733383404


Note: Prior to the year 3187 the kingdom was not subject to a complete exile but was subject to various partial exiles.


To quote sources:
   Proof that other tribes remained scattered throughout the territory of Judah
...and the rest of the people... (Kings I 12:23). R' Yechiel Hillel Altschuler, in his commentary Mezudath David, explains the verse as "many of the other tribes dwelled in the territories of Judah and Benjamin.". Rabbi Levi Ben Gershon (RaLBaG or Gersonides) comments on the same that the territory of the tribe of Simeon was scattered throughout the land of Judah. He also notes that members of all the other tribes lived in Jerusalem.Don Isaac Abarbanel comments on Isiah 17:6 ...four ir five on its branches... remnants of the other tribes fled to Jerusalem for refuge during the Samarian exile of Sennacherib.
   Proof that a remnant remained in their territories
As shown in the timeline above, the ten tribes were not exiled all at once but rather over a period of almost 20 years. There were three waves of exile. The first two exiles were comprised of only two tribes each. See R' Shlomo Yitzchaki's (RaShI) commentary to Kings II 17:1....the children of Israel shall come, they and the children of Judah together... (Jeremiah 50:4). R' David Kimchi (ReDaK) explains the verse, stating that "when the Ten Tribes were exiled, some of them remained scattered in the land". R' Yechiel Hillel Altschuler, in his commentary Mezudath David, explains it similarly.The people of the city of Bethel described the circumstances regarding a certain grave located there to King Josiah, as recorded in II Kings 23:17. King Josiah reigned from 3285 - 3316. The exile of Bethel was in 3206, many years before the rule of King Josiah. R' David Kimchi (ReDaK) comments that the explanation of the grave was a tradition handed down from father to son for over 350 years.  Don Isaac Abarbanel (v. 18) says explicitly that this could not have been a response from the Cuthean population that was settled there. He states that 2 or 3 small groups remained from the "upper branches" of families throughout the land.King Josiah purified the land of all idol worship. II Kings 23:19 details his efforts in the city of Samaria.  R' Shlomo Yitzchaki (RaShI) comments that Josiah was king over all Israel, those who returned from the ten tribes through Jeremiah.. R' David Kimchi (ReDaK) goes on to explain that there was a small remnant from the exile of the ten tribes still scattered throughout the land....in the corner of a bed... (Amos 3:12). R' Shlomo Yitzchaki (RaShI) and R' David Kimchi (ReDaK) quote from Seder Olam (ch. 22) "Rabbi Nehorai said in the name of Rabbi Joshua: These are the ten tribes that relied on King Hezekiah and on Judah and escaped with them.".         Studying the surrounding verses and commentary leads to the conclusion that one-eighth of the ten tribes escaped the exile, having associated themselves with the tribe of Judah.Therefore, now they shall go into exile at the head of the exiles... (Amos 6:7). R' David Kimchi (ReDaK) explains the verse as referring to the survivors of Joseph who shall be the first of the exile of Judah.This implies that after the ten tribes were exiled, there were still members of other tribes intermingled in the tribe of Judah.Interestingly, four verses later (Amos 6:14), the prophet speaks of splintering. Both R' Yechiel Hillel Altschuler, in his commentary Mezudath David, and Don Isaac Abarbanel explain the verse similarly. It is describing the exile of the ten tribes as being so powerful (splintering), as to preclude them from returning after the Babylonian exile. Those of the ten tribes that did not participate in the splintering exile, i.e. they were exiled with the tribe of Judah, could return.Tractate Sanhedrin 93b, explaining the verse in Daniel (1:6), quotes Rabbi Shmuel, son of Nachmaini, that Hanania, Mishael and Azariah were from tribes other than Judah. They were part of the first Judean exile in 3327, which was over one hundred years after the final exile of the ten tribes. This also proves that there were other tribes in the territory of Judah after the three exiles of the ten tribes.I Chronicles (4:41) discusses the conquests of the tribe of Simeon. Rabbi Levi Ben Gershon (RaLBaG or Gersonides) comments that this occurred during the reign of King Hezekiah, after the exile of the ten tribes. He goes on to say that these tribe members were a remnant that remained after the exile.R' David Kimchi (ReDaK) to I Chronicles 9:1 expounds that there remained from the tribes of Ephraim, Manasseh, Issachar and Zebulun in the territory of Judah after the exile of the ten tribes. This remnant returned with the tribe of Judah after the Babylonian Exile.And the first settlers who were in their inheritance in their cities were the Israelites (I Chronicles 9:2). R' Yechiel Hillel Altschuler (in Mezudath David) states that even though the ten tribes were exiled to Assyria, still, there remained a remnant scattered throughout the land that were exiled to Babylon together with the tribes of Judah and Benjamin and they returned with them. R' Levi Ben Gershon (RaLBaG) states that it is well known that during the times of the Kings of Judah, after the exile of Samaria, and even before that time, a minority of the joined with the Tribes of Judah and Benjamin. They were exiled to Babylon together with them and they returned with them already with Zerubbabel and also with Nehemiah and Ezra.In Don Isaac Abarbanel's commentary on II Kings 23:18, he references II Chronicles 30:1 and states that there remained scattered throughout the land a remnant from the tribes of Zebulun, Asher, Simeon, Ephraim & Manasseh. He also references II Chronicles 34 and says that there was a remnant of Ephraim & Manasseh during the rule of King Josiah.The verse in Isaiah 14:32 states ...the poor of the people... to which R' Shlomo Yitzchaki's (RaShI) comments, ...even from the ten tribes they would come.... He references II Chronicles 30:6 to prove that King Hezekiah sent messengers throughout the borders of Israel to return to G-d.In the commentary of R' David Kimchi (ReDaK) to Isaiah 20:5 he relates that in the fourteenth year of King Hezekiah, eight years after the exile of the ten tribes, there remained the tribes of Judah, Benjamin and a small remnant [of other tribes] throughout the land.
   Proof that the tribes returned
Talmud Bavli, Tractate Megillah 14b states that after the prophet Jeremiah brought the ten tribes back, the Jubilee year was restored in the Holy Land. The ten tribes were ruled by King Joshiah ben Amon (also king of Judah at the time) from the eighteenth year of his reign.Midrash Ezra and R' Meir Leibush Malbim, on Nehemiah 10:32, reflect the disagreement between RaShi and Tosafoth in Talmud Bavli, Tractate Gittin 36b. The argument centers around the observance of the Jubilee year and the return of the exiles. Tosafoth are of the opinion that members of all the tribes did return at the time of the Second Commonwealth.Talmud Bavli, Tractate Erchin 32b - 33a discusses the applicability of the Jubilee year during the times of the Second Temple. To be in force, there is an opinion that the various tribes would all have to reside in the land of Israel, in their own respective cities (and not Jerusalem). R' Jochanan states that Jeremiah brought the ten tribes back as proof that the Jubilee year was in force at the end of the First Temple era.For additional research on this topic, refer to Talmud Bavli, Tractate Sanhedrin 110b, R' Shlomo Yitzchaki (RaShI), heading "Ein Asidin Lachzor", the Chazon Ish, Shviis 3:11 and Maimonides to Talmud Bavli, Tractate Gittin 36b as well as the commentary of R' Yom-Tow ben Abraham Ashbeli (RYTvA) there.And when there is yet a tenth of it ... (Isaiah 6:13). Don Isaac Abarbanel (v. 12) focuses on the end of chapter 6. He has various explanations for the meaning of "a tenth". He states that it is referring to a tenth of the ten tribes, those exiled nearby to the land of Israel. It was this tenth that the prophet Jeremiah was able to retrieve. They were in the lands of Amon, Moab and other neighboring areas. He was unable to bring back the exiles from Halah, Habor, the river of Gozan and the cities of the Medes. These locations are quoted in II Kings 17:6.At that time, there shall be brought a gift to the L-rd of Hosts (Isaiah 18:7). R' Meir Leibush Malbim explains this verse as dealing with Sennacherib's defeat in the time of King Hezekiah. At that time, many of the ten tribes (from the Assyrian exile) came to Jerusalem to be under King Hezekiah's protection..In the eighteenth year of King Josiah's reign, Hilkiyah the High Priest went to consult with Huldah the Prophetess regarding a Torah Scroll that was found in the Temple. R' Shlomo Yitzchaki (RaShI) and R' David Kimchi (ReDaK) comment (on II Kings 22:14) that they went to her and not to Jeremiah because he was not in Jerusalem at the time. He had gone to go retrieve the ten tribes.For such a Passover sacrifice had not been performed since the time of the judges... (II Kings 23:22). R' Shlomo Yitzchaki (RaShI) comments "... until now that the ten tribes were exiled and Jeremiah brought them back and King Josiah ruled over them, and they all came to Jerusalem". This was in the eighteenth year of reign, in 3303.In describing the exile of Jehoiachin, King of Judah, by Nebuchadnezzar, scripture writes "And all the military men seven thousand... "(II Kings 24:16). R' Shlomo Yitzchaki (RaShI) and R' David Kimchi (ReDaK), in resolving an apparent contradiction between this verse and a prior one (ibid. v. 14) and a verse in Jeremiah (52:28), states "...three thousand were of the tribe of Judah and seven thousand of Benjamin and other tribes. Also in Seder Olam (ch. 25)". This exile took place in the Jewish year 3327. The three exiles of the Ten Tribes (3187 [Zebulun & Naftali], 3195 [Reuben, Gad, & half tribe of Manasseh], 3206 [Samaria - remaining tribes]), were more than one hundred years prior. It is obvious that there were still other tribes present in the land of Israel even after the exile of the Ten Tribes.R' Joseph Kara, in his commentary Mahari Kara to Isaiah 11:11 states that after the fall of Sennacherib, many of exiles from the Ten Tribes returned as they no longer feared him. He notes that this was (90 years) prior to the time that Jeremiah brought them back and King Josiah ruled over them.
   Proof that there were members of the other tribes still known, even AFTER their exile
After the ten tribes rejected Rehoboam as king, he mobilized the army. G-d instructs the prophet Shemiah to tell them not to go to war. The message is conveyed to "Rehoboam ... all of the house of Judah and Benjamin, and the rest of the people." (I Kings 12:23). If the ten tribes abandoned Rehoboam, and the prophet already addressed the tribes of Judah and Benjamin, to what group do "the rest of the people" belong? The commentary Mezudath David explains that, "there were many from the other [ten] tribes that were dwelling in the lands of Judah and Benjamin." This would make it seem likely that even after the other tribes were exiled, they could have had members that remained behind, mixed in with Judah and Benjamin....and the house of Joseph I will save... (Zechariah 10:7) R' Shlomo Yitzchaki (RaShI) states "in the place where they were exiled, there in Halah and Habor, in the days of Sennacherib". The Ibn Ezra on this verse explicitly states that Joseph refers to those returning from Assyria to the Second Temple.And the king said to the wise men who knew the times (Esther 1:13). Targum translates "And the king said to the wise men, the children of Issachar". This is an obvious proof that there were descendants from the tribe of Issachar intermingled with the Judean exiles in the Persian empire.The returnees at the time of the Second Temple numbered 42,360 (Ezra 2:64). R' Shlomo Yitzchaki (RaShI) and R' Yechiel Hillel Altschuler (Mezudath David) both quote Seder Olam (ch. 29) that of that count, 30,000 were from the tribes of Judah and Benjamin. The other tribes made up the balance of 13,000. We have definitive prof of all of the tribes still existing and populating the land at the times of the Second Commonwealth. ... and all Israel in their cities (Ezra 2:70). R' Yechiel Hillel Altschuler (Mezudath David) explains this to mean those of the other tribes that ascended from the exile, aside from the tribes of Judah and Benjamin.In his commentary to Ezra 9:7, R' Shlomo Yitzchaki (RaShI) explains that Ezra lamented the fact that there were still many of the ten tribes in exile in Babylon. Obviously this means the location of many of the ten tribes was known during the times of Ezra, in the beginning of the Second Commonwealth.In Tractate Megillah 16a the verse in Esther 6:13 is discussed. Haman's wife and wise men told him that if Mordechai is of Jewish descent you will not prevail against him. The Talmud explains that they told Haman that if Mordechai was from the tribes of Judah, Benjamin, Ephraim, or Manasseh, you will not prevail against him.Obviously, even in exile, the lineage and existence of other tribes was known.There was a Judean man in Shushan ... Mordechai (Esther 2:5). R' Elijah, the Gaon of Vilna explains that Mordechai was a prince over all the tribes included under the name of Judah. Although many of the ten tribes returned to the land of Israel, they did not occupy their own territory and were included in the exile of the tribe of Judah.R' Shlomo Yitzchaki (RaShI) explains Zechariah 9:13 as dealing with the Hasmonean victory over the Greeks. The verse specifically mentions the involvement of Ephraim. R' Yechiel Hillel Altschuler (Mezudath David) states that Ephraim refers to all ten tribes. R' David Kimchi (ReDaK) expounds further, clearly stating that after the exile in the days of Hoshea son of Elah, there remained a fragment of the ten tribes still in the land. He quotes II Chronicles 34:9 in further support (see also verses 7 and 8 there).R' Jochanan, who was from the remnant after the destruction of the Second Temple, stated (Talmud Bavli, Tractate Bava Metzia 84a) that he descended from the tribes of Joseph.The prophet Nehemiah list the resident tribes in Jerusalem at the time of the Second Commonwealth (Nehemiah 11:4). R' Yechiel Hillel Altschuler in Mezudath David explains that since very few members of the other tribes lived in Jerusalem, Nehemiah did not count them. However, Ezra did mention the tribes of Ephraim & Manasseh (I Chronicles 9:3) when enumerating the residents of Jerusalem.Talmud Bavli, Eiruvin 45a, describes "wells of the tribes" which R' Shlomo Yitzchaki (RaShI) describes as wells used by caravans traveling from Babylon to Israel. It seems obvious that the term "tribes" refers to more than just Judah. Otherwise, the more generic term of "olei bavel" would be used.
   Proof that there were other individuals exiled prior to the ten tribes
There were at least 2 other earlier exiles referenced by the commentators to Judges.
	See Judges 5:17, where Deborah chastises the tribe of Dan for fleeing in ships. This occurred sometime between 2636 - 2676. See RaLBaG to Judges 18:30, where he states that the exile mentioned there refers to 5:17.See also ReDaK to Judges 20:15, where he quotes the Midrash that 1000 of the survivors from the tribe of Benjamin fled to the land of Romania (Rome?). This would have been occurred probably sometime during the timeframe of 2502 - 2871.
	...and Aram went out in bands and captured from the land of Israel... (Kings II 5:2). This story transpired sometime around the Hebrew year 3050 which was more than 100 years before the first of the exiles....and I will not cause Israel's feet to wander... (Kings II 21:8). R' David Kimchi (ReDaK) explains the verse that prior to King Menasseh (3230 - 3285).
To be fair, there are sources that can be construed to present a broader view, that the ten tribes are lost. Of the earlier commentaries, R' David Kimchi (ReDaK) seems to favor this approach, at least for the exiles to Halah and Habor:
In describing the exile of the ten tribes, it states ... none was left but the tribe of Judah alone (Kings II 17:18), which would seem to indicate that eleven tribes were lost. However, R' Yechiel Hillel Altschuler (Mezudath David) modifies the phrase to be "none was left in their land but the tribe of Judah". R' David Kimchi (ReDaK) adds that the tribe of Benjamin was included and subordinate to the mention of the tribe Judah.And it shall be in the tribe with which the stranger sojourns... (Ezekiel 47:23). R' David Kimchi (ReDaK) explains the verse, stating that "In the future, when Israel emerges exile, the tribes will be identified. Although now they are all intermingled and no one knows to which tribe he belongs, Elijah will come and identify the tribe of each individual".R' David Kimchi (ReDaK) comments on ...you and Shear-Yashuv... (Isaiah 7:3) that one of Isaiah's sons was named Shear-Yashuv to symbolize that only a remnant of Judah would return from exile. This is in contrast with the ten tribes who did not return after the 70 years and they still have not returned....because of the violence done to the children of Judah... (Joel 4:19). R' David Kimchi (ReDaK) explains that only Judah is mentioned since the Ten Tribes had already been exiled by Assyria and have not yet returned...., and brought them unto Halah, and Habor, and Hara, and to the river of Gozan, unto this day. (I Chronicles 5:26) clearly states that those exiles are still there, until this day. A similar verse, found in II Kings 17:6, does not include the phrase "unto this day". It also does not list the location "Hara" and adds in "the cities of Medes".The prophet Isaiah gives comfort, stating And a shoot shall spring forth from the stem of Jesse (Isaiah 11:1). R' Shlomo Yitzchaki (RaShI) comments that those exiled to Halah and Habor will eventually be redeemed by the King Messiah. This indicates that at least of portion of the 10 tribes remain lost. See Ibn Ezra on the same verse as well.The verse in Isaiah 11:11 states ... the L-rd shall continue ... a second time to acquire the rest of His people. The commentators (RaShi, ReDaK, Ibn Ezra & Mahari Kara) all note that this does not refer to the Second Temple, as that redemption was incomplete. They note that the Second Temple era returnees were only from parts of the tribes of Judah and Benjamin.R' Shlomo Yitzchaki (RaShI) comments on ...neither in truth nor in righteousness (Isaiah 48:1) that in the specific exile of the tribes to the countries of Halah and Habor, in the times of Sennacherib, there is no redemption. Perhaps it is only the exile of Halah and Habor that is truly lost. On the phrase in Isaiah (17:3) of "... the glory of the children of Israel ..." RaShI notes the comparision of the Amonite exile to that of the ten tribes to Halah and Habor. This reference implies that there were members of all ten tribes in that exile.






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 6/30/2015
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/eckstein/eckstein.htm
##-----------------TITLE------------------------##
The Eckstein Family
##------------------TEXT------------------------##
The Eckstein Family
	
	Known Eckstein Family
	eMail about the Yosef Shlomo Eckstein Family
	Broken Branches
	
	
The contributors to this branch at this time are:

    Dr. Avery M. Horowitz             - averymh@touro.edu
    Barbara Jean Greil (nee Eckstein) - greilbj@alfredstate.edu


	
	
	
	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 5/20/02
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/langsam.htm
##-----------------TITLE------------------------##
Pesach Langsam
##------------------TEXT------------------------##
Pesach Langsam
	
	Known Langsam Family
	eMail about Langsam
	Langsam Fragments:The H Section
	Langsam Resources
	
	
	
	Pesach Langsam was the progenitor of our family. There is much mystery surrounding his heritage. Family lore has it that he was a direct descendant of Issachar, son of our patriarch, Jacob. A book regarding his ancestry and offspring has been compiled by Suzan Wynne. Her work, entitled The Langsam-Spira Family, is still available. These pages are an attempt to cover or expand on areas not dealt with in her study. Suzan recently shared a copy of a death certificate for a Pesach Langsam, who died on Nov 2, 1820, at the age of 72. This would place his birth in 1748.
Regarding Pesach's earlier years there is still much supposition. Even his wife's name was disputed, although it was later proven not to be Rochel Mina. Most likely it was Ita. One thing is for certain. At some point they lived in a small town in Galicia called Jawornik Polski. It is near Blazowa & Dynow. Pesach had 6 known children; five boys and one girl.
These links to the left contain information, sometimes in the form of an e-mail, that enhances what may already be known from The Langsam-Spira Family book.
	
	
	
	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 7/12/01
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/spira/spira.htm
##-----------------TITLE------------------------##
The Spira Family
##------------------TEXT------------------------##
The Spira Family
	
	Known Spira Family
	The Yeshaya David Spira Family
	The Yakov Uri Family
	Broken Branches
	Spira Genealogy - The Bnei Yissoschur
	
	
There is additional information available at this time that is being developed. Please check back later. There is also an organization in Israel focusing on this branch. It is part of
Derech Pikudecha
Rechov Shaul Hamelech 17
P O Box 6789
02 5815631 - 5812951
If you receive any information from them, please let me know.
Thank You!

	
	
	
	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 10/15/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/albscrll.htm
##-----------------TITLE------------------------##
The Miller Photo Album
##------------------TEXT------------------------##
Previous       
Next
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/albpic.htm
##-----------------TITLE------------------------##
The Miller Photo Album
##------------------TEXT------------------------##
Welcome to my photo album.
Please click on the navigation choices above to proceed.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/fsamchay.htm
##-----------------TITLE------------------------##
Samuel Müller
##------------------TEXT------------------------##
 Samuel MüllerBorn in Korotichi, Belarus, on March 23, 1897. Chaya MüllerBorn in Erfurt, Germany, and lived in Korotichi, Belarus.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/shabsi.htm
##-----------------TITLE------------------------##
The Shabsi Miller Family
##------------------TEXT------------------------##
The Shabsi Miller Family




Shabsi  (1822 - Jan 22, 1909), son of Yakov Mylech Miller, was born in Obrucna, Slovakia. He 
 married Hena (1825-1909) of Lukov. They lived in Obrucna, Slovakia, where they were reputed to have had as many as 24 children. Of them, 14 are known. However, there are some families descended from him, whose connection is not known. See the Broken Branches section. The 1869 census of Saros county lists Zsigmon & Anna Muller of Obrucna, Slovakia, with the following children living with them at the time: Simon - 1845; Anna - 1851; Abraham - 1857; Izak - 1858; Fulop - 1861; Amalia -1863; Kasalin - 1866; Esztera - 1869

 
Breindel  (1844- 1885 [11 Adar]) married Mordcha Dovid Reiss (1839 - ?), of Lukov, on Jan. 1, 1865. They first lived in Breindel's hometown, Obrucna, Slovakia, where several of their children were born. They later moved to Smilno, Slovakia. They had 6 children. 
         
        Bayla (May 1, 1866 - 1939/45) married Avrohm Goldberg. They had 3 children. 
            Esther, Dina Simon, & Breindle
	 
        Yosef Hersh (Nov 19, 1869 - 1942) was born in Obrucna, Slovakia. He married Sarah Wald. They
	    lived in Stolany, Slovakia, & had 9 children. 
	    Almost the entire family perished in the Holocaust. 
            Blima, Menachem Mendel, Rivka, Rochel, Shlome, Malka, Naftuli, Sheindle, & Mordcha Dovid
	 
        Yeshaya (187? - ?) was born in Obrucna, Slovakia. He married Dreizel Hoflich & they lived in Smilno where they had 9 children. 
	    Almost the entire family perished in the Holocaust. 
            Chaya Sara, Michael, Breindle, Yehudis, Esther, Aron Moshe, Sheindle, Hena, & Mordcha Dovid 
	 
        Avrohm Moshe (1879/81? - 1932) married Necha Bodenstein. They lived in Krynica, Galicia & had 6 children. 
            
           Chezkel Shrage, Breindle Mallinger, Kalman, Zeisel Weil, Yehudis Millstein, & Mordcha Dovid
	 
        Yakov Mylech (188? - ?) married Sima & they had 4 children. The entire family perished in the Holocaust. 
            Breindle, Pesel, Avrohm Leib, & Menachem Mendel
	 
        Chaim (18? - 1940) married Lena & they had 4 children. 
            Manny, Bertha Aranoff, Pauline Leitner, & Davey
        


 
    Shimon  (1845 - 1920's) was born in Obrucna, Slovakia. He married & lived in Krynica, Galicia, but did not have children.  


 
    Chava (Anna?)  (1851 - 19?) of Obrucna, Slovakia. She  was married & lived in Krynica, Galicia. Nothing else is known about her.  


 
    Chaja Resy (Jan 1, 1852 - ?) was born in Obrucna, Slovakia.

 
    Sarah Rochel  (1855 - 1883) of Galicia. She married Hersh Leib Farber, probably before 1869, because she does not show up in the census then as living with her parents. They had 5 children. 
         
        Breindle (18? - ?) married a Margolis. They lived in Lvov (Lemberg), Galicia & had 4 children. 2 of them survived the war and lived in Rio de Janeiro, Brazil. 
            Jack, Yussel, Sarah Rochel Carterman, & Avrohm
	 
        Chana Blima (18? - 1939/45) married Mayer Farber. They lived in Zabno, Poland & had 8 children. The entire family, except for Fannie & Shabsi, perished in the
	    Holocaust. 
            Sarah Rochel Korman, Fannie Margolis, Mindel Ofner, Yussel, Edis Ofner, Henya, Rudza, & Shabsi Mayerovitz
	 
        Yakov (18? - ?) married and lived in Radlow, Poland. They had 2 girls. The entire family, except for Maria, perished in the Holocaust. 
            girl & Maria Faber-Kulpa
	 
        Malkie (18? - 1944) was married twice, first to a Reicher. They had 1 son together. After Malkie's husband passed away she remarried Yochanon Follman. They lived in Shumrü, but came to the
	    Olyphant, PA, where they had 2 sons. 
            Dovid Reicher, Moshe Iri Follman, & Shimon Follman
	 
        Gittel (18? - 1922) married  Mordcha Ofner & had 4 children. Gittel died of the flu at a young age. The family wanted Fannie (his niece, Chana Blima Farber's daughter) to marry Mordcha but she refused. Her sister, Mindle offered instead. She was only 11. They did not have children together. The entire family perished in the Holocaust. 
            Chaim, Sally, Chayka, & boy
        
		
  
 
Abraham Mandel (Mar 10, 1856 - Nov 12, 1861) shows up in the Obrucna birth & death records. Even though he has the same civil name, Abraham, as his brother, it is not a real problem. Many times the civil name did not have a direct correlation to the Hebrew name. Additionally, his brother, Avrohm Aba, has his own birth record. Furthermore, that Avrohm Aba died in 1935, in Galicia.



 
Avrohm Aba
	 (Jan 7, 1857 - Feb 14, 1935) was born in Obrucna, Slovakia. He was married to a Miller cousin, Miriam [July 1863 - Sep 17, 1938], daughter of Chaim Reuven and Ruchel Hena Hollander. She was from Nowy Sacz and orphaned at an early age. (It is not known how her parents were Miller cousin's although it was probably through a Hollander connection, possibly from an unknown daughter of Pesach Dovid and Chana Rita Miller). Miriam was married off at 13 years of age. Avrohm Aba & Miriam lived in Krynica, Galicia, where they owned the Villa Tatarska. They had 9 children, many of whom perished in the Holocaust.
         
        Chaim Reuven (1880's - 19?) married Sura Gittel. They had 5 children. Chava & Shmuel perished in the Holocaust. 
            Naftali Tzvi, Yakov Mylech, Moshe, Chava, & Shmuel
	 
        Feiga Kendel (Apr 16, 1886 - 1942) married Moshe, son of Benyamin & Merel (nee Teitel) Stern, of Nawsie Kolaczyckie, Galicia, on April 11, 1912. (Incidentally, Benyamin Stern was a brother to Malka Stern, who was married to Pesach Dovid Rebhun). Feiga Kendel & Moshe had 4 children. They lived in Krynica and owned the Villa Zgoda. When Feiga Kendel's sister, Leah, passed away, she took in her oldest daughter, Sarah. They all perished in the Holocaust, except for Rachelle Hena. 
            Rachelle Hena Hirschberg, Helen, Maylech Dovid, & Yashea
	 
        Itcha (1880's - 1942?) married Leah. They lived in Tarnov & had 3 children. They all perished in the Holocaust. 
            Kopel, Hena, & Zelda
	 
        Sarah Rochel (1891 - Jul 31, 1978 [27 Tamuz]) married a cousin,
	   Yakov Mylech Miller. She was unable to have children for the first six years of their marriage. They lived in Krynica, where he owned the Villa Roza. They later moved to the US, living in New York, Pittsburgh,Baltimore, Chicago & Newark. They had 3 children. 
            Shabsi, Chaya Rivka, & Meyer
	 
        Sender (189? - 19?) married Leah & had 4 children. He lived in Krynica & owned, in partnership with two of his brothers, the Villa Venice. They perished in the Holocaust. 
            Yisroel, Rudza, Shimon, & Yechiel
	 
        Ahron Dovid (189? - 1942?) was married twice,
	    first to Sara, who passed away in the 1930's. They lived in Krynica & had 3 children. He then married Gittel Hochberger & they had 2 children. He owned, in partnership with two of his brothers, the Villa Venice. They all perished in the Holocaust. 
            Shaindel, Avrohm Aba, Chana, Shimon, & child
	 
        Yehuda Meyer (1? - 1942?) married Frimtcha but had no children. He lived in Krynica & owned, in partnership with two of his brothers, the Villa Venice. Yehuda Meyer & Frimtcha both perished in the Holocaust.
	 
        Leah (1902 - 1928) married Shaul Widawski. They had 3 children. Only their son, Shabsi, survived the Holocaust. After Leah passed away, Shabsi lived with his grandparents, Avrohm Aba and Miriam Miller. 
            Shabsi, Sarah, & Henny
	 
        Henne (1904? - 1905?) died at one year of age.
        


 
    Rivka (Jan 1, 1859 - Jan 29, 1861) was born & died in Obrucna, Slovakia.

    
 
    Itcha 
	(Nov 1, 1860 - 1928 [27 Tamuz]) was born in Obrucna, Slovakia. He married Leah, lived in Krynica, Galicia, & had children. Nothing else is known about them.   



 
    Fülop (1861 - ?) was born in Obrucna, Slovakia.

  
 
    Pessi (Jan 6, 1862 - ?) was born in Obrucna, Slovakia.


 
    Multsha (Amalia ?)
	 (18? - 19?) of Krynica, Galicia. She married her cousin,	Chaskel Miller, & they had 6 children. When they married they lived in Obrucna, Slovakia. After Multsha's father, Shabsi Miller, passed away, Chaskel moved to Krynica, Poland, where he had a hotel, the Villa Tatarska. 
         
        Eilish was married and lived in Meleltz, Galicia. He had no children. He perished in the Holocaust.
	 
        Mylech  was married and lived in Krynica. He was a talmid chochum. He owned the Villa New York together with his younger brother, Shaul. His entire family perished in the Holocaust. 
            children    
	 
        Avrohm was married and lived in Krynica. His entire family perished in the Holocaust.
            children    
	 
        Fannie (1889 - 1942?) married Herschel Frank. They had 5 children.
            They, & their one son, Shoni, perished in the Holocaust.
            Klara Windreich, Shoni, Ilona Guttman (Zalai), Senen Nash, & Rosa Shamir 
	 
        Shaul (1904 - 1942) was married and lived in Krynica. He was a talmid chochum. He owned the Villa New York together with his older brother, Mylech. He tried to escape by going to Bardejov, Slovakia, in the beginning of the war. His entire family perished in the Holocaust.
            children    
	 
        Rochel (1905 - 1942?) married R. Nuta Shlomo Schlissel. They lived in Krynica, & later in Mukachevo, where he was a dayan. They had 5 children. The entire family, except for Zeeshka, perished in the Holocaust. 
            Zeeshka Bernholtz, Chaya, Malka, Yechezkel, & Chaim Eliezer   
        


 
    Kasalin (1866 - ?) was born in Obrucna, Slovakia.

    
 
    Esztera (1869 - ?) was born in Obrucna, Slovakia.

    






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 7/27/04
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/naftali.htm
##-----------------TITLE------------------------##
The R. Naftali Miller Family
##------------------TEXT------------------------##
The R. Naftali Miller Family




R. Naftali


(1845 - 1930 [14 Adar]), son of Pesach Dovid Miller,
was born in Malcov, Slovakia.
He was first married to Sura Chivala and had 5 children. 
They lived in Gorlice (in SW Galicia), Poland, where he was dayan for over forty years. He was a student of the Divrei Chaim, R. Chaim Halberstam of Nowy Sacz.
After his wife's passing, R. Naftali traveled to Sienewa for Yom Tov. While there, R. Chezkel Shineva, eldest son of R' Chaim Halberstam, proposed a match with Mirel, daughter of R. Yakov Spira, ABD Tertzel, widow of Avrohm Yitzchok Reiss. The marriage was only in Jewish law, with no civil ceremony. R. Naftali had two children, Itcha & Sarah,  with her. Because a civil marriage was not performed, these two children retained the family name of Reiss. Mirel perished in the Holocaust, during its onset, either in the Sulig or Bochnia ghetto.

 
R. Shmuel Aron, Labiva (Labowa) Ruv
	 (1865 - 1942 [17 Elul]). He and almost all of his descendants perished in the Holocaust. R. Shmuel Aron was extremely sharp, and at the age of 18 was appointed Rabbi of Yidlitch, Galicia. He was married more than once, although only one wife is known: Chava, daughter of R.
	Matisyahu Vildstein, of Labowa (near Maciejowa). They had 4 children. After World War I, R. Shmuel Aron accepted
	the post of Rabbi at Labowa, where he became known as Labiva (Labowa) Ruv. He headed a yeshiva
	there. In 1940 he was sent to the Nowy Sacz ghetto, where he perished. 
         
        Yoel (18? - 1942?) of Labowa (near Maciejowa), Galicia, married Pessil, daughter of R. Shimon Leiber of Sanok. They had at least 2 children. He perished in a Nazi prison in Tarnow. His wife & one of his sons, Hersh, also perished in the Holocaust. 
            Itcha Dovid & Hersh     
	 
        Ben-Zion (18? - 1942?) of Bochnia & Wielopole Skrzynskie, married Leah Lipschutz. They had at least 12 children. The youngest died as a baby and the rest of the family perished in the Holocaust.
            Nuta, Shea, Moshe, Faiga, Rochel, Alta Chaya, & others    
	 
        Sara Chula (1897/8 - 1943) married Aba Wax. They lived in Krakow and had at least 6 children. From 1919-1922 R. Aba assisted his father-in-law with the rabbinate in Labowa. In 1923 R. Aba moved to Preshovitz, where he served as rabbi. In 1924 R. Aba became Rosh Yeshiva and dayan in Krakow. Except for Miriam, everyone perished in the Holocaust, in the Krakow ghetto, on 10 Adar II, 1943.
            Miriam Epstein, Yehoshua, Chana, Bracha, Chaya Rasha, & Shlomo Leib    
	 
        Rochel Leah (? - 1942?) was married around 1937, to Moshe Shea Reich, of Czudec, Galicia. Jack (Yakele) Weiss, a first cousin to Moshe Shea, told how he traveled from Lancut to the wedding in Labowa. He said thousands of people attended. Moshe Shea was a tremendous talmid chochum and had written many seforim (books). They had no children and both perished in the Holocaust. Mr. Weiss' cousin remembered seeing Moshe Shea in '43 in Germany, close to his end.
	    
      

 
    Nechuma
	
	(c1872 - 1940) of Gorlice, Poland was married to Yitzchok Nuta Stengal. They had 10 children, 5 of which survived to adulthood. Yitzchok Nuta and two of his children, with their families, perished in the Holocaust.
         
        Sara Chivala (c1900 - 1942), married Yakov Volf Dym. They lived in Gorlice and had three children. The entire family perished in the Holocaust. 
            Roza, Dov, & Yechezkel    
	 
        Yechiel (1902 - 1960) married Rochel Morgenstern and went to Israel. They had one son. 
            Shaya Shachar. He changed his last name to a loose Israeli equivalent of Morgenstern (Shachar = dawn, Morgenstern = morningstar). 
	 
        Luzer (1904 - 1989) married both before & after the  war. He had no children.
	 
        Boruch (1907 - 1939?) of Gorlice was married to Sarah Rivka and had two children. The entire family perished in the Holocaust. 
            Naftali & Shaindel    
	 
        Avrohm (19? - 19?) died young (before adulthood).
	 
        Roza (19? - 19?) died young (before adulthood).
	 
        Chaskel lived in Gorlice and came to the US after the war. He married Blima Posner & they have 4 children. 
            Baila Leiser, Rochel Goldberg, Itcha, & Sura Sturm    
	 
        child (19? - 19?) died young (before adulthood).
	 
        child (19? - 19?) died young (before adulthood).
	 
        child (19? - 19?) died young (before adulthood).
        

 
    R. Moshe'le dayan
	 (1875 - 1942 [9 Av]) of Gorlice, Poland was married to Nechama Yuta (daughter of Chana Rivka) Eisenberg and they had 5 children.	R. Moshe'le assisted his father, and after his passing, took over his position as dayan. He was also a posek, teacher of talmud (daf yomi), orator, mohel, the only m'sader gittin in the city, active in all community affairs, and beloved by all. He was sent to Belzitz on 9 Av, 1942, along with 200 other Jews. His entire family perished in the Holocaust. 
         
        Dovid (19? - 1942) was not married. He perished in the Holocaust.
	 
        Sara Chivala (19? - 1942) married a Spira shortly before the war. They lived in Gorlice but had no children. They perished in the Holocaust.
	 
        girl (19? - 1942) was not married. She perished in the Holocaust.
	 
        girl (19? - 1942) was not married. She perished in the Holocaust.
	 
        Chezkel (1927/8 - 1942) was not married. He perished in the Holocaust.
        

 
     Yankel
	 (187? - 1940) of Gorlice, Galicia was married to his cousin,	Rochel Schermer of Tylicz, Galicia. They lived in Presov, Slovakia & had 5 children. Only 1, Moshe, survived to adulthood (The Presov records available through the Family History Centers, should give conclusive dates of birth/death & full Hebrew names). The entire family perished in the Holocaust. 
         
        Yosef (19? - 19?) died of TB.
	 
        Chula (19? - 19?) died in an accident.
	 
        Moshe (c1913 - 1942) lived in Presov and was married to a Schwartz. They had 4 children. The entire family perished in the Holocaust.
            Sara, Dovid, Lytchu, & Chaskel    
	 
        Yitzchok (January 5, 1924 - 19?) drowned.
	 
        child? (19? - 19?) died young.
        

 
    Chaya
	 (187? - 194?) of Gorlice, Poland was married to Shimon Nussbaum & had 5 children. The entire family perished in the Holocaust. 
         
        Yitzchok (19? - 194?) was not married. He perished in the Holocaust.
	 
        Dovid (19? - 194?) was not married. He perished in the Holocaust.
	 
        Boruch (19? - 194?) was not married. He perished in the Holocaust.
	 
        Sara Chivala (19? - 194?) married an Eisen, in 1940. They were not known to have
	    had children. They perished in the Holocaust.
	 
        Yankel (19? - 194?) was not married. He perished in the Holocaust. 
        

 
    Itcha
	
	(June 12, 1901 - 1944 [18 Shevat]) was born in Majdanka. His surname was Reiss. He lived in Mukachevo, Ukraine and was married to Ratzah, daughter of R. Menachem Katz. They had 6 children, 5 of which survived to adulthood. During the Holocaust he was taken to a work camp and later to Ramsdorf-Buchenwald, where he perished. His number was 56757. His wife and young children were put in a work ghetto in Mukachevo. From there they were sent to Auschwitz, where they perished, on 4 Sivan 1944. The only survivor was Jack (Yankel), who related many of these details.
         
        Avrohm (1923 - 1944) was not married. He was a student of yeshiva in Mukachevo & Satu Mare. He perished in the Holocaust, in a work camp. 
	 
        Malka (1925 - 1945) was not married. She perished in Bergen-Belsen, at the end of the war, due to the great ailments inflicted upon her in the Holocaust.
	 
        Jack married Esther Cohen. He is the only survivor from R. Naftali's second wife. He lives in Chicago, IL & has 3 daughters, one of which lives in Brooklyn NY.
            Rachel Diamond, Miriam Seleski, & Shoshie Kahn    
	 
        Naftali (1931 - 1944) perished in the Holocaust. 
	 
        Basha Raizel (1934 - 193?), died before the war.
	 
        Fraida (1940 - 1944) perished in the Holocaust.
        

 
    Sarah
	 (1903/4 - 1940) of Gorlice, Poland was married to Leibel Yugund, of Sukol, a chasid of Belz. They lived in Gorlice & had 5 or 6 children. R. Leibel was a dayan there. The entire family perished in the Holocaust.  
         
        child, child, child, child, & child
        







I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 9/2/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/yuska.htm
##-----------------TITLE------------------------##
The Yuska M'Malcov Miller Family
##------------------TEXT------------------------##
The Yuska M'Malcov Miller Family




Yuska 
 
 (1842/3 - September 6, 1914), son of Pesach Dovid Miller,
 was born in Malcov, Slovakia, and lived in the area of Lenartov & Bardejov, Slovakia. He was married to Chaya Sandezer and they had 4 sons.
 After Chaya passed away he remarried, to a woman who only spoke German. They had no 
 children together.
 
Chaskel
	 
	(186? - 1927/8), of Obrucna, Slovakia, was married to his cousin, Multsha Miller & they had 6 children. After his father-in-law, Shabsi Miller, passed away, Chaskel moved to Krynica, Poland, where he had a hotel, the Villa Tatarska. 
	 
        Eilish was married and lived in Mielec, Galicia. He had no children.
            He perished in the Holocaust.
	 
        Mylech  was married and lived in Krynica. He was a talmid chochum. He owned the Villa New York 
            together with his younger brother, Shaul. His entire family perished in the Holocaust. 
            children    
	 
        Avrohm was married and lived in Krynica. His entire family perished in the Holocaust.
            children    
	 
        Fannie (1889 - 1942?) was married to Herschel Frank. They had 5 children.
            They & their son, Shoni, perished in the Holocaust.
            Klara, Shoni, Ilona, Senen, & Rosa 
	 
        Shaul (1904 - 1942) was married and lived in Krynica. He was a talmid chochum. He owned the Villa New York 
            together with his older brother, Mylech. He tried to escape by going to Bardejov, Slovakia, in the beginning of the war.
            His entire family perished in the Holocaust.
            children    
	 
        Rochel (1905 - 1942?) was married to R. Nuta Shlomo Schlissel.
            They lived in Krynica, & later in Mukachevo, where he was a dayan. They had 5 children.
            The entire family, except for Zeeshka, perished in the Holocaust. 
            Zeeshka, Chaya, Malka, Yechezkel, & Chaim Eliezer   
        

 
    Avrohm Aba
	 (c1866 - 1936 [7 Kislev]) of Stropkov, Slovakia, was married to Hena Treitle (18? - 1943 [15 Adar I]) & they had 12 children, 10 of which survived to adulthood. All of the children, except for Itcha, perished in the Holocaust together with most of their families. Melody Amsel (http://www.jewishgen.org/Yizkor/stropkov1/str003.html#M) lists
	
MULLER  Eduard (Cheskel), Sept. 15, 1912 (Stropkov),
storekeeper, transported Mar. 28, 1942, Stropkov to Zilina, arrived in
Auschwitz June 20, 1942, prisoner #40059, perished July 20, 1942

	Zofia, Sept. 11, 1910 (Michalovce), transported May 23, 1942, from Stropkov, perished
	MULLER  Geza, Apr. 9, 1893 (Sandal-Rovna), farmer, exemption, details unknown, perished

	Shimon, Sept. 2, 1904 (Sandal), exemption, details unknown, perished
MULLER  Hanny Treitel, Feb. 1, 1870 (Stropkov), grandmother, grocer, exemption, details unknown, perished

	Berta (Breindel), Oct. 14, 1898 (Stropkov ), daughter, exemption, details unknown, perished
Mozes (Moishe), July 13, 1920 (Stropkov), grandson, deported
from Presov, arrived in Auschwitz June 21, 1942, prisoner #40055, perished
July 14, 1942
Serena (Sara), Feb. 10, 1928, exemption, granddaughter,
details unknown, perished
Moishe Aron, June 1, 1932, exemption, grandson, details
unknown, perished
Heinrich (Chaim), Dec. 15, 1904 (Stropkov), son,
grocer, transported May 23, 1942, Stropkov to Zilina, perished in Auschwitz
Sept. 1, 1942
Gizela Fried, 25.1907 (Vranov), Heinrich's wife,
details unknown, perished
Veva (Blimu), Nov. 25, 1934 (Stropkov), granddaughter,
details unknown, perished
Serena (Sara), Feb. 26, 1936 (Stropkov), granddaughter,
details unknown, perished
Malvina (Malka), July 23, 1937 (Stropkov), details
unknown, perished
Abie, date unknown (Stropkov), details unknown, perished
MULLER  Isak (Itsche), Apr. 27, 1907 (Stropkov), storekeeper, exemption, fled to Hungary, transported 1944 to Auschwitz, survived

	Lila (Lea, Lytchu) Fogel, May 29, 1912 (Dubove), exemption,
details unknown, survived

Avraham (Avrum, Aba), July 7, 1938 (Stropkov), exemption,
details unknown, perished
Mozes, July 4, 1940 (Stropkov), exemption , details
unknown, perished
Josef, May 31, 1942 (Stropkov), details unknown,
perished
MULLER-FRIEDMANN  Julius, Nov. 8, 1907 (Valassa Bela), transported May 23, 1942, Stropkov to Rejowiec, perished

	Helena Friedmann (daughter of Salamon Friedmann), Jan. 6, 1909 (Stropkov), transported May 23, 1942, Stropkov to Rejowiec, perished
Osias Friedmann, Mar. 14, 1940 (Stropkov), transported
May 23, 1942, Stropkov to Rejowiec, perished
	 
        Moshe (April 14, 1890 - 1942) of Presov, Slovakia, was married to his second cousin,
	     Sarah Freidle Schermer, & had 8 children. The entire family, except for Blimu, perished in the Holocaust.
            Lytchu, Yossi, Chaytchu, Meir, Duved, Rivkele, Blimu Muller, & Feiga    
	 
        Duvtcha  (July 16, 1892 - 1942) was born in Stropkov. In 1918 he married his second cousin, Chaytchu Rebhun, in Amsana (Mszana Dolna). They settled in Presov, Slovakia, and had 5 children. Duvtcha was a spice wholesaler. The entire family, except for Mirtchu & Pinya, perished during the Holocaust, in Treblinka.
            Mirtchu Berkowitz, Yossi, Pinya, Shabse, & Chazkush    
	 
        Chana Rita (October 3, 1894 - 1942) married R. Shiye Langer & lived in Zborov. He was a Rosh Hakohal. 
             They had 6 children. The entire family, except for Chaytchu, perished in the Holocaust.
            Chaytchu Berkowitz, Mordcha Dovid, Blima, Mylech, Mendel, & Esther Toiba    
	 
        Eilah (189? - 1944) of Humenne, Slovakia, married Sara Teitelbaum & had 5 children.
             The entire family perished in the Holocaust.
            Monya, Blimu, Toby, Chani?, & Abie    
	 
        Refuel (December 26, 1896 - ?) was born in Stropkov and must have died young. Although the Slovak Archive's record his birth, there is no recollection of him amongst family members. It is also possible that Refuel & Eilah were the same person.
	 
        Gittel (December 15, 1897 - 1942) of Stropkov, Slovakia, is recorded in the Slovak archives birth registry as "Szurah Gittel". She was married to a Frankel & had 1 daughter. Gittel's husband & daughter both died of TB before the war. Gittel remarried to Mendel Matzin. He had three girls and a boy from a previous marriage. They did not have children together. The stepson gave a name for her in 1988/9, as did her nephew, Hymie, in 1982. Gittel perished in the Holocaust.
            Chaytchu    
	 
         Breindle (November 7, 1899 - 1944) of Kisvarda, Hungary, married Chaskel Moskowitz. 
             They had 4 children. The entire family perished in the Holocaust.
            Yossi, Sarah, Blimu, & Moshe Aron    
	 
        Basha (July 26, 1901 - 1942) married Sruel Meir Wolf, lived in Stropkov, Slovakia, & had 6 children. Moshe died as a child. Buni died as an infant, from polio, in Presov, during 1938. The rest of the family perished in the Holocaust. 
            Yossi, Suri, Moshe, Faigy, Abie, & Buni    
	 
        Chaim (December 15, 1904 - 1942) of Stropkov, Slovakia, married Gittel Fried & had 4 children. The entire family perished in the Holocaust.
            Blimu, Sarah, Malka, & Abie    
	 
        Itcha (1907 - 1990) of Stropkov, Slovakia, & then New York, married Lytchu Fogel
            & had 5 children. The 3 oldest children, born before the Holocaust, perished.
            Avrohm Aba, Moshe, Buni, Hymie, & Heshy    
	 
        Yechezkel (1910/2 - 1942) married Shaindle Broyde but had no children.
	 
        Libu (1910/2 -1934 [1 Av]) died of TB as a single girl. She caught it from her niece, Chaytchu Frankel. She was supposed to be engaged to the son of R' Mendele, the Stropkover Ruv.
        

 
    Levi Yitzchok
	 
	(186? - March 9, 1932 [1 Adar II]) of Krynica, Poland. He was married to Chay Gitsha (Chaya Gittel) Linker. They had about 4 children. He had the Villa Tel-Aviv & perhaps the Villa Miller as well. He had either a brother-in-law or son-in-law named Pesach Linker, who had a son Moshe, from Slovakia or Hungary. He lived by his grandmother, Chay Gitsha, and was a baker. The Guttfriend's had a restaurant in one of Levi Yitzchok's hotels. Their is a living nephew to them: a Kahne from Israel, now in Boro Park (Bobov?), the son of Srael of Dabrowa. He may be able to find out more information about the family. Levi Yitzchok's family perished in the Holocaust aside from Yosef Masbaum who related new details of his family in May of 1999. Yosef is the only survivor from all of Levi Yitzchok's children and grandchildren.
	 
        Chana (1895? - 1942) married Zalman Massbaum of Nowy Sacz, Poland (Galicia). They had a china shop in Krynica. One son, Yosef, survived. The rest of the family perished in the Holocaust. 
            Yosef, Aidel & Zisel    
	 
        Eila married Gittel Bleich, the daughter of the shochet of Tylicz. They lived in Krynica where he had an iron factory. A relative, Sender Bleich, worked by him, moved to Tzfas and now lives in Haifa, Israel. Eila and his entire family perished in the Holocaust.
            Mayer, girl & girl    
	 
        Dovid lived in Krynica and was married to a woman from Germany. She was from a town pronounced Zay-Push. They had three young children. Yosef Massbaum related that his uncle, this Dovid, "was president of Krynica and he worked with the bank. Two weeks before the war he put money in Switzerland. They gave information to the Germans who killed him". According to family in Bardejov, Dovid fled to Bardejov during the war. It may be him that is referenced in the 1941 census as having been born in Osweicim (Auschwitz) in 1896. Perhaps with his money he was able to bribe his way out of Poland (and fake his death). He and his entire family perished in the Holocaust.
            boy, boy & girl    
	 
        Miriam married Binyomin Gottleib from Grybow. They lived in Krynica and had three very young children. The family perished in the Holocaust. The Gottleib side of this family is being researched by Eliahu Diner <diner@netvision.net.il>
            girl, girl & boy    
	 
        Sala married Yisroel Hurvich in 1942. They lived in Krynica and had a girl born to them that year. The family perished in the Holocaust.
            girl    


 
    Pesach Dovid
	 
	
	(July 12,1873 - 1937 [27 Elul ]) of Bardejov, Slovakia, 
        was married, in 1887, to Raizel Guwertmann (187? - 1937 [1 Sivan]). They had 8 children.
	About half of the family perished in the Holocaust. 
	 
        Tema Leah (1895-1942) married Yosef Chaim Sander (Hoflich). They lived in Bardejov, Slovakia & had 7 children. The entire family perished in the Holocaust.
            Ephraim, Chaya, Mordche Leib, Libu, Freidy, Rivka, & Naftuli Hersh    
	 
        Chana Rita (1897-1942) married Chaim Yosef Halberstam-Unger. They lived in Bardejov, Slovakia & had 4 children. Chana Rita, along with two of her children (Moshe Elyukim Briah & Chaya), perished in the Holocaust.
            Libu Ungar, Moshe Elyukim Briah, Ruchie Frankel, & Chaya    
	 
        Chaskel (1899-1943) of Bardejov, Slovakia, married Mindel Eisenberg & had 3 children. The family, except for Alice & Ruti, perished in the Holocaust.  They reside in Toronto, Ontario, & Long Beach, NY, respectively. 
            Moshe, Alice Fisher, & Ruti Lebowitz    
	 
        Eilish (1901-19?) of Bardejov, Slovakia, married Surah Katz. They have 3 children. The family resides in Montreal, Quebec.
            Moshe, Libtchu, & Bobby    
	 
        Mordcha Leib (1903 - 1942) of Bardejov, Slovakia, married
	    his second cousin, Rivka Miller
            & had 2 children. The entire family perished in the Holocaust.
            Gittel & Pesach Dovid    
	 
        Chaim (1904-1976) of Bardejov, Slovakia, married Eugenia Smilovitz & had 3 children. Their family resides in Hampstead Quebec, Riverdale NY, & Silver Springs MD.
            Rita Feder, David, & Alice Baer    
	 
        Mendel (1905 - 1942) of Bardejov, Slovakia, married Esther Ring
            & had 2 children. The entire family perished in the Holocaust.
            Pesach Dovid & Moshe    
	 
        Mylech (1909 - 1997) married Feigy Feight/Rosner & lived in Montreal, Quebec, after the Holocaust. They had 2 children, who live in New York and Los Angeles.
            Hedda Rudoff & Lydia Weisman    
        







I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 7/27/2015
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/raflmeir.htm
##-----------------TITLE------------------------##
The Raphael Meyer Miller Family
##------------------TEXT------------------------##
The Raphael Meyer Miller Family




Raphael Meyer  (1830's - ?) , son of Pesach Dovid Miller,
 was married to Leah Goldstein of (1829 - May 14, 1889) Tylicz, Galicia, and they had 16 children. Only 7 are known. Raphael Meyer and Leah are both buried in the cemetery at Labowa. 

 
Avrohm Aba
	
	(1852 - May 24, 1918). He was married to Breindel Zimmermann (daughter of Jakob & Rosi nee Friedman, of Richvald), on December 12, 1873. They lived in Zborov, Slovakia, & had 6 known children. He was in the dairy business (butter). Breindel outlived her husband by many years and lived together with her youngest son, Mordche. She was known as "Breindela Chop", although I do not know why. She perished in the Holocaust along with much of the family.
         
        Pesach Dovid
	    
	    (October 3, 1874-1974 [14 Teves]) received a blessing for longevity from the Sanzer Ruv (R. Chaim Halberstam) while he was a small child. He was married to his first cousin, once removed, Sara Schonfeld  
on January 8, 1901, in Hodasz, Hungary. She was pregnant 11 times, with 5 children surviving to adulthood. Seven of the children's names are known. They lived in many places, including Hodasz, Nyirbator, Kosice, & New York City. Pesach Dovid came to live in the US during the early 1920's. He did come on at least two other earlier occasions. He made frequent trips back to Europe to visit his family. His wife and youngest daughter came in 1932. Two of their children (Freitchu & Shabsy), with their entire families, perished in the Holocaust. 
            Chana Dresdner, Freitchu Goldstein, Erzsebet, Shabsy, Naftuli, Miklos, & Viola Dickstein
	 
        Sarah 
            
	    (1882?-1942?) was married to her cousin, 
	    Yakov Noach
	    
	    . They lived in Zborov & had 7 children. Sarah, Yakov Noach, Rivka & Avrohm Aba perished in Auschwitz.
	    Rivka died in her sister's (Helen) arms. Leah, her husband Chananel Friedman, and their 2 sons,
	    perished in the Treblinka death camp.     
            Herschel, Rochel Millstein, Leah Friedman, Piri Hoffman, Helen Slater, Rivka, & Avrohm Aba
	 
        Hinda (1884-1942?) was married to Shaya (Yeshaya Leib) Schwartz. They lived in Zborov & had 5 children. The entire family, except for Dudya's wife & 2 children, perished in the Holocaust. 
            Sarah Velke, Dudya, Myer?, Perel, & girl
	 
        Rivka (May 18, 1888 - 1888) died as a baby.
	 
        Moishe (September 30, 1889 - June 1964 [29 Sivan]) was married to Gussie Tepper.
	    He came to NY aboard the SS Friedrich de Grosse, on August 5, 1905, when he 
	    was 16. He lived in Brooklyn & had 4 children. 
            Isie, Paul, Pearl Sigety & Charlotte Lurie
	 
        Mordche (Mar 3, 1895 - Aug 17, 1937 [10 Elul]) was married to Bayla Reichman. They lived in Zborov, Slovakia, & had 4 children. Mordche suffered a heart attack & died in a hospital in Presov. He is buried there. The rest of the family perished in the Holocaust. 
            Mendel, Abala, Herschel, & Shulamis
        
    

 
    girl (18? - 19?) of ???, Galicia. She was married, possibly to a Zevasser, & they had 4 children. 
         
        Esther  (187? - 193?) married Noach Pfeffer & had 3 children. Noach and his 2 daughters perished in the Holocaust. 
            Zalman, Leah, & Roiza
         
        Chana Rita (18? - 1942?) was married to Henich Weiss, of Nowy Sacz. They had 2 children. They all perished in the Holocaust. 
            girl & girl
         
        Itcha (18? - 1942?) was married & lived in Kufushani (near Presov), Slovakia. They had 1 son & they all perished in the Holocaust. 
            boy
         
        Yakov Noach 
	    
	    (18? - 1942?) who took his mother's maiden name, Miller. He married a cousin, 
	    Sarah Miller
            . 
	    They lived in Zborov & had 7 children. Sarah, Yakov Noach, Rivka & Avrohm Aba perished in Auschwitz.
	    Rivka died in her sister's (Helen) arms. Leah, her husband Chananel Friedman, and their 2 sons,
	    perished in the Treblinka death camp. 
            Herschel, Rochel Millstein, Leah Friedman, Piri Hoffman, Helen Slater, Rivka, & Avrohm Aba
        
  

 
    Simon 
	
	(May 20, 1858 - June 5, 1918) was born in Tylicz, Galicia. He married Hena Friedman
	
	, of Dlha Luka, Slovakia.
	They had 6 children. Simon lived in Bardejov for some period but came to the US several times, beginning in the 1880's
	(probably to check it out). In 1893 Simon and his  family (except for Meyer) came to the United States (New York).
	He most likely departed from Bardejov  (Bardfeld), Slovakia. Meyer had problems with his eyes and came via Hamburg
	around 1900 (his son Royal remembers Meyer saying he was 13 years old when he arrived). Simon moved, upon his arrival, 
	to Torrington, Connecticut, where he peddled lye. His business partner shot him and left  him for dead. He survived
	but had (some)  paralysis on his left side (leg). He and all his children, with the exception of David, moved back to
	New York in 1903. Simon passed away, from chronic nephritis, at the age of 60. This was just a couple of weeks after
	his brother, Avrohm Aba, passed away. Simon's final resting place is at Mount Lebanon Cemetery in Ridgewood, NY.
	He was survived by 4 sons,  2 daughters, and 19 grandchildren.
         
        Minnie (1880 - Oct 5, 1947) married Frank Bob & had 4 children.
	    They lived in Brooklyn, where Frank was a manufacturer (of shirts). 
            Murray, Bessie Tolkowsky (Neuman), Sophie Bohm & Lillian Gans
	 
        David (Dec 14, 1881 - May 23, 1964) married his first cousin, once-removed,
	    
	    Bertha Schonfeld & had 3 children. David owned a department store in New Millford, Connecticut.
	    The family retired to West Hartford, CT. 
            Betty Osber, Ruth Kane (Fain), & Manny
	 
        Nathan (Sep 13, 1883 - Apr 7, 1959) was born in Hoszuret. His bris was on Sep 20, performed by Chaszkel Wald. Nathan married Sadie Weiss & had 4 children. They lived in Staten Island and owned a tavern. 
            Lillian Farr, David, Michael, & Sam
	 
        Meyer (Mar 16, 1885 - Mar 6, 1958) was born in Bardejov. He married
	    Gussie Birnbaum in New York City on Jun 11, 1907. They lived in Staten Island, where they had
	    4 children. He was a milk distributor (Borden, and later his own). 
            Shirley Rendelstein, Benjamin, Ruth, & Royal
	 
        Annie (Chana Rita) (May 18, 1888 - 1958) was born in Hapuret, near Bardejov, Slovakia. She
	    married Jacob Toder & had 4 children. They lived in Staten Island and owned a tavern. 
            Manny, Harry, Lillian Frederick, & Sidney
	 
        Lewis (1890 - Jan 17, 1962) married Sadie Schact & had 4 children.
	    He had a plumbing  supply store on Houston street (NYC). 
            Robert, Miriam Erber, Beatrice Cohen, & Sylvia Eisenberg
        
  

 
    Yosef 
	(18? - 19?) of Neumark, Poland was married & had at least 2 children.
         
        Zalman (? - ?) was married, with at least 1 son.
	    This son, Chaim, married his cousin, Roiza Miller.
	    They perished in the Holocaust. 
            Chaim
	 
        boy (? - ?)
        
  

 
    Rochel 
	(c1853 - March 30, 1906 [Nissan 8]) of Nowy Sacz, Galicia, was married, with children. She was a healer with herbs.
	She died at a young age and is buried in the Labowa cemetery. Nothing is known about her children. 
 

 
    Yocheved 
         
	(1871-1931/2 [9 Nissan]) was born in Tylicz, Galicia. She married her cousin, Yitzchok Zev Miller, the son of Chaskel Miller (Chaskel was an innkeeper in Obrucna, Slovakia, & was also extremely strong). They lived in Tylicz and had 6 children. Yocheved's mokum menucha (place of burial) is in Labowa (near Maciejowa, now in Poland, just north of Krynica). This is because at the time there was no bais olam (cemetery) in Tylicz. They buried her in Labowa (near Maciejowa) because it is nearby and because her mother, Leah, is buried there.        
         
        Kopel (1897? - 189?) died as an infant. 
	 
        Yakov Mylech (Feb 1899 - 1958 [2 Teves]) married a cousin, 
	   Sarah Rochel. She was unable to have children for the first
	   six years of their marriage. They lived in Krynica, where he owned the
	   Villa Roza. Before moving to the US, he designated his brother, Avrohm Abba, as
	   caretaker. Yakov Mylech & his family
	   lived in New York, Pittsburgh, Baltimore, Chicago, & Newark. They had 3 children.
	   Shabsi, Chaya Rivka Singer, & Mayer
	 
        Shabsi (1900 - 1944 [7 Sivan]) was married to Chaya Sarah
	    Leiber, a descendent of R. Chaim Halberstam of Nowy Sacz. They lived in Nowy Sacz and had 4 children.
	    Everyone except Akiva perished in the Holocaust, in Bergen-Belzen, on 17 Elul, 1942. 
            Mirel, Akiva, Alta Hadassah, & Leah
	 
	Avrohm Abba (Mar 11, 1903 - Jun 1987 [25 Sivan]) married twice. His first wife was Shaindle. They lived in Krynica, where he owned the Villa Paryzanka. He later moved to Nowy Sacz to be close to his brother, Shabsi. There he opened a shnit gesheft (a dry goods store) where he dealt with fabrics and also did pleating work. Avrohm Abba's wife, Shaindle, perished in the Holocaust. After the war he came to the US and married Feigy Rawicki. He had no children. Avrohm Abba & Feigy were both laid to rest in the New Square cemetery.
	 
        Leibish (190?-194?) was married to a woman from Ishtcha (?). They perished in the Holocaust.
	 
        Roiza (190?-1942/4) was married to her cousin, Chaim Miller.
	    He was a great-grandson of Raphael Meyer. Chaim's father, Zalman, was the son of Yosef Miller, the son of Raphael Meyer. They had 3 children. They all perished in the Holocaust. 
            Yechezkel?, boy, & child
        


 
    Rivka 
	(1870's? - Dec 30, 1920 [Teves 19]) married Roita Ber (Dov/Ber) Schermer. They lived in Tylicz & Krynica, Galicia, & had 8 children.
	Rivka died from heartache over the death of her son who was killed in the army during World War I.
         
        Rochel (1890? - 1942) married 
	    her second cousin, Yankel Miller of Presov, Slovakia.
	    They had 5 children but only 1, Moshe, survived to adulthood. 
            The entire family perished in the Holocaust.  
            Yosef, Chula, Yitzchok, child?, & Moshe
         
	 
        Sarah Fraidle (1892-1943) married her second
	     cousin, Moshe. They lived in Presov, Slovakia
             & had 8 children. The entire family, except for Blimu, perished in the Holocaust.
            Lytchu, Yossi, Chaytchu, Meir, Duved, Rivkele, Blimu Muller, & Feiga    
	 
        Anna (Chana Rita) (June 15, 1894 - Nov 16, 1980) was born in Tylicz. She married
 	    Yoel Friedman, of Stropkov. She came to the US: Feb 13, 1924. They lived in the lower east side of NYC. They had 3 children, the oldest died as an infant. 
            boy, Moshe, & Philip
	 
        Moshe Dovid (189? - 194?) lived in Antwerp, Belgium before the war and was not married. He was never heard from again after war. It is assumed that he perished in the Holocaust.
	 
        Roiza (1899? - 1980 [15 Elul]) of Tylicz, Galicia, married Chaim Feigenbaum. They lived in Swoszowa, Galicia. After the war they moved to Petach Tiqva, Israel. They had 5 children. 
            Muttel, Pinchus, Rivka Gutwein, Naftali, & Yeedle
	 
        Mattis (Feb. 9, 1900 - July 15, 1972) was born in Tylicz. He arrived in the US on Jan. 6, 1923. He married Fannie Eidem. They lived in the lower east side of NYC. They had 1 daughter and a dog named Muttel. 
            Rivka Frankel
	 
        boy (190? - 191?) died in the Polish army during World War I. He was not married.
	 
        Basha (19?-1942/4) married a Landau. They lived in Katowice, Poland, where they had a jewelry store. They had 1 son. All of them perished in the Holocaust. 
            Yosef
        

    






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 5/8/2015
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/rpsab.htm
##-----------------TITLE------------------------##
Mueller's from Strzyzow & Lezajsk, Galicia
##------------------TEXT------------------------##
Mueller's from Strzyzow & Lezajsk, Galicia





From: "r & p saban" <ronsab@pathcom.com> at INTERNET
TO: Moishe Miller
Subject: jewish geneology
Priority: Normal
Date: 12/8/97 10:44 PM
---------------------------------------------------------------------------

I came across the Jewish geneological organization website and began scanning
for names and towns of my parents'  family in Poland.
My mother's maiden name is Muller; she was born in Switzerland, but her parents
came from Poland, her father from Tarnow.  His name was Salomon Muller.  His
father's name was Joseph Muller and his mother was Sara (Leisten) Muller.
Are you looking for Mullers or Millers?  Am curious to hear...
Shalom.

Pearl Saban

---------------------------------------------------------------------------
From: "r & p saban" <ronsab@pathcom.com> at INTERNET
TO: Moishe Miller
Subject: One more note...
Priority: Normal
Date: 12/10/97 10:51 PM
---------------------------------------------------------------------------

Moishe,

I forgot to mention that my grandfather, Salomon Muller, had 3 siblings:  Adolf
(Abraham) who married Cyrel Schapiro; David,  who married Erna Plattner, and a
sister Blima, who married Kalman Citrinbaum.  (it is their daughter, Shulamith,
who is trying to trace the family history.)

Their father, Joseph, married Sarah Leisten (from Tarnow).  Joseph was from
Lezajsk.

The story unfolds...

Pearl Saban

---------------------------------------------------------------------------
Subject: Miller/Muller connections
Author:  "r & p saban" <ronsab@pathcom.com> at INTERNET
Date:    12/10/97 10:44 PM


Hello again from Toronto, Canada.

I received your response to my e mail, looked up your 
website (VERY INTERESTING!!! and no doubt a lot of effort
and time went into the research), and was convinced that
there are no links between us.

HOWEVER, today I was visiting my folks and started to 
question my mother on some of the names in her family.
She gave me some info from her mother's side (Muhlrad) 
and some from her father's side that a cousin in Israel
(also researching the family tree) supplied her with. 
And if my info is of use to you, perhaps I can get you
in touch with that cousin for more information. (her
name is Shulamith Bet-Yannai, formerly Winestock, 
nee Citrinbaum)

Well, I was reviewing the info and then plugged back 
onto your website, to the broken Miller branches, 
specifically Muellers from Strzyzow and Lezajsk, and I
found some common information. I quote now from letter 
written to my mother in 1992 from that cousin in Israel.

"As you probably know, our grandfather wrote about his 
father, Shabtai, and mentioned his own grandfather and 
grandmother, namely isaac and Chaya-Tzvia.  He also 
wrote that Shabtai was born and died in Strzyzow, and 
not in Lejansk as we thought.  I looked for this place 
at the library and at my great astonishment found a huge
Yizkor book from that shtetl, about 400 pages, half 
Hebrew, half Yiddish.  Unfortunately there is nothing 
left from that community since a fire burst out in 1898
and all the documents were destroyed.  From what our
grandfather wrote, it appears that when he did write 
those pages, his mother, Fruma, born Licht ,was still 
alive."

There is also another letter from the cousin mentioning
some different names--
Hauser ; Miriam-Gitche Singer , nee Hauser, and my 
grandfather were first cousins.  And there were names of
cousins Feiga, Dora, Kalman and Shmuel who perished in 
the Holocaust.

So, I've suddenly become VERY fascinated by the family 
connections, and hope I can help somehow in your 
research.  My mother will supply me with more info if 
necessary, as will her sister in Chicago.

Looking forward to hearing from you...

Pearl Saban
---------------------------------------------------------------------------
-----Original Message-----
From: Moishe_Miller@ccmail.prusec.com <Moishe_Miller@ccmail.prusec.com> 
To: r & p saban <ronsab@pathcom.com>
Date: Thursday, December 11, 1997 1:34 PM
Subject: Re: Miller/Muller connections


     Hi,
     I have communicated with Shulamith several times. 
     How are you related to her? That family is definitely
     related to mine. If you are from, we are somehow 
     cousins. I have contacted some members from Canada
     that spell the name as Mueller. They were studying 
     in Switzerland in the 1930's I believe. Are you from
     this branch? Can you expand out the upper portion of
     the tree any further?
     -Moishe
_______________________ Reply Separator _______________________

Subject: Re: Miller/Muller connections
Author:  "r & p saban" <ronsab@pathcom.com> at INTERNET
Date:    12/11/97 2:20 PM


Shulamith is my mother's first cousin; Shulamith's mother,
Blima, was my mother's father's sister.  Shulamith also 
has a sister, Tirza, in Israel. The Citrinbaums used to 
live in Geneva, Switzerland. The Muellers are my mother's
first cousins; their father, Adolf (Abraham) was my 
grandfather's brother.  They were all born in Switzerland,
living in Zurich; my mother was born in Basel.  They 
"made aliyah" to Canada in the early fifties, I believe,
and my mother came to visit them in 1956; she met my 
father on that visit and the rest is Adler-Muller history.

The Muellers also vary the spelling of their name; some
are Muller; some are Mueller; some are Miller.
There are several siblings: Marcus (who passed away from
polio as a young boy); Ignaz (Irving, who lives here; he's
a Mueller); Sylvain (named after Shabsi; he's a Miller 
and lives here); Gabi (Gabriel, who lives in Ohio, I 
think and is a Miller); Michael (who lives here and is a
Muller); Raphael (Ralph, who lives here and is a Muller);
and there's a sister, Helen Krokocki, who lived in Toronto,
but has made aliyah and lives on a moshav with her family.

Does that help any?
Pearl
______________________________ Reply Separator_________________________________

-----Original Message-----
From: Moishe_Miller@ccmail.prusec.com <Moishe_Miller@ccmail.prusec.com> 
To: r & p saban <ronsab@pathcom.com>
Date: Thursday, December 11, 1997 6:42 PM
Subject: Re[2]: Miller/Muller connections

Hi,
So we are definately cousins, just do not know how. You 
have a very elderly cousin out in CA who supplied me 
with info as well. Any chance of you getting the death
record for Yitzchok from Stryzow?
Take Care and please stay in touch. If you know of any 
other cousins, please tell me, even if you do not know 
how they are related. I spoke to Ignacz because he went 
to school with Johnny Miller, who is on our tree.
-Moishe

---------------------------------------------------------------------------
From: "r & p saban" <ronsab@pathcom.com> at INTERNET
TO: Moishe Miller
Subject: Re: Re[2]: Miller/Muller connections
Priority: Normal
Date: 12/11/97 9:50 PM

Yes, that elderly cousin in California is no doubt 
Gershon Muller; I think because of Shulamith's research,
my mother reconnected with him several years ago, and 
they talk on the phone at least once a year.  He's over 
80; at least I think that was the last significant b'dayhe had.  Maybe he's
older.
I doubt I can get a death record for Yitchok, but I'll 
see what's out there. I think my grandfather, Salomon, 
had written family tree matters, ie. births, deaths, 
marriages in his Yom Tov machzors; I can  check that out
too.  I'll keep you supplied with info. if there's any 
to be had.
Many years ago (14 to be exact) I was in Israel and 
visiting elderly cousins of my mother, no doubt a cousin
of my mother's father. I remember talking about family 
connections and she said that it's said that the 
author/playwright Arthur Miller is from the family 
(Family resemblances are strong), that his father or was
it his grandfather, had left Poland decades earlier for
the U.S.  Family members have tried to reach him on that
matter, but I think he denies it.  Have you heard of this
potential family member?
Have a good Shabbos.

Pearl
----------------------------------------------------------
Author:  "r & p saban" <ronsab@pathcom.com> at INTERNET
Date:    9/5/98  11:54 PM
Priority: Normal
TO: Moishe Miller at CCSP27B1
Subject: Miller Family Connections
------------------------------- Message Contents -------------------------------
Dear Moishe,
     
No doubt you've heard of the saying "Oh, what a tangled web we weave..."
     
Well, I just thought I'd let you know in  a warped way how very true that is.
     
I'd been in touch with you last fall, as you discovered my name on the Jewish 
Gen. site and my search for Miller; you wrote about your family tree and I wrote
to you how I'm connected to it.
     
My connection is via the Broken Miller Branches file, specifically the Muellers 
from Strzyzow, and Lesanjsk, Galicia.  My mother's  paternal grandfather, Joseph
Muller, was the son of Shabsi Muller who married Frimit Licht (I think that's 
how it goes...)  My mother is from Basel, Switzerland, her parents went there 
after Poland, etc. (my mom's first cousin is Shulamith Bet-Yannai in 
Jerusalem...) Ring any bells...?
     
Well, for months, I've been looking back at your site, looking for updates, etc.
 One day, I was reading the dedication names and cross-references, and ended up
in the Shabsi (Bukovska) Yitzchak Miller Family tree, and was scanning names of 
parents and children, specifically  Avrohm.  I came upon the name of one of his 
daughter, Tzvetta.  Now, it jumped off the screen for me because I've only heard
that name once before -- my cousin had a baby earlier this year and gave that 
middle name to her after her late grandmother whom she was quite close to.  I 
read on in the description and saw the names of Tzvetta's kids, one of whom is 
Chana Geller.  Well,  this cousin I mentioned is my first cousin's wife; her 
maiden name was Geller.  She was out of town for the summer, so I couldn't reach
her to ask her if that's her mother's name.  We found an invitation for that 
cousin's wedding  about 21 years ago, and saw that her mother's name is Chana 
Geller.  Could it be the same one? I wondered for about 3 months.
     
Well, tonight after Shabbat was over, I finally got to reach this cousin (Far 
Rockaway, NY) by phone, threw out my left field question to her if her 
grandmother passed away at the listed year, and went on to read the description.
 Lo and behold, yes! Chana Geller is this cousin's mother, Tzvetta was her
grandmother and a Miller by birth.
     
I don't know if you still consider that the Broken Miller Branches  (from which 
I stem) are part of the big picture, and related, but isn't that weird?  My 
mother was the Muller; she married my dad, an Adler.  That Adler has one sister 
who has one son. That son married a Geller; that Geller's grandmother had been a
Miller at birth and on your tree.
     
I will be sending my cousin the information and the web site address for the 
tree; she'll be delighted and interested to see it and the photo of Tzvetta that
you placed with the description. My cousin, Sara, tells me her mother, Chana, 
was born in the U.S., not Europe.
     
I have heard from others who saw my name on the Jewish Gen. site, and the names 
and places I was curious about.  And yes, I did find other relatives.  Oh, how 
the world is made a smaller place...
     
Wishing you and yours all the best for the coming year.  May it be filled with 
lots of good health, happiness, and continued information for your family tree. 
Keep up the good work!
     
Best,
     
     
Pearl Saban
---------------------------------------------------------
-----Original Message-----
From: Moishe_Miller@ccmail.prusec.com <Moishe_Miller@ccmail.prusec.com> 
To: r & p saban <ronsab@pathcom.com>
Date: Tuesday, September 08, 1998 10:01 AM 
Subject: Re: Miller Family Connections
     
     
>     Hi,
>     Of course I remember, but slowwwww down. You lost me at the very end. 
>     I know of the Tzvetta connection and am in constant contact with the
>     Lesser's and Parnes'. You lost me as to how Joseph Muller fits into my 
>     big tree. Who is your cousinf with the baby Tzvetta, and how? I would 
>     love to connect you right in. I have always known you to be a part of 
>     the tree, which is why you are in the "broken", rather than "other"
>     tree section. Please provide some more detail so that I can re-attach 
>     your branch. Do you have this on Family Tree Maker or some other
>     GEDCOM program?
>     -Moishe
>
>
______________________________ Reply Separator _________________________________
Author:  "r & p saban" <ronsab@pathcom.com> at INTERNET
Date:    9/8/98  9:25 PM
Priority: Normal
TO: Moishe Miller at CCSP27B1
Subject: Re: Miller Family Connections
------------------------------- Message Contents -------------------------------
Hi, Moishe,
     
Here is a brief explanation again--my only first cousin from my FATHER's 
side (my father's only surviving sibling's only child) married a girl, Sara 
Geller.  Sara Geller's mother is Chana Geller; Chana is the youngest 
daughter of Tzvetta, who was born a Miller and married R. Dovid Nusson 
Lesser.  Sara had a baby earlier this year, whom she named Adina Tzvetta.
     
As for Joseph Muller... I don't know that he fits into the big tree; he'd be 
an offshoot from that broken Lezansk branch.  My mother is Lilli 
Muller-Adler; her father was Salomon Muller of Tarnow, later of Basel, 
Switzerland.  Salomon's parents were Joseph and Sara(Leisten) ; Joseph's 
father was Shabtai, who married Frimit Licht; Shabtai's parents were Yitchok 
and Chaya Tzvia.
     
I think my grandfather, Salomon, had written some brief Yahrzeits and 
names/details in the inside cover of his siddurim and machzorim, but it's in 
German, and what my mother could make out of the information just names the 
children of Shabsi (Shabtai) and Frimit and brief outlines of who they married 
and number of kids.
     
Moishe, I'm such an amateur at this genealogy stuff, I don't even know what 
those 2 references you mentioned are.  All I've done is ask my mother in the 
past year for names; it's her first cousin in Israel, Shulamith, who's 
avidly pursuing this tree for years. I really have no other details, I'm 
sorry.  If my mother finds any other of my grandfather's papers with family 
information, I'll be sure to pass it on.  My mother has an older sister 
living in Chicago (Dr. Esther Kornel), but I don't know if she has any of my 
grandfather's personal papers; I doubt it, because after my grandmother 
died, and my grandfather moved from Switzerland to Canada, he lived with us, 
until his death in 1965. (I'd just turned 4 at the time)
     
If you've already been in touch with my mother's first cousins here in 
Toronto, as you mentioned in a former e-mail, (ie. Ignacz-Irving, I think it 
was), they must've given you info on their father, Abraham (my grandfather's 
brother), that they  had.   I wouldn't even know where or how to start 
looking for more info!
     
Sincerely,
     
Pearl

-------------------------------------------------------------------

Subject: 	שלום רב!
From: 	ישראל בוקשפאן
Date: 	Sun, Nov 09, 2014 4:51 am
To: 	moishe@langsam.com


	
לכבוד משה, שלום רב!

הגעתי למייל שלך דרך האתר 'מילר גנאלוגיה' בקישור הזה:
 http://www.ics.uci.edu/~dan/genealogy/Miller/rpsab.htm

אני בן של מרת לאה מליא
 בת ר' אלכסנדר מילר ז"ל
 בן ר' דוד אלימלך
 בן ר' חיים יצחק מילר
 בן ר' שבתי,
 באתר שלך תמצא אותי בענפים השבורים מס' 12,
 אני מחפש עוד חומר על משפחתי.

אשמח לשמוע על עוד מידע.

בתודה

ישראל בוקשפן


-------------------------------------------------------------------








I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 7/26/15
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/shabsib.htm
##-----------------TITLE------------------------##
The Shabsi (Bukovska) Yitzchok Miller Family
##------------------TEXT------------------------##
The Shabsi (Bukovska) Yitzchok Miller Family






Shabsi
 
(183? - 1894 [28 Nissan]), son of Pesach Dovid Miller,
 was married to Esther Pinter (183? - 1892 [11 Iyar]) of Bukowsko, Galicia, and they had 10 children.
Shabsi was a very wealthy man and was politically connected with the Kaiser Franz-Joseph of the Austrian empire. Shabsi received a blessing from the Divrei Chaim (R. Chaim Halberstam of Nowy Sacz) for wealth. They had a close relationship and two of Shabsi's children married into the Sanz dynasty. Shabsi was very charitable, even paying for the entire weddings of non-family members, at the behest of the Divrei Chaim. 

 
 Yakov Hersh 
	(185? - 191?) was married to Taube Lerer. They lived in Nizhankovichi, Galicia (Ukraine, today), & had 9 children. Many of them perished in the Holocaust.
        
        Miriam (18? - 19?) was married to Yosef Balkan. They lived in Rzeszow, Galicia & had 2 children. They all perished in the Holocaust. 
            Pinchus & Shabsy
	
        Pinchus (18? - 19?) was married to Chava. They lived in Posemysl, Galicia, & had 5 children. They all perished in the Holocaust. 
             Yakov Hersh, Avrohm, Sarah, Shoshana, & Yaffa
	
        Sholom (1880 - 1915) married Raylah. They lived in  Dobromil, Galicia & had 4 children. The entire family, except for Miriam, who moved to Israel, perished in the Holocaust. She related to me many of the details regarding Yakov Hersh's branch. 
            Yechiel, Miriam Roter, Esther, & Chana
	
        Feiga Gittel (18? - 194?) was married to Moshe Mordcha Igolnitzer. They lived in Ulhowek, Galicia, & had 4 children. Benzion came to the US in June 1933 & took his mother's maiden name - Miller. He married Esther Klughaupt, from Ugnev, Galicia. The rest of the family perished in the Holocaust. 
            Shabsy, Yakov Hersh, Esther & Benzion Miller
	   
	
        Max (1890 -1967) married Lillie Rosenberg. They first lived on the lower eastside of NYC & later lived in Dearborn, MI. They had 3 children. 
            George, Sidney, & Robert
	
        Marcus (January 18, 1892 - January 2, 1957) was born in Zabolottsy, Galicia (now in Ukraine). He came to the US, via the port of NY, aboard the SS Philadelphia, on October 24, 1914. He initially went to his brother, Max, who lived on the lower East Side of NYC. In 1916, Marcus moved to Detroit, MI. He married Anna Weinstein, on November 3, 1923, and had 1 son, who became a doctor. Marcus was first a lumberman and then the owner of a laundry and dry cleaning plant. 
            Hubert
	
        Yosef (c.1884 - 1941) was married to Raizel Krosberg. They lived in Dobromil, Galicia, & had 5 children. Raizel died before the war and her children were raised in Yosef's mother's (Taube Miller) house. At least some of the family (Sam & Martin) survived the war. Both Sam & Martin came to the US before the war. 
            Avrohm, Sam, Martin, Tzvi, & Adlah
	
        Tzlava (? - 1942?) married Beirish Hirsch. They lived in Nizhankovichi, Galicia, had no children & perished in the Holocaust.
	
        Shlome (1? - 1942?) married his first-cousin, Bayla. Her mother was the sister of Yakov Hersh. Her name is not known, but she was married to a grandson of the Sanz dynasty. Shlome lived in Nizhankovichi, Galicia and had 3 children. The entire
	    family perished in the Holocaust. 
            Sarah, Yakov Hersh, & girl
        

    
    Sholom
	
	
	
	(1857/61 - 1926 [Purim]) of Bukowsko, Galicia. He was married to Brucha Kanner & they had 8 children. 
        A picture exists showing Sholom Miller and all seven of his sons. 
        
        Chaim Yehuda (1875?-1944) was married to Shifra Horowitz & they had 9 children. They moved from Poland to London in 1912, where the youngest, Alec (Elisha), was born. Alec later moved to Jerusalem, where I was able to find him. He provided me with much information before his passing, in 1996. 
            Esther White, Bessie Fletcher, Sidney, girl, Sophie Miller, girl, Edie Gablinger, Fanny, & Alec
	
        Susha (18? - 1942?) was married to Chaim Horowitz They lived in Rupshitz & they had 5 children. The 3 oldest children were married. The entire family perished in the Holocaust. 
            Yehoshua, Leibish, Leah, Hinda, & Sarah
	
        Pinchus Yosef (1887 - 1941) was married twice. From his first wife, Baylah Ashkenazi, there were several children but they all perished in the Holocaust aside from Chaytchu Borenstein. His second wife was Hinda Leah Kanner. They lived in Sanok & had 4 children. Pinchus Yosef, Hinda Leah, & his children fled to Siberia during the war. Pinchus Yosef perished there, as did almost all the children of his first marriage. Hinda Leah and her children made their way to France after the Holocaust. From there they went to Netanya, Israel, except for Esther, who went to the US. 
            Chaytchu Borenstein, & others, including a boy, Mylech, Rechtsha, Esther Rabinowitz, & Sholom
	
        Avrohm (18? - 1943?) was married to Shaindle Engel, daughter of the MaHaRaSh Engel. They lived in Podgorze, a suburb of Krakow, separated from it by the river Visla. Avrohm was the menahel (principal) of a Talmud Torah there. They had 5 children. The 2 oldest were married. Shabsi, the oldest boy, was a genius and a talmid chochum.The entire family perished in the Holocaust. 
            Chana Breklach, Shabsy, Shea, Moshe, & Yitzchok
	
        Mordche (1890 - 1970) was married to Fradle Weinfeld. They had 2 children. After the war he lived in France & then Haifa, Israel. 
            Berta Semmel & Teriz Dorman
	
        Herschel (1894-1969 [Shushan Purim]) was married to Leah Lindenblatt. They had 4 children. After the war he lived in Antwerp, Belgium. 
            Chaim, Bertha Klein, Sholom, & Moshe
	
        Yoel Moshe (? - 1942?) was married to Esther Layzer. They lived in Bukowsko, Galicia, & had 8 children. The entire family perished in the Holocaust. 
            Bracha, Toba, Chava, Sasha, girl, girl, girl, & boy
	
        Shea (? - 1942?) was married to his first cousin, Yitta Miller. She was the daughter of Pesach Dovid Miller, a brother to Shalom. They lived in Liminov, Poland & had 4 children. The entire family perished in the Holocaust.  
            child, child, child, & child
        
    

    
    Avrohm 
	 
	(1856/63 - Mar 24, 1924 [28 Adar]) was a Shiniva chasid. He was married twice, first to Pushka Werner. He had 3 daughters with her. Pushka died when the children were very small & they were raised by her parents. 
         Avrohm's second marriage was to Gittel, the daughter of Moshe Shamshon Scheindlin. On her tombstone in Vranov nad Toplou it says she passed on 5 Tishrei 5689. Avrohm lived in several places. At first he lived in Lubacov (Lubaczow). He then moved to Mudyerotska (Mudjovitz) where he built a beautiful glass and marble house. He even built a glass factory just to make the glass for the house. He came to the US to learn glass making (see  Bertha Miller). He also lived in Kvakovitz. Before World War I he moved to Vranov nad Toplou. He had a tremendous estate there, which took several days to traverse on horseback. After World War I it was confiscated. He sent some of his gentile watchman back to the estate but they were murdered. Avrohm had 10 children from his second marriage and at least several were born there. His mukom menucha (place of burial) is in Presov, where he spent his final years.  
        
        Chana (18? - ?) was married to Chaim Schnur. They may have lived in Kosice, Slovakia. They had 15 children, although not all survived to adulthood. Almost all of the family perished in the Holocaust. The living survivors can be found today in Israel and Australia. 
            Alter, Gena, Yechiel, Lola, Mania, Schabse, child, child, child, child, child, Shimon, Yossi, Yeshaya, & Tzvi
	
        Malka (18? - ?) was married to a Miller. They had 2 children. 
            Moshe Aron & Sima
	
        Batya (18? - 1942) was married to Meir Steinbok. They had 7 children. Batya perished in the Holocaust. 
            Erna Steinbok, Mala On, Leo, Yehoshua, Frida, Tzipora, & David
	
        Golda (1889/90-1942?) was married to Leibleh Scharf. They lived in Presov & had 2 children; Chana & Berel. Originally they had a canned good business. Later, they had a fabric business. Golda was the bookkeeper. She had asthma but smoked special asthma cigarettes. Chana married a Blumenkranz, who also worked in the family business. They had 2 children & moved to Bardejov right before the war. Berel lived in Presov and also had two children. They all perished in the Holocaust. 
            Chana Blumenkranz & Berel
	
        Tzevetta  (1891-1977) was married to R. Dovid Nusson Lesser, the author of Michtom L'Dovid. They had 4 children & lived in Vranov nad Toplou. R. Dovid Nusson came to the US ahead of his family. He left Vranov nad Toplou on October 29th, 1922 and arrived in New York on December 19th, 1922. The rest of his family came to the U.S in the early part of 1926. They stopped off on the way in Kosice, to see my great-grandmother, Sara, her married son Shabsi Yitzchok and her youngest daughter, Viola. My great-grandfather, Pesach Dovid, was already in the United States. He visited the Lesser's frequently after they arrived. 
            Esther Parnes, Toby Leiser, Moshe Shamshon, & Chana Geller
	
        Esther (1895? - 1942?) was married to Yakov Yitzchok Spanglet, a monument (matzayva) maker. They lived in Vranov nad Toplou (and later Kosice ?) & had 2 children. They all perished in the Holocaust. 
            child & child
	
        Mary (1897/8 - 1948) was never married. She came to the US in the 1920's. She was 50 when she passed away, being a diabetic. She is buried in the Old Montefiore cemetery (Arjeh Benev. Society).
	
        Sadie (1899 - 1968) was married to Ralph Luchs. They came to the US in the late 1920's. They had no children.
	
        Rivka (1901? - 1942) was married to her second cousin,
	    Mordcha Leib Muller. Duvtcha (Pesach Dovid) Miller, the son of Avrohm Aba, the son of Yosef (Yuska M'Malcov) made her shidduch. (Duvtcha was Rivka's father's first cousin).Rivka lived in Bardejov, Slovakia, Mordca Leib's hometown, & had 2 children. They all perished in the Holocaust. 
            Gittel & Pesach Dovid
	
        Mindel (1902? - 1902/3?) died when she was very little, of an infection (?) that started off as a bad earache.
	
        Lillie (1904 - 1983) was married to Irving Klein. Her Hebrew name was Tzivia. They had twins and named them after her parents, Gittel (Gloria) and Avrohm (Alvin). They lived in Brooklyn NY. 
            Gloria Weisberg & Alvin
	
        Shabsy (19? - 19?), drowned on his father's estate (in Vranov nad Toplou, Slovakia), when he was young.
	
        Shmuel (19? - 1942?) perished in the Holocaust. It is not known if he was married.
        
    

    
    Yocheved  
(1867/9 - 1909 [6 Iyar]) married Moshe haLevi Rebhun (son of Aron and Raizel). They lived in Bukowsko, Galicia, & had at least 7 children. They also had twins that did not survive infancy. Sarah may have been one of the twins. According to their grandson, Yankel Rebhun, Moshe Rebhun had a brother Max in the USA and a brother Mordche that was dayan in Belz. 
        
        Pesach Dovid (1882 - 1942 [6 Elul]) was married to Malka Stern. (Incidentally, Malka Stern was a sister to Benyamin Stern, who was father-in-law to Feiga Kendel Miller). Pesach Dovid & Malka lived in Amsana (Mszana Dolna), Galicia & had 5 children. He had a wholesale glass factory. Pesach Dovid, along with his wife, perished in the mass execution of 881 martyrs in Amsana, Galicia, on August 19, 1942. Pesach Dovid's oldest daughter, Esther, married Moshe Klagsbald, a very good chazan. They lived in Krakow & had 2 girls, Yocheved Mirel and Faiga. Esther & her whole family perished in the Holocaust. The other siblings survived. 
            Esther Klagsbald, Shabsi, Yankel, Herschel, & Pinchus
	
        Pinchus (188? - 19?) was named after Esther's (his mother) maternal grandfather. Pinchus married Hindy Krammer. They lived in Sanok, Galicia, & had 7 children. Their daughter, Mirel, perished in the Holocaust. 
            Tonka Rebhun, Shabsie, Mirel, Wolf, Rachel Bar-Or, Ahron, & Lola
	
        Yankel (188? - 19?) married Sara Frandel Weinberger (sister to Beirish) from Wieliczka, Galicia, in 1915, in Krakow. Sara Frandel was a daughter of Hirsch Majer and Reisla (nee Friedman). In this way Yankel became brother-in-law to his uncle, Pinchus Miller. Very little is known about Yankel. They lived in Krakow, Poland & had 4 known children. His family perished in the Holocaust. 
            boy, Avrohm, Mirel Laufer, & boy
	
        Chaytchu  (July 1892 - 1942) was married to her second cousin, Duvtcha Miller, son of Avrohm Aba, son of Yosef (Yuska M'Malcov), during 1918, in Amsana (Mszana Dolna). They lived in Presov and had 5 children. The only survivors were Mirtchu and Pinya. Thr rest of the family perished during the Holocaust, in Treblinka. 
            Mirtchu Berkowitz, Yossi, Pinya, Shabse, & Chazkush
	
        Esther (189? - 1942) was married to Shimon Kvadwratd. They lived in Krakow & had 5 children. The entire family perished in the Holocaust. 
            girl, Yocheved Mirel, girl, girl, & boy
	
        Shabsi (189? - 1942?) married Rivka Rochel, the daughter of the Ruv of Bukowsko and they lived in Krakow. This is according to Mirtchu Berkowitz. However, Yankel Rebhun says Shabis's wife was the daughter of the Ruv of Ropczyce (Ropshitz). In any event, very little is known about Shabsi. The entire family perished in the Holocaust. 
            children unknown
	
        Mordcha (1? - 1942?) was married to Feiga Friedman. They lived in Stropkov & had 1 son. His niece, Mirtchu Berkowitz, describes him as "looking like a prince". The entire family perished in the Holocaust. 
            Moshe
	
        Sarah? (? - ?) may have been one of the twins that died in infancy.
        
    

    
    Basha 
	(1867/69 - 1929 [13 Adar II]) was married to R. Leibleh Rokeach & they had 8 children. The entire family, except for Baila Horowitz, her husband, & 1 son, perished in the Holocaust
        
        Malka (188? - 1942) was married to R. Naftali Tzvi Herzog. They lived in Tshitch, Galicia, & had 4 children.
            The 2 oldest were married; R. Shabsi Yitzchok to a Rubin, & they lived in Gdiv.
            The entire family perished in the Holocaust.
            R. Shabsi Yitzchok, Chaim Yehoshua, Devorah, & Sholom
	
        Baila (1886 - 1983) was married to R. Avrohm Tzvi Horowitz, the Beitcha Ruv. They lived in Biecz at first, but then moved to the US. Baila would go to Europe to have her children, to keep her promise not to have any children in the US if she was going to live there. Her 2 oldest were both married before the war. Only Baila, her husband, & 1 son, R. Sholom, survived the Holocaust. The rest of the family perished in the Holocaust. I was privileged to speak with the Ruv often, before 	    his passing in 1996. He was a wellspring of information.
            R. Moshe, R. Chaim Yosef, Miryam, R. Shulom (Beitcha Ruv), & Ahron
	
        Moshe (18? - 19?) was married & lived in Liminov. He had several children. One of them, Reuven, was married to a Maryles. The entire family perished in the Holocaust.
            Reuven, & others
	
        Pesach Dovid (1892 - 1942) was married to a Lesser,lived in Auschwitz & had several children. The entire family perished in the Holocaust.
            girl, Esther, & others
	
        Yocheved Mirel (189? - 1942) was married twice. She had 1 son with her first husband, Ber Neuhaus. This son married before the war, to a Lipshitz. Yocheved Mirel married the second time to R. Yisochor Dov Dershowitz. They lived in Myslenice, Galicia. The entire family perished in the Holocaust.
            R. Avrohm
	
        Shabsi Yitzchok (? - 194?) was married & lived in Dabrowa, Galicia. He had 4 children. The entire family perished in the Holocaust.
            Sholom, Shea, boy, & child
	
        Yehoshua (? - 1942?) was married & lived in Frysztak, Galicia. The entire family perished in the Holocaust.
            several children
	
        Rivka (? - 1942?) was married to Chaim Dovid Parnes. They lived in Bukowsko, Galicia & had at least 7 children. The entire family perished in the Holocaust.
            Rohchil, & at least 6 more children
        
    

    
    Pinchus  (c.1880 - 19?) of Wieliczka, Galicia. He was married to Tobtcha Weinberger, daughter of Hirsch Majer and Reisla (nee Friedman). Pinchus had 6 children. 
        
        Shabsy (? - 1942?) was married to Marmtcha Kahan. They lived in Chrzanow, Galicia & had 4 children. The entire family perished in the Holocaust.
                Hantsha, Heshy, Raizel, Levi
	
        Esther (? - 1942?) was married to Chaim Zeisswein. They lived in Wieliczka & had 1 child. The entire family perished in the Holocaust.
            child
	
        Chaskel (? - 1942?) was married to Pesel Lieblech, daughter of Chaim Shlomo and Reizla (nee Weiner) in 1929. They lived in Krakow & had 1 child. The entire family perished in the Holocaust.
            child
	
        Lipshe (? - 1942?) was married to Didyah Nussbaum. They lived in Wieliczka & had at least 4 children. The entire family, except for Didyah, perished in the Holocaust.
            child, child, child, +  more children
	
        Shlome (1903 - 1942?) was married to Blimka, daughter of Shmuel and Sara Schnitzer. They lived in Wieliczka & had 2 children. The entire family perished in the Holocaust.
            Mordechai & Shmuel
	
        Pesach Dovid (1912 - 1944) was married to Tziporah Horowitz. They lived in Chrzanow but had no children. He perished in the Holocaust, but she survived & is now Mrs. Feigenbaum.
        
    

    
    Pesach Dovid 
	
	(1873 - March 20, 1926 [4 Nissan]). He was married to Sarah Hinda, daughter of R. Eliezer Yerucham Baron, of Krakow, a descendent of R. Chaim of Sanz. They lived in Bukowsko, Galicia, & had 3 children. Pesach Dovid last lived in Wien, Austria, where he passed away. A picture of his tombstone was obtained from the Schalom organization. Most of the family perished in the Holocaust.
        
		Layza (1890's - ?) was married to Ida Lesser. They lived in Kosice, Slovakia and had 8 children. All except Eetoo perished in the Holocaust. 
           	Eetoo Lezer, Perel, Chaya Sarah, Nechama, Rivka, Leibish Gershon, Avrohm Dovid, and Chaim Sholom
        
		Birtchu (? - ?) was married to Chavtcha Stern, daughter of Leibish and had children. According to Yankel Rebhun, they lived in Limanowa, Galicia. The entire family perished in the Holocaust. 
                 unknown
        
		Yitta (?-1942?) married her cousin, Shea Miller. They lived in Liminov, Galicia, and had 4 children.  The entire family perished in the Holocaust. 
    	        child, child, child, & child
        
    

   
    Bayla Chaya 
	(18? - 194?) was married to Hersh Kahan, a descendant
	of the Kuntros Ha'Sfaikos. They lived in Sighet, Rumania, and had many children. I have been unsuccessful in locating any living survivors from this family, although some facts are known.
        
        Nellie (1901 - August 30, 1990) came to the US in the 1920's. She was married to Julius Harnik, but had no children.
	
        Shabsi (19? - 19?) lived in Zichron Yakov, Israel. He was married with at least 1 son. Yakov Zak remembers being by his wedding. 
            Tzvi & others?
	
        Others?
        
    

    
    Sarah? 
	(18? - 19?) Her name is not definitely known, but she was married to a grandson of the Sanz dynasty. They had children. 
        
        Bayla (? - 1942?) married her first-cousin,
	    Shlome. His father was the brother of Sarah. They lived in Nizhankovichi, Galicia and had 3 children. The entire family perished in the Holocaust. 
            Sarah, Yakov Hersh, & girl
         Others?
       
    

    
    Miriam Malka
	 (1881? - 19?) of Ugnev, Galicia (Ukraine) was married to Yosef Zak & they had 10 children. Only 5 survived to adulthood. 
        
        Shabsi Yitzchok (19? - 19?) died young.
	
        Pesach Dovid (19? - 1986/7) was married. He went to Israel before the war, lived in Haifa, & had 3 children. 
            Malka Ben Vinesti, Ron, & Leah Roten
	
        Esther (19? - 19?) died young.
	
        Dvorah (19? - 1942?) was married to Moshe Shapiro & had 2 children. They all perished in the Holocaust. 
            Yitzchok Yeruchom Fishel & Toba
	
        Chana (19? - 19?) died young.
	
        Rochel (191? - 1988/9) was married to a Shpritzer. She went to Israel before the war. They lived in Haifa, Israel & had 3 children. 
            Yehudis Finkelman, Yona Peled, & Gila Adler
	
        Bayla Chaya (191? - 1942?) was taken away to Germany, during the war. She may have married before she perished.
	
        Yakov lives in Haifa, Israel. He was born in Ugnev, Galicia. In 1939 the Russians took the city and in 1940, drafted him into the army. While in Russia he married & had 1 daughter. He returned from Siberia to Poland in 1946. His wife refused to leave and he divorced her. From there he spent 21 months in the Carpathean mountains. In January 1949 he came to Israel. He remarried, to Malka, the daughter of the Rabbi of Varish (near Belz). They live in Haifa, Israel, & have 3 children. He provided me with much information regarding his grandfather, Shabsi Bukowsko. 
            Miriam Malka, Yosef, Ratzya, & Mayrav
	
        child (192? - 19?) died young.
	
        child (192? - 19?) died young.
      
    







I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 2/5/06
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/yakmylch.htm
##-----------------TITLE------------------------##
The Yakov Mylech Miller Family
##------------------TEXT------------------------##
The Yakov Mylech Miller Family




Yakov Mylech (1784 - 1860's), son of Avrohm Aba, was born in Lenartov, Slovakia. He was married twice & had many children. Aside from his son Shabsi, whose descendants I know, all the other information comes from Slovak records. The 1869 census of Saros county lists Malachias Müller married to Obidia Veifr (I could not read it clearly, but she was born 1819), living in Obrucna, Slovakia. It lists four of his children living with them at the time. Yakov Mylech's second wife is listed as Edel, not Obidia, on all of the birth records for her children.


 
	Shabsi
 - go to his page for more detail.
	
Breindel
	Shimon
	Chava (Anna?)
	Chaja Resy
	Sarah Rochel
	Abraham Mandel
	Avrohm Aba
	Rivka
	Itcha
	Fülop
	Pessi
	Multsha (Amalia ?)
	Kasalin
	Esztera
	
	 
	Zlate (Zali) (1825 - ?) lived in Obrucna, Slovakia. Information regarding her family comes from Slovak records. She married Marcus Weingarten of Obrucna, Slovakia. In the Slovak 1869 census of Saros county this record was found: Marcus Weingarten (born 1824) & Zali Müller had 6 children living with them at that time. Salamon - 1849; Zali (yes, same name) - 1852; Kasalin - 1857; Mozses - 1860; Iyak (?maybe Izsak) - 1865; Fani - 1869. Additionally, I found multiple birth records for a son, Israel, in 3 separate volumes. The dates of birth were different in all three books; Jul 22, 1860; Aug 22, 1860; and Jan 4, 1862. I also found a record for Herman, born on Dec 1, 1865.
	Salamon (1849 - ?)
	Zali (1852 - ?)
	Kasalin (1857 - ?)
	Mozses (1860 - ?)
	Israel (Jul 22, 1860; Aug 22, 1860; or Jan 4, 1862 - ?)
	Iyak (1865 - ?)
	Herman (Dec 1, 1865 - ?)
	Fani (1869 - ?)

	 
	Chaskel (1827 - ?) lived in Obrucna, Slovakia, where he owned an inn. He was extremely strong. Information regarding his family comes primarily from Slovak records. He married Sali Szendrovits of Obrucna, Slovakia. In the Slovak 1869 census of Saros county this record was found: Haszko Müller & Sali Sendrovits (born 1827) had 6 children living with them at that time. Rozalia - 1857; Abrahm - 1858; Bessi - 1861; Pinhefz (? maybe Pinchus) - 1865;  Zali - 1868; Izsal (?maybe Izsak or Irsal) - 1869. Additionally, I found birth & death records for several of their children as follows. They all list Chaskel's wife as Sira Süsl. Avrohm Aba, born Nov 6, 1858; Rosy, Jun 2, 1859; Mendel Löb, Sep 3, 1860 - Feb 1, 1861; Breindel, Jan 3, 1863; Pinkus, Jan 1, 1866; Izak Wolf, Jan 1, 1869.
	Avrohm Aba (Nov 6, 1858 - ? )
	Rozalia/Rosy (Jun 2, 1859 - ?)
	Mendel Löb (Sep 3, 1860 - Feb 1, 1861)
	Bessi/Breindel (Jan 3, 1863 - ?)
	Pinkus (Jan 1, 1866 - ?)
	Zali (1868 - ?)
	 
	Yitzchok Zev [Izak Wolf] (Jan 1, 1869 - 1933 [28 Nissan]) married his cousin, Yocheved, daughter of Raphael Meyer. They lived in Tylicz & had 6 children.Kopel, Yakov Mylech, Shabsi, Avrohm Abba, Leibish, & Roiza Miller

	 
	Rozi (1829 - ?) lived in Obrucna, Slovakia. Information regarding her family comes from Slovak records. She married Herman Neigres. In the Slovak 1869 census of Saros county this record was found: Herman Neigres (born 1819 in Gorlice) & Rosi Müller had 1 child living with them at that time. Abrahm - 1868. Additionally, I found a birth record for Pinkus, son of Hirsch Neigreschel & Rozi Müller, born on Oct 18, 1866. Perhaps Pinkus passed away before the 1869 census. I also found record of Salamon, born on Sep 20, 1860.
	Salamon (Sep 20, 1860 - ?)
	Pinkus (Oct 18, 1866 - ?)
	Abraham (1868 - ?)

	 
	Mira (1834 - ?) lived in Obrucna, Slovakia. Information regarding her family comes from Slovak records. She married Nafsanail (Naftali?) Rubin. In the Slovak 1869 census of Saros county this record was found: Nafsanail Rubin (born 1834 in Zandecz, Galica) & Mira Müller had 2 children living with them at that time. Abrahm - 1856; Juditha - 1859. Additionally, I found a record for Salamon, born Oct 7, 1866. Perhaps Salamon passed away before the 1869 census.
	Abrahm (1856 - ?)
	Juditha (1859 - ?)
	Salamon (Oct 7, 1866 - ?)

	 
	Anna (1849 - ?) was born in Obrucna, Slovakia, from Edel, Yakov Mylech's second wife. Information regarding her comes from the Slovak 1869 census of Saros county.
	 
	Rezi (Aug 1, 1853 - ?) was born in Obrucna, Slovakia, from Edel, Yakov Mylech's second wife. Information regarding her comes from the Slovak birth records & 1869 census of Saros county.
	 
	Kasalin (Rivka ?) (Jul 22, 1856 - ?) was born in Obrucna, Slovakia, from Edel, Yakov Mylech's second wife. Information regarding her comes from the Slovak birth records & 1869 census of Saros county.
	 
	Salamon (1857 [Sep 20, 1860?] - ?) was born in Obrucna, Slovakia, from Edel, Yakov Mylech's second wife. Information regarding him comes from the Slovak 1869 census of Saros county.






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 2/17/02
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/suraroza.htm
##-----------------TITLE------------------------##
The Sarah Roza Lauer Family
##------------------TEXT------------------------##
The Sarah Roza Lauer Family




Sarah Roza
  (1847 - 191?), daughter of Yisroel Yitzchok Miller,
 was born in Lenartov, Slovakia. She married R. Nussanel Lauer (born c.1823), ABD of Malcov, Slovakia, and had 9 children. This was his second marriage and he had children from his first marriage. According to Slovak civil records, Sarah Roza was registered as married at age 16, on July 10, 1863, in Lenartov, Slovakia, to R. Nussanel, age 40, of Bobowa, Galicia. It lists his parents as Izak and Bruche. R. Nussanel died suddenly,while traveling, on 7 Tamuz, 1899, and is buried in Kezmarok, Slovakia.

 
Yosef
	
	(Nov 15, 1863 - 1932) was born in Liso or Malcov, Slovakia. He married Rachel Szamet
	(also Sameth, born in Sarospatak, Slovakia, daughter of Naftali (haCohen) & Freide) on Sept 6, 1887. They lived in Richvald and Malcov, where they had 10 children. Yosef came to NY aboard the SS Kaiser Wilhelm II, Nov 30, 1904. His wife and some of their children arrived in 1906. For a picture of his matzeyva and a discussion of the highlights of his life, see Kevarim.com.
         
        Ethel (Aug 28, 1888 - ?) was married to Louis Hamm. They had 4 children. 
            Morris, Harold, Isaac & Freida Strahl
	 
        Anna (Apr 18, 1890 - 19?) was married to David Kaufman. They had 3 children. 
            Ruth Ophir, Sylvia Makover, & Norman
	 
        Lena (Feb 19, 1892 - 19?) was married to Solomon Fishkowitz (a cousin of Elie Wiesel). They had no children. 
	 
        Hena (Feb 19, 1892 - Aug 14, 1892) died as an infant.
	 
        Isidore (May 30, 1894 - 1960) was married to Jennie Neuman. They had no children. 
	 
        Tillie (May 6, 1896 - 1962) was married as a second wife to Joseph Fligman. They had no children. 
	 
        Samuel (Jan 5, 1901 - 19?) remained in Europe with his brother Charles, living with Bobba Sarah Roza. They came to th USA in 1912. Samuel was married
	    to Jessie Spiro. They had no children.
	 
        Charles (Mar 15, 1903 - 19?) was born in Richvald and remained in Europe with his brother Samuel, living with Bobba Sarah Roza. They came to th USA in 1912. Charles married Rosalind Honig and they had 2 children. 
            Joseph & Herbert
	 
        George (Gershon) (c.1905 - c.1908) died at age 2 or 3 and is buried at Mt. Zion Cemetery.
	 
        Aaron (Oct 16, 1911 - 1968 [4 Iyar]) was born in the Lower East Side of NYC. He married Rose Hoenig of Williamsburg (Brooklyn) on May 30, 1937. They lived in the Bronx and Miami Beach and had 3 children. He founded and built the Greater Miami Hebrew Academy (Yeshiva D'Miami Florida) in 1946. He was its supervisor until his passing in 1968, upon which his wife assumed many of his duties. 
            Joe, Nussanel, & Chaim
        
 

 
    Malka Leah  (c.1865 - 19?) was married to Eliezer Deutsch and lived in Mukachevo, now in Ukraine. They had 4 children. Malka Leah died after World War I, of cholera. [There was a report that they had a son who changed his name to Chayruti, in Tel-Aviv. His son is a lawyer there (Dizengoff 10 ?). He maybe Ezri Cheruti, on Rehov Melchett,23, Kiryat Ono.]
         
        Rochel (? - 1942?) was married to a Hartstein from Budapest, Hungary and had 4 children. They, and 2 of their children, perished in the Holocaust. The 2 surviving children moved to either Jerusalem or Tel-Aviv. 
            child, child, child, & child
	 
        Shani (Zenka) (? - 1948) was married to Jakob Gross. They had a beer brewery. Her husband died in Prague of an ulcer. Shani passed away after the war, in Bardejov. She had been confined to a wheelchair. Her one son, Lulu, perished in the Holocaust. 
            Lulu
	 
        Herschel (? - 193?) was married and had 3 children. He passed away before the war. 
            Hugo, Shani, & Rosi
	 
        Icsu (Yisroel Yitzchok) (? - ?) passed away in Jerusalem. He was in Israel in 1936. 
            ?
        
 

 
    Lazar
	 
	(Aug 15, 1871 - 1931 [13 Adar]) was born in Malcov, Slovakia. He was married on Mar 5, 1889, to Hinde Mindel Rosenzweig. She was born in Bardejov, to Moshe & Henna Landau, the granddaughter of R' Yechezkel Landau, the Noda B'Yehuda. Henna was called the Langa Henna, because she was tall like her grandfather. Lazar & Hinde had 10 children. He came to NY on Mar 15, 1906, aboard the SS Bulcher. Hinde came on Sep 28, 1910, aboard the SS Grosser Kurfurst. 
         
        Esther (Nov 1889 - 19?) was married to a Tobias. They had 3 children. 
            Gertrude Bigman, Joe, & Sidney
	 
        Isidore (Jan 29, 1891 - 1949 [24 Shevat]) was probably the first to bear his great-grandfather's name, Yisroel Yitzchok. He was born in Bardejov. He married Toba Chaya Ryshpan, daughter of Tovia, and they had 5 children. 
            Golda Pilchick, Sidney, Moshe, Chaim, & Hanna Resnick
	 
        Harry (1895 - 1918) was not married. He was in the US Army and fought in WWI. Harry was killed in France, on July 30, 1918, when he was 23 years old. He was re-buried in Washington Cemetery in Brooklyn; Cemetery 1, Post 28, Row 3, Grave 9, Linas Hazedek Society.
	 
        Tillie (Jul 1897 - 1965) was born in England. She married Joseph Gross and they had 3 children. 
            Abraham, Shani Kurtz, & Eli
	 
        Jack (Aug 1899 - 1975) was born in England. He married Anna Segal and had 3 children. They lived in Baltimore, MD. 
            Gloria Weinreb, Laiser, & Chaim
	 
        Sidney (Mar 1901 - 1983) was born in Slovakia and married Sophie Jacobowitz. They lived in Elizabeth, NJ and had 2 sons. 
            Lenny & Eddie
	 
        Gussie (Dec 1903 - 1989) was born in Slovakia. She married David Steinberg and they had 2 daughters. 
            Tzippy Rudensky & Myrna Enker
	 
        Helen (Mar 1906 - 19?) was born in Slovakia. She never married.
	 
        Moshe (July 1911 - 19?) was born in NY. He was married late in life and lived in Dallas, Texas and then Arad, Israel. He had no children.
	 
        George (Apr 1, 1914 - 1988) was born in NY. He married Doris Trenk and they had 2 children. 
            Hinda Schacter & Elliot
        
 

 
    Chana 
	 (1872 - 1942?) was married to Shimon Keller. They lived in Sadurav (Ersszodoro, 120 km WNW of Cluj), now in Rumania, and had 8 children. She died of a heart attack at the onset of the Holocaust, when they took her daughter away. The entire family, except for Alexander Kauftheil, perished in the Holocaust.
         
        Miriam (189? - ?) married a Zimmerman and had 3 children. She died before the war but her entire family perished in the Holocaust. 
            Mechel, Nussanel, & girl
	 
        Nessanel (1? - 1942?) married a Schwartz. They perished in the Holocaust.
	 
        Chaskel (1? - 194?) married a Goldberger and lived in Kirdorf, Slovakia. He died before the war.
	 
        Rivka (1905 - 1942?) married Yechezkel Shraga Kauftheil and lived in Kosice, Slovakia. They had 5 children. The entire family, except for Alexander, perished in the Holocaust. 
            Alexander, Chaim Tzvi Mordechai, Breindel, Yosef, & Sarah Roza
	 
        Gittel (19? - 1942?) married a Deutsch and they had 8 children. The entire family
perished in the Holocaust. 
            child, child, child, child, child, child, child, & child
	 
        Zeesel (19? - 1942?) married Yeedle Klein and they had 8 children. The entire family, except for Yeedle, perished in the Holocaust. 
            child, child, child, child, child, child, child, & child
	 
        Shprintza (19? - 1942?) married an Eisler/Fixler and had 3 children. The entire family perished in the Holocaust. 
            child, child, & child
	 
        Esther (19? - 1942?) was not married. She perished in the Holocaust.
        
 

 
    Tzila  (Feb 12, 1876 - 194?) was born in Malcov. She married a Landau, but had no children. They lived in Uzhgorod (Ungvar, near Mukachevo), Ukraine. They both perished in the Holocaust. Icsu Ehrman, currently of Israel, lived by them before the war, while he was studying in Yeshiva.

 
    Reygush 
	 (Dec 3, 1878 - 19?) was born in Malcov. She was married twice, first in Khust, where she had 1 daughter. Her husband passed away and she married Peretz Klein. They lived in Mukachevo and had 2 daughters.  
         
        Chava (? - ?)
	 
        girl (? - ?) 
	 
        girl (? - ?) drowned in Tupya River, before the war.
        

 
    Bayla  (Oct 3, 1881 - 1932) was born in Malcov. She married Moshe Shmuel Ehrman. They lived in Kralovsky Chlmec (Kiraly Helmec), Slovakia and had 7 children. 
         
        Gizi (1905 - 1994)
            married Herman Raff. They lived in Kraj-Helmec, Slovakia and then Antwerp, Belgium. They had 2 children. 
            Isabelle Silberg & Charlotte Nasch
	 
        Schoni (1907 - 1993?) married Jophie and had 3 children. 
            Binyomin, Eddie, & Evelyn
	 
        Erno (1914 - 1976) married Esther Unger. They had 3 children. 
            Eli, Miriam Guzofsky, & Etta Kossovsky
	 
        Etush (19? - 1942?) was married to a Reiss or Zimmerman, with 3 children, and lived in Zilina, Slovakia. Alex Fried remembered them. Etush's husband was killed and they fled to Hungary with her children. They all perished in the Holocaust. 
            child, child & child
	 
        Helen (1916 - 1999) married Ahron Lajos. They live in Netanya and have 2 children. 
            Moshe & Dov
	 
        Icsu (1918 - 2000) married Malka and they have 3 children. 
            Moshe, Binny, & Gady
	 
        Ahron (1920 - 1998) married Ibie Goldberger. They have 2 children. 
            Yetta Harnik & Yitzchok
        
 

 
    Chaim
	   (May 1, 1884 - 1945) married Rochel Greenwald. They lived in Presov, Slovakia and had 12 children. While hiding with family members from the Nazis, his grandson ran out of hiding. While trying to retreive him they were mistakenly killed by the partisans at the end of the war.
         
        Nussanel (1901 - 1942?) was married and lived in the Hague, Holland. They had 3 children. The entire family perished in the Holocaust. 
            boy, boy, & Malka Leah
	 
        boy (1903? - 1903?) died as an infant.
	 
        Leibish (1904? - 1942?) was married and lived near Vranov nad Toplou, Slovakia. He had no children and perished in the Holocaust.
	 
        Margit (1906 - 2000) married Luzer (Eliezer) Soffer and they had 1 daughter. Her husband and daughter both perished in the Holocaust. She remarried a Mende. She lived in Albeuquerque, New Mexico. 
            girl
	 
        Boruch (19? - 1942?) married Elisabet Aptheker. They had one son and lived in Presov. His entire family perished in the Holocaust. 
            Avigdor
	 
        Tzirel (19? - 1942?) married Leibish Shapiro. They lived in Vranov nad Toplou, Slovakia and had 1 daughter. They all perished in the Holocaust. 
            Trudele
	 
        Gizelle married Victor Strelinger. She now lives in New Mexico, with her sister Margit.
	 
        Chaya Eta (191? - 1942?) married an Eidelman and had 1 son. The entire family perished in the Holocaust. 
            Avigdor
	 
        Malka Leah (191? - 1942?) married a Hirsch and had 1 child. The entire family perished in the Holocaust. 
            child
	 
        Sholom (191? - 1942?) was not married. He perished in the Holocaust.
	 
        Alex (1919 - June 3, 1992) survived the war and came to the US in 1946. He lived in Albuquerque, NM, where he was a furrier. 
            David & Michael
	 
        Sidonia married Fred Singer. She lives in Tarrytown, NY and has 2 children. 
            Debra Hammond & Michael
        
 

 
    Yulishka 
	(Dec 5, 1888 - Oct 1944) was born in Malcov. She married Berti Fried, son of Meir and lived in Korolevo, Ukraine and had 2 sons. Around the end of 1927 they moved to Zilina, Slovakia, where they opened a kosher restaurant. In 1942 Berti went to Nitra, where the rebbe there hid about 2000 Jews in a small vatican. He was subsequently sent to Buchenwald where he was shot in April of 1944. Yulishka perished in the gas chambers of Auschwitz in October, 1944. Alex tells of being saved nine times from certain death during the terrible period of the shoah (Holocaust).  
         
        Alex lives in Tel-Aviv, Israel and is a professor/philosopher. 
            Dani & Jonathan
	 
        Icsu lives in Ottowa and Florida. 
            Suzi
        






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 08/30/2014
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/basha.htm
##-----------------TITLE------------------------##
The Basha Diamant Family
##------------------TEXT------------------------##
The Basha Diamant Family





Basha
 
 (1837/8 - Jan 2, 1892), daughter of Pesach Dovid Miller,
 was married to Nusson Diamant (1838/9 - Sep 16, 1878) of Kurisna. They lived in Malcov, Slovakia and had 2 sons.


Avrohm Aba 
	
	(Jan 13, 1860 - 1939/42) was born in Malcov. He married Faiga Rochel Baruch and they had 1 son. He and his only son  perished in the Holocaust.
        
        Nusson (May 25, 1886 - 1944), of Bardejov, Slovakia, first married Sarah Leah Spira. They had 5 children. Sarah Leah passed away in 1918 and Nusson remarried, to Shifra Rohchel Goldberger (daughter of Moshe). They had 4 children. Some of the family perished in the Holocaust. 
            Yitzchok Isaac, Basha, Pesach Yahlomy, Mechel, Tema Deutsch, Baila Gittel, Moshe Meir, Leibish, & Sarah Leah
        


    Yosef
	  (Dec 5, 1868 - 1936) was born in Malcov, Slovakia and lived in Bardejov, Slovakia. He was married 3 times, with children from at least 2 of his wives. He first
married Yehudis Spira, lived in Gorlice, Galicia, and had 1 daughter. After Yehudis passed away, Yosef married Yehudis Weil, on September 15, 1891, in Bardejov, and had 3 children with her. 
        
        Toba (September 6, 1890 - September 15, 1945) was born in Gorlice. She married Dovid Edelman, in Bardejov, on November 14, 1919. They came to the US in 1920 and lived in Staten Island, where they had 2 children. Dovid was caretaker for the Free Hebrew cemetery
in Staten Island. 
            Gloria Lefkowitz & Julie    
	
        Basha (May 25, 1893 - 19?) died young, at about 20 years of age. She was not married.
 	
        Dave (Aug 16, 1900 - Oct 1966) married Shari Edelman, in Sept. 1946, and they had 2 children. The family left Bardejov, Slovakia, on the last train, in 1938. They came to the US. He was living in 
Queens (Jackson Heights), NY, when he passed away. 
            Fred & Judy Levin
	
        Ray (December 4, 1903 - October 17, 1967 [13 Tishrei]) married Izzy Itzkowitz. They had no children. Ray (Regina) came to the US on September
11, 1935. The ticket was paid for by her sister, Toba. The Itzkowitz's had a laundromat, then a bakery in Brooklyn, NY, on Church Avenue and East 4th street. Later they moved to Florida. They retired back to Brooklyn and later moved to Queens, where she passed away. 
         
    







I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 8/10/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/usherzlg.htm
##-----------------TITLE------------------------##
The Usher Zelig Miller Family
##------------------TEXT------------------------##
The Usher Zelig Miller Family




Usher Zelig

(1841 - 1923 [5 Kislev]), son of Yisroel Yitzchok Miller,
married Chaya Tzivya Wildstein & they lived in Wielopole Skrzynskie, Galicia. 
Later on, they moved to Wadowice, where Usher Zelig was a shochet.
He was also chazan for the High Holy days.
They had several children, although very little information regarding
the family is known.
Almost the entire family perished in the Holocaust. 

 
Ozer
	
	(186? - 19?) married a Klagsbald. They had several children and lived
	in Chrzanow, Galicia. Ozer died before the Holocaust. However, most of his
	family perished. I am still trying to find out more information regarding this family.
         
        children 
	



	 
	Moshe
	
	(1870 - 1924 [5 Adar II]) married Faigel Rappaport, daughter of R. Boruch (who was married to a Reigler), and had 5 children. Moshe was first shochet in Amsana (Mszana Dolna), and later dayan & chazan in Wadowice, Galicia. In his later years his vision became impaired but he was still able to daven flawlessly, by heart. In fact, his memory was so good that he could open just the bottom portion of any page in Shulchan Aruch (Code of Jewish Law) and by reading the last few lines of the commentary (Pri Migadim), be able to recite the entire page. He	also maintained a yeshiva out of his home. Faigel perished in the Holocaust, on 20 Tamuz, 1943. Almost the entire remainder of the family also perished. 
         
        Chezkel Shraga (c.1886 - 1942 [20 Tamuz]) married his cousin,
	Gittel Miller. They lived in Wadowice & had three children. He was a chazan there, filling his father's position, after he passed away. They later moved to Auschwitz, where Chezkel Shraga was a chazan and a shochet. During the war they managed to escape the deportations and fled the city. They were caught at the border of Czechoslovakia and Germany & were killed one by one. 
            Avrohm, Moshe, & Esther
	 
        Esther (18? - 1942 [20 Tamuz]) married Chaskel Schrod, a Bobover chasid and a dayan. They lived in Auschwitz & had 5 children. They all perished in the Holocaust. 
            child, child, child, child, & child
	 
        Ahron (? - 1942?) married a girl from Auschwitz & had 4 children. They all perished in the Holocaust. 
            child, child, child, & child
	 
        Ittle (? - 1942 [20 Tamuz]) married a Raab. They lived in Chrzanow, Galicia, & had 5 children. They all perished in the Holocaust. 
            child, child, child, child, & child
	 
        Shlome Boruch (Jan 13 1906 - 1996 [29 Kislev]) married Esther Zaks, in 1926. He changed his name to his maternal grandmother's maiden name; Reigler. They lived in Jarwarsnia, Galicia, but had no children. Esther perished in the Holocaust. After the war, Shlome Boruch came to  Brooklyn, where he remarried, to Rivka Lubling, & had 3 children. 
            Faigy Liefer, Chaim Benzion, & Moshe
	


     
    Ettel 
	(18? - 19?) married Yankel Weissbloom. They lived in Wadowice, Galicia & had children.
	Most of this family, with the exception of one son, perished in the Holocaust. The one son (Moshe) moved to Israel, but passed away	around 1980. I am still trying to find out more information regarding this family.

         
        children 
	


     
    Hersh Shlomo
	(April 2, 1874 - 19?) showed up in the Slovakian records. He was born in Lenartov, Slovakia, his grandfather's hometown. I am still trying to find out more information regarding this family.







I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 9/2/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/shlomo.htm
##-----------------TITLE------------------------##
The Shlomo Miller/Schönfeld Family
##------------------TEXT------------------------##
The Shlomo Miller/Schönfeld Family



Shlomo


(1848 - 1931 [26 Mar Cheshvan]), son of Pesach Dovid Miller
was born in either Malcov, or Obrucna (both are in northwestern Slovakia today), or Görlice, Galicia, in 1848, the youngest of 7 boys. At Shlomo's bris, Raphael Meyer, his oldest brother, was given an honor
(like sandik or kvatah). In the 1870's he immigrated south to Hungary. At Tiszakerecseny, 
he obtained papers changing his name to Schönfeld. He married Chaya ()
(1852 - 1922 [27 Sivan]), daughter of Avrohm Hersh
Gross, who was a chassid of R. Chaim of Sanz, and one of 12 children (11 boys & 1 girl).
Mrs. S.L. Mendlovic of Williamsburg has much information on the Gross family.
Shlomo & Chaya had 8 children. Shlomo 
became a very affluent cattle dealer. He owned a 350 acre farm and made an annual trip
to Switzerland to purchase cows. He maintained that Swiss cows produced superior milk.
He was also an agent for the Gott estate. In 1903 (?) he moved to Hodasz, and in 1912, 
to Nyirbator, Hungary where he lived a healthy life until his passing. In the fall of 1931 he developed a blockage in
his intestine. Realizing that his end was near he summoned the family to his bedside. (My grandfather and great-uncle [Naftuli & Shabsi Yitzchok] came from the Kaliva (Nagykallo) Yeshiva by train that Thursday night. Chava Israel was also there). He passed away that night, November 5, 1931, surrounded by his family (he had a minyon). He is buried in Nyirbator 
and several years ago his descendants, Chava Israel and Miriam Werczberger, had his grave site restored.


 
	Sarah 
         
         (1879 - 1952 [27 Sivan]) of TiszaKerecseny,
         Hodasz, & Nyirbator, Hungary, then Kosice, Slovakia, and finally New York City. Sarah came to NY on Sep 12, 1932, aboard the SS Ile de France, together with her daughter, Viola. She was married to her first cousin, once removed, Pesach Dovid Miller
          on January 8, 1901, in Hodasz, Hungary. He came to the US much earlier. She was pregnant 11 times, with 5 children surviving to adulthood. Seven of the children's names are known. 
         
        Chana Rita (Sep 12, 1903 - 1983 [19 Tamuz]), of Hodasz, Hungary, and then Kosice, Slovakia. Chana married Yakov Leib Dresdner and they moved to Charleroi, Belgium, where they had 9 children. During the war the children were scattered in various hiding places all over Europe. After the war the family came to the US.
            Lizzie Elefant, Alter, Izzy, Rudy, Shloime, Rosa Goldstein, Joey, Paula Schallamach, & Frankie Green/Salsberg
	 
        Freitchu  (Feb 15, 1905-1942/3), of Hodasz, Hungary married Levi Yitzchok Goldstein. At first they lived in Charleroi, Belgium, where they had 2 children. They later moved to Mukachevo, Ukraine. They all perished in the Holocaust.
            Shlomo & Chaya
	 
        Erzsebet (1911 - 191?), of Nyirbator, Hungary. She died as a child.	
	 
        Shabsy (Sept 25, 1912 - 1945), of Nyirbator, Hungary. He learned in Bobowa & Nagykallo Yeshivas with his younger brother. Around 1937 he married Ilonka Schwartz & they lived in Velke Kapusany, Ukraine. Shabsy was very talented. He liked to paint and play the violin. I have a copy of one of his paintings. In 1938, due to his father's Slovak citizenship, he was deported back to Zborov, Slovakia, where his wife followed him. They had 1 or 2 children. Ilonka perished in a camp in Germany, the children disappeared, & Shabsy returned home, to Velke Kapusany, where he was shot by a drunken Russian soldier. 
            1 or 2 children    
	 
        Naftuli (May 12, 1914 - 1972 [19 Kislev]), of Nyirbator, Hungary. He lived 
            in Mukachevo, where he owned a dry goods store. On Mar 22, 1938 he married Goldy (Mugda) Hertz, in Nyirbator, Hungary. His brother, Shabsy, sent him a telegram warning him not to return because they started deporting Jews. Naftuli and his new bride boarded a train to Italy and from there a ship to France, which had a treaty with Slovakia. He was allowed entry on the condition that he join the French Foreign Legion. Naftuli was sent to fight in Algiers, Africa. In 1941 he contracted malaria & was sent to Nice, France, to recuperate. In 1942, his mother, Sarah, obtained a visa for them and they came to the U.S,
 They had 3 children, 2 in France & 1 in the U.S.
            Georgette Winter, Mutty, & Abby    
	 
        Miklos (1917 - 191?), of Nyirbator, Hungary. He died as a child.	
	 
        Viola (Feb 13, 1920 - August 1986), of Kosice, Slovakia. She came to the U.S.
            in 1932, together with her mother, Sarah. Viola married Nat Dickstein, lived in Brooklyn & had 2 
            children.
            Bruce & Iris York    
        

 
    Benny  
        
        (1880? - 1961) of TiszaKerecseny & Hudjudorog, Hungary, New Millford, CT, & then 
        New York City, He married Shaindle Sarah Schwartz on Mar 25, 1902, in Ujfeherto, Hungary, 
        and they had 4 children. Benny came to the US at least twice. He came to stay, aboard the SS 
        Grosser Kurfurst, via the port of New York, on Jan 17, 1913. On the ship manifest it 
        indicates that Benny claims to have been in the US 1905/9. He first stayed by his sister
        Bertha, but later moved to New York City. His family moved to Szabolcs, Hungary, 
        and came to NY aboard the SS France, on Jan 16, 1921. Benny was then living at 751 E. 5th St., NYC.
         
        Dora  (May 23, 1905 - Mar 13, 1999) married Harry Weiss. They had 2 children and lived in NYC. In 1941 they moved to Los Angeles, CA,  where they worked in the manequin business. Their company was called Madison Models.  
            Morton & Florence Budman    
	 
        Morton (Harry) (Mar 24, 1906 - July 1984 ), of North Lauderdale, FL, married Anna Klein & they had 4 children. He ran a car service.
            Selma Hutshneker/Hyman, Marvin, Herbert, & Ronnie    
	 
        Sam (Mar 23, 1911 - Mar 1986), of Los Angeles, CA, married Rose. They had no children. Sam worked with his brother-in-law, Harry Weiss, in the mannequin busines.
	 
        Izzy (Oct 13, 1912 - Aug 26, 1989  [23 Av]), of Lauderdale Lakes, married Yetta Reich. They had 2 children. Izzy was a baker.
            Nathan & Harriet Lozea    
        

 
     
    Bertha  
          
         (1882 - Apr 9, 1975 [28/9 Nissan]) of TiszaKerecseny, Hungary, then West Hartford, CT.
         Bertha came to the US via the port of New York aboard the SS Roterdam, on Dec 4, 1899.
         She listed her cousin, Abraham Miller, of 67 Lewis St., New York City, as her destination.
         Abraham is listed in the 1899 NYC directory as being in school. Bertha's uncle, Shabsi of 
         Bukowsko, had a son, Avrohm, that came to the US for a short time
         to study glassmaking. He does not show up in the 1900 NYC directory or census. 
         Bertha married her first cousin, once removed, David Miller & they had 3 children. They lived
         in New Millford, where he owned a department store. They later retired to West Hartford, CT. 
         
        Betty 
            
            (1904-1952), of W. Hartford, CT, married Burton Osber. They had 2 children.
            Stuart & Herbie    
	 
        Ruth 
            
            lives in Springfield MA. She married Louis Kane & has 2 children. After Louis' passing, Ruth married Mr. Fain.
            Carol Weiser & Judy Warshaw    
	 
        Manny	 lives in Boca Raton, FL. He was married to Shirley Cohen
            has 2 children.
            Gale Finn/Amsterdam & Susan Williams    
        

 
    Rivka  
          
         (Apr 14, 1884 - Aug 18, 1963 [28 Av]) of TiszaKerecseny, Hungary, then Cleveland, OH.
         She married Meyer Grunfeld on Oct 25, 1904, in Hodasz, Hungary 
         & they had 4 children. Meyer was born in Hujdunanas, Hungary, on Aug 1, 1880. He & Rivka lived in 
         Miskolc, Hungary. Meyer died while they were still in Miskolc, c.1915.
         Rivka came to US via the port of New York, on Jan 20, 1933, aboard the SS Leviathan, sailing
         from Cherbourg, France. She stayed with her daughter, Irene, in the Bronx. In 1952 Rivka,
	(together with Irene) moved to Cleveland, OH. 
        
        Mendel (1905 - 1980), of Cleveland, OH, married Grace. They had no children.
	 
        Irene was married to Harry Resler. She lived in the Bronx,
	    & then Cleveland, OH. She now resides in Brooklyn NY. She had 1 son.
            Sydney    
	 
        Bernie (1907? - 1986), of Cleveland, OH, never married. He was in the necktie business.
	 
        Ica lives in New York City. She was married to Arthur Klein & has 2 children.
            Meyer & Allen    
        

 
    Harry  
        
        (c. 1885 - 1956 [21 Nissan]) of TiszaKerecseny, & Hujdunanas, Hungary, then West Hartford, CT &
	New York City. He married Raizel Klein on Nov 12, 1907, in Hujdunanas, Hungary,  & had 4 children.
	Harry was divorced from his wife and came to the US through the port of New York aboard the SS
	George Washington, on April 14, 1913. Raizel and their two surviving sons came in the 1920's.
         
        Nucham (c.1908 - <1914), of Hujdunanas, Hungary, died as a child.
	 
        Pesach Dovid (1910 - 2000 [12 Tamuz]) came to the USA around 1923. He married his distant cousin, Margaret Newman, a descendant of R' Hersh Mylech Spira. They lived in New York & had 4 children. Later in life they retired to Jerusalem. Pesach Dovid was a pioneer in Jewish infrastructure. He studied by MahRShaG. He founded the Agudah in Far Rockaway and Crown Heights and came up with the concept of the Pirchei youth groups. Even in his 80's, flying from Israel to New York, Pesach Dovid still attended the annual Agudah conventions.
            Shome, Corrine Klar, Norman, & Yanky    
	 
        Louie (1913 - 1974), served in the US Army & never married.
	 
        Yosef Shmuel (c.1914 - c.1915), of Hujdunanas, Hungary, died as a child.
        

 
    Naftali  (c1887 - c1905) of TiszaKerecseny, Hungary, drowned while on a boat trip going to visit his father. He was not married.

 
    Chaim  (1890 - 1944) of TiszaKerecseny & Nyirbator, Hungary. He married Malka Mandel & they ran a chicken business. They had no children but his niece, Chava (Israel), lived with them. He & his wife perished in the Holocaust.

 
    Chana Rita  
        
        (Aug 25, 1893 - 1980 [18 Sivan]) of TiszaKerecseny, Hungary. She married Meyer Fried on June 10, 1913, in Nyirbator, Hungary, where they lived & had 6 children. Meyer was born on Dec 22, 1893 in either Hossupayi or Nagykallo, Hungary. After the war the family was in DP camp Ebelsberg, in Linz, Austria. Chana Rita, Meyer, and their son, Mendel, came to the U.S. aboard the SS Sturgin, on June 8, 1949, via the port of Boston, MA. The rest of her family followed.
         
        Mugda/Matish lives in Brooklyn, NY, and married Andor Gruen. She has 4 children.
            Harry, Shloime, Chaya Kagan, & Yossi    
	 
        Chava lives in Brooklyn, NY, & was married to Rabbi Avrohm Meir Israel, the Hunyada Ruv. She has 3 children.
            Chaim Leib, Malka Faiga Taub, & Miriam Werczberger    
	 
        Mordechai (1923 - 1942), learned in the Kaliva Yeshiva. When he was 19 he contracted a cold. It subsequently developed into a kidney problem which resulted in his demise. He was not married.
	 
        Lola lives in Brooklyn, NY, & is married to Yaakov Schwartz. They have 8 children.
            Rochel Porges, Herschel, Manyi Freund, Mutty, Esther Friedman, Aigy Schwartz, Shlomo, & Meyer    
	 
        Mendel lives in Brooklyn, NY, & is married to Devorah Seidman. They have 3 children.
            Avromy, Shloime, & Rochel Halpert    
	 
        Andor (Tuli) (1935 - 1986), lived in Brooklyn, NY. He was married to Ruth Schulman & had 2 children.
            Janice Garber & Michael    
        







I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 4/17/02
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/avrohmv.htm
##-----------------TITLE------------------------##
The Avrom'ala Wadowice Miller Family
##------------------TEXT------------------------##
The Avrom'ala Wadowice Miller Family




Avrohm
 
 
 (Nov 4, 1853 - 1921/2 [Teves/Shevat 5682]), son of Yisroel Yitzchok Miller, was born in Lenartov, Slovakia. His mohel was Don Frankel. Avrohm married Chana Yehudis, daughter of Moshe Leib Neuman. They first lived in Myslenice, where he was shochet. They then moved to Wadowice,
Galicia, where he was shochet and also a chazan. They had 17 children, 9 of which survived to adulthood. 

 
Bayla  
(c.1870 - c.1942) married around 1895, to Tovia Einhorn, of Limanowa, Galicia. They lived in Wadowice, Galicia, where they had 10 daughters and 1 son. Tovia supported himself as a fish merchant. After his father-in-law passed away, he became shochet and also a chazan in Wadowice. The family also moved into Avrohm's house, shared by Bayla's youngest brother, Ozer. One of Bayla and Tovia's sons-in-law was a man named Levi, living in Liminov, Poland. Almost all of the family perished in the Holocaust.
According to the Wadowice Yizkor book, Tovia and a portion of his family were sent to Auschwitz on 9 Av, 1943.
         
        Etka (? - 194?) married a Merzel and had children. They all perished in the Holocaust. 
            children    
	 
        Roiza (? - 194?) married a Sternshus and had children. They all perished in the Holocaust. 
            children    
	 
        Sida (? - 194?) married a Grushov and had children. They all perished in the Holocaust. 
            children    
	 
        Lutka (? - 194?) married a Hirschfeld and had children. They all perished in the Holocaust. 
            children    
	 
        Hela (19? - 194?) was married with children. They all perished in the Holocaust. 
            children    
	 
        Manya (19? - 194?) was married with children. They all perished in the Holocaust. 
            children    
	 
        Yisroel Yitzchok married and had children. He survived the Holocaust and lives in Israel. 
            children    
	 
        Freida married Shlomo Bader and had children. She survived the Holocaust and lives in Israel. 
            children    
	 
        Tushka married a Laufer and had children. She survived the Holocaust and lives in Venezuela. 
            children    
	 
        Kula (19? - 194?) was married with children. She survived the Holocaust. 
            children    
	 
        girl (19? - 194?) was married with children. They perished in the Holocaust. 
            children    
            

 
    Shaya Zelig	
(c.1870 - c.1942) was married to a Reifer and they had 3 daughters. He then married (Liba) Tzirel, daughter of  Meir Baigel, and they had 9 children. He was much older than her. Shaya Zelig was an expert shochet, first	living in Mislenice and then in Krakow. He was so fast that people used to come and watch him, just to learn his technique. He was killed in the Pordguze Lager. Almost all of the family perished in the Holocaust.
         
        Feigel (1? - 194?) married Nechemya Reifer. They lived in Auschwitz and had children. They perished in the Holocaust. 
            Shlomo & others
	 
        girl (? - 194?) was another daughter from Shaya Zelig's first marrriage. Nothing is known about her.
	 
        girl (? - 194?) was another daughter from Shaya Zelig's first marriage. Nothing is known about her.
	 
        Gittel (? - 194?) married Yechezkel Ginsburg. They lived in Krakow and had children. They all perished in the Holocaust. 
            children
	 
        girl (? - 194?) married Ichel Getz and had children. They perished in the Holocaust. 
            children
	 
        Shlomo (1906 - 1990 [24 Adar]) married Gusta and had 2 children. They lived in Wisnica, where Shlomo was a mohel and a baker. There was a prison in Wisnica and Shlomo supplied it with bakery products. The husband of one of Shlomo's workers (a gentile) was incarcerated there. Shlomo was instrumental in obtaining his release. When the deportations began, this man offered to hide Shlomo's children, out of appreciation for his past assistance. Before Shlomo was actually able to place his children with him, they were deported by the Nazis. Shlomo's children perished in the Holocaust. After the war he lived in Brooklyn, NY, with his wife, Gusta. 
            Avrohm Chaim & Rochel Leah
	 
        Fishel (19? - 194?) married the Zeklecin shochet's daughter and they had children. Fishel himself was a shochet. They perished in the Holocaust. 
            children
	 
        Sala married Yechezkel Teitelbaum. They lived in Krakow and had 1 son. He was handicapped (he couldn't walk). She survived the Holocaust, the rest of the family did not. 
            boy
	 
        Moshe Leib married his cousin, Sara Sammet. They lived in Krakow and may have had children. After the war he remarried to Ella from Tarnow (Tuna). They settled in Haifa, Israel and had 2 daughters. One of these daughters married Yitzchok Perl from Haifa, Israel, and has a son who resides in Kfar Saba, Israel. 
            children?, Yola & Lola
	 
        Leah (19?- 19?) passed away before the Holocaust. She suffered a brain aneurysm.
	 
        Esther (19? - 194?) was not married.  She perished in the Holocaust, together with her mother, Tzirel.
       	 
        Sholom (19? - 194?) was married with children. He was Shaindel's twin. The family perished in the Holocaust. 
            children
	 
        Shaindel (19? - 194?) was married with children. She was Sholom's twin. The family perished in the Holocaust. 
            children
        
   
 
    Shlomo  (1875/9 - 1944?) married Henya Goldstein and lived in Gelsenkirchen  (near Disldorf), Germany. They had 11 children. All but Avrohm took their mother's maiden name, Neuman. Later on, Avrohm also took the name Neuman.
         
        Yeshaya (? - ?) 
	 
        Manya (19? - 19?) married Aryeh Horowitz. They had 6 children. 
            Avrohm, Chaim Tzvi, Ruchama Tzor, Yisroel Menachem, Shmuel, Shlomo Eliyahu, & Sarah
	 
        Gittel (19? - 19?) married Herschel Linker. They had no children.
 	 
        Yisroel Yitzchok (? - ?) 
 	 
        Nussanel (? - ?) married Chava Blitz. They had 1 daughter. 
            Yehudit Barkan
	 
        Yakov (? - ?) married Bayla and had 2 children. 
            Avrohm & Tziporah Elmog
	 
        Sabka married Pinchus Hoffert and has 2 children. 
            Shlomo & Michael
	 
        Yosef Neuman married his first cousin, Sarah Raizel Steinberg. They live in Bnei Brak, Israel, and have 3 children. He related many of the details of this branch. 
            Zvika, Eliezer & Hani Ainat Halberstam
	 
        Leah (? - ?) married Menachem Foyerman and had 4 children. 
            Shlomo, Daniel, Aryeh, & Tziporah
	 
        Eli (? - ?)
 	 
        Avrohm (? - ?) married Leah Yeager (Bar) and had 4 children. 
            Moshe Yoram, Orna, Vaarda, & Shlomit Shapira
        

 
    Chaya
	 (18? - 19?) married Avrohm Sammet, son of Yokil Volf Sammet, dayan in Auschwitz. They had 12 children and lived in Wadowice. Avrohm did not have a livelihood, and frequently visited his sister, Matel Neumark, in Auschwitz. The family perished in the Holocaust.
         
        Yisroel Yitzchok (? - 194?) married Gusta and had 4 children. He lived in Marianske Lazne (Marienbad), Czechoslovakia, where he was shochet. The family perished in the Holocaust. 
            Esther, Shaindel, Chana, & Pinchus
	 
        Yokil Volf (? - 194?) married Chana, and they had 1 daughter. He perished in the Holocaust. 
            Ita
	 
        Sala (? - 194?) married her cousin, Moshe Leib Miller. They lived in Krakow and may have had children. She perished in the Holocaust. 
            children?
	 
        Leah (? - 194?) perished in the Holocaust.
	 
        Yenta (? - 194?) perished in the Holocaust.
	 
        Chava (? - 194?) perished in the Holocaust.
	 
        Roiza (? - 194?) perished in the Holocaust.
	 
        Mindel (? - 194?) perished in the Holocaust.
	 
        Pera (? - 194?) was married to a Domst. They perished in the Holocaust.
	 
        girl (? - 194?) perished in the Holocaust.
	 
        girl (? - 194?) perished in the Holocaust.
	 
        girl (? - 194?) perished in the Holocaust.
        

 
    Eliyahu
	 (18? - 194?) married Yocheved Gittfrieder (daughter of R. Shaul, dayan in Auschwitz) and had 6 children. They lived in Auschwitz, Poland. The family, except for Sala, perished in the Holocaust. Most of the children were not married before the war.
         
        Sala (1925 - 19?) married Nathan Fass. They had no children.
	 
        Leah (19? - 194?)  married Leibele Tuna (of Tarnow?). They perished in the Holocaust.
	 
        Gittel (19? - 194?) perished in the Holocaust.
	 
        Reuven (19? - 194?) perished in the Holocaust. According to Abba Miller, Reuven was a chavrusa with Herschel Neuman-Miller (Abba's father) in pre-war Auschwitz.
	 
        Yitzchok (19? - 194?) perished in the Holocaust.
	 
        Avrohm (19? - 194?) perished in the Holocaust.
        
 
  
    Shabsy
	
	(18? - 19?) married, Itka, a daughter of the Zakopane shochet. After serving as shochet in Zakopane, they moved to Wadowice and had 6 children. Shabsi also worked in Berlin as an accountant. The entire family, except for Henya, perished in the Holocaust.
         
        Yisroel (19? - 194?) perished in the Holocaust.
	 
        Henya (1915 - [25 Mar Cheshvan] 1989) married Shmiel Wiel. They lived in Tarnov (Tuna), Galicia, and  had a boy. Shmiel and the infant boy both perished in the Holocaust. In March 1946, Henya married Keva (Akiva) Koschitzki. They lived in Israel and had 2 sons. 
            boy, Moshe & Yisroel
	 
        child (19? - 194?) perished in the Holocaust.
	 
        child (19? - 194?) perished in the Holocaust.
	 
        child (19? - 194?) perished in the Holocaust.
	 
        child (19? - 194?) perished in the Holocaust.
        
 

 
    Chaim Shimon  (1880 - 1941/2) married Gittel Kanner. They had 5 children and lived in Auschwitz, Galicia, where he was mohel. They and their oldest sons, with their families, perished in the Holocaust.
         
        Moshe (1903 - 1942?) married a Cizner and had 2 daughters. They lived in Chrzanow, Galicia, where Moshe had a fish store. They all perished in the Holocaust. 
            Yehudis & Sarah Chana
	 
        Shlomo (1905 - 1942?) married Tzivya, lived in Brzesko, Galicia, and had 2 daughters. They all perished in the Holocaust. 
            girl & girl
	 
        Yisroel (1908 - 1925?) died young.
	 
        Ahron (1911 - 2000) was first married to Ittel Berger. They lived in Javozna and had 2 children, a 15 month old and a 3 month old. When the Nazis came they made a line of all the people. Ahron's wife saw them sending healthy men to the other line if they had a wife and children together with them. She discarded her wedding ring and said that the man next to her (Ahron) was not her husband, he was just helping her. She and the children perished, but Ahron survived. After the war he married Bayla Katz. They have 7 children and lived in Brooklyn NY, where Ahron became known as the Bobower Mohel. Just before the war, Ahron had received a contract to be both mohel and shochet in Katowice. The war prevented him from ever filling that post. His grandson, Benzion Mandelbaum, maintains a website in his memorial at http://members.xoom.com/aronmiller 
            Faigela, Chaya Yehudis, Moshe Chaim, BenZion, Esther Mandelbaum, Avrohm Shlomo,
	    Tcharna Rivka Cziment, Shaya Layzer, & Yitzchok Meir
	 
        Herschel Newman ([3 Tamuz]1915 - 2000 [2 Tamuz]) married Regina Berger, sister of his brother's (Ahron) first wife. They lived in Brooklyn, NY and have 6 children. Herschel took his paternal grandmother's last name when he arrived in the US. 
            Chaya Gittel Walzer, Chaim Shimon, Aba, Yankel, Yeedis Halberstam & Faige Greenwald
        
 

 
    Gittel
	 (188? - 1942?) married her cousin, Chezkel Shraga Miller. They lived in Wadowice and had three children. They later moved to Auschwitz, where Chezkel Shraga was a chazan and a shochet. During the war they managed to escape the deportations and fled the city. They were caught at the border of Czechoslovakia and Germany and were killed one by one.
         
        Avrohm (19? - 194?) perished in the Holocaust.
	 
        Moshe (19? - 194?) perished in the Holocaust.
	 
        Esther (19? - 194?) perished in the Holocaust.
        

 
   Ozer
	 (189? - 1942?) married Mecha Ibbersfeld, the daughter of the Sucha shochet. They lived in Wadowice, in the same building as Ozer's father, Avrohm. Ozer was a shochet, chazan, mohel, and melamid (teacher). They had 11 sons and 1 daughter. None of the children were married. The oldest, Gittel, was only about 17. The entire family perished in the Holocaust. 
         
        Gittel (c.1925 - 1942?) perished in the Holocaust.
	 
        Shlomo Lipa (19? - 194?) perished in the Holocaust.
	 
        Avrohm (19? - 194?) perished in the Holocaust.
	 
        Elimelech (19? - 194?) perished in the Holocaust.
	 
        Moshe Leib (19? - 194?) perished in the Holocaust.
	 
        Yisroel Yitzchok (19? - 194?) perished in the Holocaust.
	 
        Yehoshua (19? - 194?) perished in the Holocaust.
	 
        boy (19? - 194?) perished in the Holocaust.
	 
        boy (19? - 194?) perished in the Holocaust.
	 
        boy (19? - 194?) perished in the Holocaust.
	 
        boy (19? - 194?) perished in the Holocaust.
	 
        boy (19? - 194?) perished in the Holocaust.
        






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 11/04/05
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/fhc.htm
##-----------------TITLE------------------------##
LDS FHC Resources
##------------------TEXT------------------------##
LDS FHC Resources
	
	Bardejov
	HungarianCensuses
	Kosice
	Presov
	Sabinovincludes Malcov,Lenartov &Obrucne
	Stropkov
	Zborov
	
	
The LDS FHC in New York City has returned to its recently renovated facilities. It is located at:
125 Columbus Avenue, 2nd Floor
(opposite Lincoln Center, between 63rd & 64th)
New York, NY 10023
(212) 873 - 1690
Tuesday, 1 to 9
Wednesday to Friday, 1 to 7
Saturday, 11 to 5
closed Sunday and Monday
For more info, including films on permanent loan in New York City, try 
http://www.uvpafug.org/nyfhc/
	
	


	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 9/3/01
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/email.htm
##-----------------TITLE------------------------##
Family Email Address Book
##------------------TEXT------------------------##
Family Email Address Book

NameEmail IDBranch (Based on Langsam Book)Tovia KrischerTEK@cc.bellcore.comL1.1.1.1.4.1.3sRuth Krautappelkraut@provide.netL1.1.1.1.6.1.2.1Steve Aranoff70732.1325@compuserve.comL1.1.1.1.6.2.1Phyllis PaynePhyllis_Payne@datascope.comL1.1.1.1.6.2.2Deborah MuntnerRakevet@aol.comL1.1.1.1.6.4.3.?Sorala KrigsmanS?K@PruSec.comL1.1.1.5.4.3.2.3Dan Hirschbergdan@ics.uci.eduL1.1.1.7.2.1.1Moishe Millermoishe@langsam.comL1.2.1.1.1.5.2.1andL1.2.6.1.5.2.1Rafie Millerrafie@idt.netL1.2.1.1.1.5.2.2andL1.2.6.1.5.2.2Milan Schwartzmschwa@aol.comL1.2.1.1.2.2.1Lisa SchwartzLiSchwa@aol.comL1.2.1.1.2.2.1.1Harriet Portonsporton@erols.comL1.2.1.1.2.2.2sRobert MillerRobert_A_Miller@mymailstation.comL1.2.1.3.4.4.1Paul Lengalenga@mdlib.huji.ac.ilL1.2.2.2.1.1.1.1Moshe MullerMorris_Muller@tdc.comL1.2.1.6.2.7.1andL1.2.2.2.6.1.1andL1.2.4.2.1.7.1Duvi RubinDocDuv@aol.comL1.2.2.4.4.1.3.2andL1.2.4.2.2.1.3.2Thierry Semmeltsemmele@datafirst.frL1.2.2.2.5.1.1.1David Mullerdavidm@corp.idt.netL1.2.4.4.6.2Alice Baernbaer@erols.comL1.2.4.4.6.3Harry GruenBarditchev@aol.comL1.2.6.8.1.1Yitzy GruenMG1041@aol.comL1.2.6.8.1.1.3Avi GruenJbenson425@aol.comL1.2.6.8.1.1.4Anshie Gruenmumbaz2000@aol.comL1.2.6.8.1.1.5Chaim Leib IsraelCLIsrael@aol.comL1.2.6.8.2.1Mendy Israelsi55@aol.comL1.2.6.8.2.3.2Rochel Porgesrachelp1@juno.comL1.2.6.8.4.1Shloime Friedsolomon.fried @csfb.comL1.2.6.8.5.2Psachya Rosenblattphillip.rosenblatt@bakernet.comL1.3.2.1.1.3.2.1Michael Hammmhamm@artsci.wustl.eduL1.3.2.1.1.3.3.2Joe LauerJLauer@lawlan.cn.ci.nyc.ny.usL1.3.2.1.10.1Penina MellenpeninaD@aol.comL1.3.2.1.10.1.1Joseph and Alma TobiasAsafta@aol.comL1.3.2.3.1.2Ben Tobiasben@tobfin.comL1.3.2.3.1.2.1Steve TobiasStobias@oilgas.comL1.3.2.3.1.2.2Teddy Lauertedlau@aol.comL1.3.2.3.2.1.1Nava Lauernbl29@aol.comL1.3.2.3.2.1.1.3Malka Enkermalka@mofet.macam98.ac.ilL1.3.2.3.7.2Hindy SchachterISchachter@compuserve.comL1.3.2.3.10.1Esther Ehrmanehrman@netvision.net.ilL1.3.2.8.3sEli Ehrmaneli@2am.comL1.3.2.8.3.1Toby Kauftheiljordana4@yahoo.comL1.3.2.4.4.1.2.1Deb Singer Hammond hammond.d@ghc.orgL1.3.2.8.12.1Julie Hammond L1.3.2.8.12.1.2Naftali LangsamNaftali_MLangsam@compuserve.comL2.1.4.3.2.3Yedidya Langsamlangsam@sci.brooklyn.cuny.eduL2.1.4.3.2.3.1Ephraim Kleincoffeebreak@mailhost.netL2.1.4.?Rivki SavitskyRivki_Savitsky@PruSec.comL2.1.5.2.7.1.1David Waxmandjw@bu.eduL3.1.2.6.2.4.2Louie Schonfeldlousmagyar@aol.comL3.3.....Menachem ShimanowitzMannyHitek@aol.comL3.5.3.2.?.?sDevora Leah Goldbergsafetots@aol.comL3.5.3.2.?.?.1Daniel Teichman106607.620@compuserve.comL3.12.....s (wife is from Uri) or Daniel.Teichman@vsao.chMichael Cohenmmcohen@mambo.ucsc.eduL4.1.1.2.3.1.2Jay Langsamfdjm89a@prodigy.comL4.1.1.2.8.1Debbie Langsamdmlangsa@unccvm.uncc.eduL4.1.1.2.8.2Suzan Wynnesrwynne@erols.comL5.1.1.4.4.1Eileen Nasebyeileen@filmworld.com.auL5.2.2.6.1.1.1Avery Horowitzaverymh@touro.eduL6.1.1.2.4.3.1Andy Langsamdxxf98a@prodigy.comH11Langsammrcigar@supernet.net?Marc Langsammlangsam@surfer.xti.com?Jacob Langsamqcjack@tadirantele.com?Gene Katzgenekatz@worldnet.att.net?Rama Dunayevichrama@palmpictures.com?Tom Iluziluz@isdn.net.il?Oscar Langsamoscar@netvision.net.il?

The BRANCH naming convention is based on the standard set in the Langsam-Spira Family book. I have taken the liberty of extending the convention. It now can accurately pinpoint the Langsam descendent's lineage, generation by generation. Let us use Yedidya Langsam, co-author of the Langsam-Spira Family book as an example. He is L2.1.4.3.2.3.1
	L2means the original Pesach Langsam's second child, Dovid
	1means the first child of Dovid, Pesach
	4means the fourth child of Pesach, Meir 3means the third child of Meir, Elazar 2means the second child of Elazar, Yehoshua 3means the third child of Yehoshua, Naftali Meir 1means the first child of Naftali Meir, Yedidya An s at the end of the notation denotes a spouse. For instance L2.1.4.3.2.3.1s means Yedidya Langsam's wife.






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/28/2006
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/saros.htm
##-----------------TITLE------------------------##
Saros County
##------------------TEXT------------------------##
Saros County Resources
	
	Presov
	Bardejov
	Sabinov
	Zborov
	1857 & 1869 Censuses
	LDS FHC Resources
	
	
	
To: Jfpol@aol.com                  (Joan Pollak),
    hal-fran@erols.com             (Kathy Herman), 
    a-j.rosenberg@worldnet.att.net (Aaron Rosenberg)
Subject: Saros Resources

Dear All,

I am sorry for the delay in my response, thanks for your patience. I have 
obtained 1857 and 1869 census returns from Saros County via the archives 
in Presov. They are similar and rich in genealogical data. I wrote to the 
archives telling them how much I would like to spend and the fact that 
I was interested in the census records from Lenartov, Malcov, and Obrucna, 
for any Millers (Mullers). I asked them to respond by airmail (boat takes 
a long time). They also have other vital records from 1852 to present. The 
address is 

Statny Oblastny Archiv v Presove
080 06 Presov - Nizna Sebastova 
Slanska ul. 33
Slovakia

I am guessing that for birth, marriage, and death records for Saros 
county, you have viewed the microfilms available through the LDS' 
(Mormon's) Family History Centers. If you did not, please view the part of 
my website that deals with this at
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/fhc.htm

I know of a woman, Faigy Spitzer, not on the internet, researching Szammet 
from Saros County. This would probably interest you, Kathy. I will contact 
her if you like. By the way, I also have Szammet's in my tree, from Malcov 
and also Galicia.

Some other addresses for vital records in Saros:
The local archive in Bardejov:
Statny Okresny archiv 
085 01 Bardejov 
Klastorska 22
Slovakia

The local archive in Sabinov (has other vital records for Malcov and 
surrounding):
Statny Okresny archiv 
080 01 Bardejov 
Slovenska ul. c 40
Slovakia

There is also an archiv in Zborov:
Matrika Zborov
Matrikarka: Maria Slosarcikova
Obvodni Urad Bardejov
086 33 Zborov
Slovakia

Perhaps we can all share info or at least look out for one another, kind 
of like an unofficial SIG for Saros County. If anybody has more thoughts 
on this please let me know.

-Moishe


	
	
	


	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 6/11/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/polmonth.htm
##-----------------TITLE------------------------##
Polish Month Names
##------------------TEXT------------------------##
Polish Month Names
	
	Polish Month Names
	
	English Monthfollows patternExamples in PolishJanuarySTYCZ*STYCZEN, STYCZNIAFebruaryLUT*LutegoMarchMAR*AprilKWIE*KwietniaMayMAJ*JuneCZERW*JulyLIP*LipiecAugustSIERP*SeptemberWRZES*WrzesniaOctoberPAZDZIER*NovemberLISTOPAD*DecemberGRUD*
	
	


	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 1/2/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/javascrp/soundex.htm
##-----------------TITLE------------------------##
Soundex
##------------------TEXT------------------------##
Soundex
	
	
	
	
	
	This form will convert a surname to the corresponding soundex code (4 characters),
	using the rules specified in the National Archive's handbook. Type the name in
	the ENTRY textbox and click the SOUNDEX button. The Soundex code
	will be displayed in the RESULT textbox.
	
	
	
	Enter a Surname: 
	
	
	Soundex Result: 
	
	
	Note: Requires JavaScript 1.0 capable browser.
	
	The Soundex Coding System
	

	To find an individual among the millions listed in the 1900 and later
censuses, you will use an index and filing system called the Soundex.
The Soundex is a coded surname (last name) index based
on the way a surname sounds, rather than the way it is spelled.
Surnames that sound the same, but are spelled
differently, like SMITH and SMYTH, have the same code and are filed
together. Surnames that sound similar, like Miller and Müller, are also coded to the same Soundex. The Soundex coding system was developed so that you can find
a surname even though it may have been recorded under various spellings.
To search for a particular surname, you must find out its code. Every
Soundex code consists of a letter and three numbers, like M460. The letter
is always the first letter of the surname. The numbers are assigned to the
remaining letters of the surname according to the Soundex coding guide.
Most surnames can be coded using the following four steps. For names
with prefixes, double letters, or letters side by side that have the same
number on the Soundex coding guide, see "Additional Rules".
	

 



 SOUNDEX CODING GUIDEThe numberRepresents the letters1B P F V2C S K G J Q X Z3 D T4 L5 M N6 RDisregard the letters A, E, I, O, U, W, Y, and H.






Step 1On the Surname line (line 1), write the surname you are coding, placing one letter in each box.Step 2On the Soundex line (line 2), write the first letter of the surname in the first box.Step 3On the Surname line (line 1), disregarding the first letter, slash through the remaining letters
A, E, I, O, U, W, Y, and H.Step 4On the Soundex line (line 2), write the numbers found on the Soundex Coding Guide for the
first three remaining unslashed letters. Add zeros to any empty boxes.
Disregard any additional letters.


"Additional Rules"
	  NAMES WITH PREFIXES
	If your surname has a prefix - like Van, Von, De, Di, or Le - you should code
	it both with and without the prefix because it might be listed under either code.
	The surname vanDever, for example, should be coded in two ways, as VANDEVER
	and DEVER. The soundex results will be V531 and D160, respectively.
	(Mc and Mac are not considered prefixes.)
	 
	
	
	NAMES WITH DOUBLE LETTERS
	If your surname has any double letters, they should be treated as only letter. Thus, in the surname
	Lloyd, the second L should be disregarded in coding the Soundex. In the surname Gutierrez, the second R
	should be disregarded.
	 
	
	
	NAMES WITH LETTERS SIDE BY SIDE THAT HAVE THE SAME 
	NUMBER ON THE SOUNDEX CODING GUIDE
	Your surname may have different letters that are side by side and have the same
	number on the Soundex Coding Guide; for example, Pf in Pfister (1 is the number for
	both P and F); CKS in Jackson (2 is the number for C, K, and S). These letters should be
	treated as one letter. Thus, in the name Pfister, F should be disregarded, giving a Soundex
	of P236. In the name Jackson, K and S should be disregarded, giving a Soundex of J250.	
	 
	
	
	
	With your ancestor's name correctly coded, you are ready to use the microfilmed
	Soundex card index for census records. They are organized by state, thereunder
	by Soundex code number, thereunder alphabetically by first name or initial.
Read my outline for using Soundex when accessing naturalization records.
	






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/2/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/eresourc.htm
##-----------------TITLE------------------------##
External Resources
##------------------TEXT------------------------##
External Resources
	
How to Obtain Naturalization Records in One Hour

Jewish Genealogical Site

Social Security Death Index

Telephone Directory Links

Library of Congress

New York State Department of Health - Vital Records

Vital Record Information - US State Index

Cemetery in Oswiecim; , more info and picture

Galician town of Wielopole Skrzynskie; more info and picture (97k)

Romainian Records; Ladislau Gyemant

Labowa Cemetery

Tylicz Info
Jewish Cemetery in Kosice
	
	
	Click on any of the links to go to references that I found helpful in constructing my genealogy.
	
	
	


	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 11/30/03
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/maps.htm
##-----------------TITLE------------------------##
Maps
##------------------TEXT------------------------##
The Miller Family; Maps



Currently, the maps that I have scanned in take up a tremendous
amount of disk space. This translates into a very long transmission
time over the 'net. I am working on shrinking their sizes, as is
evident by some of the small files below. If you have any small map
images, please let me know.



Currently, these are the available maps:General Map of Europe(8k)Large General Map of Eastern Europe(147k)Map of Galicia and its Surroundings (232k)General Map of Poland (241k)Very General Map of Slovakia (3k)General Map of Slovakia and Surrounding Countries(9k)Detailed Map of Slovakia(12k)Detailed Map of Northern Slovakia and the part of Poland that borders on it(77k)Detailed Map of Northeastern Slovakia and the part of Poland that borders on it(7k)Detailed Map of Northeastern Slovakia; Around Bardejov and the part of Poland that borders on it(4k)Saros County in Northern Slovakia; Bardejov Region (15k)Saros County in Northern Slovakia; Detailed View (220k)Bereg County in North Western Ukraine; Includes Mukachevo and Tiszakerecseny (225k)Greater Przemysl Area Map (Galicia, Poland) (10k)Przemysl Area Map (Galicia, Poland) (6k)Detailed Map of Zhuravno, Ukraine (9k)Map of Zhuravno, Ukraine (33k)






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 4/1/02
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/javascrp/ssn.htm
##-----------------TITLE------------------------##
Social Security Place of Issue Lookup
##------------------TEXT------------------------##
Social Security Place of Issue Lookup
	
	
	

According to an article in the Wall Street Journal, the first three digits of a U.S. Social Security number is a code that may indicate the state or territory in which your application stated you were born (because the code reveals the state in which you registered).  For recent immigrants, the number is supposed to match up with the state or territory in which you were living when you received proper working papers.
Note: The database in this document is not 100 percent complete.  Populous states have added numeric ranges not contained here.
Instructions:
Enter the first three digits of a U.S. Social Security number in question.
Click on the Search button.
See the corresponding state or territory in the field.


For the paranoid: No information you enter here is recorded or monitored--it stays entirely within your browser.


Enter the first three digits of a Social Security number:


The Feds link this number to:






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

©Copyright 1998 Danny Goodman (www.dannyg.com). Reprinted by permission.
  
Last updated 1/2/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/alenko.htm
##-----------------TITLE------------------------##
The Walter Langsam Family
##------------------TEXT------------------------##
The Walter Langsam Family



From:  alenko@netspace.net.au
PostedDate:  01/09/99 05:34:51 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  01/09/99 06:01:11 PM

I received your email regarding the Langsam family. I 
live in Melbourne Australia and my cousins are the 
Langsam family live in Sydney. I will be in contact with
them to see if they can communicate with you.

I will fill you in as much as I know, since my 
relationship is from the female side of the family. 
Clara Langsam (nee Rosenbaum) marrried to Walter Langsam
(died just over a year ago) -  children are 
Jackie (married to Wayne Black with two children 
	Kara and Jesse), 
Paul (married last year) and
Michelle (unmarried). 
Walter has a brother currently living in Sydney. Both
came to Australia after the holocaust from Germany.

Regards... Alex Lenko 

________________________________________________
From: Alex Lenko <alenko@netspace.net.au>
To: moishe@langsam.com <moishe@langsam.com>
Subject: Langsam Family in Sydney, Australia
Date: Friday, December 31, 1999 8:41 PM

Hi,

I passed on your previous messages but they have had their share of
misfortunes and some good news over the past few years so they may not have
been able to respond.

As far as I am aware, only Paul Langsam has an email, which I have yet to
get that.

Their history at present is:

	Walter Langsam (died 2 yrs ago from cancer) married to Clara (nee
Rosenbaum). Children:
	Michelle - approx lat 30s unmarried
	Jackie -mid 30s married to Wayne Black, children Jesse and Kara
	Paul - late 20s, just married to Gabby Solo, 4 mth old baby Benjamin Walter.

Walter has a living brother in Sydney I think he is called Albert but am
not sure. He has one son I think called Philip (married). The only further
information I can give you is this extract from the Sydney wihite pages
directory.

A E Langsam -18 Hood St., Miranda, NSW 2228	Ph: 61 2 9524 6685
Clara Langsam -13 Bellevue Rd., Belleview Hill, NSW 2023 Ph: 61 2 9386 0492
Paul & Gabby Langsam -33 Philip St., Bondi, NSW 2026 Ph: 61 2 9388 0360
P Langsam -Lot 7 328 Brownlow Crt., Wattle Grove, NSW 2173 Ph: 61 2 9825 4723 

I hope this is of use.

Have a good new year.

Alex Lenko

____________________________________
From: Alex Lenko <alenko@netspace.net.au>
To: moishe@langsam.com <moishe@langsam.com>
Subject: Langsam and Lenko family
Date: Sunday, January 02, 2000 3:37 AM

Hi,

Walter's wife Clara is a cousin on my father's side. her mother Lily
Rosenbaum and my father were first cousins. Our name originally was
Lenkowitzer.

Regards,

Alex Lenko






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/23/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/canadalg.htm
##-----------------TITLE------------------------##
Canadian Langsam's Lookup
##------------------TEXT------------------------##
Canadian Langsam's Lookup



Adam Langsam    
1254 Pendrell St
Vancouver, BC V6E 3N4
                                       Phone: 604-669-0928

P J Langsam    
7281 Cambie St
Vancouver, BC V6P 3H4
                                       Phone: 604-327-6558

A Langsam    
440 Lawrence Ave W
Toronto, ON M5M 1C2
                                       Phone: 416-787-5756

Simcha Langsam 
780 Querbes # 104 
Outremont, Quebec, H2V 3W9 
SBL780@aol.com                         Phone: 514-279-6278


England:

Langsam Fanny    
Links Side 30
Middlesex, Enfield EN2 7RA
                                        Phone: 181/3631530





I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 6/24/04
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/fgalicia.htm
##-----------------TITLE------------------------##
Map of Galicia and its Surroundings
##------------------TEXT------------------------##
Map of Galicia and its Surroundings
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/ssdilang.htm
##-----------------TITLE------------------------##
Social Security Death Index for Langsam
##------------------TEXT------------------------##
Social Security Death Index for the Langsam Family


As of April 2002 Index


NameBornDiedResidenceLast BenefitSSNIssuing StateIssuedABRAHAM LANGSAM2 May 1902Mar 197411201 (Brooklyn, Kings, NY) (No Location Given)123-05-7672New YorkBefore 1951ABRAHAM LANGSAM5 Mar 191223 Jan 1975 (No Location Given) (No Location Given)119-22-7483New YorkBefore 1951ADELE LANGSAM7 Oct 1907Apr 198433154 (Miami, Dade, FL) (No Location Given)474-22-0635MinnesotaBefore 1951ADOLPH LANGSAM27 Jun 1884Aug 196811224 (Brooklyn, Kings, NY) (No Location Given)073-22-9417New YorkBefore 1951ALBERT LANGSAM1 Aug 192028 Mar 199211372 (Flushing, NY) (No Location Given)054-09-5755New YorkBefore 1951ALEX LANGSAM4 Mar 1904Apr 1959 (No Location Given) (No Location Given)062-10-2395New YorkBefore 1951ALEXANDER LANGSAM22 Oct 190731 Jan 200006902  Stamford, Fairfield, CT (No Location Given)097-05-1167097Before 1951ANN LANGSAM1 Apr 1910Jun 197594122 (San Francisco, San Francisco, CA) (No Location Given)559-50-5498California1954ANNA LANGSAM2 May 1897Mar 198390005 (Los Angeles, Los Angeles, CA)90046 (Los Angeles, Los Angeles, CA)059-05-7559New YorkBefore 1951ANNA LANGSAM25 Dec 189316 Jun 198933908 (Fort Myers, Lee, FL) (No Location Given)057-52-5382New York1973ANNETTE  LANGSAM29 May 19091 Mar 199710804 (No Location Given) (No Location Given)063-34-5029New York ARTHUR LANGSAM10 Dec 1908Aug 198433154 (Miami, Dade, FL) (No Location Given)468-05-5920MinnesotaBefore 1951AUGUSTA LANGSAM5 Mar 190714 Jun 200006830  Greenwich, Fairfield, CT (No Location Given)111-36-4284New York1962BEATRICE LANGSAM4 Dec 1906Jul 198533141 (Miami, Dade, FL) (No Location Given)053-01-6437New YorkBefore 1951BEATRICE LANGSAM9 Nov 19122 Dec 1990 (No Location Given) (No Location Given)302-38-6671OhioBetween 1960 and 1961BENJAMIN LANGSAM2 Jul 1891Feb 196811717 (Brentwood, Suffolk, NY) (No Location Given)083-42-9673New York1966BENJAMIN LANGSAM17 Dec 1904Feb 198110552 (Mount Vernon, Westchester, NY) (No Location Given)078-20-4666New YorkBefore 1951BERNARD LANGSAM11 Oct 19132 Apr 199533019 (Hallandale, Broward, FL) (No Location Given)085-28-7386New YorkBetween 1952 and 1953BERTHA LANGSAM12 Dec 1894May 196811203 (Brooklyn, Kings, NY) (No Location Given)108-28-6549New YorkBetween 1952 and 1954BESS LANGSAM28 Sep 1906Feb 197611414 (Jamaica, Queens, NY) (No Location Given)115-36-9337New York1962BESSIE LANGSAM19 Jan 1894Jul 198311559 (Lawrence, NY) (No Location Given)054-09-8934New YorkBefore 1951BLUMA  LANGSAM13 Apr 189615 Oct 198711224 (No Location Given) (No Location Given)063-09-3328New York CHARLES LANGSAM6 Jun 1911Feb 198530328 (Atlanta, De Kalb, GA) (No Location Given)294-30-8285OhioBetween 1951 and 1952DAVID LANGSAM10 Feb 1881Jan 1963 (No Location Given) (No Location Given)340-28-7419IllinoisBetween 1951 and 1952DAVID LANGSAM27 Nov 1900Oct 1963 (No Location Given) (No Location Given)101-36-5036New York1961DAVID LANGSAM20 Dec 1880Sep 197211234 (Brooklyn, Kings, NY) (No Location Given)083-30-9787New YorkBetween 1954 and 1956DAVID LANGSAM16 Apr 1909Jul 197492683 (Fountain Valley, Orange, CA) (No Location Given)103-07-1205New YorkBefore 1951DOROTHY LANGSAM5 Oct 1912Jan 198106840 (New Canaan, Fairfield, CT) (No Location Given)084-03-3175New YorkBefore 1951DOROTHY LANGSAM11 Oct 19139 May 199310475 (Bronx Nyc, Bronx, NY) (No Location Given)068-05-2745New YorkBefore 1951E LANGSAM31 Jan 195515 Jan 1993(No Location Given) (No Location Given)115-48-3109New York EDWARD LANGSAM6 Nov 1906Jul 198610011 (New York City, New York, NY) (No Location Given)066-14-0676New YorkBefore 1951ELAINE LANGSAM25 Dec 19121 Apr 199380206 (Denver, CO) (No Location Given)349-01-4501IllinoisBefore 1951ELIAS LANGSAM30 Apr 19135 Jan 200111369  East Elmhurst, Queens, NY (No Location Given)083-01-3741083Before 1951ESTELLE LANGSAM27 Oct 1910Jul 197911235 (Brooklyn, NY)11235 (Brooklyn, NY)121-20-9200New YorkBefore 1951ESTELLE LANGSAM25 May 19172 Aug 199733442 (No Location Given) (No Location Given)261-14-9936Florida  ESTHER LANGSAM9 Jun 1894Jun 197010033 (New York City, New York, NY) (No Location Given)058-38-8162New York1963ESTHER LANGSAM28 Aug 1905Feb 199310552 (Mount Vernon, Westchester, NY) (No Location Given)127-10-0224New YorkBefore 1951EUGENE LANGSAM2 May 192916 Sep 199811559  Lawrence, Nassau, NY (No Location Given)115-18-7331New YorkBefore 1951EUGENIA LANGSAM30 Oct 1917Nov 198333319 (Fort Lauderdale, Broward, FL) (No Location Given)115-48-9037New YorkBetween 1970 and 1971EVELYN LANGSAM9 Apr 1902Mar 197490048 (West Hollywood, Los Angeles, CA) (No Location Given)111-03-0667New YorkBefore 1951FANNIE LANGSAM2 Jun 1889Nov 197811234 (Brooklyn, Kings, NY) (No Location Given)126-52-9365New York1972FANNIE LANGSAM15 Jul 1891Jun 198111691 (Far Rockaway, Queens, NY) (No Location Given)068-52-3374New York1973FLORENCE LANGSAM1 Jan 1895Sep 197890046 (Los Angeles, Los Angeles, CA) (No Location Given)552-21-1577California1973FRANCES LANGSAM22 May 19025 Dec 199406029 (Vernon Rockville, Tolland, CT) (No Location Given)098-09-3243New YorkBefore 1951FRANCES LANGSAM9 Jun 190822 Sep 199694116 (San Francisco, San Francisco, CA) (No Location Given)546-74-3839California1963FRED LANGSAM22 Jun 1911Sep 1973 (No Location Given) (No Location Given)092-14-4783New YorkBefore 1951FRED LANGSAM25 Sep 191726 Feb 2001 94928  Rohnert Park, Sonoma, CA (No Location Given)114-05-6351New YorkBefore 1951FRIEDA LANGSAM14 Dec 1895May 198210475 (Bronx Nyc, Bronx, NY) (No Location Given)086-38-9156New York1963G GEOFFREY LANGSAM14 Jan 191426 Apr 199505746 (Gaysville, VT) (No Location Given)434-46-7271LouisianaBefore 1951GERTRUDE LANGSAM1 Oct 1903Jun 198410462 (Bronx Nyc, Bronx, NY) (No Location Given)090-09-0026New YorkBefore 1951GOLDIE LANGSAM15 Dec 1893Sep 197310467 (Bronx Nyc, Bronx, NY) (No Location Given)081-03-2931New YorkBefore 1951GUSSIE LANGSAM25 Feb 1905Nov 199219115 (Philadelphia, Philadelphia, PA) (No Location Given)176-28-7039PennsylvaniaBetween 1951 and 1953HAROLD LANGSAM16 Sep 1918Feb 1971 (No Location Given) (No Location Given)130-05-1020New YorkBefore 1951HARRY LANGSAM26 Jan 1892May 196711230 (Brooklyn, Kings, NY) (No Location Given)053-03-6135New YorkBefore 1951HARRY LANGSAM2 Jul 1894Jan 197111432 (Jamaica, Queens, NY) (No Location Given)109-10-2807New YorkBefore 1951HARRY LANGSAM15 Jan 1890May 197112202 (Albany, NY) (No Location Given)064-16-3992New YorkBefore 1951HARRY LANGSAM20 Oct 1906Nov 197819152 (Philadelphia, Philadelphia, PA) (No Location Given)162-30-8682PennsylvaniaBetween 1953 and 1955HARRY LANGSAM15 May 1897Apr 198711219 (Brooklyn, NY) (No Location Given)068-05-5414New YorkBefore 1951HATTIE LANGSAM21 Aug 1908Jul 198692683 (Fountain Valley, Orange, CA) (No Location Given)056-01-2619New YorkBefore 1951HELEN LANGSAM15 Jul 1907Feb 1979 (No Location Given)94121 (San Francisco, San Francisco, CA)552-44-2333CaliforniaBefore 1951HELEN LANGSAM5 Nov 1906Jun 198733019 (Hallandale, Broward, FL) (No Location Given)102-32-8008New YorkBetween 1957 and 1959HELEN LANGSAM25 Feb 191428 Sep 199960015  Deerfield, Lake, IL60015  Deerfield, Lake, IL340-28-7325IllinoisBetween 1951 and 1952HELEN LANGSAM23 Jul 19094 May 200106604  Bridgeport, Fairfield, CT (No Location Given)090-10-4556090Before 1951HERMAN LANGSAM18 Dec 1912Jun 197311219 (Brooklyn, NY) (No Location Given)085-28-4931New YorkBetween 1952 and 1953HERSCH LANGSAM10 Feb 1887Sep 197811355 (Flushing, Queens, NY)10024 (New York City, New York, NY)083-01-7484New YorkBefore 1951HILDA LANGSAM23 May 190713 Apr 1991 (No Location Given) (No Location Given)323-32-9163Illinois1955HYMAN LANGSAM3 Mar 1908Jul 198090069 (Los Angeles, Los Angeles, CA) (No Location Given)094-12-0975New YorkBefore 1951IDA LANGSAM26 Apr 1911Feb 198394109 (San Francisco, San Francisco, CA) (No Location Given)572-21-8959California1973IRVING LANGSAM12 Mar 1901Jan 196807047 (West New York, Hudson, NJ) (No Location Given)064-09-6918New YorkBefore 1951IRVING LANGSAM19 Oct 1896Sep 198110467 (Bronx Nyc, Bronx, NY) (No Location Given)063-10-2993New YorkBefore 1951IRVING LANGSAM11 Oct 19003 Jul 1991 (No Location Given) (No Location Given)561-03-0267CaliforniaBefore 1951ISIDORE LANGSAM25 Dec 1877Aug 1963 (No Location Given) (No Location Given)090-07-4843New YorkBefore 1951ISIDORE LANGSAM25 Dec 1888Oct 196711598 (Cedarhurst, Nassau, NY) (No Location Given)082-01-4169New YorkBefore 1951ISIDORE LANGSAM6 Jun 1908Oct 196711225 (Brooklyn, Kings, NY) (No Location Given)109-30-8079New YorkBetween 1955 and 1956ISIDORE LANGSAM8 Jul 1888Jul 197910462 (Bronx Nyc, Bronx, NY)10530 (Scarsdale, Westchester, NY)110-07-8215New YorkBefore 1951ISRAEL  LANGSAM14 Apr 190614 Mar 199785712 (No Location Given) (No Location Given)102-07-7717New York IVA LANGSAM24 Jun 19251 Feb 198811379 (Flushing, NY) (No Location Given)105-34-3916New YorkBetween 1960 and 1961JACK LANGSAM22 Dec 1911Jun 1971 (No Location Given) (No Location Given)067-10-0509New YorkBefore 1951JACK LANGSAM10 Oct 1899Aug 198006905 (Stamford, Fairfield, CT)06905 (Stamford, Fairfield, CT)061-03-2961New YorkBefore 1951JACK LANGSAM12 Apr 1910Feb 198111229 (Brooklyn, Kings, NY)11229 (Brooklyn, Kings, NY)052-10-3426New YorkBefore 1951JACK LANGSAM8 May 19022 Oct 199594102 (San Francisco, San Francisco, CA) (No Location Given)561-38-3244CaliforniaBefore 1951JACK LANGSAM3 Nov 191513 Feb 200133442  Deerfield Beach, Broward, FL (No Location Given)050-09-5558050Before 1951JACOB LANGSAM8 Nov 1890Sep 196911427 (Jamaica, NY) (No Location Given)117-28-9068New YorkBetween 1952 and 1954JACOB LANGSAM12 Oct 1884Mar 197121201 (Baltimore, Baltimore, MD) (No Location Given)063-12-6539New YorkBefore 1951JACOB LANGSAM25 Dec 1898Jan 198511218 (Brooklyn, Kings, NY) (No Location Given)120-26-0402New York1951JEANNETTE LANGSAM3 Mar 1914Sep 197911229 (Brooklyn, Kings, NY) (No Location Given)082-18-8072New YorkBefore 1951JOSEPH LANGSAM25 Jun 189920 Jun 200010021  New York, New York, NY (No Location Given)082-05-6395082Before 1951JOSHUA LANGSAM6 Oct 1901Oct 198011203 (Brooklyn, Kings, NY)11236 (Brooklyn, Kings, NY)116-28-0577New YorkBetween 1952 and 1954JULIA LANGSAM14 Mar 1901Jan 198310013 (New York City, New York, NY) (No Location Given)059-14-3242New YorkBefore 1951JULIA LANGSAM23 Apr 1905Aug 198445202 (Cincinnati, Hamilton, OH) (No Location Given)271-56-1621Ohio1970LEA LANGSAM5 May 192715 Aug 199633160 (Miami, Dade, FL) (No Location Given)122-34-1298New YorkBetween 1960 and 1961LEE LANGSAM27 Mar 191820 Jan 200092128  San Diego, San Diego, CA (No Location Given)092-07-3030092Before 1951LESTER LANGSAM4 May 190814 Sep 199310462 (Bronx Nyc, Bronx, NY) (No Location Given)051-05-4343New YorkBefore 1951LILLIAN LANGSAM23 May 1892Mar 197611225 (Brooklyn, Kings, NY) (No Location Given)089-24-4278New YorkBefore 1951LILLIAN LANGSAM27 Dec 190724 May 199433313 (Fort Lauderdale, Broward, FL) (No Location Given)093-07-2314New YorkBefore 1951LOUIS LANGSAM1 Oct 1900Aug 198210013 (New York City, New York, NY) (No Location Given)111-05-9084New YorkBefore 1951LOUIS LANGSAM16 Dec 190822 Jun 199211229 (Brooklyn, Kings, NY) (No Location Given)100-05-3372New YorkBefore 1951LOUIS LANGSAM23 Dec 194015 Mar 200090740  Seal Beach, Orange, CACalifornia560-58-5801New York1959MADELINE LANGSAM30 Jun 1946Sep 1982 (No Location Given) (No Location Given)080-36-8627New York1962MANDEL LANGSAM28 Dec 1896Aug 198160076 (Skokie, Cook, IL) (No Location Given)355-28-6738IllinoisBetween 1951 and 1953MANUEL LANGSAM22 Apr 1882Oct 1963 (No Location Given) (No Location Given)064-09-1261New YorkBefore 1951MARCIA LANGSAM6 Jun 194716 Feb 200072 (No Location Given)064-09-12610621963MARILYN LANGSAM20 Nov 1912Dec 198590069 (Los Angeles, Los Angeles, CA) (No Location Given)548-44-5262CaliforniaBefore 1951MARK LANGSAM15 Sep 1900Jul 198690402 (Pacific Palisades, Los Angeles, CA) (No Location Given)551-44-6578CaliforniaBefore 1951MARSHA LANGSAM28 Jul 191414 Aug 200010530  Hartsdale, Westchester, NY (No Location Given)086-07-7955086Before 1951MARTIN LANGSAM18 Dec 1911Nov 198433009 (Hallandale, Broward, FL) (No Location Given)118-36-6800New York1962MARTIN LANGSAM16 Jun 19267 Mar 199707747 (No Location Given) (No Location Given)067-18-2866New York MARY LANGSAM22 Apr 1897Aug 197911435 (Jamaica, Queens, NY) (No Location Given)051-52-7082New York1973MARY LANGSAM15 Dec 191115 Jan 199110011 (No Location Given) (No Location Given)089-20-7031New York MAURICE LANGSAM26 Mar 1902Jul 198292037 (La Jolla, San Diego, CA) (No Location Given)109-36-4659New York1962MAX LANGSAM10 Apr 1915Jul 198711375 (Flushing, Queens, NY) (No Location Given)099-10-5711New YorkBefore 1951MEYER LANGSAM3 Apr 1910Apr 198311215 (Brooklyn, Kings, NY)11219 (Brooklyn, NY)085-28-4972New YorkBetween 1952 and 1953MILDRED LANGSAM9 May 19037 Mar 198810011 (New York City, New York, NY) (No Location Given)091-26-4287New York1951MILTON LANGSAM25 Apr 1914Jun 1961 (No Location Given) (No Location Given)112-18-7950New YorkBefore 1951MILTON LANGSAM25 Dec 19217 Mar 199533321 (Fort Lauderdale, FL) (No Location Given)067-18-4453New YorkBefore 1951MINNIE LANGSAM10 Dec 1883Jan 197933154 (Miami, Dade, FL) (No Location Given)262-43-0181Florida1973MOLLY LANGSAM20 Nov 1906Nov 197911050 (Port Washington, Nassau, NY)11354 (Flushing, NY)052-03-0629New YorkBefore 1951MOLLY LANGSAM18 Mar 1889Feb 198210805 (New Rochelle, Westchester, NY) (No Location Given)060-52-9528New York1973MORDECAI LANGSAM22 Jun 1888Jan 198310025 (New York, NY) (No Location Given)054-30-6634New YorkBetween 1953 and 1955MORRIS LANGSAM1 Jun 1913May 197411372 (Flushing, NY) (No Location Given)100-05-3375New YorkBefore 1951MORRIS LANGSAM18 Oct 1902Jan 198211561 (Long Beach, NY) (No Location Given)063-01-7403New YorkBefore 1951MORRIS LANGSAM10 Oct 1898Jan 198494122 (San Francisco, San Francisco, CA) (No Location Given)545-05-6396CaliforniaBefore 1951MORRIS LANGSAM4 Mar 1894Jul 198590036 (Los Angeles, Los Angeles, CA) (No Location Given)086-05-4345New YorkBefore 1951MOSES LANGSAM6 Jun 1895Jun 198411219 (Brooklyn, NY)11204 (Brooklyn, Kings, NY)077-26-2898New York1951MOSES LANGSAM17 Oct 191324 Mar 199410977 (New City, Rockland, NY) (No Location Given)091-26-9574New York1951MURIEL LANGSAM20 Jun 1921Aug 1977 (No Location Given)11232 (Brooklyn, Kings, NY)054-14-8766New YorkBefore 1951MURRAY LANGSAM17 May 1911May 198210462 (Bronx Nyc, Bronx, NY) (No Location Given)078-36-0750New York1962N LANGSAM15 May 1948Dec 1996 (No Location Given) (No Location Given)107-40-5823New York NATHAN LANGSAM11 May 187715 Jan 196610452 (No Location Given) (No Location Given)061-42-8547New York NATHAN LANGSAM21 Nov 1897Feb 1963 (No Location Given) (No Location Given)081-03-1825New YorkBefore 1951NATHAN LANGSAM28 Jan 1903Aug 197311226 (Brooklyn, NY) (No Location Given)074-32-5820New YorkBetween 1956 and 1957NATHAN LANGSAM25 Mar 190528 Dec 198711218  Brooklyn, Kings, NY11218  Brooklyn, Kings, NY072-34-4239New YorkBetween 1959 and 1960NATHAN LANGSAM20 Mar 1908Oct 197185003 (Phoenix, Maricopa, AZ) (No Location Given)082-01-5092New YorkBefore 1951NATHAN LANGSAM2 Aug 19202 Jan 200211230  Brooklyn, Kings, NY 068-12-4629New YorkBefore 1951NATHANIEL LANGSAM3 Mar 1901Nov 198511229 (Brooklyn, Kings, NY)11229 (Brooklyn, Kings, NY)088-28-6295New YorkBetween 1951 and 1953PAUL LANGSAM10 Jan 1897Sep 198690035 (Los Angeles, Los Angeles, CA) (No Location Given)139-01-8207New JerseyBefore 1951PAUL LANGSAM12 May 191020 Nov 199633068 (Fort Lauderdale, Broward, FL) (No Location Given)095-16-1972New YorkBefore 1951PEARL LANGSAM12 Apr 1900Jan 197410452 (Bronx Nyc, Bronx, NY) (No Location Given)104-30-2926New YorkBetween 1955 and 1956PERLA LANGSAM6 Nov 1910Feb 198711219 (Brooklyn, NY) (No Location Given)122-30-1964New YorkBetween 1955 and 1956PHILIP LANGSAM2 May 1898Oct 1963 (No Location Given) (No Location Given)547-38-3740CaliforniaBefore 1951PHILIP LANGSAM7 Nov 1895Dec 197908540 (Princeton, Mercer, NJ)11557 (Hewlett, Nassau, NY)130-20-7904New YorkBefore 1951RACHEL LANGSAM24 Jan 1887Jun 197710025 (New York, NY)10025 (New York, NY)112-20-8246New YorkBefore 1951RALPH LANGSAM19 Feb 1911Mar 1973 (No Location Given) (No Location Given)109-07-0476New YorkBefore 1951RECHUMA LANGSAM6 Oct 1897Oct 196911365 (Flushing, Queens, NY) (No Location Given)083-34-9128New YorkBetween 1959 and 1960REGA LANGSAM21 Sep 1911Dec 198411414 (Jamaica, Queens, NY) (No Location Given)068-52-7697New York1973RHODA LANGSAM15 Feb 1910Jan 199011218 (Brooklyn, Kings, NY)11218 (Brooklyn, Kings, NY)053-07-3713New YorkBefore 1951ROBERT LANGSAM25 Aug 1902Apr 197390046 (Los Angeles, Los Angeles, CA) (No Location Given)083-09-7264New YorkBefore 1951ROSALIND LANGSAM15 Feb 190828 Apr 199411104 (Long Island City, Queens, NY) (No Location Given)109-32-0659New YorkBetween 1957 and 1959ROSE LANGSAM20 Mar 1884Sep 1963 (No Location Given) (No Location Given)303-44-5864IndianaBetween 1958 and 1959ROSE LANGSAM31 Dec 1886Jun 196810701 (Yonkers, NY) (No Location Given)121-09-7540New YorkBefore 1951ROSE LANGSAM5 May 1908Aug 197411427 (Jamaica, NY) (No Location Given)053-01-4389New YorkBefore 1951ROSE LANGSAM15 Oct 1901Aug 198294112 (San Francisco, San Francisco, CA) (No Location Given)567-22-1782CaliforniaBefore 1951ROSE LANGSAM4 Aug 1916May 198627609 (Raleigh, Wake, NC)27609 (Raleigh, Wake, NC)111-05-9903New YorkBefore 1951RUTH LANGSAM11 Apr 19094 Dec 199785712 (No Location Given)(No Location Given)526-70-7865Arizona  RUTH LANGSAM2 Jun 19209 Mar 199910471  Bronx, Bronx, NY(No Location Given)059-12-3866059 Before 1951SADIE LANGSAM15 Aug 1893Oct 198211553 (East Meadow, Nassau, NY) (No Location Given)082-18-8456New YorkBefore 1951SADIE LANGSAM21 Sep 18984 Feb 198910591 (Tarrytown, Westchester, NY) (No Location Given)076-34-2939New YorkBetween 1959 and 1960SAMUEL LANGSAM18 Dec 1900Jan 198111374 (Flushing, NY) (No Location Given)091-32-3741New YorkBetween 1957 and 1958SAMUEL LANGSAM22 Apr 1889Oct 198594102 (San Francisco, San Francisco, CA) (No Location Given)563-66-4864California1962SAMUEL LANGSAM15 Jul 189812 Oct 199010025 (No Location Given) (No Location Given)110-07-2095New York  SAMUEL LANGSAM30 Apr 19166 Oct 199210463 (Bronx Nyc, Bronx, NY) (No Location Given)058-03-4924New YorkBefore 1951SANFORD LANGSAM5 Mar 19146 Jan 199533319 (Fort Lauderdale, Broward, FL) (No Location Given)078-38-2547New York1963SARAH LANGSAM12 Feb 1895Jun 197411219 (Brooklyn, NY) (No Location Given)081-09-6257New YorkBefore 1951SARAH LANGSAM23 Sep 189916 Apr 199111229 (Brooklyn, Kings, NY) (No Location Given)088-28-6296New YorkBetween 1951 and 1953SARAH LANGSAM21 Jul 19063 Sep 199311432 (Jamaica, Queens, NY) (No Location Given)078-34-4124New YorkBetween 1959 and 1961SARAH LANGSAM4 Jul 1906Oct 199512202 (Albany, NY) (No Location Given)071-12-9585New YorkBefore 1951SIDNEY LANGSAM15 Mar 1912Sep 1974 (No Location Given) (No Location Given)489-03-9245MissouriBefore 1951SIDNEY LANGSAM5 Mar 190712 Dec 1991 (No Location Given) (No Location Given)099-26-9537New York1951SIDNEY LANGSAM2 Mar 190821 Feb 2000 60015  Deerfield, Lake, IL (No Location Given)329-10-2647IllinoisBefore 1951SOLOMON LANGSAM6 Mar 1919Sep 1983 (No Location Given)10530 (Scarsdale, Westchester, NY)087-05-9611New YorkBefore 1951SUSAN LANGSAM7 Mar 194529 Oct 1996 (No Location Given) (No Location Given)219-42-6626MarylandBetween 1960 and 1961SYDNEY LANGSAM7 Feb 190916 Jan 199033009 (Hallandale, Broward, FL) (No Location Given)089-26-5928New York1951SYLVIA LANGSAM26 Apr 1900Oct 198594112 (San Francisco, San Francisco, CA) (No Location Given)566-07-8471CaliforniaBefore 1951TESSIE LANGSAM29 Aug 1903Dec 197311236 (Brooklyn, Kings, NY) (No Location Given)052-28-0164New YorkBetween 1951 and 1952TILLIE LANGSAM1 Jan 1886Jun 196663107 (St Louis, Saint Louis City (City), MO) (No Location Given)340-28-7323IllinoisBetween 1951 and 1952TOBY LANGSAM16 Jul 1906Sep 196890046 (Los Angeles, Los Angeles, CA) (No Location Given)116-09-5529New YorkBefore 1951WALTER LANGSAM2 Jan 1906Aug 198545202 (Cincinnati, Hamilton, OH) (No Location Given)110-14-0967New YorkBefore 1951YETTA LANGSAM12 Mar 1896Feb 198411223 (Brooklyn, Kings, NY) (No Location Given)113-36-8782New York1962









I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 7/18/02
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/adlan.htm
##-----------------TITLE------------------------##
The H8.2 Langsam Family
##------------------TEXT------------------------##
The H8.2 Langsam Family




From:  Adlan@aol.com
Subject:  Langsam/Miller
PostedDate:  01/07/99 11:42:54 AM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  01/07/99 11:43:48 AM

Dear Mr. Miller
My brother and sister-in-law (Joseph and Betty Langsam of 
Short Hills, NJ) passed along your e-mail request for 
information concerning the Langsam family.

I went to your web site and found that you already have 
access to the two studies done by Suzan Wynne which I have.  
One is entitled "The Family of Pesach and Ita Langsam 
of Yawornik"   The other is entitled "Fish Family Tree" 
and contains a subheading of the "Langsam Family Tree" 
which appears to have been produced in 1994 by Suzan Wynne.

For your information, my father, Sidney E. Langsam, is 90 
years old and lives in a nursing home in Lincolnshire, IL 
with his wife, Helen Grosby Langsam.  My father was born in
East St. Louis, IL and was the son of David Langsam and his
wife Matilda.  He had no siblings.  My father lived most of
his adult life in St. Louis and Clayton, MO (a St. Louis 
suburb).  They relocated to this area when it was necessary 
for them to be placed in a nursing home.

I am married to Leonard Adams and live in Deerfield, IL.  
We have three sons:
David (Columbia, SC), 
Bruce (Chicago) and 
M. Jacob (Rochester,NY).

Bruce is married to Eve Becker.  
My brother, Joseph, is married to Betty Sayah Langsam
and lives in Short Hills, NJ.  They have three children: 
Daniel (Boston Univ),
Jessica (Univ of Penn) and 
Devorah, an elementary school student who lives at home.

I hope this is helpful

Phyllis Langsam Adams
100 Forestway Drive
Deerfield, IL. 60015

adlan@aol.com
_________________________________________________________

From:  Adlan@aol.com
Subject:  Re: Langsam/Miller
PostedDate:  01/18/99 01:08:08 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  01/18/99 11:19:04 PM

Dear Moishe

Sorry for the delay in responding to your message.  You may
feel free to post my message to you or to modify it as you 
see fit.

David Langsam is recorded in the Langsam-Spira family 
document on page H-7 under what appears to be section H8.2.
It shows that he was married to Tillie (that was how she was
known but her actual name was Matilda as I indicated in my 
previous message to you.  I was born in 1941 and my brother
Joseph was born in 1945.  My sons: 
David (1967), 
Bruce (1969), 
and Michael Jacob --known as Jacob(1971).

I was told when I grew up that my grandfather, David Langsam,
came to this country to escape the Austrian army after being
impressed as part of a campaign by the army to separate 
young Jewish men from their family and,thus, their culture 
and religion.  I was also told that he was from Galicia.  
In looking at a historical atlas, it appears that the 
Austro-Hungarian empire did extend into or at least near to
Galicia, so all this does look authentic to me.

I see (on page H-8) of the Langsam-Spira document that you 
are aware of Perline Langsam and Sigmond Langsam, both of 
whom live in the St. Louis area.
Perline can be contacted at 
207 Ambridge Court; 
Chesterfield, MO 63017.  
Her phone is (314) 576-5311.

Please do not hesitate to contact me if you need any more 
information or assistance.

Phyllis Adams
adlan@aol.com

________________________________________________________
Dan Langsam, son of Joseph, and grandson to Sidney (H8.2), supplied the 
following pictures in January 2000:
Sidney Langsam (son of David - H8.2) - 7kb
Helen Langsam, wife of Sidney (son of David - H8.2) - 7kb
Joesph Langsam Family (son of Sidney, grandson of David - H8.2)- 15kb
Sidney Langsam Family (son of David - H8.2) - 16kb
_____________________________________________________________
djl61@columbia.edu
Monday January 10, 2000 02:56 PM
To:   Moishe Miller/PSG/Prudential
cc:
Subject:  RE: Langsam






I would definitely be interested in exploring links between our families.
In fact, I am currently doing some research, although not to the same
extent
as yours.  I noticed that on your website you have posted a letter from my
aunt under the sub-heading "H8.2 Langsam".  I am having trouble linking my
branch to any others, mostly because I cannot find anyone who knows the
name
of my great-great grandfather.  Below I've sketched an outline of my
family,
most of which you probalby already have.  If I find any information that
might extend it, please let me know.  Thanks.


Sincerely,
Dan Langsam




My branch, mostly located around St. Louis, Missouri:


-[1]-David Langsam m. Tillie
-----[2]-Sidney Langsam m. Helen Grosby
---------[3]-Joseph Langsam m. Betty Sayah
-------------[4]-Daniel Langsam [b. 1977] [THIS IS ME!!!]
-------------[4]-Jessica Langsam [b. 1980]
-------------[4]-Devorah Langsam [b. 1989]
---------[3]-Phyllis Langsam m. Leanord Adams
-------------[4]-David Adams
-------------[4]-Bruce Adams m. Eve
-------------[4]-Jacob Adams
-[1]-Rose Langsam m. Uscher Schwimmer
-----[2] FIVE/SIX CHILDREN, MANY GRANDCHILDREN
-[1]-Isaac [1/2 brother to David]
-[1]-Helen [1/2 sister to David]



-----Original Message-----
From: moishe@langsam.com [mailto:moishe@langsam.com]
Sent: Wednesday, December 22, 1999 8:34 PM
To: dlangsam@bu.edu; 00j5747@ccmail.emis.hac.com; dlvid@netwizards.net;
SaulL123@aol.com; sherri.langsam@bankerstrust.com
Subject: Langsam



Hi,
Forgive me if I contacted you before, but I am doing research on my family
genealogy. I am a direct descendent of Pesach Langsam. I have a website at
www.langsam.com
Would you perhaps be interested in exploring a possible connection between
our families?
-Moishe
moishe@langsam.com

___________________________________________________________
djl61@columbia.edu
Monday January 10, 2000 03:47 PM
To:   Moishe Miller/PSG/Prudential
cc:
Subject:  RE: Langsam






Moishe-
Seems that I just have to get my hands on the book.  I only have two pages
from it.  I emailed Susan Wynne to see if she might have any more copies
left.  There are, in fact several "cousin" branches to which I don't know
the exact blood ties.  One is listed under H8.3-- David D. Langsam
[b.1907] at the head.  I called his daughter Perel/Perline today, who said
that David D. Langsam was a full nephew of David my great-grandfather, but
this makes no sense if David my great-grandfather had no full brothers.  I
would love to able to find the link between my St. Louis kin and the New
York Langsams-- my interest was kindled when I started correspoding with
Melissa Rose Langsam, a senior at Harvard who lives in the New York metro
area.  I will try to see if I can find any info on Yehoshua Chaim.  I'd
also
be happy to provide you with any pictures I can dig up, and to see what
you've got so far.  I'd even be willing to help you on a larger scale, if
you so desired.  I'm currently a student at Columbia, living on the Upper
West Side, and my parents live in New Jersey.  Talk to you soon.
-Dan
_______________________________________________________

From: "Daniel Langsam"  
To:  
Subject: RE: The Langsam Family 
Date: Sun, 30 Jan 2000 21:33:58 -0500 
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0) 
Importance: Normal 




Hey Moishe-
The names of those cousins I was telling you about are Mildred Newman and
Henrietta Horwitz (sp?) (married to Harold Newman and Jules Horwitz).  Both
of the last names are married names-- my parents weren't sure of their
maiden names.  See you Tuesday!
-Dan
_______________________________________________________
X-Lotus-FromDomain: PRUDENTIAL 
From: "Moishe Miller" 
To: "moishe@langsam.com" <moishe@langsam.com> 
Date: Mon, 17 Dec 2001 14:08:44 -0500 
Subject: Re: Phyliss Adams 

Phyllis' new email address is
laplan14@aol.com

Her son Bruce become the father of a little girl just four weeks ago. She 
is named after her grandmother - Helen. They are calling her Hanna Estelle.
_______________________________________________________









I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 12/18/02
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/louser.htm
##-----------------TITLE------------------------##
The Louser Langsam Family
##------------------TEXT------------------------##
The Louser Langsam Family






From: SaulL123@aol.com 
Date: Thu, 13 Jan 2000 14:27:25 EST 
Subject: Re: The Langsam Family 
To: moishe@langsam.com 

Dear Moishe,
                  It's not that I haven't done any research on the Langsam 
family, but to tell you the truth,  About 15 years ago a woman with the last 
name of Cohen was also doing reasearch on the Langsam-Spira family.  I gave 
her my information of which there is very little because of the fact that my 
father-in-law was the only survivor of his family during the Holocaust.  He 
lived in a small village in Poland and he has been deceased for 21 years.  
What little information we do have we have gotten from my mother-in-law and 
that is pretty sketchy.  She knew that there were 2 uncles living in New 
York.  By the time they emigrated to the U.S. they were elderly.  Their 
children wanted nothing to do with these foreign cousins so all contact broke 
off.  This family tree that was put together in the eighties could find no 
connection with our branch of the Langsams.
           I'm really sorry that I could not be of more help.
                                                             Sincerely,
                                                Marsha Langsam 

_______________________________________________________
From: SaulL123@aol.com 
Date: Fri, 14 Jan 2000 09:32:54 EST 
Subject: Re: Langsam Family 
To: moishe@langsam.com 

Dear Moishe,
           I located the book that was compiled by Michael Cohen.  Here is 
the information I have:
           My father-in-law's father, Louser had a brother (possibly more 
than one) that came to the states (New York) in the early part of the 1900's. 
 From the ship records that Michael Cohen discovered, there were 4 brothers 
that came from Jurezkowa Poland.  They could very well be my father-in-law's 
uncles.  Their names were Abraham, Hersh, Meyer, and Shajie.  Their parents 
were listed as Jacob Langsam and Leie Kabalnick.  Supposedly, Leie Kabalnick 
had a brother Elias in New York. Abraham came first and went to an uncle M. 
Goldblatt in NYC.  He worked as a waiter at the Hotel Cecil in 1910 and lived 
at 30 w. 118th Street.
              Louser stayed in Poland because his parents were there and 
raised his children, my father-in-law being the oldest, did not leave at the 
onset of the war as he had to take care of the farm.
               My father-in-law had 3 brothers and 1 sister. Israel, Moishe, 
Aaron and Rachel.
                This is as far back as I can go since I was really lucky just 
to find out the names of my father-in-law's siblings.  No one bothered to ask 
their names for future baby namings.  I asked quite by accident while 
visiting him in the hospital shortly before he passed away.
                   We never pursued the contact of the relatives in New York 
and no one ever contacted us.
                I hope this can help in some way.  If you find any relatives 
it would be nice because my husband has no one from his father's family.
                                              Sincerely,
                                        Marsha 

_______________________________________________________										
From: SaulL123@aol.com 
Date: Fri, 14 Jan 2000 16:19:36 EST 
Subject: RE: langsam family 
To: Moishe@langsam.com 

Dear Moishe,
           As I was perusing your website, I came across the log of social 
security numbers with births and deaths.  One stood out.  I mentioned to you 
that my father-in-law went to visit an Uncle Harry who lived in NY.  From the 
Langsam-Spira book (of which I have a copy)  The four brothers that came from 
my father-in-laws home town  were probably his uncles.  The only one with a 
social security number is Harry.  His birth date matches.  The other three 
could possibly changed their names, as was the custom at that time, to sound 
more American.  The name and zip code that I pulled up are Harry Langsam Born 
1892, died May 1967  and the zip 11230 Brooklyn Kings NY.  Has anyone laid 
claim to that branch?  The children of that Harry would be  close to 80 or 
85. My father-in-law's father probably was the eldest.  It would be 
interesting to finally meet some relatives from my father-in-laws side.  I 
know my husband, Saul and my sister-in-law Nina would be thrilled.
          I guess I should tell you, I have 3 boys.  My eldest is 21 
(Jeffrey) my middle is 19 (Andrew) and my youngest is 14(David)
 Funny how some of the same names keep cropping up.
       If I can be of any more help or if you come across anything else, 
please let me know.
                                                    Marsha Langsam
_____________________________________________
From: SaulL123@aol.com 
Date: Sun, 16 Jan 2000 21:33:30 EST 
Subject: Re: langsam family 
To: moishe@langsam.com 


Dear Moishe,
                   The information in the book by Susan Wynne is more than I 
was able to find out.  The only reason I would like information about our 
family, is that someone may possibly have pictures that were sent prior to 
WW2.  No one from that branch of the family ever responded to Susan's 
inquiries.  Sorry I can't be of more help.
                                                      Marsha 
  
Langsam, Saul
                   SaulL123@aol.com
                   402 Chapel Rd.
                   Elkins Park, PA 19027
_________________________________________________________________________
From: Fine, Jeffrey [mailto:finej@HughesLuce.com] 
Sent: Friday, April 29, 2005 11:29 AM
To: saull123@aol.com
Cc: william langson; Fine, Richard
Subject: Langsam letter

Dear Marsha: I attach a circa 1938 letter which I believe proves that
we are cousins. The attached letter was written to Sam (Shaje) Langsam
when he lived with my grandfather Harry (Hersh or Herse) on 23rd street
(with my mother Emily and Uncle Bill--who is cc'd on this email). Of
the 4 brothers, Meyer, Abraham, Hersh and Shaje, Sam/Shaje either never
married or was a widower--and lived with Harry (Hersh/Herse)in the
1930's on 23rd street in Brooklyn. Meyer/Mendel died in the flu
pandemic of 1917. I don't know anything about Abe--perhaps Uncle Bill
could tell us. In any event, the attached letter was given to me in
1978 by my mother when I was trying to figure out where the family came
from. My mother did not know who the letter was from, except that it
was from family in Poland. She said that Uncle used to send packages to
the family. Well, I tried to have the letter translated by a co-worker
who was a Holocaust survivor in 1978--he started to cry when he read the
letter--he said the letter was way too sad. I prevailed upon him to at
least tell me who the letter was from. (He did tell me that it was
actually two letters). He wrote on the attachment that the letter was
from: Her. Luser Langsam, Juriczkowa, Post Woitkowa, POW. Dobromil,
Poland. Of course, my mother had no idea who Luser Langsam was--she
thought he was a cousin. In reality, Luser Langsam was the 5th brother
who stayed behind in Poland. I believe Luser is your grandfather, Uncle
Bill's uncle, and Richard and mine, great uncle. I have no idea what
the rest of the letter says. Please see what you can do to have the
letter translated (and let's share the info of course)--I am also trying
from my end. Thanks! 

Shabbat Shalom and Hag Sameach!

Jeffrey R. Fine 
Hughes | Luce, LLP
1717 Main Street, Suite 2800 
Dallas, Texas 75201 
214.939.5567 
214.939.5849 (fax) 
214.632.9263 (cell) 
jeff.fine@hughesluce.com 
www.hughesluce.com 
_________________________________________________________________________
From: "Fine, Richard"  
Subject: RE: Langsam letter 
Date: Fri, 29 Apr 2005 12:04:11 -0500 
To: "Fine, Jeffrey" , saull123@aol.com 
Cc: "william langson" , moishe@langsam.com 
 
 
 
Jeff, this is pretty cool stuff!

Now, the big question is how to trace the lineage from Jacob Langsam to
the original Langsam (Pesach). We may need to enlist the help of Moishe
Miller, who developed the website on the Langsam lineage (I'm cc'ing him
with the only email address I have for him).

Moishe, if you get this, please respond so that we know your email is
active.

Thanks!

Rich

_
RICHARD J. FINE
Vice President, Compensation and Benefits 
Tenet Healthcare Corporation, Headquarters Office
13737 Noel Road, Suite 100 Dallas, TX 75240
Office 469-893-6234 Office Fax 469-893-7234
Cell 469-387-8734
Assistant Barbara Stegemann 469-893-2526
email richard.fine@tenethealth.com 

_________________________________________________________________________
From: "moishe@langsam.com"  
Subject: Re: Langsam letter 
Date: Sun, 01 May 2005 23:43:14 -0400 
To: "Fine, Richard" ,
"Fine, Jeffrey" , saull123@aol.com 
Cc: "william langson" , moishe@langsam.com 
 
 
 
Hi,

Thanks for contacting me with your inquiry. I would be most
interested in trying to link up our families. Can you send
me the attachment you refer to? 

Below is an outline of what I know.
Moishe

Descendants of Jacob Langsam

1 Jacob Langsam of Jurezkowa, Poland
.. +Leie Kabalnick 
........ 2 Louser Langsam 1880 - 1942 
............ +Necha ? 
................... 3 Tzvi Mordechai Langsam 1906 -
1978 of Jurezkowa, Poland
....................... +Dora Burstein 
............................. 4 Saul Lolek Langsam of
Cheltenham, PA
................................. +Marsha Langsam 
........................................ 5 Jeffrey
Langsam 
........................................ 5 Andrew
Langsam 
............................. 4 Nina Langsam 
................................. +N. Steven Jay 
........................................ 5 Lisa Jay 
........................................ 5 Harris Jay 
................... 3 Israel Langsam - 1942 
................... 3 Moishe Langsam - 1942 
................... 3 Rachel Langsam - 1942 
................... 3 Aaron Langsam - 1942 
........ 2 Abraham Langsam 1890 - 
........ 2 Hersh "Harry Langsam" Langsam 1892 - 
........ 2 Meyer Langsam 
........ 2 Shaje Langsam 1895 - 

 
_________________________________________________________________________
From: "Fine, Jeffrey"  
Subject: RE: Langsam letter  
Date: Sun, 1 May 2005 23:58:33 -0500 
To: , "Fine, Richard" , 
 
Cc: "william langson"  
 
 
 
Moishe: Shavua Tov! I can fill-in some of the blanks. Meyer/Mendel
Langsam died in the flu pandemic of 1917. Shaje/Sam Langsam died in the
late 30's or early 40's in Brooklyn--as far as I know, he had no
children. I know nothing about Abe. Harry/Herse/Hersh Langsam is/was
my grandfather. He died in 1967, leaving my mother, Emily Fine, and her
brother, Bill Langson. Seymour, my father, (died 1980) and Emily Fine
had 3 sons. Mitchell, the oldest, who has 2 daughters. Richard, the
youngest is married to Laura. Pam and I have 3 sons, Samuel, Benjamin
and David. And, here is the letter I sent to Marsha the other day. 

Jeffrey R. Fine 
                    File: langsam_.pdf (1143Kbytes)
_________________________________________________________________________
From: moishe@langsam.com [mailto:moishe@langsam.com] 
Sent: Sunday, May 01, 2005 11:44 PM
To: Fine, Jeffrey; Fine, Richard; saull123@aol.com
Cc: william langson
Subject: Re: Langsam letter 


Hi,

OK, so its Yiddish. I think I can muddle my way through the letter. I am
in NY and its pretty late here. I will print it all out and review it in
the morning.

Moishe

_________________________________________________________________________
From: "Fine, Jeffrey"  
Subject: RE: Langsam letter  
Date: Mon, 2 May 2005 00:28:12 -0500 
To:  
Cc: , "william langson" , 
"Fine, Richard"  
 
 
 
Moishe: My middle son Benjamin is leaving tomorrow morning for the
March of the Living. He is taking a copy of the letter and a list
(unfortunately long) of our family who died in the Holocaust. I want to
thank you for providing the information on the Langsams and helping us,
through your genealogy efforts, to meet other sections of the family we
knew nothing about--this is a big mitzvah you have done! Thanks again! 

Jeffrey R. Fine 
Hughes | Luce, LLP
1717 Main Street, Suite 2800 
Dallas, Texas 75201 
214.939.5567 
214.939.5849 (fax) 
214.632.9263 (cell) 
jeff.fine@hughesluce.com 
www.hughesluce.com  

_________________________________________________________________________
From: "moishe@langsam.com"  
Subject: Re: Langsam letter  
Date: Mon, 02 May 2005 01:11:51 -0400 
To: "Fine, Jeffrey" ,, 
"Fine, Richard" ,  
Cc: "william langson"  
 
 
 
Hi,

Just a quick check at my records. In the 1930 census, in
the Bronx, there was an Abraham Langsam, age 39, from
Galicia, married to Frieda, age 34, with children:
Caroline age 14 (c. 1916)
Miriam age 12 (c. 1918)
Milton age 8 (c. 1922)
Edith Frances age 6 months (c. 1929)

I also found a death record for a MILTON LANGSAM, born 25
Dec 1921 and passed away on 7 Mar 1995 in 33321 (Fort
Lauderdale, FL). You can file a request with Social
Security to find out more details, possibly even forward a
letter to the next of kin.

On Switchboard.com I find no LANGSAMs listed for Fort
Lauderdale, but there are 17 in the state of Florida. You
might try calling a few.

Let me know how else I can help.
Moishe 

_________________________________________________________________________
From: SaulL123@aol.com 
Subject: Re: Langsam letter  
Date: Mon, 2 May 2005 11:59:28 EDT 
To: moishe@langsam.com 

Dear Moishe,
  This is truly a wonderful event that has happened to our family.  
  After 60 years my husband Saul and his sister, Nina, have found 
  cousins on their father's side.  I do have an update on some of 
  our information.  Saul and I  moved in 1990 and now reside in Elkins 
  Park.  Our children are Jeffrey,26, who got married in 2004 to Stacey.  
  Andrew is now 24, and we have a third son, David who is 20. My sister-
  in-law, Nina and her husband Steve have a daughter Lisa,29, married 
  to Dan and their son Harris is married to Marla.  They have also 
  become grandparents to a beautiful baby girl named Abbie.  Nina and 
  Steve reside in Cherry Hill NJ.

Thanks again for your wonderful work
 Regards,
   Marsha Langsam
_________________________________________________________________________
From: "moishe@langsam.com"  
Subject: Re: Langsam letter  
Date: Mon, 02 May 2005 23:19:21 -0400 
To: "moishe@langsam.com" ,"Fine, Jeffrey" ,, "Fine, Richard" ,  
Cc: "william langson"  
 
 
 
Hi,

Below is the tree as I have it put together so far. I
muddled my way through one letter. BTW, the handwriting
looks different and I am not sure if they were written by
the same person. Anyhow, one letter is from Moshe and it
begins with "My dear brother-in-law", so I am guessing that
this one was written by Moshe Billet, brother to Harry's
(Hersh) wife. I have copies of the ship manifests and will
review. I think there may be a BILLET reference. 

The most important question for you tho think about: Do you
know of ANY other LANGSAMs that are cousins to you, even if
you do not know how?

Moishe

Descendants of Jacob Langsam

1 Jacob Langsam Jurezkowa, Poland
.. +Leie Kabalnick 
........ 2 Louser Langsam 1880 - 1942 
............ +Necha ? 
................... 3 Tzvi Mordechai Langsam 1906 -
1978 Jurezkowa, Poland
....................... +girl ? - 1942 
................... *2nd Wife of Tzvi Mordechai Langsam: 
....................... +Dora Burstein 
............................. 4 Saul Lolek
Langsam Elkins Park, PA
................................. +Marsha Solomon 
........................................ 5 Jeffrey
Langsam 1979 - 
............................................ +Stacey
Meslin 
........................................ 5 Andrew
Langsam 1981 - 
........................................ 5 David
Langsam 1985 - 
............................. 4 Nina Langsam Cherry
Hill, NJ
................................. +N. Steven "Steve Jay"
Jay 
........................................ 5 Lisa Jay 1976
- 
............................................ +Dan
Kessler 
........................................ 5 Harris Jay 
............................................ +Marla
Gilman 
................... 3 Israel Langsam - 1942 
................... 3 Moishe Langsam - 1942 
................... 3 Rachel Langsam - 1942 
................... 3 Aaron Langsam - 1942 
........ 2 Abraham Langsam 1882 - 
........ 2 Hersh "Harry Langsam" Langsam 1892 - 1967 
............ +girl Billet 
................... 3 Emily Langsam 
....................... +Seymour Fine - 1980 
............................. 4 Mitchell Fine 
........................................ 5 girl Fine 
........................................ 5 girl Fine 
............................. 4 Jeffrey Fine 
................................. +Pam ? 
........................................ 5 Samuel Fine 
........................................ 5 Benjamin
Fine 
........................................ 5 David Fine 
............................. 4 Richard Fine 
................................. +Laura ? 
................... 3 William "Bill Langson" Langson 
........ 2 Shaje "Sam Langsam" Langsam 1895 - 1940 
........ 2 Meyer Langsam 1900 - 1917 
 

_________________________________________________________________________
From: "Fine, Richard"  
Subject: RE: Langsam letter 
Date: Tue, 3 May 2005 09:14:37 -0500 
To: moishe@langsam.com, "Fine, Jeffrey" , 
saull123@aol.com 
Cc: "william langson"  
 
 
 
Moishe, this is great. I've got a few insights.

First, our grandfather Harry's (Hersh's) wife was Hattie Wolf (i.e., was
not a Billet). However, on the Ellis Island ship manifest record for
Abe Langsam, there is a mention of a friend David Billet on Willer (sp?)
Street who came to pick him up. Is it possible that one of the sisters
who remained in Jurezkowa was married to a Billet?

Incidentally, I had some difficulty finding Abe's record. It's actually
listed in ellisisland.org as Abraham Langsaw (and not Langsam). He came
over in December 1905 and was listed as age 17 at the time, making his
birth year 1888. 

By the way, who was Jacob Langsam's father?
 

_________________________________________________________________________
From: SaulL123@aol.com 
Subject: Re: Langsam letter  
Date: Wed, 4 May 2005 11:27:29 EDT 
To: moishe@langsam.com 

Moishe,
 Is it possible that Moishe Billet was a brother to Necha and writing the 
 letter for her?  I don't know any background on my father-in-law's mother.  
 Was that her maiden name?  Was she asking for a dowry for her daughter 
 Rachel? There are still many questions and I'm hoping when I have the l
 etter translated it will answer some of them.  We're still working on it.
                                             Marsha
											 
_________________________________________________________________________
From: SaulL123@aol.com 
Subject: Re: Langsam letter  
Date: Tue, 3 May 2005 15:46:37 EDT 
To: moishe@langsam.com 
 
Dear Moishe,
My mother-in-law is translating the letter.  She is having some 
difficulty because it is not printed yiddish but written.  If the 
letter was signed by Moishe, He could have written it for his mother.  
Moishe was a sibling of my father-in-law, hence my dearest brother-
in-law.  I do not know of any sisters of the Langsam brothers from 
Jureczkowa. As far as any other survivors from this line, if they 
did not come to the states, they perished in the holocaust.  I do 
know that Luser passed away prior to the holocaust from disease 
and my father-in-law stayed in Poland to look after his mother and 
siblings as he was the oldest.

The baby Abbie is the child of Lisa and Dan, and yes, Nina's married 
name is Jay

If you have any other questions I hope that I can help
                                                          Marsha 

_________________________________________________________________________
From: SaulL123@aol.com 
Subject: Re: Langsam letter  
Date: Thu, 5 May 2005 09:15:56 EDT 
To: moishe@langsam.com 

Dear Moishe,
 I had a lovely conversation with Emily Fine last night.  She gave me a 
 little more information.  Sha remembers that her Uncle Abe, Harry's 
 brother was married to Sadie.  They had 2 children Harold and Caroline.  
 She was friends with Caroline and she thinks that she married a man 
 named Bob Schwartz.  Also her father had a cousin also named Abe Langsam 
 who was married to Molly and they had 2 sons, Jack and Milton.
                   We're  trying!
                                              Marsha
_________________________________________________________________________
From: william langson [mailto:billlbison@juno.com] 
Sent: Tuesday, May 03, 2005 11:03 PM
To: RICHARD.Fine@tenethealth.com; Fine, Jeffrey
Subject: langsam family history


              I am really imp rest with the amount of history that has
shown up in such a short period of time. To correct one person mentioned
that had lived with us was not Sam Langsam but Sam Wolf who was my
mothers uncle.You can check this out with your mother who will i am sure
will remember. My farther had a cousin in the bronx who name was Abe
langsam and his wife was Molly Langsam. His brother who also lived in
the Bronx was also Abe Langsam had 2 children Caroline & Harold. Abe had
lost one leg due to diabetes and my farther would help them as much has
he could.We have lost contact with them after my farther died but i
remember them at my wedding. The Milton mentioned in Florida i believe
was my farthers cousin son Abe langsam. Sam Langsam I believe was never
married. My farther had a cousin that wound up in Sweden that he helped
come to the U.S. He was in Pensylvania the last i remember. If you need
any further information please keep me in the loop 

Uncle Bill

_________________________________________________________________________
From: Fine, Jeffrey [mailto:finej@HughesLuce.com] 
Sent: Thursday, May 05, 2005 11:18 AM
To: william langson
Cc: Fine, Richard; SaulL123@aol.com; mitchelldf@cs.com; Phf5825@aol.com;
Buf11@aol.com; sfine@wam.umd.edu; daf81289@mac.com
Subject: RE: langsam family history

Dear Uncle Bill: Thanks for your email-- Mom also had a lot of
information. I wanted to summarize everything for you, Richard and
Mitchell--and our cousins Saul and Marsha--who are cc'd on this email.
Mom had a terrific conversation with Marsha and I had a wonderful talk
with Saul. Here goes:

Bottom-line--we reconnected with the Langsam family--here are the
details (this is a combination of what Richard and I learned from Mom,
public records, Saul and Marsha Langsam, my own recollection, and you):

1. Grandpa (Pop) Harry was one of five brothers--Abraham/Abe,
Meyer/Mendel, Shaje/Sam, Herse/Hersh/Harry and Louser (pronounced
loo-ser). They were the children of Yacov and Leia (Kabalnik) Langsam,
from the village of Jaretskowa/Jaricskowa in Galicia. Yacov's mother
had a farm and was better off than most--but Yacov, although very poor,
apparently never asked for help from his mother. Mom says that Pop once
told her that there were 4 sisters as well--but no one else knows of
that. They barely had enough to eat.

2. Abe was the first one to come to America. He saved money and sent
for Grandpa/Pop. Then Grandpa saved money and sent for Meyer/Mendel and
then he also sent money to bring over Sam. Why Louser did not come over
we don't know. But I speculate he had some health problem and therefore
could not travel--but we don't know. The brothers left to avoid being
conscripted into the army.

3. Sam never married--and he lived by himself in the Bronx--I think.
Meyer/Mendel died in the flu pandemic of 1917.

4. Louser was married to Necha, stayed in Poland with Yacov. Grandma
Leia, whose Hebrew name was probably Leia Kreindel-- died young--Mom
believes that Grandpa Yacov may have actually lived until he was killed
by the Nazis. The only thing I have found so far from them is the letter
from 1938 which is being translated.

5. Louser died before the war from some illness. He had children: Tzvi
Mordechai Langsam (survived), Israel Langsam - 1942; Moishe Langsam
- 1942; Rachel Langsam - 1942; Aaron Langsam - 1942. Saul's father
(Tzvi Mordecai?), was the only one to survive the war--from Dachau. I
believe everyone else died in Auschwitz--but I don't know for sure. He
was sent to Sweden to a DP camp after the war, where he married Dora.
He is the nephew who made contact with Grandpa. Mom distinctly
remembers sending packages to them in Sweden. Grandpa was not certain
at first who exactly he was--but, he told Mom that this was a person in
need and they must help--even if he wasn't a relative. Eventually,
Grandpa helped to bring them over to Philadelphia. Saul remembers
visiting Grandpa in an apartment. Mom believes they came to your
wedding--do you have wedding pictures you could scan and send? Saul's
father was your and Mom's first cousin.

6. The brother Abe you mention below was married to Sadie. His child
Harold died young. Caroline Langsam married Bob? Schwartz--Mom doesn't
think she has an address--but we are working on that.

7. The other cousins--Abe and Molly Langsam--Mom believes that part of
the family is from Romania--not far from Juretskowa--we are checking on
that. 

8. Uncle Bill--you could help if you have any addresses, phone numbers
of any of the Langsams, old letters, photos, or anything else you can
remember.

Finally, I think it is very appropriate that this week--on Yom
Hashoah--we are reconnecting--and remembering those of our family who
died in the Holocaust. 

Regards to all! 


Jeff

_________________________________________________________________________
From: "Fine, Richard"  
Subject: RE: langsam family history 
Date: Thu, 5 May 2005 11:26:37 -0500 
To: "Fine, Jeffrey" , 
"william langson" , moishe@langsam.com 
Cc: SaulL123@aol.com, mitchelldf@cs.com, Phf5825@aol.com, Buf11@aol.com, 
sfine@wam.umd.edu, daf81289@mac.com 
 
 
 
Jeff, thanks for summarizing all of this. It's pretty amazing stuff. I
will work on getting copies/photos of the ship manifests from Ellis
Island.

Also, thanks to Moishe Miller for everything he's done to document the
Langsam family history over the years, and for creating the forum that
allowed us to find Saul and Marsha (albeit through a five-year old web
posting!).

Moishe, would you happen to know how many Langsam descendents there are
in the US?

Thanks!

Rich

_________________________________________________________________________
From: "moishe@langsam.com"  
Subject: Re: langsam family history 
Date: Sat, 07 May 2005 22:31:30 -0400 
To: "Fine, Richard" ,
"Fine, Jeffrey" , 
"william langson" , moishe@langsam.com 
Cc: SaulL123@aol.com, mitchelldf@cs.com, Phf5825@aol.com, Buf11@aol.com, 
sfine@wam.umd.edu, daf81289@mac.com 
 
 
 
Dear Cousins,

I have reviewed your notes and believe that the OTHER Abe
Langsam is the one from Przemysl, Poland, mentioned as the
H23 link in the LANGSAM-SPIRA book. Some detail on this
family is in my website. The exact page is:
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/h23.htm

Notice the name BILLET as Mollie's surname. 

The latest information I have for this tree is:
1 H23 - unknown LANGSAM 
........ 2 Leah Langsam 
............ +Leibush Lustig 
................... 3 Ephraim Lustig 
................... 3 child Lustig 
................... 3 child Lustig 
................... 3 child Lustig 
................... 3 David Lustig 
............................. 4 Renee Lustig 
................................. +boy Aranoff 
........ 2 child Langsam 
................... 3 Abraham Langsam 1888 - 1961 of
Przemysl, Poland
....................... +Mollie Billet 
............................. 4 Jack Langsam 1911 - 1971 
................................. +Dorothy ? 
........................................ 5 William
Langsam 1941 - 
............................................ +Wilma
Epstein 
.................................................. 6
  David Langsam 1964 - 
.................................................. 6
  Debra Langsam 1967 - 
.................................................. 6 Adam
Langsam 1968 - 
........................................ *2nd Wife of
William Langsam: 
............................................ +Linda ? 
............................. *2nd Wife of Jack Langsam: 
................................. +Judith ? 
........................................ 5 Andrew
Langsam 
............................. 4 Milton Langsam 


I know that in 1985 William Langsam was in Insurance and
lived in Long Island. Looking in switchboard, I find only
one William Langsam in all of NY. He is in Long Island, at
38 Stone Hill Dr S 
Manhasset, NY 11030-4426
(516) 365-4343 

If you follow-up with him, please let me know what happens.
I called him several times a few years ago, but we never
actually spoke.

I also have a question. You state that "Louser died before
the war from some illness", while the Langsam-Spira book
states that he perished in the Holocaust. Can this be
clarified any further?

Regarding Rich's comments, first let me once again thank
him for his very kind words. As for the Langsam manifests
from Ellis Island, I have most of them. Let me know which
ones you would like and if I can email large files to you
and I will send them.

As for the number of living Langsam descendents, I do not
have a current count. What I can tell you is that Pesach
Langsam, our earliest known ancestor, has over 14,000 known
descendents. I am still computerizing the families, but
already have data-entered over 11,600 people. This spans
eleven generations. 

Can you identify all the new email addresses on this note?

-Moishe
 
_________________________________________________________________________
From: william langson  
Subject: langson family tree 
Date: Sat, 7 May 2005 22:57:21 -0700 
To: moishe@langsam.com,finej@HughesLuce.com,RICHARD.Fine@tenethealth.com 
   
Thank you very much for all the information you have
provided to my nephews about our family. My full name is William langson
that as it appears on my birth certificate. I am married to Mildred and
have 3 children Drew Hope Karen. I am Harry Langsam son. I am retired and
live in Arizona. My address is 14574 Bison Path Surprise AZ. 85374. My
telephone number is 623 546 8028. I would appreciate if you will add my
name to the family tree. If i can help you any further please contact
by e.m. or phone. I want to thank you again for responses. 
Regards 
Bill Langson
 
_________________________________________________________________________
Subject: Langsam Hamburg Departures 
Date: Sun, 08 May 2005 14:06:12 -0400 
To: "Fine, Richard" ,
"Fine, Jeffrey" , 
"william langson" , moishe@langsam.com 
Cc: SaulL123@aol.com, mitchelldf@cs.com, Phf5825@aol.com, Buf11@aol.com, 
sfine@wam.umd.edu, daf81289@mac.com 
 
 
Hi,

You might also want to search the Hamburg departure lists,
one of the main ports in Europe from where people left.

There is a website at:
http://ltyr.hamburg.de/

-Moishe 
_________________________________________________________________________


			   




I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 5/8/05
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/bardejov.htm
##-----------------TITLE------------------------##
Bardejov LDS Records
##------------------TEXT------------------------##
LDS FHC Bardejov Resources
	
	FilmNumbers
	1792046
	1792047
	1792048
	1183504
	21892451869 Census
	Archive
	Other Films
	
	
   Films 1792046 - 1792048; 1842-1895. Film 1183504; 1941.
   Jewish records of births, marriages and deaths for Bardejov, Slovakia, (formerly Bâartfa, 
   Sâaros, Hungary and surrounding communities, including Zborov and Smilno. The text is in
   German and Hungarian. The records are divided among several (about sixteen in all) sections or 
   books on the microfilms. These are referred to as items. The breakdown below is still 
   incomplete. Please refer to Zborov records as well, for additional 
   vital records from this area of Saros county. These records can be found at the archives in 
   Presov. The 1941 list was transcribed by Abraham L. Grussgott.

   Birth           1852-1882 ------------------------- 1792046
   Marriage        1852-1882                           items 2-5
   Death           1853-1882
   Birth           1843-1853
   Marriage        1842-1853
   Death           1842-1853
   Birth           1854-1865
   Marriage        1855-1873
   Birth           1865-1874
   Death           1854-1873
   Birth           1886
   Birth           1886-1895 ------------------------- 1792047
   Birth           1874-1885
   Marriage        1886-1895; 1920-1923
   Death           1886-1895
   Marriage        1886-1895, 1921-1922
   Death           1886-1895
   Birth           1862-1863
   Death           1862-1863
   Birth           1875-1878
   Marriage, Death 1878

   Birth, Marriage, Death     1860-1893
   Birth, Marriage, Death     1894-1895
                             ------------------------ 1792048
                                                      item 1

   Complete 1941 registration of the Jews of Bardejov,
   Slovakia; formerly Bâartfa, Sâaros, Hungary. This
   forced registration was done by the Slovak government
   before their deportation to concentration camps in Poland.
                             ------------------------ 1183504
                                                      items 3-4




Film 2189245 - Item #3; 1869 Census - Saros County, Slovakia.
District: Sekcov (Szekcso)

Area: Gaboltov (Gabolto)
Towns: Bogliarka (Boglyarka), Cigelka (Czigelka), Fricka 
       (Fricska), Gaboltov (Gabolto), Gerlachov (Gerlacho),
       Krive, Kurov (Kuro), Lenartov (Lenarto), Livov (Livo),
       Livovska Huta (Livohutta), Lukov (Luko), Malcov 
       (Malyczo), Petrova (Pitrova), Snakov (Sznako), Tarnov
       (Tarno), Venecia (Veneczia), Vysny Tvarozec (Felso
       Tvaroscz) Zlate (Sarpatak)

Area: Raslavice (Raszlavicz)
Towns: Abrahamovce (Abrahamfalu), Andrejova, Bardejovska Nova
       Ves (Bartfa Ujfalu), Brezovka, Buclovany (Buczlo),
       Demjata (Demethe), Dlha Luka (Hosszuret), Hazlin, 
       Kobyly (Lofalu), Krasna Luka (Luko), Kruzlov (Kllyusso),
       Lukavica (Lukavicza), Nizna Volá (Volya), Nizne 
       Reslavice (Tot Reszlavicz), Resov (Resso), Richvald
       (Richwald), Trocany (Trocsan), Vaniskovce (Vanyiskocz)

Area: Mosurov (Adamfolde)
Towns: Hertnik (Hertnek), Hervartov (Hervarto), Hubosovce
       (Gombosfalva), Janovce (Berczalja), Maly Slivnik (Kis 
       Szilva), Mosurov (Adamfolde), Osikov (Ossiko), Ratvay
       (Ratvaj), Siba, Terna (Ternye), Varadka, Zahradne
       (Szedikert), Zatkovce (Zsetek)



Archive:
SDA - State District Archives

Statny okresny archiv
Dlhy rad 16
085 77 Bardejov
	
	
	


	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 9/4/01
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/tyrawa.htm
##-----------------TITLE------------------------##
The Louis Langsam Family
##------------------TEXT------------------------##
The Louis Langsam Family





Author:  solalr@juno.com (SOL/ALICE ROSENBERG) at INTERNET
Date:    4/14/98  8:36 PM
Priority: Normal
TO: Moishe Miller at CCSP27B1
Subject: Re: Langsam roots
------------------------------- Message Contents -------------------------------
Dear Moishe,
Received your e-mail regarding the Langsam roots.  I was married to a 
Langsam descendent and have a minimal of information about them...I don't 
know if there is a connection...Louis Langsam came to the states in the 
early 1900's from Tyrawa Woloska, near Sanok in Gallacia.  He had three 
children, one of whom is still living on Long Island.  I will show him 
printouts of your very interesting web-site when I see him again at the 
end of June, and see if he recognizes any names.  My children are Louis 
Langsam's great-grandchildren and I posted with Jewishgen. to find out 
more information for them...
Alice Rosenberg
     
On Mon, 13 Apr 1998 18:43:14 -0400 Moishe_Miller@ccmail.prusec.com 
writes:
>     Hi,
>     Saw your posting on the Jewishgen. I have been researching my 
>     Miller/Langsam roots for some time now and have a website at 
>     http://www.ics.uci.edu/~dan/genealogy/Miller/hometree.htm
>     Would you be interested in exploring a possible connection 
>between our 
>     families?
>     Take Care!
>     -Moishe Miller
>     moishe_miller@ccmail.prusec.com 
>
     
_____________________________________________________________________ 
Date: Tue, 24 Jul 2001 14:45:41 -0400
To: solalr@juno.com
From: "moishe@langsam.com" 
Subject: Fwd: Re: Langsam Family

Hi,

We have been in contact before and you mentioned some family in Long Island. 
Can I contact "Louis' son out on the island" or one of his kids directly, to 
find out more?  I would like to get more info on your  "Louis Langsam"  
ancestry. 

Thanks!
-Moishe Miller
 moishe@langsam.com     
     
_____________________________________________________________________ 
To: moishe@langsam.com 
Date: Wed, 25 Jul 2001 11:11:34 -0400 
Subject: Re: Fwd: Re: Langsam Family 
From: solalr@juno.com 


I've given you everything they told me...they are not receptive to
further questions...
Sorry!

     





I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 6/24/04
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/oscar.htm
##-----------------TITLE------------------------##
Hersch and Ruchel Langsam from Blazowa
##------------------TEXT------------------------##
Hersch and Ruchel Langsam from Blazowa





Author:  Suzan Wynne  at INTERNET
Date:    9/19/98  10:28 AM
Priority: Normal
TO: Moishe Miller at CCSP27B1
Subject: Re: [Fwd: Re: Updated Book]
------------------------------- Message Contents -------------------------------
Moishe_Miller@ccmail.prusec.com wrote: 
> 
>      I did not receive anything in your response. 
> 
> ______________________________ Reply Separator _________________________________
> Subject: [Fwd: Re: Updated Book]
> Author:  Suzan Wynne  at INTERNET 
> Date:    9/18/98 7:30 AM
> 
> Hi,
> I will discuss the question with the sponsor. Some of what might be good to
> know: How many books did you sell when you did it? What do you anticipate as a
> real (rather than casual) interest this time among L2-5?
> Oscar, is he a big-time real estate guy from the 
> Bronx/Florida?
> Can you forward any his email?
> -Take Care!
> Moishe
> 
> 
Moishe,  i was trying to forward a very long missive from Jehoshua 
"Oscar" Langsam who seems to live in Israel.  He had an interesting take 
on Pesach.  His family lore has it that Pesach is a direct descendant of 
Issachar, son of Jacob.  Though he states that his family is connected 
to Pesach Langsam, he does not say how. What he does know is that his 
grandparents were Hersch and Ruchel Langsam from Blazowa.
     
His father, Aaron, their son, was able to get on an illegal ship from 
Danzig to Palestine with about 1300 others.  The boat was captured and 
detained in Yugoslavia and all were shot by the Nazis.  After the war, 
the bodies were exhumed from their mass grave in Sabac, Yugo. and 
reburied in a Jewish cemetery in Belgrade.
     
His mother, Esther and her two sons waited in Danzig for opportunities 
to flee.  They left with 500 others, the last to successfully leave, on 
a train to Bratislava where they picked up a series of boats.  After 3 
months they arrived in Haifa.  They were detained.  The 3 year boy died 
of typhoid.  Esther and Oscar were exiled to Mauritius until August 
1945.  Esther remarried and had two more children. 
     
Oscar sent a tree but I couldn't read it.  I've asked him to mail it to 
me since we've had such difficulty communicating.
     
I've asked him if he knows more about how his grandfather might have 
been connected to Pesach Langsam's children. As far as I know, his 
family is not in the book. 
     
Suzan
     

Oscar's address is 
oscar@netvision.net.il

Oscar has a changing site and this is the link to the basic information he has posted as I downloaded it. Forgive me, but the images do not load. I did not copy them.




I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/23/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/fslovkne.htm
##-----------------TITLE------------------------##
Detailed Map of North Eastern Slovakia
##------------------TEXT------------------------##
Detailed Map of Northeastern Slovakia (and the part of Poland that borders on it)
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/presov.htm
##-----------------TITLE------------------------##
Presov LDS Records
##------------------TEXT------------------------##
LDS FHC Presov Resources
	
	FilmNumbers
	1793548
	1793549
	1793514
	Archive
	Other Films
	Presov Orthodox Jewish Cemetery
	
	
   Films 1793548, 1793549, 1793514; 1826-1942.
   Jewish records of births, marriages and deaths from community registers for
   Preésov, Slovakia; formerly Eperjes, Sâaros, (also known as
   Pressow or Fragopolis).  Text in German and Hungarian.
   The records are divided among several
   (about twenty in all) sections or books on the microfilm.
   These are referred to as items. The breakdown below is
   still incomplete. These records can be found at the archives in Presov, v. 923-940.

   Birth         1826-1827, 1829, 1831, 1833-1834
                                           ----------- 1793548
   Birth         1837, 1839-1886                     items 3-6
   Marriage      1844, 1846, 1849-1850, 1853
   Marriage      1860-1886
   Death         1847, 1849, 1855, 1886
   Birth         1871-1883
   Marriage      1873-1883
   Death         1872, 1878
   Birth         1884-1885, 1887-1895


   Birth         1886-1942, 1902-1926     ------------ 1793549
   Marriage      1884-1895, 1921-1993
   Marriage      1887-1942, 1902-1912
   Death         1884-1895, 1901, 1887-1942
   Birth, Marriage, Death   1876-1895
   Birth, Marriage          1877-1879
   Birth, Marriage, Death   1884-1895


   Death         1905-1946                ------------ 1793514
   Birth, Marriage, Death   1876-1895                items 1-3
   Birth, Marriage, Death   1877-1895



Archive:
SDA - State District Archives

Statny oblastny archiv
Slovenska 40
080 01 Presov
	
	


	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 9/4/01
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/debie1.htm
##-----------------TITLE------------------------##
The L2/L4 Langsam Family
##------------------TEXT------------------------##
The L2/L4 Langsam Family






Author:  ¨Dr. Deborah M. Langsam¨ <dmlangsa@unccvm.uncc.edu> at INTERNET
Date:    7/31/96  11:51 PM
Priority: Normal
TO: Moishe Miller at CC_NYP5W1
Subject: Re: LANGSAM GENEALOGY
------------------------------- Message Contents -------------------------------
Hello again:
     
Yes, I assume that the mmcohen at Santa Cruz is indeed Michael (in addition 
to doing family histories and working through the mathematical intricacies 
of various problems, Michael is an avid ballroom/latin dancer...perhaps the 
"mambo" portion of his address refers to that????)
     
Your genealogical journey sounds both interesting and bittersweet. 
     
Brooklyn-- that's where I grew up (in Crown Heights)...I went to Erasmus 
Hall and then on to Brooklyn College and City College before moving on for 
my doctorate.
     
My cousin Devra Langsam still lives in Brooklyn (on East 8th Street).  Her 
family (father Jacob, mother Fritzi - both now deceased - and sister Miriam 
who now lives in Indianapolis) grew up in the same apartment building as my 
family.  
     
Did you grow up in Brooklyn?  And in what section of Brooklyn is E. 32nd 
Street.  I turned to the L1 section of the Langsam-Spira Family -- the only 
Moshe (not Moishe) I see is/was married to Sarah...???  but this seems to be 
a couple of generations back?  or am I being misled by Moshe's position on 
the chart?
     
Unfortunately...most of my immediate family is now gone.  My brother lives 
in Bayside and my Aunt (not a Langsam, but a Mink -- my mother's maiden 
name) - so I still get back to New York several times a year. There have 
been a couple of marriages (cousin Michael's -- not the Santa Cruz Michael, 
but the Allentown PA Michael -- son and daughter have been married in the 
past few years) -- I don't know of other branches, however, that haven't 
made it into the book. 
     
By the way, how did you manage to get connected with the Langsam-Spira volume?
     
     
Re:  the "net" -- I've got great access both through the University and at 
home -- so I'd be interested in tuning in to your site once it's 
established.  Keep me posted.  It might be interesting to establish a 
"relative" listserv or link.
     
I'd be interested to hear if and when you manage to contact Michael.
     
Nice hearing from you.  Good luck. 
     
Best:  Debbie
     
     
     Hi,

     I started off trying to create a record of my Miller ancestors that 
     perished in the Holocaust, a small task I had thought. It took on a
     life of its own. I have about 6500 people now in the L1 section of the 
     book, all from Avrohm Aba Langsam/Miller. I am also in the midst of
     putting up an internet site with some of the high-level info. Do u 
     have access to the 'Net?

     I found a Michael M. Cohen, at Santa Cruz, with Email address: 
     mmcohen@mambo.ucsc.edu
     Is this him?

     I am married, with children. I live in Brooklyn, NY & work in 
     Manhattan for Prudential Securities.

     Do you know of any other Langsams outside of your family, that did not 
     make it into the book, like any new students, etc?

     Take Care!
     -Moishe

     Moishe Miller
     1133 East 32nd Street
     Bklyn NY 11210-4734

     H:(718) 258 - 5512
     W:(212) 778 - 7015


     ______________________________ Reply Separator
     _________________________________ Subject: Re: Genealogy
     Author:  "Dr. Deborah M. Langsam" <dmlangsa@unccvm.uncc.edu> at 
     INTERNET Date:    7/31/96 11:56 AM


     Hi  distant cousin Moishe:

     I'm not sure about Michael's current address.  But his parents are Sam 
     and Anita Cohen (as you probably know from the Langsam-Spira book).
     Their address is as follows:

     24 Littlebrook Road North
     Princeton, NJ   08540

     They're terrific people and I'm sure that they can help. 

     You might also try the internet for Michael:  he's on staff at 
     University of Calif. -- Santa Cruz (I believe that he's in the 
     Mathematics Department).

     As far as Langsam news goes:

     I'm not sure that my brother's (Jay Langsam) 3rd child is part of the 
     book. His name is Peter and he is approaching Bar Mitzvah age..

     I'm also not sure that my marriage is listed: 

     I married Joal Fischer (although, as you know, I keep my Langsam name) 
     -- and as you can probably tell from my email, am on the faculty at
     the University of North Carolina at Charlotte. 

     How about you -- where do you live and how have you become interested 
     in the genealogy?

     Good luck in your search for Michael. 

     Debbie

     Deborah M. Langsam
     Department of Biology
     UNC Charlotte
     Charlotte, NC 28223

     email:  dmlangsa@email.uncc.edu 

     Phone:  704-547-4054
     fax:  704-547-3128



Deborah M. Langsam
Department of Biology
UNC Charlotte
Charlotte, NC 28223
     
email:  dmlangsa@email.uncc.edu
     
Phone:  704-547-4054
fax:  704-547-3128





I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/23/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/roots/rootsa-1.htm
##-----------------TITLE------------------------##
The Miller Family; Roots Chart A1 - 3; Adam thru Jeconiah
##------------------TEXT------------------------##
The Miller Family; Roots





MILLER  FAMILY  TREE  -  CHART "A"Chart A1Chart A2Chart A3ADAM+EVENAHORREHOBAM3760-2830 bce| 1911-1763 bce| |SETHTERAHABIJAH3630-2718 bce| 1882-1677 bce| |ENOSHABRAHAM+SARAHASA3525-2620 bce| 1812-1637 bce| |KENANISAAC+RIVKAJEHOSAPHAT3435-2525 bce| 1712-1532 bce| |MEHALALELJACOB+LEAHJORAM3365-2470 bce| 1652-1505 bce| |JAREDJUDAHAHAZIAH3300-2338 bce| c. 1564 bce| |ENOCHPEREZJOASH3138-2773 bce| ||METHUSELAHHEZRONAMAZIAH3073-2104 bce| ||LEMACHRAMAZARIAH2886-2109 bce| ||NOAH+NAAMAHAMINADABJOTHAM2704-1754 bce| ||SHEMNAHSHONAHAZ2204-1702 bce| ||ARPACHSADSALMONHEZEKIAH2102-1664 bce| ||SHELAHBOAZMANASSEH2067-1634 bce| ||EBEROBEDAMON2037-1573 bce| ||PELEGJESSEJOSIAH2003-1764 bce| ||REUDAVID+BATSHEBAJEHOIAKIM1973-1734 bce| 1043-973 bce| |SERUGSOLOMONJECONIAH1941-1711 bce| ||Continue to Chart A2Continue to Chart A3Continue to Chart A4






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/2/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/charna.htm
##-----------------TITLE------------------------##
The Charna Rosenbach Family
##------------------TEXT------------------------##
The Charna Rosenbach Family





From:  rama@palmpictures.com
Subject:  Langsam
PostedDate:  03/23/99 12:25:32 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  03/23/99 12:31:22 PM

Charna Langsam was my great-great grandmother.  She married my great-great
grandfather, Simon Rosenbach.  They both died in Przmysl, Poland.  Charna
died in 1939.  Unfortunately, that is the extent  of my knowledge of 
her.  I
look forward to hearing how we are related and any more information you 
have
about her or her siblings.

Thanks,

Rama Dunayevich

Rama Dunayevich
Palm Pictures/Manga Entertainment, Inc.
rama@palmpictures.com
http://www.palmpictures.com

__________________________________________________


From: moishe@langsam.com
X-Lotus-Fromdomain: PRUDENTIAL
To: qcjack@telecomm.tadiran.co.il, rama@mail.well.com
Date: Sun, 21 Mar 1999 09:58:08 -0500
Subject: Langsam

Hi,
Yedidya Langsam passed on your email's to me. I would like to try and
follow up, or at the very least get your permission to post your email 
to
my website.It is at
http://www.ics.uci.edu/~dan/genealogy/Miller/hometree.htm
The Langsam portion is at
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/langsam.htm
Would you be able to tell me the highest generation you know, where/when
born, where died, known children, and grandchildren?

Thank you in advance for any effort you can make on this,
-Moishe Miller
moishe@langsam.com

______________________________________________________
rama@palmpictures.com
Thursday February 17, 2000 12:43 PM
To:   Moishe Miller/PSG/Prudential
cc:
Subject:  Charna (nee Langsam) Rosenbach



>Moishe -
>
>I do not have much more information, but do know that Charna and Simon had
>at least one daughter, Pearl who was born in Krakowitz, Austria and
married
>Herish Messner.  She died in NY in May of 1963 at the age of 84.  She was
>Hasssidic.  Also, Charna was not born in 1939, that was the year she died,
>I do not know how old she was.  Simon died in 1914.  They both died in
Przmysl.
>
>Thanks,
>Rama
>
>
>----------
>
> >>Date: Fri, 28 Jan 2000 12:10:00 -0500
> >>From: moishe@langsam.com
> >>Subject: Charna (nee Langsam) Rosenbach
> >>To: rama@palmpictures.com
> >>X-Lotus-Fromdomain: PRUDENTIAL
> >>
> >>Hi,
> >>Long time no speak. I have not learned anything new yet. Perhaps you
can
> >>supply a list of Charna and Simon's children (with any married names
for
> >>daughters)? Also, about how old was Charna in 1939 (ie: when was she
born)?
> >>-Moishe Miller
> >>moishe@langsam.com
> >>www.langsam.com
> >>
____________________________________________________________
In a conversation of 20 Sept 2001, Rama related:
Rama Dunayevich
507 La Verne Ave
Mill Valley, CA 94941-3400
(415)383-3556 

New Email address: rama@finc.org


Czarna Langsam and Simon Rosenbach had a daughter Pearl (Pepy), born in Krakowitz in 1880.
Pearl married Herrish Messner (POW in WW I) and had three kids in Przemysl:
* Osias - a watchmaker, (1903 - 1981); had 1s & 1d; came to USA in 1920
* Nathan (Nisen)- born 1908; deceased, came to USA in 1923
* Edna (Rifka) - born 1910, came to USA in 1923. Living in Monsey today ( I will try to call), 
Her oldest son is Elisha, also in Monsey

From the ship manifests I viewed, there was another child to Czarna and Simon:
Nissen, born 1886. He lived in NYC on 33 Willet St and was married. He was naturalized in 
Supreme Court of NYC on Jan 15? Jan 28? May 14?, 1915 in NY. He travelled on Oct 28, 1921, 
Feb 25, 1922, May 19, 1922, Nov 17, 1922, Mar 31, 1923, Aug 24, 1923, June 24, 1924


Frome, Edna 
59 Robert Pitt Dr Apt A,
Monsey, NY 10952-3116 
(845)425-6270
      
Frome, Elias 
5 Maple Ter,
Monsey, NY 10952-2733 
(845)352-3128
(845)352-1344
 
____________________________________________________________
From: "moishe@langsam.com" 
Date: Sun, 23 Sep 2001 08:06:06 -0400
To: Rama Dunayevich 
Subject: Re: More on Przemsyl


Thanks, but what of your own lineage. Is Nathan your grandfather? Does he 
have surviving children? which of his children is your parent?
-Moishe


____________________________________________________________
Date: Mon, 24 Sep 2001 16:22:21 -0700 
From: Rama Dunayevich  
Subject: Re: More on Przemsyl 
To: "moishe@langsam.com"  
User-Agent: Microsoft-Outlook-Express-Macintosh-Edition/5.02.2022 

Sorry, I thought I had already given you that information.

Nathan is my grandfather.  He had two daughters, my aunt Michele Kaufman of 
Las Vegas and my mother Hattie of New York.  I have already pumped them for 
information and they do not know anymore than I do, in fact, unfortunately, 
less.

Thanks,
Rama









I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 6/24/04
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/maxlngsm.htm
##-----------------TITLE------------------------##
The Max, son of Jacob Langsam Langsam Family
##------------------TEXT------------------------##
The Max, son of Jacob Langsam Langsam Family





From: techspec@ea.net at INTERNET
TO: Moishe Miller
Subject: Langsam Family
Priority: Normal 
Date: 10/24/98 3:17 PM 


Hello.  My name is Jessica Langsam Chisholm and I am doing some research on
my family tree.  I came across your website during my search and was hoping
you could give me some additional information.  Do you have anything on the
following names?
    Max Langsam (my grandfather)
    Jacob Langsam (my great grandfather)
    Jacob's first wife
    Jacob's parents
I know that Max and Jacob lived in New York during the 1900's.  Max (my
grandfather) died in 1987.
If you have any information, I'd appreciate hearing from you.  I do not have
a email account, but you can email a friend of mine at:  techspec@ea.net 
and she will forward the information to me.
Thanks so much!
Jessica Langsam Chisholm
Baltimore, Maryland
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Judy Campf   techspec@ea.net    jcampf@bcps.org
     Enrichment/Technology Specialist
     The Chatsworth School       Baltimore County, MD             
     http://www.ea.net/chatsworth
     Technology/Differentiation Instructor  (MAT Program)
     Goucher College     Towson, MD
     http://rwd.goucher.edu/wcb/schools/2/5/jcampf/jcampf.html

From: techspec@ea.net at INTERNET
TO: Moishe Miller
Subject: From Judy Campf
Priority: Normal 
Date: 10/26/98 11:29 AM 


Moishe-
Jessica Chisholm does not have an email account, nor does she have a
computer.  She is a friend of mine, and her husband teaches at the same
school as me.   Therefore, I helped her with her online research and allowed
her to use my email account for communicating with you.  I can relay any
information you get to her, and I will send her information back to you.
Thanks for your help!
Judy
---------------
Judy Campf   techspec@ea.net        jcampf@bcps.org
     Enrichment/Technology Specialist
     The Chatsworth School       Baltimore County, MD             
     http://www.ea.net/chatsworth

     Technology/Differentiation Instructor  (MAT Program)
     Goucher College     Towson, MD
     http://rwd.goucher.edu/wcb/schools/2/5/jcampf/jcampf.html

----------
>From: Moishe_Miller@ccmail.prusec.com
>To: techspec@ea.net
>Subject: Re: Langsam Family
>Date: Mon, Oct 26, 1998, 10:44 AM
>
____________________________________________________________
From:  ichisholm@bcps.org
Subject:  Re: Any news from Jessica Langsam Chisholm ?
PostedDate:  05/03/99 12:18:20 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential


Dear Mr. Miller,

    My wife Jessica Chisholm's current mailing address is:
    7355 Kindler Rd.
    Columbia, MD 21046

I'll forward your e-mail questions to her today.

Sincerely,
Ian Chisholm

----------
>From: moishe_miller@prusec.com
>To: ichisholm@bcps.org
>Subject: Re: Any news from Jessica Langsam Chisholm ?
>Date: Sun, Apr 11, 1999, 4:54 PM
>

> Hi,
> Can you pass this along to your wife and provide some feedback?
> Thanks!
> -Moishe
> moishe_miller@prusec.com
> ---------------------- Forwarded by Moishe Miller/PSG/Prudential on
> 04/11/99 11:57 AM ---------------------------
>
> techspec@ea.net
> Sunday April 11, 1999 11:00 AM
> To:   Moishe Miller/PSG/Prudential
> cc:
> Subject:  Re: Any news from Jessica Langsam Chisholm ?
>
>
>
>
> Jessica does not have her own email account, but her husband does.  His
> account is:  ichisholm@bcps.org  I've been forwarding the emails you send
> to
> her husband's account.  I don't know if she's gotten them....  sorry.....
> Judy
> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> Judy Campf   techspec@ea.net    jcampf@bcps.org
>      Enrichment/Technology Specialist
>      The Chatsworth School       Baltimore County, MD
>      http://www.ea.net/chatsworth
>
>      Technology/Differentiation Instructor  (MAT Program)
>      Goucher College     Towson, MD
>      http://rwd.goucher.edu/wcb/schools/2/5/jcampf/jcampf.html
>
> Instant Messenger:  MacJudy
> ICQ:  5088178
> http://members.home.com/campf
>
> ----------
>>From: moishe_miller@prusec.com
>>To: techspec@ea.net
>>Subject: Any news from Jessica Langsam Chisholm ?
>>Date: Sat, Apr 10, 1999, 9:57 PM
>>
>
>> Hi,
>> Just wanted to touch base regarding your friend/my cousin. Can you ask
> her
>> if she uncovered any additional info, like Max's siblings or where in
>> Europe they came from? Jacob's death record or cemetery?
>> Thanks for being the conduit!
>> -Moishe
>> moishe_miller@prusec.com
>>
>> PS: Can I get her mailing address?
>>





I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/23/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/feurope.htm
##-----------------TITLE------------------------##
General Map of Europe
##------------------TEXT------------------------##
General Map of Europe
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/fslovak.htm
##-----------------TITLE------------------------##
Detailed Map of Slovakia
##------------------TEXT------------------------##
Detailed Map of Slovakia
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/roots/rootsa-2.htm
##-----------------TITLE------------------------##
The Miller Family; Roots Chart A4 - 6; Shealtiel thru R. Yehuda Gaon
##------------------TEXT------------------------##
The Miller Family; Roots





MILLER  FAMILY  TREE  -  CHART "A"Chart A4Chart A5Chart A6SHEALTIELANANR.  NECHEMIA|||PEDAYAH?R.  AVDIMI|||ZERUBAVELAVUHAR.  PINCHUS|||MESHULOMRABAR.  CHATZUV|||CHANANIAR.  HUNA?|||BRACHYANOSANR.  DIMI|||YESADIANECHEMIAMAR RAV MARI GOAN|||YESHAYAUKVON?|||UVDIAABAR.  DODAI  GAON|||SHMAYAMAR  ZUTRA  IMAR  RABA  GAON|||SCHANIAR.  HUNA?|||CHIZKIYAHMAR  ZUTRA  II?|||NOSAN  UKVONMAR  ZUTRA  III?|||R.  HUNAR. GURIAMAR  ABA  GAON|||NACHUMMAR ZUTRA?|||YOCHANANR.  YAAKOVSCHMUEL  REISH  KALAH|||SHAFATR.  MIGASR.  YEHUDA  GAON||    - 916 ce  | Continue to Chart A5Continue to Chart A6To be Continued...






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/2/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/feasteur.htm
##-----------------TITLE------------------------##
General Map of Eastern Europe
##------------------TEXT------------------------##
General Map of Eastern Europe
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/akivlang.htm
##-----------------TITLE------------------------##
The Akiva Langsam Family
##------------------TEXT------------------------##
The Akiva Langsam Family




Author:  David Langsam <DingoNet@compuserve.com> at INTERNET
Date:    9/4/97  10:21 PM
Priority: Normal
TO: Moishe Miller at CCSP27B1
Subject: Re: Langsam Family Tree
------------------------------- Message Contents -------------------------------
Dear Moishe,
     
Thanks for you (nicht langsam) reply.
     
The highest level that I can find of my branch of Langsams is Akiva Langsam 
of Electoralna 15, Warsaw - and later a nearby street, Zimna. He must have 
been born no later than around 1850 and probably earlier.
     
 He had at least three sons and three daughters David Arieh (1871), Meir,
Shlomo, Gitl, Beila and Sara. Sara married a Mr NADEL. Shlomo had a son 
Moshe who was in Paris and was the editor of the Yiddish newspaper, "Parise 
Haint" (Paris Today) before the war. Moshe's son Wladek lives in Paris and 
has at least two sons.
     
David Arieh (1871-1942) married Shoshana Zylbertrest (1873-1942) and seven 
children Benzion 1895-1976 (Melbourne) married Pola and had one son Isaac; 
Moshe (1900-1919); Anka (1903-1942) who married Benzion KOHN and had a son 
Pinchas; Simon -or Ziskind Alexander - (1906-1959) married Esther WOLF in 
Melbourne and had two children Alan and Sue (KIMMEL); Sara (1907-1912); 
Lodzia - Leonora leah - (1908-1942) married Mordechai Mietek Zyskind and 
had a son Marek.
     
Shoshana Zilbertrest was the sister of Ralph Silver (New York), father of 
Esther HOVEY (UCLA) and Meir Silver (New Jersey). Shoshana had a brother 
Hersch Zylbertrest whose son Sam (in Paris) has given me a very detailed 
family tree of his side of the family. "Extensive" is an understatement.
     
Sam married Tamara and had a daughter (also Tamara) with whom I have stayed 
in Paris and a son Harvey.
     
The youngest child was my father Akiwa Meir (Mark) born in 1915 and 
thankfully still going strong. Mark married Raya Bak daughter of Shlomo and 
Ghenia (Shaina Leah  GOLDES) born in Odessa 7.11.1917. Shlomo had a very 
colorful history jumping from the Czar's white army to the Red Army in 1917 
becoming a district governor before going to Warsaw in 1921.
     
The son of Isaac Leib Bak, he lived at Gesia 7 in Warsaw but with his wife 
Ghenia had run factories and businesses in a number of places in Poland. 
Shlomo
had two brothers and two sisters Chiel, Henoch, Faiga (m FRIDMAN) and Hinda 
(m SCARLAT). Shlomo escaped to Argentina before the war, my mother Raya 
came to Australia with her brother in law Benzion his wife Pola and little 
son Isaac  and was reunited with her husband of one year, but her sister 
Ada and mother Ghenia were left behind and murdered by the nazis.
     
Shlomo's brother Chiel had three children Fela (m GRANATMAN, Israel) and 
have two daughters; and Jacob and Nathan. Henoch's son Wladek (senior 
officer in Polish army until 1968) married Ola and had two children Andrzej 
(New York) and Halinka (Melbourne).
     
THE PRESENT GENERATION:
     
In Melbourne, the three surviving sons of David Arieh - Ben Simon and Mark 
- created a new world with a total of (1+2+3 =6) children; 8 in the next 
generation (I am the last of the 6 to produce, so more can be expected in 
the very immediate future)  and, so far, four in the next generation.
     
Ben & Pola
Isaac married Rita: but no children
     
Simon & Esther (Tusia)
Alan married Barbara: two children in their 20s Simon and Julie 
Sue  married Herb Kimmel: Zachary and Lara
     
Mark & Raya
Ann married george Fink (Vienna, Melbourne Oxford Edinburgh): Daughter 
Naomi married Arik Agmon (Israel) daughter Leanne. Son Jerome married Leor 
SATINOFF (Kibbutz Urim, Negev) sons Josh and Sharon, daughter Yasmin Raya.
     
Victor married Janet Thomas daughter Vanessa and son Ben
     
David married Sally Nicolson no children divorced. Will marry Asheley Jones 
on New Year's Eve 1997/1998! Planning on many little Langsams
(wish me mazel tov!)
     
best wishes hope you can use any or all of this information.
     
David Arieh ben Akiva Meir
----------------------------------------------------------

Author:  David Langsam <DingoNet@compuserve.com> at INTERNET
Date:    1/18/98  7:02 AM
Priority: Normal
CC: Moishe Miller at CCSP27B1
TO: helen garrett <h.garrett@city.ac.uk> at INTERNET
CC: "Kate Challis" <katechallis@classic.msn.com> at INTERNET
CC: Anne Garrow <garrow@topend.com.au> at INTERNET
CC: stuart garrow <stuart.garrow@health.wa.gov.au> at INTERNET
CC: fiona gudge <fiona.gudge@virgin.net> at INTERNET
CC: Johanna Johannesson <johannaj@uclink4.berkeley.edu> at INTERNET
CC: roger jowell <r.jowell@scpr.ac.uk> at INTERNET
CC: Agnieszka Kolakowska <AGN@iris.obspm.fr> at INTERNET
CC: Yedidyah Langsam <langsam@brooklyn.cuny.edu> at INTERNET
CC: Marc Langsam <mlangsam@surfer.xti.com> at INTERNET
CC: Danka Lapkiewicz <danka@longman.com.pl> at INTERNET
CC: julia macmillan <remote-printer.julia_macmillan@5.8.2.4.0.5.6.1.8.1.4.4.tpc.int> at INTERNET
CC: Claire McKelvey <bbarnowl@compuserve.com> at INTERNET
CC: Sani Meo <100320.523@compuserve.com> at INTERNET
CC: john montano <john.montano@mvs.udel.edu> at INTERNET
CC: "Graeme Mulvey" <mulvey@topend.com.au> at INTERNET
CC: "Kate O'Rourke" <orourkek@titmuss-dechert.com> at INTERNET
CC: rod quinn <quinnr@westminster.ac.uk> at INTERNET
CC: David Miles Sheil <cottage@hkstar.com> at INTERNET
CC: raasti stolze <remote-printer.raasti_stolze@8.1.0.5.6.7.1.2.2.9.4.tpc.int> at INTERNET
CC: Ivars Sulcs <Ivars_Sulcs@dse.vic.gov.au> at INTERNET
CC: Kate Challis+Gary Willis <katechallis@msn.com> at INTERNET
CC: Saul Zadka <zadkas@ashur.cc.biu.ac.il> at INTERNET
CC: Susan Zucker <Zuckie@AOL.COM> at INTERNET
Subject: Our Big Day Out
------------------------------- Message Contents -------------------------------
 Dear All,
     
this is a brief account of the wedding for those who couldn't be there on 
the day.
     
The bad news is that we'll have some vid from the show up on the net in the 
next few days. Stay tuned.
     
     
     
The wedding was fabulous, the day was fabulous (30oC), the food was 
fabulous: 
entre - kangaroo, emu and wallaby party pies, cheese & spinach pastries, 
sushi.
mains - kangaroo fillets, chicken drumsticks in thai sauce, grilled baby 
octopus, 
salads, spuds and pumpkin
dessert - thickest ever richest ever chocolate wedding cake covered in wild 
berries.
     
It was great. The "bad boys back table" was still raging when Asheley and I 
went to bed at 4am.
     
And then we went to Brunswick Heads near Byron Bay in the north of New 
South 
Wales for an eight day honeymoon. Beach, sun, river, fish, no phones, no 
email. 
Yahoo!
     
Below is a little description of events by Steve Brook from an email he 
sent Rod and Helen. 
     
Dear Rod & Helen . . .
     
Meni and I were at the wedding on New Year's Eve of David L. and Asheley 
J. Since David is no ordinary mortal, and neither, presumably, is his 
partner, the event had to be quite extraordinary. And so it was. While a 
professional Marriage Celebrant was there, for he had to be in order to 
sign the papers, everything else was by Fellini.
     
The ceremony was done by David and Asheley themselves, with no intervention 
from any kind of state or ecclesiastical authority, though there were nods 
in the direction of Jewish, Christian and animist beliefs. The couple stood 
under a Jewish-style chupa, a wedding canopy, held up on sticks by four of 
the guests. What distinguished this chupa from most others I have seen is 
that it was made from a keffiyeh, a Palestinian head scarf.
     
The symbolism was overpowering.
     
David began his contribution by thanking the Koori people for the use of 
their land. He said a great deal else besides, but I did not take notes. 
One does not do that at weddings.
     
People sang songs, and poetry was recited, including Cavafy's "Ithaka". A 
great benedictory poem, and I wish I had thought of that for my own two 
weddings . . .
     
[Meni tells me that this poem was read at Jackie Kennedy's funeral by her 
bereaved Jewish lover. So it gets around.]
     
Mark, David's father, struggled with the fading light to read a biblical 
story. Someone helped with a lighted mosquito candle.
     
At a certain point David did the traditional stamping on the wineglass, to 
mingled shouts of "Good luck!" and "Mazeltov!"
     
The speeches by friends and relations mentioned gay rights, shagging and 
hope for the future. And messages came from all over, including from the 
Palestinian Authority's representative in Australia, from John Pilger and 
from others in all continents.
     
The freshly-married couple did the Wedding Waltz from "The Jolson Story". 
Some of David's relations looked puzzled.
     
It was an evening that could never be repeated. Meni said to me later that 
it was the most political wedding she had ever been to. I said that every 
wedding makes a political statement of some kind, even if the participants 
are unaware of it. But that was just me, being profound again. We both 
enjoyed ourselves immensely.
     
Steve
     
Melbourne
January 4 1998

-----------------------------------------------------------
From: DingoNet@compuserve.com at INTERNET
TO: Moishe Miller
Subject: It's a DOCTOR
Date: 11/8/98 10:38 AM 


Asheley Jones and David Langsam (DnA)

are ecstatic to announce the birth of their son

DR ALEXANDER GEORGE LANGSAM

(Dr Alecsander Shlomo ben David Arieh) 

on November 9, 1998 (0055 Eastern Summer Time, 1355GMT8/11/98)

at the Royal Women's Hospital 
Melbourne, Australia

Alex is about 48-50 cms long and weighs about 3.2kg 7.5lb

He sends his best regards to all.

Mother Son and father are all very very very happy.

______________________________________________________

From:  DingoNet@compuserve.com
Subject:  Chanuka & etc.
PostedDate:  12/28/98 05:39:57 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  12/28/98 05:40:53 PM

Dear Moishe,

good to hear from you again. No new Langsams other than the seven week old
Alexander George sleeping (momentarily) in the next room. Isn't he enough,
already?

He is really a very wonderful and totally Langsam boy. Golden red hair,
deep dark blue eyes, the Langsam schnoz and lungs and huge feet and hands,
so like the rest of us he can work with his hands and be creative with them
at the same time - an attribute of all my family. we love him to bits and
will make you some more Langsams as soon as we are able to get some sleep
in the same time zone.

Best regards

David Asheley & Alexander
______________________________________________________
From:  DingoNet@compuserve.com
Subject:  Re: Chanuka & etc.
PostedDate:  12/29/98 03:20:15 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  12/29/98 03:21:56 PM

Richard Dawkins gives a definite to that, it's just a matter of how far
back.

When I met Alex Langsam in Manchester it was really unbelievable. Blue eyes
receding witches peak, full ear lobes, BIG lungs, deep booming voice, and
very much like my uncle Simon ... whose original name was Alexander!

But how do you find a connection with the information we have? Can a DNA
test do it - I understand they are horendously expensive. Can my namesake
David Langsam who is the deputy boss of IREX give us a lot of money to
research this intriguing academic problem?

best regards for the new goyisher year,

David 
___________________________________________________
From:  DingoNet@compuserve.com
Subject:  Re: Chanuka & etc.
PostedDate:  12/30/98 01:49:45 AM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  12/30/98 01:50:48 AM

Dear Moishe,

David Langsam is care of
International Research & Exchanges Board (IREX) 1616 H Street, NW
Washington, DC 20006
Telephone: (202) 628-8188
Fax: (202) 628-8189
E-mail: irex@gwuvm.gwu.edu

I think he is vice president or Director of Capital Development or
somesuch.


Alex Langsam is much harder to contact. He owns hotels in Manchester and
Liverpool and has had a number of people claim to be family in order to try
to fleece him. It would not surprise me if his response is sceptical. Last
I heard he had a very bad case of rheumatoid arthritis and that made his
working life very difficult.

you can try faxing Manchester 44.161.2367416 or writing to him at:
 Britannia Hotels
Former Fire Station
London Road
Picadilly
Manchester
U.K.      M1 2PH

best of luck

David
__________________________________________________
From:  DingoNet@compuserve.com
Subject:  Re: Chanuka & etc.
PostedDate:  12/30/98 03:46:03 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  12/30/98 03:58:50 PM

Dear Moishe,

That's the best I've got. I have never been in touch with him, only saw his
name when I searched my own via AltaVista and noted that he was responsible
for handing out large sums of money for research and development of the
former Eastern Bloc (where we all come from!) and didn't try to contact him
- although a few hundred thousand dollars would not go astray. I WANTED to,
but I held back. Decorum.

But they have phone numbers so a quick call from NY to DC could be
productive. I'd be pleased to be kept informed.


Shana Tova shel Gregory.

D.
________________________________________________________________________
---------------------- Forwarded by Moishe Miller/PSG/Prudential on
 04/05/99 05:33 PM ---------------------------

 DingoNet@compuserve.com
 Monday March 29, 1999 05:19 AM
 To:   Moishe Miller/PSG/Prudential
 cc:
 Subject:  Pesach & Langsams


 Ahhh Moishe, you bloody geneologist!

 I knew that if I included you on my email list of good wishes it would
 never be the end of it!!!

 dmlangsa @email.uncc.edu
 is Deborah Langsam a teacher we have had some minimal communication.

 mlangsam @surfer.xti.com
 is Marc an LA graphic artist about my age (45) with his own website. We
 have emailed each other a few times

 langsam @fas.harvard.edu
 is Melissa Rose Langsam who I think is a daughter of Oscar of Rehovot
 Isrtael and  an undergarduate at Harvard who is unfortunately proud of
 being a Republican, which I discovered in her last email to me and having
 said what I think of Republicans may never wrote to me again.

 By the way, I now have a family and geneology page added to my site with 

 link to yours.

 http://ourworld.compuserve.com/homepages/dingonet

 go to the bottom of the page and follow the links.

 bestest regards for Pesach,

 David


 The REAL Langsam are all Communists Socialists Bundists and Labor 
movement
 supporters, apart from my cousin Allan, who is a very nice guy but has
 strayed from the flock.

 
 ++++++++++++++++++++++++++++++++++
 Author: David Langsam  at INTERNET Date: 9/4/97
10:21 PM TO: Moishe Miller at CCSP27B1 Subject: Re: Langsam Family Tree


Dear Moishe,


Thanks for you (nicht langsam) reply.


The highest level that I can find of my branch of Langsams is Akiva Langsam
of Electoralna 15, Warsaw - and later a nearby street, Zimna. He must have
been born no later than around 1850 and probably earlier.


He had at least three sons and three daughters David Arieh (born 1871),
Meir, Shlomo, Gitl, Beila and Sara. Sara married a Mr NADEL. Shlomo had a
son Moshe who was in Paris and was the editor of the Yiddish newspaper,
"Parise Haint" (Paris Today) before the war. Moshe's son Wladek lives in
Paris and has at least two sons.


David Arieh (1871-1942) married Shoshana Zylbertrest (1873-1942) and had
seven children: Benzion b.1895 d.1976 in Melbourne, who married Pola and had
one son Isaac; Moshe (1900-1919); Anka (1903-1942) who married Benzion KOHN
and had a son Pinchas; Alexander who was known as Ziskind and later changed
his name to Simon Lang - (1906-1959) married Esther WOLF (b. 1915 d
28.5.1999) in Melbourne and had two children Allen and Sue (KIMMEL); Sara
(1907-1912); Lodzia - Leonora leah - (1908-1942) married Mordechai Mietek
Zyskind and had a son Marek.


Shoshana Zilbertrest was the sister of Ralph Silver (New York), father of
Esther HOVEY (UCLA) and Meir Silver (New Jersey). Shoshana had a brother
Hersch Zylbertrest whose son Sam (in Paris) has given me a very detailed
family tree of his side of the family. "Extensive" is an understatement.


Sam married Tamara and had a daughter (also Tamara) with whom I have stayed
in Paris and a son Harvey.


The youngest child of David Arieh Langsam and Shoshana Zylbertrest was my
father Akiwa Meir (Mark) born 16.11.1915 and thankfully still going strong.
Mark married Raya Bak daughter of Shlomo Bak (pron: Bonk) and Ghenia (Shaina
Leah GOLDES) born in Odessa 7.11.1917. Shlomo had a very colorful history
jumping from the Czar's white army to the Red Army in 1917 becoming a
district governor before going to Warsaw in 1921.


The son of Isaac Leib Bak, he lived at Gesia 7 in Warsaw but with his wife
Ghenia had run factories and businesses in a number of places in Poland.
Shlomo had two brothers and two sisters Chiel, Henoch, Faiga (m FRIDMAN) and
Hinda (m SCARLAT). Shlomo escaped to Argentina before the war, my mother
Raya came to Australia with her brother-in-law Benzion his wife Pola and
little son Isaac and was reunited with her husband of one year, but her
sister Ada and mother Ghenia were left behind and murdered by the nazis.


Shlomo's brother Chiel had three children: Fela (m GRANATMAN, Israel) and
have two daughters Ofra and Ilana; and Jacob and Nathan. Henoch's son Wladek
(senior officer in Polish army until 1968) married Ola and had two children
Andrzej (New York) married with one son, and Halinka (Melbourne) m. David
Rubin and have a daughter, Annette.


THE PRESENT GENERATION:


In Melbourne, the three surviving sons of David Arieh - Ben, Simon and
Mark - created a new world with a total of (respectively 1+2+3 =6) children;
9 in the next generation (I am the last of the 6 to produce, and one more is
expected in the very immediate future - August 2000) and, so far, six in the
next generation.


Ben & Pola Isaac married Rita: but no children


Simon & Esther (Tusia): Allen married Barbara: two children - Simon and
Julie
Sue married Herb Kimmel: Zachary and Lara. Zachary m Sandra and have a son
Zalen.


Mark & Raya: Ann married George Fink (Vienna, Melbourne, Oxford, Edinburgh,
Tel Aviv): their daughter Naomi married Arik Agmon (Israel) and have a
daughter Leanne and another child due July 2000. Son Jerome married Leor
SATINOFF (Kibbutz Urim, Negev) sons Josh and Sharon, daughter Yasmin Raya
son Carmel.


Victor married Janet Thomas daughter Vanessa and son Ben


David married Sally Nicolson no children divorced. Will marry Asheley Jones
on New Year's Eve 1997/1998! Planning on many little Langsams (wish me mazel
tov!)


(Editor's update: Alexander George was born 9.11.98 and number two son is
due August 2000)


best wishes hope you can use any or all of this information.


David Arieh ben Akiva Meir


Author: David Langsam  at INTERNET Date: 1/18/98
7:02 AM Priority: Normal CC: Moishe Miller at CCSP27B1


Dear All,


This is a brief account of the wedding for those who couldn't be there on
the day.


The bad news is that we'll have some vid from the show up on the net in the
next few days. Stay tuned.


The wedding was fabulous, the day was fabulous (30oC), the food was
fabulous: Entre - kangaroo, emu and wallaby party pies, cheese & spinach
pastries, sushi. Mains - kangaroo fillets, chicken drumsticks in Thai sauce,
grilled baby octopus, salads, spuds and pumpkin. Dessert - thickest ever
richest ever chocolate wedding cake covered in wild berries.


It was great. The "bad boys back table" was still raging when Asheley and I
went to bed at 4am.


And then we went to Brunswick Heads near Byron Bay in the north of New South
Wales for an eight day honeymoon. Beach, sun, river, fish, no phones, no
email. Yahoo!


Below is a little description of events by Steve Brook from an email he sent
Rod and Helen.


Dear Rod & Helen . . .


Meni and I were at the wedding on New Year's Eve of David L. and Asheley J.
Since David is no ordinary mortal, and neither, presumably, is his partner,
the event had to be quite extraordinary. And so it was. While a professional
Marriage Celebrant was there, for he had to be in order to sign the papers,
everything else was by Fellini.


The ceremony was done by David and Asheley themselves, with no intervention
from any kind of state or ecclesiastical authority, though there were nods
in the direction of Jewish, Christian and animist beliefs. The couple stood
under a Jewish-style chupa, a wedding canopy, held up on sticks by four of
the guests. What distinguished this chupa from most others I have seen is
that it was made from a keffiyeh, a Palestinian head scarf.


The symbolism was overpowering.


David began his contribution by thanking the Koori people for the use of
their land. He said a great deal else besides, but I did not take notes. One
does not do that at weddings.


People sang songs, and poetry was recited, including Cavafy's "Ithaka". A
great benedictory poem, and I wish I had thought of that for my own two
weddings . . .


[Meni tells me that this poem was read at Jackie Kennedy's funeral by her
bereaved Jewish lover. So it gets around.]


Mark, David's father, struggled with the fading light to read a biblical
story. Someone helped with a lighted mosquito candle.


At a certain point David did the traditional stamping on the wineglass, to
mingled shouts of "Good luck!" and "Mazeltov!"


The speeches by friends and relations mentioned gay rights, shagging and
hope for the future. And messages came from all over, including from the
Palestinian Authority's representative in Australia, from John Pilger and
from others in all continents.


The freshly-married couple did the Wedding Waltz from "The Jolson Story".
Some of David's relations looked puzzled.


It was an evening that could never be repeated. Meni said to me later that
it was the most political wedding she had ever been to. I said that every
wedding makes a political statement of some kind, even if the participants
are unaware of it. But that was just me, being profound again. We both
enjoyed ourselves immensely.


Steve


Melbourne January 4 1998


From: DingoNet@compuserve.com at INTERNET TO: Moishe Miller Subject: It's a
DOCTOR Date: 11/8/98 10:38 AM


 Asheley Jones and David Langsam (DnA)


are ecstatic to announce the birth of their son


DR ALEXANDER GEORGE LANGSAM


(Dr Alecsander Shlomo ben David Arieh)


on November 9, 1998 (0055 Eastern Summer Time, 1355GMT8/11/98)


at the Royal Women's Hospital Melbourne, Australia


Alex is about 48-50 cms long and weighs about 3.2kg 7.5lb


He sends his best regards to all.


Mother Son and father are all very very very happy.



From: DingoNet@compuserve.com
Subject: Chanuka & etc. PostedDate: 12/28/98 Send To: =Moishe Miller


Dear Moishe,


good to hear from you again. No new Langsams other than the seven week old
Alexander George sleeping (momentarily) in the next room. Isn't he enough,
already?


He is really a very wonderful and totally Langsam boy. Golden red hair, deep
dark blue eyes, the Langsam schnoz and lungs and huge feet and hands, so
like the rest of us he can work with his hands and be creative with them at
the same time - an attribute of all my family. we love him to bits and will
make you some more Langsams as soon as we are able to get some sleep in the
same time zone.


Best regards


David Asheley & Alexander


From: DingoNet@compuserve.com
Subject: Re: Chanuka & etc.
Date: 12/29/98 03:20:15 PM
SendTo: CN=Moishe Miller


Richard Dawkins gives a definite to that, it's just a matter of how far
back.


When I met Alex Langsam in Manchester it was really unbelievable. Blue eyes
receding witches peak, full ear lobes, BIG lungs, deep booming voice, and
very much like my uncle Simon ... whose original name was Alexander!


But how do you find a connection with the information we have? Can a DNA
test do it - I understand they are horendously expensive. Can my namesake
David Langsam who is the deputy boss of IREX give us a lot of money to
research this intriguing academic problem?


best regards for the new goyisher year,


David


From: DingoNet@compuserve.com Date: 12/30/98  SendTo: Moishe Miller


Dear Moishe,


David Langsam is care of International Research & Exchanges Board (IREX)
1616 H Street, NW Washington, DC 20006 Telephone: (202) 628-8188 Fax: (202)
628-8189 E-mail: irex@gwuvm.gwu.edu


I think he is vice president or Director of Capital Development or somesuch.


Alex Langsam is much harder to contact. He owns hotels in Manchester and
Liverpool and has had a number of people claim to be family in order to try
to fleece him. It would not surprise me if his response is sceptical. Last I
heard he had a very bad case of rheumatoid arthritis and that made his
working life very difficult.


you can try faxing Manchester 44.161.2367416 or writing to him at: Britannia
Hotels Former Fire Station London Road Picadilly Manchester U.K. M1 2PH


best of luck


David


From: DingoNet@compuserve.com Subject: Re: Chanuka & etc. PostedDate:
12/30/98 03:46:03 PM SendTo: CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate: 12/30/98 03:58:50 PM


Dear Moishe,


That's the best I've got. I have never been in touch with him, only saw his
name when I searched my own via AltaVista and noted that he was responsible
for handing out large sums of money for research and development of the
former Eastern Bloc (where we all come from!) and didn't try to contact
him - although a few hundred thousand dollars would not go astray. I WANTED
to, but I held back. Decorum.


But they have phone numbers so a quick call from NY to DC could be
productive. I'd be pleased to be kept informed.


 Shana Tova shel Gregory.


D.



DingoNet@compuserve.com Monday March 29, 1999 05:19 AM To: Moishe
Miller/PSG/Prudential cc: Subject: Pesach & Langsams


Ahhh Moishe, you bloody geneologist!


I knew that if I included you on my email list of good wishes it would never
be the end of it!!!


By the way, I now have a family and geneology page added to my site with
link to yours.


http://ourworld.compuserve.com/homepages/dingonet


go to the bottom of the page and follow the links.


bestest regards for Pesach,


David
 ++++++++++++++++++++++++++++++++++++

 Date: Thu, 24 May 2001 01:02:24 -0400
To: DingoNet@compuserve.com
From: "moishe@langsam.com" 
Subject: Birth Record of Akiva Langsam of Warsaw

Hi,
Stumbled across this at www.Jewishgen.org

http://www.jewishgen.org/jri-pl/jriplweb.htm

It list birth of Akiva Langsam, son of Moshe and Sarah, born jun 12, 
1839. It lists his grandparents and two of his sisters as well. 

Any thoughts?

-Moishe
_________________________________________________

Sender: dingonet@compuserve.com 
From: "david langsam"  
To:  
Subject: Re: Birth Record of Akiva Langsam of Warsaw 
Date: Thu, 24 May 2001 18:31:43 +1000 

Dear Moishe,


thanks for the site info.


will check with my father tomorrow.


regards,


David
 





I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 9/22/01
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/jgff-rsc.htm
##-----------------TITLE------------------------##
The JGFF Langsam Family Researchers
##------------------TEXT------------------------##
The JGFF Langsam Family Researchers



Searching for Surname LANGSAM
Number of hits as of 1/17/2000: 18
           
SurnameTownCountryLastUpdatedResearcher   (JGFF Code)LangsamBirczaPolandBefore 1997Suzan Fischer Wynne (#1088)3603 Littledale Rd.Kensington, MD USA20895301 942-6149srwynne@erols.comLangsamBukowskoPolandBefore 1997LangsamKanczugaPolandBefore 1997LangsamLeskoPolandBefore 1997LangsamPrzemyslPolandBefore 1997LangsamSanokPolandBefore 1997LangsamNowy SaczPolandBefore 1997Estelle M. Guzik (#1388)eguzik1@aol.comLangsamLancutPolandBefore 1997Florence Sugarman (#1755)1615 Stradella RdBel Air, CA90077LangsamMielecPolandBefore 1997LangsamNew York, NYUSABefore 1997LangsamSanokPolandBefore 1997Naomi Geschwind (#5461)632 Pine Street, 1FPhiladelphia, PA19106naomi-g@msn.comLangsamLeninaBelarus15 Nov 1997Sanford A. Kaplan (#9128)241 Brookline StreetNewton, MA02459sanfordkap@aol.comLangsamSanokPoland15 Mar 1998Solomon/Alice Rosenberg (#10824)Solalr@juno.comLangsamTyrawa WoloskaPoland15 Mar 1998LangsamAnyPoland22 Mar 1998Eileen Naseby (#11855)2 Whiting StreetArtarmonSydney NSW Australia2064612 9655 1645eileen@filmworld.com.auLangsamKrakowPoland 3 Aug 1998Marcy Wolf (#15010)mwerg@mindspring.comLangsamAnyPoland20 Aug 1998Susan Pearlmutter (#15600)missaque@aol.comLangsamSydneyAustralia 2 Nov 1998Alex Lenko (#17891)10 Clinton St.East BrightonVictoria, Australia318761 3 95931006alenko@netspace.net.au




I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/23/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/fslovak1.htm
##-----------------TITLE------------------------##
Very General Map of Slovakia
##------------------TEXT------------------------##
Very General Map of Slovakia
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/fbrdjvre.htm
##-----------------TITLE------------------------##
Saros County in Northern Slovakia; Bardejov Region
##------------------TEXT------------------------##
Saros County in Northern SlovakiaBardejov Region
49° 17' / 21° 17'
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/yetta.htm
##-----------------TITLE------------------------##
The Yetta Langsam Family
##------------------TEXT------------------------##
The Yetta Langsam Family





From:  GENE_KATZ@prodigy.net AT INTERNET@PSICCMAIL
Subject:  Langsam
PostedDate:  02/25/99 08:47:20 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  02/25/99 11:48:19 PM

I just found some of your correspondence. My father was born in Sanok, 
Poland in
1906. His mother's
maiden name was Yetta Langsam. Are we related?

Gene Katz

__________________________________________________
genekatz@worldnet.att.net
Friday January 28, 2000 09:36 PM
To:   Moishe Miller/PSG/Prudential
cc:
Subject:  Re: Yetta Langsam


Hi,
    My father's name was Harry(Zvi). He was one of eight children.
My grandfather's name was Abraham. I'm sorry but I don't know
my greatgrandparents' names.


Gene

-----Original Message-----
From: moishe@langsam.com <moishe@langsam.com>
To: genekatz@worldnet.att.net <genekatz@worldnet.att.net>
Date: Friday, January 28, 2000 9:24 AM
Subject: Yetta Langsam


:Hi,
:I would still like to find our relationship. Can you provide any more
:detail, like your father's name or Yetta's parent's names, or any of
:Yetta's siblings.
:Yetta Langsam is too slim to go on. There are over 14,000 known
descendents
:to Pesach Langsam (c1748-1820).
:Any input would be appreciated.
:Thanks!
:-Moishe Miller
:moishe@langsam.com
:www.langsam.com






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 2/2/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/morrlang.htm
##-----------------TITLE------------------------##
The Morris Langsam Family
##------------------TEXT------------------------##
The Morris Langsam Family






Author:  mrcigar@supernet.net at INTERNET
Date:    5/30/96  11:55 PM
Priority: Normal
TO: Moishe Miller at CC_NYP5W1
Subject: Re: Genealogy
------------------------------- Message Contents -------------------------------
Hi Moishe,
     
I had a few copies of the book a few years ago, and would love to get my 
hands on some more.  We are indeed cousins...
     
Please let me know how I can obtain the book again - I don't know if I am in 
any updates or not yet, but my side of the family was most recently from the 
Bronx - an uncle, Ralph Langsam, first mentioned it to me.  I remember 
tracing my roots to RASHI of biblical times...
     
talk to you soon,
Robert
     
At 04:17 PM 5/30/96 -0400, you wrote: 
>
>     Hi,
>     
>     I am an amateur genealogist, quite possibly a distant cousin of yours. 
>     Are you or your family listed in the LAngsam/Spira book that was 
>     published about ten years ago? Are you interested in exploring a 
>     possible connection between our families? I am a descendent of Pejsach 
>     Langsam, c.1745 - c.1810. He has approximately 13,000 known 
>     descendents.
>     
>     Hope to hear from you soon.
>     
>     Moishe Miller
>     Moishe_Miller@ccMail.PruSec.com 
>
>
- Mr. Cigar
  Chief Smoking Officer:
     
HEAVEN
"If I cannot smoke cigars in Heaven, I shall not go..."
     
THE DOUBLE CORONA
email name/address to be added to the free subscription list
     


Author:  mrcigar@supernet.net at INTERNET
Date:    7/4/96  9:03 AM
Priority: Normal
TO: Moishe Miller at CC_NYP5W1
Subject: Re: Re[4]: Genealogy
------------------------------- Message Contents -------------------------------
my grandfather was Morris Langsam - he lived in the bronx. he passed when my 
father, robert also, was 19, some 40ish years ago.
     
     
At 02:12 PM 7/3/96 -0400, you wrote: 
>     
>
>Hi,
>
>Thanx. Can you tell me your lineage so that I can find you in the book? 
>
>Moishe
>______________________________ Reply Separator 
_________________________________
>Subject: Re: Re[2]: Genealogy
>Author:  mrcigar@supernet.net at INTERNET 
>Date:    7/3/96 12:56 PM
>
>
>photo is at http://fujipub.com/heaven/ 
>     
>let me think about the hots situation, maybe I can help you out... 
>     
>talk to you soon...
>     
>     
>     
>At 12:25 PM 7/2/96 -0400, you wrote: 
>>     Hi, 
>>     
>>     Sorry for the long delay in my response, but I've been on Jury duty. 
>>     Anyhow, I will forward your request to the publisher, Suzan Wynne. 
>>     
>>     I would like to send her your photo, which I noticed on the net (under 
>>     MR. Cigar), but now can not find. What URL was your photo in? Also, do 
>>     you know what branch you are from. Who was your 
>>     father/grandfather/g-grandfather/etc. 
>>     
>>     Lastly, I am creating a website for our family (Langsam/Miller/Spira). 
>>     My g-g-g-g-g-g-grandfather was Avrohm Aba Langsam, who changed his 
>>     name to Miller. Do you know of anyone that would host me, gratis. The 
>>     site takes up under 1 meg, but has subdirectories.
>>     
>>     Take care!
>>     Moishe
>>     Moishe_Miller@ccMail.PruSec.com 
>>     
>>
>>
>>______________________________ Reply Separator 
>_________________________________
>>Subject: Re: Genealogy
>>Author:  mrcigar@supernet.net at INTERNET 
>>Date:    5/30/96 11:55 PM
>>
>>
>>Hi Moishe,
>>     
>>I had a few copies of the book a few years ago, and would love to get my 
>>hands on some more.  We are indeed cousins...
>>     
>>Please let me know how I can obtain the book again - I don't know if I am in 
>>any updates or not yet, but my side of the family was most recently from the 
>>Bronx - an uncle, Ralph Langsam, first mentioned it to me.  I remember 
>>tracing my roots to RASHI of biblical times...
>>     
>>talk to you soon,
>>Robert
>>     
>>At 04:17 PM 5/30/96 -0400, you wrote: 
>>>
>>>     Hi,
>>>     
>>>     I am an amateur genealogist, quite possibly a distant cousin of yours. 
>>>     Are you or your family listed in the LAngsam/Spira book that was 
>>>     published about ten years ago? Are you interested in exploring a 
>>>     possible connection between our families? I am a descendent of Pejsach 
>>>     Langsam, c.1745 - c.1810. He has approximately 13,000 known 
>>>     descendents.
>>>     
>>>     Hope to hear from you soon.
>>>     
>>>     Moishe Miller
>>>     Moishe_Miller@ccMail.PruSec.com 
>>>
>>>
>>- Mr. Cigar
>>  Chief Smoking Officer:
>>     
>>HEAVEN
>>"If I cannot smoke cigars in Heaven, I shall not go..." 
>>     
>>THE DOUBLE CORONA
>>email name/address to be added to the free subscription list 
>>     
>>
>>
>- Mr. Cigar
>  Chief Smoking Officer:
>     
>HEAVEN
>"If I cannot smoke cigars in Heaven, I shall not go..." 
>     
>THE DOUBLE CORONA
>email name/address to be added to the free subscription list 
>     
>
>
- Mr. Cigar
  Chief Smoking Officer:
     
HEAVEN
"If I cannot smoke cigars in Heaven, I shall not go..."
     
THE DOUBLE CORONA
email name/address to be added to the free subscription list
     




Author:  mrcigar@supernet.net at INTERNET
Date:    7/23/96  5:54 PM
Priority: Normal
TO: Moishe Miller at CC_NYP5W1
Subject: Re: Your Langsam Genealogy
------------------------------- Message Contents -------------------------------
You can contact me at my business...
     
HEAVEN
2950 Tamiami Trail North
Naples, Florida  33940
     
     
My grandfather was Morris Langsam - I'm afraid I don't know much more than 
that.  Please keep in touch.
     
Thanks,
Robert
     
     
     
At 04:16 PM 7/23/96 -0400, you wrote: 
>     Hi,
>     
>     I just heard from Suzan Wynne, the author of the book. She wrote to 
>     tell me that several years ago you bought 5 books, with a New York 
>     address. If you give me a new address, I can forward the request, or 
>     you can contact her directly:
>     
>     Suzan Wynne
>     3128 Brooklawn Terrace
>     Chevy Chase MD 20815
>      
>     
>     Would you know the name of your great-grandfather? I cant place you 
>     definitively on the tree.
>     
>     Take Care,
>     Moishe
>
>
- Mr. Cigar
  Chief Smoking Officer:
     
HEAVEN
"If I cannot smoke cigars in Heaven, I shall not go..."
     
THE DOUBLE CORONA
email name/address to be added to the free subscription list
     




Author:  mrcigar@supernet.net at INTERNET
Date:    7/24/96  10:51 AM
Priority: Normal
TO: Moishe Miller at CC_NYP5W1
Subject: Re: Re[2]: Your Langsam Genealogy
------------------------------- Message Contents -------------------------------
my grandmother's name is Bertha (Betty), my father had no siblings.  I've 
got an aunt Ann that lives in Ct.  She was my grandfather's sister.  My 
cousin's name is Amy.
     
Somehow I know I am related to Ralph Langsam, biggest landlord of the Bronx, 
now residing in Palm Beach Gardens, FL.
     
Let me know my friend...
     
At 10:34 AM 7/24/96 -0400, you wrote: 
>     Hi,
>     
>     I did some research in the book, there was a Frank Langsam, that had 
>     several children, 1 of whom was Morris. Frank started a candy & 
>     TOBACCO company in NY around 1917. Is this your branch? 
>     
>     Can you tell me your grandmothers name? Siblings? your father's 
>     siblings?
>     
>     Any cousin's that you know of? 
>     
>     -Moishe
>
>
- Mr. Cigar
  Chief Smoking Officer:
     
HEAVEN
"If I cannot smoke cigars in Heaven, I shall not go..."
     
THE DOUBLE CORONA
email name/address to be added to the free subscription list
_____________________________________________________________________  
Date: Thu, 19 Jul 2001 21:38:53 -0400
From: Suzan Wynne 
To: "moishe@langsam.com" 
Subject: Re: H1 - H12 - H34 and H6-H15

Moishe,

I am sending you material from two folders:  one with immigration records that
Estelle and I collected over a number of years and the other with death
records.

I have Morris' death record.  It does not have his place of birth outside of
Austria.  In fact, I have rarely seen a NY death record with a town of birth.
Such information is generally confined to immigration records (both ship and
naturlization) and sometimes in the the 1920 census.  Naturalizations after
1906 were supposed to have the town of birth.

Remember the cigar guy cousin?  Never got anything from him worth all
the words, but I think  that his family was the Pesach and Bessie nee
Schector.  The Raphael was, I believe, his grandfather.

anyway, look for the package I'm sending.  It's the tip of the iceberg.  If
you could come here for a week, we could wrap this puppy up!  Just kidding.

Suzan
_____________________________________________________________________  






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 6/24/04
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/sabinov.htm
##-----------------TITLE------------------------##
Sabinov LDS Records
##------------------TEXT------------------------##
LDS FHC Sabinov Resources
	
	FilmNumbers
	1793676
	1793677
	1793678
	21892451869 Census
	21506251869 Census
	Other Films
	
	
   Films 1793676 - 1793678; 1844-1941.
   Jewish records of births, marriages and deaths from community registers for
   Sabinov, Slovakia; formerly Kis-Szeben, Sâaros, Hungary.  Text in
   Hungarian, and Slovak.
   The records are divided among several
   (about thirty in all) sections or books on the microfilm.
   These are referred to as items. The breakdown below is
   still incomplete. These records can be found at the archives in Presov, v. 1054-1068.

   Birth         1844, 1850-1864 --------------------- 1793676
   Marriage      1859-1875                           items 3-5
   Death         1858-1875
   Birth         1865-1885
   Marriage      1859-1868


   Marriage      1869-1883 --------------------------- 1793677
   Death         1858-1884                           items 1-7
   Birth         1873-1885
   Marriage      1873-1885
   Death         1874-1885
   Birth         1876-1884
   Marriage      1876-1884
   Birth         1885
   Marriage      1885
   Death         1885
   Birth         1886-1911, 1917, 1921, 1927
   Birth         1886-1896, 1938-1941
   Marriage      1886-1894, 1920-1929 ---------------- 1793677
   Marriage      1886-1895                          items 8-12
   Death         1886-1903
   Death         1886-1895
   Birth         1864-1873


   Birth         1874-1875 --------------------------- 1793678
   Narodeni      1860-1875
   Birth, Marriage, Death  1876
   Birth         1878-1895
   Marriage      1875-1876, 1878-1879
   Marriage      1881-1888, 1890
   Marriage      1892-1895
   Death         1874-1876-, 1878-1895




Film 2189245 - Item #3; 1869 Census - Saros County, Slovakia.
District: Sekcov (Szekcso)

Area: Gaboltov (Gabolto)
Towns: Bogliarka (Boglyarka), Cigelka (Czigelka), Fricka 
       (Fricska), Gaboltov (Gabolto), Gerlachov (Gerlacho),
       Krive, Kurov (Kuro), Lenartov (Lenarto), Livov (Livo),
       Livovska Huta (Livohutta), Lukov (Luko), Mal’cov 
       (Malyczo), Petrova (Pitrova), Snakov (Sznako), Tarnov
       (Tarno), Venecia (Veneczia), Vysny Tvarozec (Felso
       Tvaroscz) Zlate (Sarpatak)

Area: Raslavice (Raszlavicz)
Towns: Abrahamovce (Abrahamfalu), Andrejova, Bardejovska Nova
       Ves (Bartfa Ujfalu), Brezovka, Buclovany (Buczlo),
       Demjata (Demethe), Dlha Luka (Hosszuret), Hazlin, 
       Kobyly (Lofalu), Krasna Luka (Luko), Kruzlov (Kllyusso),
       Lukavica (Lukavicza), Nizna Vol’a (Volya), Nizne 
       Reslavice (Tot Reszlavicz), Resov (Resso), Richvald
       (Richwald), Trocany (Trocsan), Vaniskovce (Vanyiskocz)

Area: Mosurov (Adamfolde)
Towns: Hertnik (Hertnek), Hervartov (Hervarto), Hubosovce
       (Gombosfalva), Janovce (Berczalja), Maly Slivnik (Kis 
       Szilva), Mosurov (Adamfolde), Osikov (Ossiko), Ratvay
       (Ratvaj), Siba, Terna (Ternye), Varadka, Zahradne
       (Szedikert), Zatkovce (Zsetek)





Film 2150625 - Item #4; 1869 Census - Saros County, Slovakia.
District: Horna Torysa (Felso Tarcza)

Area: Pecovska Nova (Ves Pechujfalu)
Towns: Cervenica (Vorosvagas), Drienica (Somos), Dubovica
       (Dobo), Dacov (Decso), Jakubovany (Jakabfalu), Lucka
       Harcsar (Lucska), L’utina (Litinye), Olejnikov
       (Olejnok Majdan), Orkucany (Orkuta), Pecovska Nova 
       (Ves Pechujfalu), Rozkovany (Roskovany), Sarisske 
       Michal’any (Szent Mihaly), Sarisske Sokolovce (Csipkes
       Tolcsemes), Uzovce (Ujfalu)

Area: Plavec (Palocsa)
Towns: Circ (Csircs), Durkov (Gyorkvagasa), Hajtovka 
       (Hajturka), Kamenica (Tarkeo), Kijov (Kijo), Kurcin
       (Kucsin), L’ubotin (Lubotin), Maly Lipnik (Kis Lipnik),
       Matisova (Matiszova), Obrucne (Obrucsno), Plavec
       (Palocsa), Plavnica (Plavnicza), Puste Pole
       (Pusztamezo), Ruska Vol’a (Oroszvaolya), Sulin (Szulin),
       Sarisske Jastrabie (Jesztreb), 

	
	
	


	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 9/3/01
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/fslovreg.htm
##-----------------TITLE------------------------##
General Map of Slovakia and Surrounding Countries
##------------------TEXT------------------------##
General Map of Slovakia and Surrounding Countries
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/nara.htm
##-----------------TITLE------------------------##
National Archives
##------------------TEXT------------------------##
How to Obtain Naturalization Records in One Hour

	
	by Moishe Miller
	
Waltham, Philadelphia, East Point, Chicago, Kansas City, Fort Worth, Denver, Laguna Niguel CA, San Bruno CA, Seattle WA, New York City. If you are fortunate enough to live in one of these cities, there is a wealth of information waiting for you. The National Archives maintains regional offices in all of these cities. Their information is both comprehensive and inexpensive, usually only twenty-five cents per copy. Access is free and there are informed archivists always on hand for assistance. The three sources I have seen most frequently used are the US censuses, passenger manifests for ship arrivals, and naturalization records. The later two usually contain accurate information, while the census records are more prone to inaccuracies.
Since November of 1992 I have been researching my Miller family's history. The tree now contains well over six thousand people, all descended from one individual. He was Avrohm Aba Miller (Müller), born circa 1765, and died circa 1848. The tree spans eleven generations and covers six continents. The ingredients necessary for composing a large tree are persistence, diligence, ingenuity, and mazal. The National Archives offers the potential for expanding and enriching a family's history. I will not touch on the census because its benefits are fairly obvious. The passenger arrival manifests will give a physical description of your ancestor. It will also state city and country of birth and quite frequently, addresses of relatives both here and abroad. The naturalization record will give an exact birthdate, birthplace, spousal information, and statistics concerning any children. Sometimes there is even a picture of the petitioner.
I have seen many people  walk into the archives, not quite knowing what to expect. The archives filing design was created so that information could be extracted in a fairly short amount of time. With a proper set of guidelines, it is quite simple to obtain an individual's ship records and naturalization papers in under an hour. I will illustrate a step by step procedure, using my own experience at the New York City Regional Branch. I was trying to find out more about a cousin that came to the US well before World War II. All I knew was that her name was Nellie/Nissel Kahan. Her mother was Basha Kahan, nee Müller, from Bukowsko, Galicia. Nellie married here to Julius Harnik. She was one of ten children and she had no children of her own. I had previously obtained her Florida death certificate through the Social Security death Index. My aim was to find out more about her background because I knew nothing else about her siblings or their offspring.
Step 1: Before going anywhere, obtain the Soundex code for the last name in question. In my case, the names were Kahan and Harnik. These correspond to K500 and H652, respectively. If you do not know how to generate a Soundex code do not worry. The Archives has a computer that can generate them for you. It is located in the back left, behind the reception desk. If you have a JavaScript capable browser, you can use my Soundex generator.
Step 2: Go to the National Archives, located at 201 Varrick Street, 12th floor. The number 1 train stops right on the corner (Houston Street Station). After passing through the metal detectors go all the way to your right. Use the small bank of elevators around the corner (behind the ones on the right). They are faster. Once you get off the elevator, go left, past the freight elevators and through the closed doors. The Archives are through the open door on the right side, immediately after the men's room. Sign in and get a microfilm reader. I arrived at 12:15.
Step 3: Go to the front table that has all the index books. The first index needed is T621. This reference contains an index to all the passenger arrivals for the port of New York City from July 1, 1902, through 1957. It is stored in Soundex order. Looking up K500 for Nellie Kahan, the index pointed to roll 341. Julius/Nellie Harnik (H652) pointed to roll 287. Write down T621; 287, 341.
(Note: for June 16, 1897, through June 30, 1902, reference T519.)
Step 4: The next index to consult is M1676. This is an index of all petitions for naturalization for the Southern District Court of New York. This covers both Manhattan and the Bronx. It is sorted by last name, no Soundex is needed. However, it is broken down into separate time frames. Since I was not sure when Nellie arrived in the US or when she naturalized, I looked in two separate lists. The 1917 - 1929 list showed Harnik in roll 40 and Kahan in roll 42. The 1929-1941 list showed Harnik in roll 75 and Kahan in roll 78. Write down M1676; 40, 42, 75, 78.
Step 5: Now its time to go get the films. T621 (arrivals) is stored in the far right (rear) corner, in the bottom drawers of cabinet 39 and top drawers of cabinet 40. Both 287 and 341 were in cabinet 39. I took both films. Note: Do not confuse T621 with T612, both are stored next to each other.
Step 6: Index M1676 (naturalizations) was two cabinets to my right, in number 41, in the middle drawers. I took all four films (40, 42, 75, 78).
Step 7: I went to my assigned reader with my six films in hand and started with the T621 (arrivals) series. Since the whole roll was K500, I did not have to first locate my particular Soundex section. Within the Soundex, the entries are sorted by first name, and then usually by age. Unfortunately, this is not a hard and fast rule. I found three possible entries.

K500 Kahan, Nelly	25f		22	40	8808
K500 Kahn, Nelly	26f		5	49	8701
K500 Kahn, Nelly	35f		29	15	13879
							
I will use the first entry as an explanation of how to interpret this data. Nelly Kahan, a 25 year old female, is referenced on line 22, page 40, of volume 8808. The volume corresponds to the year of arrival. I wrote all three possibilities down.
Step 8: I went back to the front desk and looked up the time frame for 8701, 8808 and 13879, in Anderson's reference. This can be found in the beginning of the index book that says Passenger and Crew Lists. The first two numbers were in 1926, the last in 1939.
Step 9: I went back to my microfilm reader and referenced the M1676 film (index to naturalization). Bearing in mind that continuous residence for five years is required to petition, the earliest date I was interested in was 1931. This discounted the 1917 - 1929 films I had taken. Since I did not know when Nellie Kahan had married Julius Harnik, I looked in both films for 1929 - 1941. In roll 42 I found no entries for Julius Harnik (although I did find a Jozef Leib Harnik, this subsequently turned out to be a false lead). In roll 78 I found one entry.
Nellie Harnik		196755
Name changed by marriage from Hahan: 9 - 28 - 38.
Although it listed her name change as Hahan, rather than Kahan, I was sure this must be her.
Step 10: I went back to the front desk and took a research form. I wrote down my name and research number on the top. Then I entered the entry for Nellie Harnik, Southern District, and 196755 as the volume to be searched. (I also put in an entry for that Jozef Leib Harnik).
Step 11: While waiting for an archivist to bring out the information I requested, I went back to the front desk with my T621 (arrivals) candidates. I referenced the T715 section of the book labeled Passenger and Crew Lists. The T715 listing cross-references the volume number found in T621 to the actual microfilm number stored in the cabinets. On Nellie's death certificate it said she was "about 90" when she passed away in 1990. The volume 13879 entry from the T621 index noted that she was 35 in 1939. That would make her about 85 when she passed away. I temporarily discounted that entry. I looked up the other two T621 index volume entries in the T715 listing. Volume 8701 covered ships arriving on May 3/5, 1926. It was stored on microfilm roll 3843. Volume 8808 covered August 16/17, 1926, and was stored on microfilm roll 3905.
Step 12: Wait for archivist to return with the M1676 index (naturalization) documents. (Actually, I did not have to wait, he showed up right away).
Step 13: The M1676 (naturalizations) information consisted of three forms, the certificate of arrival, declaration of intent, and petition for naturalization. Looking at the certificate of arrival, I saw that Nellie arrived on August 17, 1926. I gave the documents back to the archivist and asked for a copy to be made. It was five pages.
Step 14: I now knew that I wanted T715 microfilm roll numbered 8808 because it covered August 16/17, 1926. This is the same timeframe that the certificate of arrival referenced. The T715 films are kept along the right hand wall, in cabinets 42 through 47, with more recent entries in the archive area. Do not confuse the microfilm number with the volume number. My film was in cabinet 44. I took it to my reader.
Step 15: The film started with volume 8807, so I skipped until the beginning of volume 8808. The first page told me that the volume contained only two ships. Based on the vessel listed on the certificate of arrival, I noted that the boat I was interested in was first. I immediately went to page 40, line 22. As it almost always happens, Nellie Kahan was not at that entry. The page numbers always refer to some other numbering scheme than that stamped at top. The line number is usually correct. I rolled back to the beginning, and started looking at every page with a line 22 entry. About halfway through I found Nellie's entry. I removed the film with out rolling it back up, by also taking off the second reel. I went back to the front desk.
Step 16: I asked for, and received, assistance in printing the two pages of information from the ship manifest. After I finished printing, I rolled the film up on the printing machine. Its motorized and took only seconds.
Step 17: I gathered up all my films and paper, shut of the microfilm reader, and returned all the films to their appropriate cabinets.
Step 18: I went up front and picked up my copy of the T621 (arrivals) records I ordered in step 13, Nellie's naturalization documents. I paid for the seven copies (five T621 papers and two ship manifests) I had made at 25 cents apiece, for a total of $1.75. It was 1:10.
So what did I find out? Nelly arrived in New York aboard the SS Mauretania out of Cherbourg, France, on Aug. 17, 1926. The passenger manifest listed Nelly Kahan, age 25 & single, last living at Sighathul Mantati, Ilic Mares 24. Received visa # 27 in Budapest on 20/7/26. Her passage was paid by her uncle, Joseph Kahan, living at 485 Jackson Ave., Bronx NY. Nelly was 5' 2", fair complexion, brown eyes, and brown hair. She was born in Sighet Rumania.
The naturalization records told me that Nelly was born on June 29, 1901. She was in the "neckwear" occupation in 1927 and lived at 584 Concord Ave. in New York. In 1932 she was not married, lived at 500 Trinity Ave., Bronx NY, and was a neckwear worker. The two witnesses on her Petition for Citizenship were her uncle, Joseph Kahan, living at the same address as Nelly, listed as a neckwear worker. Isaac Berger of 321 E. 178th St., Bronx NY, a dress cutter, was the other witness. The INS from Miami, FL, included a notice that on 12/5/63 Nelly changed her naturalization certificate to reflect her 9/28/38 marriage to a Harnik.
Not bad for a one hour investment.





I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 4/5/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/fslovkb.htm
##-----------------TITLE------------------------##
Detailed Map of North Eastern Slovakia; Around Bardejov
##------------------TEXT------------------------##
Detailed Map of Northeastern Slovakia; Around Bardejov (and the part of Poland that borders on it)
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/spira/yshyadvd.htm
##-----------------TITLE------------------------##
The Yeshaya David Family
##------------------TEXT------------------------##
The Yeshaya David Spira Family
	
	Yeshaya David Spira Outline Descendant Tree
	Yeshaya David Spira Generation Report
	Yeshaya David Spira Tree (11k)
	David Waxman Lineage Tree (18k)
	
	Back To Spira Homepage
	
	
This information has been supplied by:
           David Waxman
           30 Clements Road
           Newton MA 02458-2618
           USA
		   
           Email: djw@bu.edu
	  

Thank You!

	
	
	
	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 8/28/02
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/scheindl.htm
##-----------------TITLE------------------------##
Scheindl Langsam of Tyreva Woleska
##------------------TEXT------------------------##
Scheindl Langsam of Tyreva Woleska




From: srwynne@erols.com at INTERNET
TO: Moishe Miller; langsam@sci.brooklyn.cuny.edu
Subject: [Fwd: Re: family history]
Priority: Normal 
Date: 10/27/98 10:16 PM 


I am forwarding this piece of Earl's correspondence.  I am writing back
to him with relevant information.  Suzan


-----Original Message-----
From: Suzan Wynne <srwynne@erols.com>
To: EARL ZIMMER <earzim1@home.com>
Date: Monday, October 26, 1998 1:30 PM
Subject: Re:


>EARL ZIMMER wrote:
>>
>> My grandmother was a Langsam who lived in Sanok before the war. She had 2
>> sisiters and a brother. The family moved to Winnipeg after the war. My
>> grandmother's first name was Scheindl.
>>
>> My wife and I visited Sanok this past summer.
>>
>> Is my family connected to yours in some way?
>
>Dear Earl,  Yes for sure there is a connection though I can't say
>offhand what it is.  I  and a number of cousins put together a book
>about the Langsams.  I see a Scheindel who married Isak Chartaner.  She
>was born in 1909 in Hucisko.  I have her sister as Blima and her
>brothers were Nathan who died in 1971 in Arizona, Benisch, and Markus.
>
>I also show a Scheindel who was married to Wigdor Bernstein but they
>were divorced.  I have no other information about her children, etc.
>She was one of 9 children of Meyer and Sarah Langsam who lived in
>Sanok.  I must have other Scheindels but I'm wondering if you could
>provide a little more information so I can see if I have anything about
>your family branch.
>
>How did you find me?
>Suzan Wynne
>


My grandmother was born in 1898 in a little village about 21 km East of
Sanok.
It is called Tyreva Woleska.{sp} In 1920 she got married and moved to Sanok.
Her husband was Zacharia Fink. They lived in Sanok till 1939.
My grandmother Scheindl Langsam had 9 brothers and sisters.She and 3 others,
along
with others from our family all moved to Winnipeg around 1948,1949. Scheindl
died in 1960.
In Sanok, my grandfather was in the meat business. They had  5 children, one
of them my mother. 1 child died in the war, the others are all in Winnipeg.
Isak Chartaner and Wigdor Bernstein are not in any way connected to our
family. My grandmother and grandfather both lived together in Winnipeg
untill 1960, the year they both passed away. We have never heard of the
other 2 names.
In 1921 there were 4076 Jews in Sanok. The Langsams you speak of may be
a completely unrelated family. Or possibly, they may stem from one of the 9
brothers and sisters of my grandmother, details of them I am collecting from
my mother.

Have you visited Sanok? Do you have street addresses for the Langsams there?
That would help as my mother remembers some street addresses.
I saw your search request on the Net under Sanok in a Jewish search service.

Finally, my grandmother's parents were Pesel and Pinchas Langsam from
Tyreva'
21 km from Sanok.

Earl Zimmer


Vancouver, Canada

From: earzim1@home.com at INTERNET
TO: Moishe Miller
Subject: Re: [Fwd: Re: family history]
Priority: Normal 
Date: 10/28/98 7:32 AM 


I have your letter, through Suzan and I will be back to you soon. I have to
dig
deeper with my relatives who are all in Winnipeg.

-----Original Message-----
From: <moishe@langsam.com>
To: <earzim1@home.com>
Sent: Sunday, April 11, 1999 7:29 AM
Subject: Our Family


> Hi,
> Just wanted to touch base. In your 10/28/98 note you said you would try 
to
> get back to me at some point. Any luck finding out any additional info
yet?
> Can you list the names of all the children of Pesel and Pinchas Langsam?
> Did Pinchas have any known siblings?
> Do you know where/when he died? What age? Picture of tombstone (might 
give
> his father's name)?
> Any Langsam cousin's you know of, but not how you are related?
>
> Hope to hear from you soon.
> Be Well!
> -Moishe
> moishe@langsam.com
> http://www.ics.uci.edu/~dan/genealogy/Miller/hometree.htm
>
>
______________________________________________________
From:  earzim1@home.com
Subject:  Re: Our Family
PostedDate:  04/13/99 01:46:11 AM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  04/13/99 02:13:27 AM

Pesel and Pinchas were my great grandparents. They lived in Tereva. They 
had
10 children.$ of them lived in Winnipeg and I knew them The children
were:Scheindel, my grandmother, she died in Winnipeg in March 1960. Avrum,
Sarah, Ronia, Kalman, Chaia,and Slova who all died in the war. Then there
was Anny who died in Winnipeg around 1970, Moishe langsam , my uncle who
died in Winnipeg around 15 years ago and my aunt Clara who died in Winnipeg
about 1 month ago.
Now my mom is Ruth Zimmer whose mother was Scheindel. My mom lost a young
brother in the war. My mom's brother Saul, sisters  Ann and Sally all still
live in Winnipeg.

Clara's children are  Rosalynnwho lives in Winnipeg and Sammy Linhart who
lives in Phoenix. They both have their own kids. My Brother lives in Las
Vegas.

Moishe Langsam had no children. Anny had 2 children, both still live in
Winnipeg.

I was in Poland last year and drove through Tereva. I wasn't so interested
in this stuff then so I only really visited Sanok where my mom was born.

What is your r elationship to these folks? Please let me know. Earl Zimmer
_____________________________________________________________________  
From: "Moishe Miller" 
To: 
Sent: Friday, July 20, 2001 10:36 AM
Subject: New info on your family....

 Hi,

 Long time no chat. Hope this note finds you well. I would like to
 snail-mail you a copy of a 1986 letter I just received. Can I get 
 your mailing address?

 -Moishe Miller
 moishe@langsam.com
_____________________________________________________________________  
"earl1" 
Friday July 20, 2001 04:26 PM
To:   "Moishe Miller" 
cc:
Subject:  Re: New info on your family....



4346 west 12th ave Vancouver, B.C. Canada v6r2r1
Nice to hear from you again. My brother is in Larchmont New York, and works
in the City. Maybe I will put you in touch with him.
Earl Zimmer
_____________________________________________________________________  






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 6/24/04
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/kosice.htm
##-----------------TITLE------------------------##
Kosice LDS Records
##------------------TEXT------------------------##
LDS FHC Kosice Resources
	
	FilmNumbers
	1920775
	1920776
	1920777
	Archive
	Jewish Cemetery
	Other Films
	
	
   Films 1920775 - 1920777; 1844-1918.
   Jewish records of births, marriages and deaths from community registers for
   Koésice, Slovakia, formerly Kassa, Abauj-Torna, Hungary.  Text in
   German, Hungarian and Hebrew. The records are divided among several
   (about twelve in all) sections or books on the microfilm.
   These are referred to as items. The breakdown below is
   still incomplete. These records can be found at the archives in Kosice.

   Birth           1851-1870 --------------------------------- 1920775


   Birth           1870-1879 --------------------------------- 1920776
   Birth           1880-1896
   Marriage        1880-1918
   Marriage        1844-1851
   Death           1844-1851
   Death           1880-1902


   Death           1902-1915 --------------------------------- 1920777
   Death           1886-1889                                    item 1-4
   Birth           1886-1895
   Marriage        1886-1895
   Death           1890-1895



SRA - State Regional Archives
SDA - State District Archives


* Kosice (city)
Archiv mesta Kosic (Archives of the City of Kosice)
Kovacska 20/I
040 01 Kosice

* Kosice (district)
Statny okresny archiv (SDA)
Kovacska 20/II
042 11 Kosice

* Statny oblastny archiv (SRA)
Statny Oblastny Archiv V Kosiciach
Bacikova 1, P.O. Box C-26
041 56 Kosice


	
	


	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 9/4/01
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/zborov.htm
##-----------------TITLE------------------------##
Zborov LDS Records
##------------------TEXT------------------------##
LDS FHC Zborov Resources
	
	FilmNumbers
	1920553
	21506351869 Census
	Archive
	Other Films
	
	
   Film 1920553; 1848, 1865-1895.
   Jewish records of births, marriages and deaths from community registers for
   Zborov, Slovakia; formerly Zboro, Sâaros, Hungary.  Includes the
   towns of Becherov, Chmel'ovâa, Jedlinka, Mikulâaésovâa, Niéznia
   Polianka, Ondavka, Regetovka, Smilno, Stebnickâa Huta, Stebnâik,
   éSariésskâe éCierne, Varadka, Vyésnia Polianka, Cigla, Dubovâa,
   Niéznâi Miroésov, Roztoky, and Vyésnâi Miroésov.
   Text in Hungarian and German. The records are divided among several
   (about four in all) sections or books on the microfilm.
   These are referred to as items. The breakdown below is
   still incomplete. Please refer to Bardejov records as well, for additional vital records from this area of Saros county.
   These records can be found at the archives in Zborov.

   Birth            1885-1895, 1848 ------------------ 1920553
   Birth            1876-1896                         item 2-3
   Marriage         1876, 1887-1892, 1895
   Death            1865, 1876-1892, 1895




Film 2150635 - Item #2; 1869 Census - Saros County, Slovakia.
District: Makovica (Makovicza)

Area: Bukovce
Towns: Krajna Pol’ana (Krajno Polyana), Krajna Porubka (Krajno 
       Porubka), Nizny Komarnik (Komarnyik), Ol’savka (Olysavka),
	   Strecin (Szorocsin), Sarbov (Sarbo)

Area: Svidnik—Szvidnik
Towns: Belejovce (Belejocz), Dlhona (Dolhony), Hrabovcik 
       (Hrabovcsik), Jurkova (Vol’a Jurkovolya), Kapisova
	   (Kapiso), Korejovce (Korejocz), Lademirova (Ladomer), 
	   Mlynarovce (Mlinarocz), Nizna Jedl’ova (Jedlova), 
	   Nizna Pisana (Piszana), Potoky (Felso Piszana), Rakovcik
	   (Rakocz), Rovne (Rovno), Svidnicka (Szvidnicska), Vagrinec
	   (Vagrinecz), Vapenik (Vapenik), Vysna Jedl’ova (Felso 
	   Jedlova), Vysny Svidnik (Felso Szvidnik) 

Area: Zborov—Zboro
Towns: Becherov (Bechero), Cernina (Czernina), Dubova (Dubova), 
       Keckovce (Kecskocz), Kurimka (Kurimka), Nizny Mirosov
	   (Miroso), Nizny Orlik (Orlich), Nizna Polianka (Mergeska),
	   Ondavka (Ondavka), Roztoky (Rosztoka), Smilno, Stebnicka
	   Hutta (Sztebnik Hutta), Sarisske Clerne (Csarno), Vysny 
	   Orlik (Felso Orlich), Zborov (Zboro)



Zborov Archive:


Matrika Zborov
Matrikarka: Maria Slosarcikova
Obvodni Urad Bardejov
086 33 Zborov
Slovakia

	

	


	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 9/3/01
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/marcy.htm
##-----------------TITLE------------------------##
The Pesach & Moishe Langsam Family
##------------------TEXT------------------------##
The Pesach & Moishe Langsam Family




moishe@langsam.com wrote:

Hi,
I found your email listed under JewishGen's Family Finder on the 
internet. I am working on a family tree starting with Pesach Langsam,
born in 1748  I have a website devoted to this pursuit and would 
welcome your feedback. It is at 
http://www.ics.uci.edu/~dan/genealogy/Miller/hometree.htm
Please note that the URL is case-sensitive. If your browser has problems
(like some old AOL browsers) accessing this page, please try the tree 
itself at
http://www.ics.uci.edu/~dan/genealogy/Miller/homemilr.htm
If neither one works, try to redirect from
http://members.tripod.com/mmill
Please bear in mind that "clicking" on the tree image from 
any page will bring you back to the homepage

Thanks for your time!

-Moishe Miller
moishe@langsam.com
______________________________________________________________________
mwerg@mindspring.com
Thursday January 7, 1999
To:   Moishe Miller/PSG/Prudential
Subject:  Re: Langsam Family

Thanks for your email.  I checked with my grandmother Ann Wolf (formerly
Wolosky) who is 91 year's old and she said she had a cousin Pesach Langsam
on her father's side.  He lived in Jersey City, NJ and worked for the Ward
Baking Company.  Then he moved to New York City or Brooklyn, she couldn't 
remember and then again to San Francisco.  She also said her cousin Molly 
Wolosky, also on her father's side was from Sanok.

I hope this helps.  I am curious to know if there is any connection.

Sincerely,

Marcy Wolf
______________________________________________________________________
moishe@langsam.com wrote:

Hi,
Very exciting! With a name like Pesach Langsam, there must be a connection,
as he was the progenitor of the branch. Can you tell me more about him 
and how your grandmother is related to him. Does he have any living 
offspring  you or I can contact?

-Moishe
______________________________________________________________________
From:  marcy@ergny.com
Subject:  Re: Langsam Family
PostedDate:  01/07/99 03:53:36 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  01/07/99 03:52:58 PM

Hi.

Here is the only other information we have.  
Pesach was a cousin to my grandmother's father, 
Max Wolosky/or Volosky some family members - the ones
from Europe used a W. She does remember that Pesach had
a brother named Moishe who she thinks also lived in 
Brooklyn.  She knows Pesach had a wife and children and
since the last time she saw Pesach, or Philip Langsam, 
he lived in  San Francisco maybe his children or 
grandchildren are still there.

Best regards.

Marcy
______________________________________________________________________
Date: Tue, 25 Dec 2001 21:23:05 -0500
To: marcy@ergny.com
From: "moishe@langsam.com" 
Subject: Langsam

Hi,

Its been a long time since we last wrote. Just wanted to keep you posted.
With the Ellis Island Database I was able to find the ship manifest for 
Moshe Langsam, brother to Pesach/Philip. I also found his petition for 
naturalization here in Brooklyn. He was from Telesnica. This town is about
15 miles SE of Sanok and 15 miles SW of Dobromil. Therefore I think that 
your H71 listing on my page should be H60 under the old numbering scheme 
from the Langsam-Spira book. 

Based on all this data, the picture we have is that Abraham Langsam had 
two known sons, a son Pesach/Philip and a son Moishe. 

Pesach, born in 1896, came to the USA in 1914 at the age of 18 (single).
His father Abraham was still alive and living in Telesnica, Galicia.  
Moshe, born in 1898, went to Buenos Aries, Argentina. He came to the USA
in 1922 at the age of 24 (single). He lists his last residence at his 
friend: Enrique Edelman, B. Mitre 2574 Bnos. Aries. He states that he is 
going to brother Phillip Langsam at 236 Hopkins, Brooklyn NY. Moshe was 
born in Telesnica.

Can you check any of this, especially the dates, with your grandmother? 
Does she remember them being about a decade older than her? 

Also, on Jewishgen why do you have recorded that you are researching 
Langsam's from Krakow? Who was from Krakow? Is this another branch or 
this one too somehow?

-Moishe Miller
moishe@langsam.com
www.langsam.com
______________________________________________________________________






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 12/26/01
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/naomi-g.htm
##-----------------TITLE------------------------##
Langsam related to Blaus/Diller of Sanok, Galicia
##------------------TEXT------------------------##
Langsam related to Blaus/Diller of Sanok, Galicia





From:  naomi-g@email.msn.com
Subject:  Langsam
PostedDate:  01/03/99 12:17:17 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  01/03/99 12:10:26 PM

Funny you should ask.

My great-aunt Ethel Blau passed away last Monday at 95.  On Wednesday her
remaining sister, Nedra Glasser, 84; Nedra's daughter, Abbe; and I buried
her at Mt. Hebron in Queens.  (Unfortunately it was the coldest day of the
week and had a biting wind to boot so it was a short ceremony.)

While we were there Abbe and I visited the office to see which other family
graves are in that cemetery and came up with quite a few in the Bnei Joseph
Degel area of Block 11, Path 14, Section 6.  I imagine that you have been
there.  Seeing so many Blaus, Dillers and Langsams side by side makes me
think that there probably is a real connection, but Nedra, 84, does not
really know what it is.

Anyway, what we particularly noted was the grave of a Gitel Blau.  Gitel is
Nedra's middle name.  I saw from your website that the name also occurs in
the Langsam family.

Abbe and I plan to return in the spring when it is warmer.

Do you have any information to share on Bnei Joseph Degel?

Thanks for keeping in touch!

Naomi
______________________________________________________
Author:  "Naomi Geschwind" <naomi-g@email.msn.com> at INTERNET
Date:    1/30/98  10:13 AM
Priority: Normal
TO: Moishe Miller at CCSP27B1
Subject: Langsam
------------------------------- Message Contents -------------------------------
Your Langsam material is very impressive.  I wish I could tell you how I fit 
in but I don't know.  My great aunt says that there was a family named 
Langsam that she remembers from childhood and whom she believes were related 
to either the Blaus or the Dillers of Sanok, Galicia.  I will look through 
your material and see if I spot possible connections.
     
Thanks for writing to me!
     
Naomi
     
_____________________________________________________

-----Original Message-----
From: moishe@langsam.com <moishe@langsam.com>
To: naomi-g@email.msn.com <naomi-g@email.msn.com>
Date: Sunday, March 14, 1999 11:45 PM
Subject: Re: Langsam


Hi,
Wanted to touch base again. I know you were in contact with Suzan Wynne at
some point. I just wanted to flesh out what part of the tree you come from.
Can you target the two oldest generations of "Langsam" that you are aware
of?
Thanks!
-Moishe
moishe@langsam.com
___________________________________________________
From:  naomi-g@email.msn.com
Subject:  Re: Langsam
PostedDate:  03/15/99 09:39:55 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  03/15/99 11:40:56 PM

We're not anywhere in particular yet.  You'll hear.

______________________________________________________







I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/23/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/missaque.htm
##-----------------TITLE------------------------##
The Esther & David Langsam Family
##------------------TEXT------------------------##
The Esther & David Langsam Family




From:  MISSAQUE@aol.com
Subject:  Re: Langsam Family
PostedDate:  01/05/99 07:39:11 PM
SendTo:  moishe@langsam.com
DeliveredDate:  01/05/99 07:46:00 PM

In reply to a message dated 1/5/1999 6:45:52 PM Eastern Standard Time,
from: moishe@langsam.com 


Hi..My grandmother Esther was a Langsam, from Polland......... 
My mother told me about a David, Rose Langsam, when I speak to 
my uncle who is quite old maybe he can fill me in with a little 
more..I too am from Brooklyn, please keep in touch..  

_________________________________________________________

From:  MISSAQUE@aol.com
Subject:  Re: Langsam Family
PostedDate:  01/05/99 10:07:40 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  01/06/99 12:34:37 AM

My grandmother Esther Langsam Feldman was from Poland,,,from what my mother
has said it may have been Warsaw

_________________________________________________________

From:  MISSAQUE@aol.com
Subject:  Re: Langsam Family
PostedDate:  01/19/99 07:03:34 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  01/19/99 07:08:01 PM

hi
David Langsam was my grandmothers brother...my mother was born in
1912...my grandmother died  in 1978 at the age of 94? we think so
she should have been born 1884...I will try to talk to my uncle 
as soon as possible..he just had a mild stroke..David and Rose 
according to my mother had 3 children..2 sons Lester, Louie and 
maybe a daughter..my grandmother esther feldman lived on howard 
avenue than she moved to east 54th street and avenue k
Keep in touch
Susan
------------------------------------------------------
From:  MISSAQUE@aol.com
Subject:  Re: Esther Feldmna nee Langsam
PostedDate:  03/22/99 02:52:53 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  03/22/99 03:02:25 PM

I do not know my grandmothers mother or fathers name..but the children's 
names
you have are my grandparents children...I cannot get to your web site ...
please keep in touch and how did u come up with this information...I may be
talking to my uncle louie this week will let u know...
-----------------------------------------------------

-----------------------------------------------------
From:  MISSAQUE@aol.com
Subject:  Re: Esther Feldmna nee Langsam
PostedDate:  03/21/99 08:11:27 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  03/21/99 08:12:43 PM

I believe you are correct.






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/23/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/itzhlang.htm
##-----------------TITLE------------------------##
H15 - Itzhak David ben Schmuel Langsam
##------------------TEXT------------------------##
H15 - Itzhak David ben Schmuel Langsam




Author:  DXXF98A@prodigy.com (MRS CABELLA C LANGSAM) at INTERNET
Date:    8/1/96  11:50 AM
Priority: Normal
TO: Moishe Miller at CC_NYP5W1
Subject: Internet message 
------------------------------- Message Contents -------------------------------
Mr. Miller,
     
     I am not the historian in the family, so I am unable to give you 
an answer as to whether the person that you mention is my relative. 
What I do know is that all of the Langsams in my family are from a 
small village in southwestern Poland. I can ask my 90 year old father 
the name of the area to see if this may help you decide if we are 
distanly related.
     
Andy.
  
________________________________________________________________________________
     
Author:  DXXF98A@prodigy.com (MRS CABELLA C LANGSAM) at INTERNET
Date:    8/1/96  4:36 PM
Priority: Normal
TO: Moishe Miller at CC_NYP5W1
Subject: Re: Internet message 
------------------------------- Message Contents -------------------------------
Mr. Miller,
     
      I have faxed my father a request for family history today (he 
does not use the net yet) and I expect that he will get back to me in 
a few days or so. 
     I do have access to the net and would be very interested in a 
Langsam home page.
     I also know that when my parents were in Israel that the met 
cousins in Nahariya that the did not know existed. They, too came 
from the same town in Poland, and in fact, my brother, Mark was named 
for the same man that this person in Nahariya was named after.
     I'll keep you posted.
     
Sincerely,
     
Andrew Langsam
________________________________________________________________________________
     
Author:  DXXF98A@prodigy.com (MRS CABELLA C LANGSAM) at INTERNET
Date:    8/1/96  5:38 PM
Priority: Normal
TO: Moishe Miller at CC_NYP5W1
Subject: My dad faxed me back
------------------------------- Message Contents -------------------------------
Mr. Miller,
     
     My father relates that we are listed in the Langsam/Spira book 
on page H-11.
     
     His grandfathers name was Itzhak David ben Schmuel and he 
married a Malka Snell.
     
     Itzhak was born in a village called Sansk and he later moved to 
a village called Bircza by Sanok, where he met and married his wife.
     
     It had always been told, and joked, that there was the Langsam 
side of the family and the Snell (schnell) side of the family.
     
     Keep me posted about the home page.
     
Andrew Langsam

________________________________________________________________________________

Author:  DXXF98A@prodigy.com (MRS CABELLA C LANGSAM) at INTERNET
Date:    8/3/96  3:50 PM
Priority: Normal
TO: Moishe Miller at CC_NYP5W1
Subject: H-11
------------------------------- Message Contents -------------------------------
Hi Moishe,
     
     I'm not the geneologist in the family. All I have is the 
information which I gave you from my father. And he says that we are 
the family listed in section H-11 in the Spira/Langsam book. That's 
all I know, and the information that I sent to you yesterday is all 
that he sent to me.
     
Sincerely,
     
Andy
________________________________________________________________________________
Date: Sun, 27 Feb 2000 12:07:29 +0200
From: Allen Greenwald <amg-dmd@netmedia.net.il>
To: moishe@langsam.com
Subject: Re: [Fwd: Swiecany--Eureka!]

Dear Moishe,
   This obituary was in last week's Jerusalem Post:

                  ALEXANDER E. LANGSAM
                   beloved husband, father,
                   grandfather and great-grandfather
                     industrialist and benefactor,

                    died in Rockville, Maryland
                 on January 31, 2000, at the age of 92.

              Please send contributions to
            Boys Town Jerusalem, in lieu of Flowers.
  It caught my  eye, and I'm sending it to you due to your interst in the
name Langsam,

Kol tuv,
Elchanan
________________________________________________________________________________
"moishe@langsam.com" wrote:


Hi,
Anybody know who this was?
-Moishe
moishe@langsam.com
www.langsam.com
________________________________________________________________________________

Date: Sun, 27 Feb 2000 12:36:48 -0500 
From: Suzan Wynne <srwynne@erols.com> 
To: "moishe@langsam.com" <moishe@langsam.com> 
CC: Naftali_MLangsam@compuserve.com, 
        langsam@sci.brooklyn.cuny.edu, oscar@netvision.net.il, 
        iluz@isdn.net.il, coffeebreak@mailhost.net 
Subject: Re: Langsam 


Yes, Alex is on H15.  His son lives very near me.  I didn't know he had died.
Thank you for telling me.

________________________________________________________________________________
Date: Wed, 31 Jan 2001 20:09:56 -0500
From: Suzan Wynne <srwynne@erols.com>
To: "moishe@langsam.com" <moishe@langsam.com>
Subject: Re: [Fwd: Langsam 2]

I'll call the Einhorns very soon though I doubt that it will come
to much beyond what we know about the previous generations or how they are
connected to the main tree. Our information came from two members of the family who were
more connected to Europe than anyone living today and I don't expect that we will
find out anything startling.  However, I will follow up given that there is
a known Bircza connection and we seem to be on a path with many branches leading to
Bircza.

Suzan
________________________________________________________________________________

At 09:35 AM 3/28/01 -0600, you wrote:
Moishe-
Once again I will ask my mother Leila to get back to you (I see that
you already sent this to her).  Coincidentally, my closest friends maiden
name is Langsam.  Her madien nam was Sarah Langsam but now goes by Sarah
Carroll.

Her Father lives in the DC area and I am not sure where her grandmother
is now living she used to spend half the year in Israel.  Is there any
relation?
--Jessica
________________________________________________________________________________
From: moishe@langsam.com
To: Hirshorn, Jessica
Sent: 3/30/01 12:57 PM
Subject: RE: Melchior Tree Updated

Hi,
Thanks for thinking of me regarding the LANGSAM connection. I would be
most interested in pursuing this further. Virtually all the LANGSAM's stem
from Pesach Langsam, born circa 1748. Does she have email?

-Moishe Miller
moishe@langsam.com
______________________________________________________________________________
From: "Hirshorn, Jessica" <Hirshorn@cl.uh.edu>
To: "'moishe@langsam.com '" <moishe@langsam.com>
Subject: RE: Melchior Tree Updated
Date: Fri, 30 Mar 2001 17:53:38 -0600

Sure, Sarah's e-mail address is: scarroll30@hotmail.com

Don't know how much she knows about her geneology but you can give it a try.
Also since her grandmother is still living she may know some of the family's
history.

--Jessica
________________________________________________________________________________
From: "moishe@langsam.com" <moishe@langsam.com>
To: scarroll30@hotmail.com
Subject: LANGSAM family?
Date: Fri, 30 Mar 2001 23:33:45 -0500

Dear Sarah,
Jessica and I were exploring a potential familial relation and she
mentioned that your maiden name is LANGSAM. I am a direct descendent of
Pesach Langsam (c1748 - c1820) and have been working on a family tree for
quite some time. Would you be interested in exploring a possible connection
between our families? I have a website with quite a bit of information on
his offspring at
www.langsam.com

You can reach me at
moishe@langsam.com

Thanks for your time!
Moishe Miller
________________________________________________________________________________

At 03:30 AM 4/3/01 +0000, you wrote:
Yes - I am interested in exploring if we are related.  I will start by
e-mailing my family to ask grandmother.

Sarah

________________________________________________________________________________

From: "moishe@langsam.com" <moishe@langsam.com>
To: "Sarah Carroll" <scarroll30@hotmail.com>
Subject: Re: LANGSAM family?
Date: Tue, 03 Apr 2001 01:34:56 -0400

Hi,
So happy that you are interested!

I actually have quite an extensive tree and would be interested to see if
your ancestry might already be there. Can you tell me your grandfather's
name? His father?
-Moishe
________________________________________________________________________________
At 06:01 AM 4/3/01 +0000, Sarah Carroll wrote:
Hello again.  I looked on your website and there is a connection.  You have already 
been in contact with my uncle - Andy Langsam.  Our branch falls under H15 - Itzhak 
David ben Schmuel Langsam.  I'm not sure if I can provide you with more information.
Your website is great.

________________________________________________________________________________
At 10:45 AM 7/14/01 -0400, you wrote:
Here's what the Einhorn folks wrote:

Elsie Hoffer was the person who wrote back.  She contacted the widow of a
cousin for some information but the widow knew nothing. Elsie provided a rather
disjointed account of the family.  I think I'll have to sort it all out
and get back to you.  The widow gave a couple of addresses which I will
include when I send you what I know....which is not much.  One of the addresses is in
Israel and the other is in Poland.  One of the relatives stayed in Poland and married
there (to a non-Jew) after the war.  I doubt that much will come of these
contacts. 

Suzan
________________________________________________________________________________

Date: Tue, 24 Apr 2001 22:54:57 -0400
To: "Sarah Carroll" <scarroll30@hotmail.com>
From: "moishe@langsam.com" <moishe@langsam.com>
Subject: Re: LANGSAM family?

Hi,
Thanks for your kind words and feedback. There are actually two ways you can help. 
Firstly, in the "book" it lists Mark and Marsha Beth as the two children of Alexander.
The seven grandchildren listed are Frederic Ian, Sarah Michelle, Jonathan, Lawrence, 
Paul, Marni, and Paula. 

The first question I have is where do you and your "uncle Andy" fit?

Alexander's father was Aaron. His father was Itzhak David. His father was Shmuel. 

The second question is does anybody know more about Shmuel? His parents? Siblings? 
Other children? Do you know of other Langsam's not in the Itzhak David tree? When 
your grandfather passed away, did you hear of any "new" cousins? 

Anyhow, thanks again for your interest. 

-Moishe
moishe@langsam.com
________________________________________________________________________________
"moishe@langsam.com" wrote:

Dear Suzan,
I know you are busy. Anyhthing ever come of it?
 -Moishe
________________________________________________________________________________

At 07:23 PM 2/25/02 -0500, you wrote:
I have no idea what you are talking about.  The correspondence from elise
hoffer was last year....why are you talking about H30?  Suzan

________________________________________________________________________________

"moishe@langsam.com" wrote:

Can you tell me what parts of H30 were from Michael's letter and what parts
you joined with Polish records?

 -Moishe

________________________________________________________________________________

"moishe@langsam.com" wrote:

The nutshell is I have a theory that H6's Samuel (see  your 1988 update)
was the progenitor of H14, H15, H30 and H62. That is without the Louis
Langsam from Argentina (whoever that is). This seems to hold based on what
I have so far from various family. I also think that the cigar guy was from
H30 as well, via the Morris. For this to be true, the H30 tree needs to be
split. You mention in the original book that the tree was built open the
theory that the Polish data matched the letter Michael received. So I am
asking, must Frank's father be Leib? Do you have his death record or the
name of the cemetery for Frank?

Happy Purim!
Moishe

________________________________________________________________________________

Suzan Wynne
Date: Wed, 27 Feb 2002 07:20:39 -0500 
From: Suzan Wynne <srwynne@erols.com> 
To: "moishe@langsam.com" <moishe@langsam.com> 
Subject: Re: [Fwd: Langsam 2] 


I suspect that your theory is correct.  I have an H30 file and will take a crack at
going over what I have in light of your considerations.  By the way, I tried to
email you about the name on the passenger list last week but my message bounced so
I don't think you got it.  Bottom line, I couldn't make it out even with my German
handwriting aids.  I think it will require someone who really knows how to read old
German.  There are people at the National Archives branch on Vesey who volunteer to
help with requests such as these.


Suzan
________________________________________________________________________________
At 03:04 PM 3/3/02 -0500, you wrote:
Dear Moishe:

My great grandfather, Isaac David Langsam, lived in the Bronx for many years 
a couple of blocks away from my grand parents, Aaron and Sarah Langsam. As a 
little boy, I remember visiting his shop where he lived in the back. We 
called his "Zaida." He moved to Long Beach, NY with Grandma and Grandpa 
Langsam in the early 1950's and lived in our house at 129 East Walnut Street 
until his death. I must have been about 10 or 11 when he died because I 
stayed with my Uncle Max and Aunt Helen that summer while he was failing. I 
remember him helping Grandpa (who was severely injured in a robbery of his 
dry goods store in the Bronx) walk to shul in Long Beach from our house. I 
believe he is buried at Riverside Cemetery in Lodi, NJ where Aaron Langsam 
and Sarah Langsam are also buried on the grounds of the Sons of the Galician 
Zionists, the shul and fraternal group in the Bronx where they davened.

Have you seen the Langsam-Spira genealogy? It was published about ten years 
ago. I have a copy somewhere in the house.

You can also speak to my mother, Genevieve Langsam Freiser, for more 
recollections and her sisters, Toby Lieberman (who lives in Long Beach) and 
Esther Marcus who lives in Beit Yanai, Israel.

Good luck and keep me posted.

Joel Freiser 
________________________________________________________________________________
Date: Mon, 04 Mar 2002 18:32:53 -0500
To: Joel73@aol.com
From: "moishe@langsam.com" <moishe@langsam.com>
Subject: Re: Langsam Family

Dear Joel,

Thanks so much for your comments. They are much appreciated. 

Regarding the book, I do own a copy and have been in touch with the authors. My 
branch originates with the L1 section of the book. 

I believe that your branch (H15)  and the branches labeled (in the book) H62, H6, 
and part of H30 all come from a common Samuel Langsam, who possibly had two wives. 

I would be most interested in communicating with your mother and aunts. Would you 
be able to supply some contact information? Do any of them have/use email?

Within my website I have an overview of your general family at
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/saml-h15.htm
Your feedback would be most welcome.

Thanks again for taking the time to write,
Moishe Miller
moishe@langsam.com
________________________________________________________________________________

Date: Wed, 11 Sep 2002 23:17:07 -0400
To: <js@totallywrite.com>
From: "moishe@langsam.com" <moishe@langsam.com>
Subject: Re: Langsam Family

Hi,

Thanks for your inquiry. You can find more detail on your own clan at
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/lngsm-h.htm
Your branch is H15
You can click on if from that page or go directly to 
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/saml-h15.htm

I do not have more information on your own Nathan branch than what is written 
there. I would be very grateful if you would be able to flesh out your own 
tree (from Nathan down).

As to where your tree fits in the large scope, I have a theory (only) that your
Shmuel may be connected to (or the same person as) the H6 Shmuel. 

Also, I met with an Aaron Langsam in Los Angeles this past August and he spoke 
of Schnell cousins. He is in branch H26, which I have not yet put up on the tree. 
Perhaps there is a broader connection.

I was under the impression from ship records that your overall family came from 
Bircza. Have you seen the entries for them on Ellis Island? I have many of the 
ship manifest images for the Langsam's.

Lastly, do you know of any other LANGSAM families, even if you do not know how 
they are related.

Thanks and happy new year!
Moishe Miller
moishe@langsam.com
________________________________________________________________________________

From: "Jeff Schechter" <js@totallywrite.com>
To: <moishe@langsam.com>
Subject: Langsam Family
Date: Wed, 11 Sep 2002 11:39:45 -0400

Moshe:

I understand that you are involved in researching the Langsam family.  

My maternal grandmother's maiden name was Gertrude Langsam and her
family came from Przemysl.  Her father was Nathan Langsam and her mother
was Rayla Arem  Nathan Langsam's father was David Langsam and Nathan's
mother was Sarah(?) Schnell.  In addition to Nathan they had the
following children: Mordechai, Aron, Morris, Pauline, Annie and Rose.
These are obviously mostly the Anglicized names.

I learned all of this from my Grandmother before she passed away, and I
would be interested in acquiring any GED files that you might have that
might link my family to the larger Lansam/Spira family.

I can be reached at this email address or via phone at 416-783-5731.
Thank you for your time.

Warmest regards,

JEFF SCHECHTER
________________________________________________________________________________






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 6/25/04
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/ephraim.htm
##-----------------TITLE------------------------##
The Ephraim Langsam Family
##------------------TEXT------------------------##
The Ephraim Langsam Family





From:  phyllis@ivesearch.com
Subject:  pesach langsam
PostedDate:  02/08/99 04:13:26 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  02/08/99 04:17:48 PM


You wrote to my brother-in-law Joel Ives about Pesach Langsam.  That was 
my father's hebrew name, English Paul Langsam.  When we moved a cousin of 
ours gave me an entire digest of Langsam's we have not unpacked this as we 
are in temp housing till our knew house is built.  You might have interest 
in that.  If you wish more info about our family my grandfather his 
children etc. please advise.  Only my cousins are alive none of the direct 
descendants of my grandfather Nathan are.  I believe I was named for my 
fathers grandfather one Ephraim the other Fimeth which one was a Langsam 
could be in the volume of family tree I alluded to.

_________________________________________________________

    -----Original Message-----
    From: moishe@langsam.com <moishe@langsam.com>
    To: phyllis@ivesearch.com <phyllis@ivesearch.com>
    Date: Monday, February 08, 1999 4:25 PM
    Subject: Re: pesach langsam


    I would be very interested in any detail you could provide. Is the digest
    you speak of a white soft-covered book with the title Langsam~Spira Family?
    Have you had a chance to check out my website at:
    http://www.ics.uci.edu/~dan/genealogy/Miller/hometree.htm
    I would be interested in anything you could tell me.
    Thanks!
    -Moishe

_________________________________________________________

From:  phyllis@ivesearch.com
Subject:  Re: pesach langsam
PostedDate:  02/09/99 08:41:18 AM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  02/09/99 08:45:47 AM

I believe the book had a blue cover and am not sure what the names were on 
the outside.  Unfortunately we are not moving until June and have no idea 
what box the book is in.  I will however check with my sister and one of 
my cousins to see if they might have a copy.
My father was one of 5. One sister died at 11 the others were all older 
Irving,Lillian and Martha.  Lillian was never married and Martha was 
married late in life no children. Only Irving with wife Bessie who I never 
knew as they were divorced had two sons Ralph and Herbert Langsam.  Ralph 
with his wife lives in Palm Beach Gardens and he has twin daughters Carol 
and Diane.  Herbert like my father was a pharmacist.  Extremely successful 
with nursing homes lives in Okla.City has one daughter who I never met.


-----------------------------------------------
From:  jives@concentric.net
Subject:  Re: Family Tree of the Jewish People: Phyllis LANGSAM
PostedDate:  03/22/99 10:05:23 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
ReplyTo:  jives@concentric.net
DeliveredDate:  03/22/99 10:06:38 PM

Moishe Miller wrote:
>
-----------------------------
Moishe:

I passed your message on to my sister-in-law Phyllis who lives in Ohio.
She is not involved in genealogy.

Joel Ives

__________________________________________
-----Original Message-----
From: moishe@langsam.com <moishe@langsam.com>
To: phyllis@ivesearch.com <phyllis@ivesearch.com>
Date: Sunday, March 21, 1999 10:02 AM
Subject: Langsam


>Hi,
>In the interim, while you wait to move and unpack, do you think I might be
>able to contact a few people? Perhaps the cousin who actually gave you the
>book in question? Also, what about Ralph or Herbert? Either of them or
>their kids genealogically inclined?
>Thanks!
>-Moishe
>moishe@langsam.com
_______________________________________________________
From:  phyllis@ivesearch.com
Subject:  Re: Langsam
PostedDate:  03/23/99 01:26:25 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  03/23/99 01:33:18 PM

I haven't spoken to Herbert Langsam in a while say hi from me his address
and I believe it was he who sent me the book. address 2319 NW 59th St.
Oklahoma City Okla 73112 405-842-7502.  His brother Ralph 3694 Dijon Way,
West Palm Beach Fl.33410 say hi as well phone # 561-624-4649 hope these 
help
you on your quest for info.
_______________________________________________________
-----Original Message-----
From: moishe@langsam.com <moishe@langsam.com>
To: phyllis@ivesearch.com <phyllis@ivesearch.com>
Date: Sunday, March 14, 1999 11:40 PM
Subject: Re: pesach langsam


>Hi,
>Please forgive me but I would like a slight recap. Your lineage from your
>father is
>Paul (Pesach), son of Nathan, son of Ephraim. Can you verify that I have 
it
>right?
>Also, before the US, where did they live? When did they come? Any siblings
>for Nathan?
>Thanks for your cooperation,
>-Moishe
>moishe@langsam.com
________________________________________________
From:  phyllis@ivesearch.com
Subject:  Re: pesach langsam
PostedDate:  03/23/99 01:28:22 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  03/23/99 01:34:59 PM

to your other request it has been many yrs. I don't remember mtg. any
of their relatives but again I was the youngest grandchild all my cousins
were 15+yrs. older than I.
____________________________________________________
From: "Phyllis Ives" <phyllis@ivesearch.com> 
To: <moishe@langsam.com> 
Subject: Re: Langsam Family 
Date: Thu, 20 Jan 2000 09:49:22 -0500 


Actually I do have it let me look thru it is multiple pages what is you
mailing address?
-----Original Message-----
From: moishe@langsam.com <moishe@langsam.com>
To: phyllis@ivesearch.com <phyllis@ivesearch.com>
Date: Thursday, January 20, 2000 12:00 AM
Subject: Langsam Family



>Hi!
>How is the unpacking? That's what you were up to last time we emailed.
>Anything new on the genealogical front?
>-Moishe Miller
>moishe@langsam.com
>www.langsam.com
>
______________________________________






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 2/7/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/shloml.htm
##-----------------TITLE------------------------##
Langsam - NOT!
##------------------TEXT------------------------##
Langsam - NOT!





From:  sholoml@juno.com
Subject:  Re: "eli langsam" 	Fwd: 	Genealogy	1/3/99	Read 518465682
PostedDate:  01/19/99 10:46:59 PM
SendTo:  CN=Moishe Miller/OU=PSG/O=Prudential
DeliveredDate:  01/19/99 11:59:44 PM

our name langsam was made by our grandfather zl gezunt zain when he
escaped russia (poland) he met up with a man named langsam  and his
brother was already not alive so he took his papers ARTHER LANGSAM so you
see the real name is not langsam .
if i can be at any more help please fell free to send me a letter

Sholom Langsam.
____________________________________________________________
Date: Sun, 2 Dec 2001 13:35:03 -0800 (PST)
From: Chaim Langsam 
Subject: Re: Langsam Family
To: "moishe@langsam.com" 

Dear moishe, 

I hope this note finds you and the best of health and in great spirits. 

I received your e-mail a while back,  sorry I did not respond earlier. 

The "Langsam Family" they you ask me about, in which I am a member of, 
it is absolutely 100 percent positively not related to you, or to anyone 
in your family tree. 

the reason is as follows,  our family name was changed, when my grandparents 
left the former Soviet Union, my grandparents more very righteous, and 
courageous people, they put their lives in danger to help others, one of the
ways Jewish people were able  to escape from Russia in that time, was by 
having fake documents, and that's what my grandmother did, when the Russian 
government was informed about this, and was looking to put her in jail, they 
received a passport from a family in Poland whose name was  Langsam, and they 
kept that named for good. 

if there's anything else I can help you with,  feel free to e-mail me,  All 
the best and good luck on your family tree. 

Chaim...
____________________________________________________________
Date: Mon, 3 Dec 2001 13:30:25 -0800 (PST)
From: Chaim Langsam 
Subject: Re: Langsam Family
To: "moishe@langsam.com" 

 my family lives in Brooklyn New York, but I have brothers that are in Ukraine, 
 Toronto Canada, Peoria Illinois, and much more. 

just wondering,  what's the difference if we come from Canada. 
____________________________________________________________
From: CHABADOP@aol.com
Date: Tue, 8 Jan 2002 22:52:09 EST
Subject: Re: Langsam Family
To: moishe@langsam.com

My name is Langsam but our original name was Gewartien. My grandfather changed his 
name on is way out of Poland.

Rabbi Eli Langsam
Peoria IL 






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 6/24/04



___________________________________________________________________
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/resource/stropkov.htm
##-----------------TITLE------------------------##
Stropkov LDS Records
##------------------TEXT------------------------##
LDS FHC Stropkov Resources
	
	FilmNumbers
	1793861
	1793862
	1793863
	Other Films
	Stropkov Jews c.1942
	Stropkov History
	Stropkov Deportation


	
	
   Films 1793861 - 1793863; 1851-1901.
   Jewish records of births, marriages and deaths from community registers for
   Stropkov, Slovakia;
   formerly Sztropkâo, Zemplâen, Hungary.  Text in Hungarian and German.   The records are divided among several
   (about thirty in all) sections or books on the microfilm.
   These are referred to as items. The breakdown below is
   still incomplete. These records can be found at the archives in Presov, v. 1186a-1190.

   Birth         1851-1885 --------------------------- 1793861
   Death         1851-1885                           items 3-4
   Birth         1886-1890


   Birth         1890-1901 --------------------------- 1793862
   Marriage      1886-1895
   Death         1886-1899
   Birth         1875-1895
   Marriage      1875-1876, 1878-1895
   Death         1875-1891


   Death         1892-1895 --------------------------- 1793863
                                                        item 1

	
	


	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 8/30/01
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/spira/uri.htm
##-----------------TITLE------------------------##
The Yakov Uri Family
##------------------TEXT------------------------##
The Yakov Uri Family
	
	The Yakov Uri Family
	The Henya Polimer Family
	The Frieda Kallech Family
	The R' Elyakim Uri (Uhr) Family
	The Chava Fisch Family
	The Chana Mindel Newman Family
	
	Back To Spira Homepage
	
	
The Henya Polimer information has been supplied by:
           Joel Weiner     - Joel.Weiner@jhuapl.edu


The Rochel Leah Seidenfeld information has been supplied by:
           Heshy Gross     - harry.gross@us.pwcglobal.com
           Bina Zimberg    - 13 33 Virginia 
                             Far Rockaway, NY  11691 (718) 868 8353       


The Freida Kallech (Kalich) information has been supplied by:
           Yaron Pedhazur  - ypedhazur@hotmail.com
           Gershon Lehrer  - Gershon_Lehrer@Hotmail.com
           Danny Lehrer    - lehrer@lehrer.homechoice.co.uk

	
The R' Elyakim Uri (Uhr) information has been supplied by:
           Joel Rubin      - sighet2000@yahoo.com
           Naftali Uhr     - nuhr@hr-reit.com
           Shmuel Kehati   - shmuel@nadalia.com
           Errol Uhr       - euhr@fsa.com


The Chava Fisch information has been supplied by:
           Daniel Teichman - Daniel.Teichman@vsao.ch  OR 
                             daniel.teichman@puk.zh.ch
                             Kurfirstenstrasse 8
                             CH-8002 Zurich
                             Switzerland


The Chane Mindel Newman information has been supplied by:
           Tully Auerbach  - TULLY57@aol.com 
           Elizabeth Feder - lrfeder@home.com
           Yoni Gottlieb   - Mekalhalav@aol.com

Thank You!

	
	
	
	I would be very interested to hear from anyone with knowledge or an interest in the Miller 	family.
	Moishe Millermoishe@langsam.com
	
	My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA
	  
  	Last updated 11/21/04
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/fpoland.htm
##-----------------TITLE------------------------##
General Map of Poland
##------------------TEXT------------------------##
General Map of Poland
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/saul.htm
##-----------------TITLE------------------------##
The Saul Langsam Family
##------------------TEXT------------------------##
The Saul Langsam Family





Isaac Langsam (1857 - Oct 31, 1924), son of Saul Langsam and Rebecca Levy, was married to Gittel. They came to the USA in 1886 and were living in Far Rockaway NY in 1900. Isaac's final resting place is in Mt Zion Cemetery, Flushing, NY.

David (1877 - ?) was married to Rose Fruedenfall. He was a buttonhole maker in NY. They had 8 children. 
        Nettie (1900 - 1905)
        William (1902 - 1964) was a doctor. He married Roseland Streepland. They had no children.
		Nathan (Jan 28, 1903 - Aug 1973) was a lawyer. He married Annette Kwestel (1909 - March 1, 1997), daughter of Abraham Shraga, in 1935. They had two children. 
            Sarah Lee & David
        Benjamin (Dec 17, 1904 - Feb 1981) was a lawyer. He married Esther Schneider and had one daughter. 
            Edye (Allen?)
        Phillip (1909 - 1958) was an optometrist. He married Rose Berkowitz and had three children. Rose died in an accident. Phillip's final resting place is at New Montefiore cemetery, in Pinelawn, NJ. 
            Michael, Linda, & Ruth
        Harry was married and divorced from Bess Rosenberg. He shows on the census as being part of the family but the current family does not seem to know of him.
        Abraham  (Mar 5, 1912 - Jan 23, 1975) was a doctor. He was married to Muriel Alpert (and possibly divorced). They had one son who died young.
            Paul
        Sidney (Mar 5, 1907 - Dec 12, 1991) was married to Pauline. In 1999 he (probably his wife) was listed at 80 E. Hartsdale,
Hartsdale, NY 10530.  914 761-1689.
        
   Abraham (1879 - ?) married and had 4 children. He may have been a doctor at the Veteran's Hospital in Coney Island. 
	   Mollie (c1904 - ?) was married. She shows as next of kin on Abraham's death certificate.
	   Israel (14 Apr 1906 - 14 Mar 1997) was married to Ruth Rodgveller and had two children. 
            Elayne Behar & Marvin
	   Yetti  (c1908 - ?) was married to Chauncy Ingram and lived in Smithstown, NY. They had three children. 
            Michael, Donald, Paula, & Gilda Katz
	   Annie  (c1909 - ?) 
        
   Jacob (1882 - ?)
   Israel (1882 - ?)
   Sarah (1887 - ?) was married Oct	21, 1907, in Manhattan (cert #27326) to Josef Blassberg and they had two sons.
	   Sylvan
	   Harold of Valley Stream, NY.
	   
   Lena (1889 - ?)
   Pinkus (1891 - ?)
   Nathan (Nov 21, 1897 - Feb 1963) was married to Bessie Laks (Jan 19, 1894 - Jul 1983).
	   Eugene married Myra Leah Croog,  daughter of Abner A. and Evelyn Diana (nee Aaronson), on September 23, 1962. They have two children.
            Nathania Ann & Jenny Susan	
	   
  





I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 10/12/2014
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/jacklang.htm
##-----------------TITLE------------------------##
The Jack Langsam Family
##------------------TEXT------------------------##
The Jack Langsam Family





    

Below is an excerpt from Devera Witkin's tree, containing a Langsam family. Please view her site for more detail. It can be accessed at
http://www.familytreemaker.com/users/w/i/t/Devera-E-Witkin/index.html


From: Devera Witkin <dewmhw@pacbell.net> at INTERNET
TO: Moishe Miller
Subject: Re: Langsam
Priority: Normal 
Date: 7/27/98 3:43 PM 

------------------------------- Message Contents -------------------------------

Dear Moishe,

Thanks for your e-mail.  A cousin of mine in Raleigh, NC married Jack
Langsam.  Her name is Marleen Horwitz.  I am related to Marleen through
her paternal grandmother who was my father's first cousin.  I haven't 
seen Marlene & Jack in 6 years, since our last family reunion was held
in Raleigh.  Unfortunately, they are not particularly interested in
extended family (further than their own parents and siblings).  Sorry I
can't be of help.  

Took a peek at your website.  Quite a magnificient piece of work!! 

Devera (in San Francisco)



1  Oren (Aaron) Satisky  Unknown - Unknown
.  +Toba Rivka  Unknown - Unknown
.  2  Samuel (Schmuel Nachum) Satisky  1844 - 1929
....  +Celia (Tzippa bat Menachem Mendel)  1845 - 1925
....  3  Phillip Satisky  
.......  +Freda  
.......  4  Dora Satisky  
..........  +Abe Horwitz  1900 - 1967
..........  5  Burton Horwitz  
.............  +Michele Laborwitt  
.............  6  Michael Horwitz  
.............  6  Andrea Horwitz  
................  +Karl Fleischer  
.............  6  Ricky Horwitz  
.............  6  Evan Horwitz  
..........  5  Philip Horwitz  
.............  +Sue Ellen Lebos  
.............  6  Marlene Horwitz  
................  +Jack Langsam  
................  7  Ben Langsam  
................  7  Forrest Langsam  
.............  6  Paula Horwitz  
.............  6  Amy Horwitz  
................  +Ron Schwartz  
.............  6  Alan Horwitz  
..........  5  Neil Horwitz  
.......  4  Harry Satisky  
..........  +Fannie Fleischman  
..........  5  Howard Satisky  
.............  +Lyn Rothstein  
.............  6  Keith Satisky  
.............  6  Brian Satisky  
................  +Shelley Oxman  
.............  6  Mark Satisky  
..........  5  Steven Satisky  
.............  +Virginia  
.............  6  Kevin Satisky  
.......  4  Elsie Satisky  
..........  +Al Solomon  
..........  5  Paul Solomon  
.............  +Carolyn  
.............  6  Andrew Solomon  
.............  6  Josh Solomon  
..........  5  Steven Solomon  
.............  +Sheena  
.............  6  Shaun Solomon  
.......  4  Tillie Satisky  
..........  +Frank Eisman  
..........  5  Clair Rose Eisman  
.............  +Morris Kline  
.............  6  Nancy Kline  
................  +Joel Gottlieb  
................  7  Robin Gottlieb  
................  7  Frank Gottlieb  
.............  6  Robert Kline  
................  +Kathie  
................  7  Seraph Kline  
................  7  Elyse Kline  
.............  6  Michael Kline  
..........  5  Sissy Eisman  
.............  +Arnold Wollman  
.............  6  Sandy Wollman  
................  +Stuart Kornstein  
................  7  Lisa Kornstein  
................  7  David Kornstein  
.............  6  Barbara Wollman  
................  +Marvin Isenberg  
................  7  Susan Isenberg  
................  7  Amanda Isenberg  
................  7  Matthew Isenberg  
.............  6  Gail Wollman  
.......  4  Morris Satisky  
..........  +Lula  
..........  5  Rita Satisky  
.............  +Bernie Farmer  
..........  5  Sylvia Satisky  
.............  +Claiborne Burnett  
.............  6  George Burnett  
.............  6  Michael Burnett  
..........  5  Penney Satisky  
.......  4  Aaron Satisky  
..........  +Bertie  
..........  5  Selma Satisky  1937 -
.............  +Robert Cantor  1924 -
.............  6  Sheri Ilene Cantor  1963 -
.............  6  Neil Aaron Cantor  1966 -
................  +Ilene Zeligman  
..........  5  Myra Satisky  
.............  +Kenn Itchkow  
.............  6  Kathy Itchkow  
.............  6  Alan Itchkow  
................  +Robin  
................  7  Carlie Alyson Itchkow  
................  7  Katrina Sophia Itchkow  
..........  5  Phillip Satisky  
.............  +Sandy  
.............  6  Arlyn Satisky  
.............  6  Dina Satisky  
....  3  Louis (Chaim Yehuda Leib) Satisky  1866 - 1944
.......  +Devera (Dora) Lurie  1880 - 1920
.......  4  Dave Satisky  1895 - 1968
.......  4  Elsye Satisky  1898 - 1968
.......  4  Maurice Satisky  1899 - 1967







I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 12/24/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/nyc-petn.htm
##-----------------TITLE------------------------##
NYC
##------------------TEXT------------------------##
New York Naturalization Petition Index, 1907-24



   

        Search 

         > Record 

        Type  > New York Naturalization Petition Index, 1907-24 

        > Search Results 

       

         

   

   

  

   

        Search Results

          Search Terms: LANGSAM (8) Database: New York Naturalization Petition Index, 1907-24

          Combined Matches:  8 

           

           

      

   

   Name: Abraham Langsam Address: 14 Clinton St.Volume #: 7640Date: 23 Jul 1912Click to view full context Name: Abraham Langsam Address: 6 E. 115 St.Volume #: 117133Date: 01 Oct 1913Click to view full context Name: Abraham Langsam Address: 241 E. 7 St.Volume #: 435194Date: 10 Feb 1921Click to view full context Name: Adolf Langsam Address: 89 Clinton St.Volume #: 61197Date: 01 Apr 1912Click to view full context Name: Benjamin Langsam Address: 90 Pitt St.Volume #: 225124Date: 05 May 1916Click to view full context Name: Louis Langsam Address: 304 W. 116 St.Volume #: 46775Date: 29 Sep 1921Click to view full context Name: Manuel Langsam Address: 429 E 66 StVolume #: 544160Date: 03 May 1922Click to view full context Name: Nathan Langsam Address: 99 Willett St.Volume #: 1897Date: 29 Mar 1915Click to view full context 

  



  






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 6/5/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/spira/bny-yscr.htm
##-----------------TITLE------------------------##
Spira Genealogy - The Bnei Yissoschur
##------------------TEXT------------------------##
Spira Genealogy - The Bnei Yissoschur



 
R' Hersh Mylech
 
  Spira (1783- 1841 [18 Teves]), son of Pesach Langsam, married Chana Mindel (), daughter of Shmuel. They lived in many towns, including Ryobtycze, Stryzow, Oleszyce, Mukachevo, & Dynow, Galicia. They had 7 known children.
 
    R' Meshullam Zusha (18?? - 1830's) was married and had 2 known children. He and his wife both died in R' Hersh Mylech's lifetime.
     
        Yeshaya Dovid (18?? - 1906) married Rivka Frimet. They had eight known children.
            Yitzchok Yehuda Spira, Chana Mindel Selinger, Leah Anker, Yocheved, Dreyzil Lescha, Nechama Yita Reiner, Esther Kalter, & Sima Schein
         
        Rivka Rochel (18?? - 1???) married R' Moshe Eliezer Galler (c. 1813 - 1894 [22 Mar Cheshvan]), ABD Krzywcze Gorne (Kriftch, near Przemysl), Galicia,  and the son of Avrohm & Pessil. They had 3 known children.
       		 
            Tzvi Yehuda Borenstein, Neche Tziril Uri & Meshullam Zusha    
    

     
    Beila (18?? - 1???) was first married to R' Nechemia, son of Tzvi. He drowned in a river during his father-in-law's lifetime. Beila subsequently married R' Shimon Yeshaya Reich, ABD Rybotycze. She had children from each spouse. A point of confusion is that R' Shimon Yeshaya had a son and a grandson (also surname Reich, but from his daughter) named after him. Furthermore, someone from this branch seems to have married in the Langsam family, specifically a Chana Mindel Reich and Avrohm Langsam. More info on this branch is also here.
     
        Mechla (18?? - 1???) married Levi Yitzchok. They had 2 known children.
            Mirel Weinberger & Nechemya    
         
        Naftali  (18?? - 1???) married Perel Reich (a daughter from R' Shimon Yeshaya, ABD Rybotycze, from his first wife, a girl Baum). They had 1 known son.
            Mordechai    
         
        Yosef Binyomin (c. 1834 - 1914) married Gittel Wilner, daughter of R' Shmuel, ABD Halicz, Galicia. They lived in Halicz until R' Shmuel's passing, in 1854. Yosef Binyomin then accepted the post of Rabbi in Rybotycze, Galicia. He later returned as Rabbi of Halicz. Yosef Binyomin had no children.
         
        girl
            R' Shimon Yeshaya    
         
        R' Shimon Yeshaya dayan in Przemysl, Poland, married and had one known daughter.
            Perel    
    

     
    R' David (1804 - 1874 [19 Adar]) of Stryzow & Dynow, Galicia, was married to Rochel Mina. They had 7 known children.
     
        R' Yeshaya Naftali Herz (1838 - 1885), ADMUR of Dynow, married his cousin, Udel Rivka Spira. They had 2 known daughters.
            Tila Spira & Chana Mindel Spira    
         
        R' Zvi Elimelech (1841 - 1924 [5 Nissan]), ADMUR Blazowa, married at the age of 16 to Sara Horowitz. She was from Rozwadow and her father was R' Moshe Horowitz. In 1863 he assumed the role of rabbi in Blazowa and became ADMUR upon his father's passing in 1874. He served in the rabbinate for sixty years. They were known to have had 12 children, most of which died in R' Zvi Elimelech's lifetime. Only four are known to have had children.
            R' Yehoshua, Altsche Teitelbaum, Deborah Yitta Mariles, & R' Yosef    
         
        Esther Rivka (18?? - 1?) married Yehuda Rokeach of Dynow. They had 1 known son.
            R' Menachem Mendel    
         
        Nechuma Malka (18?? - 1?) married the Rabbi of Majdan, R' Tuvia Horowitz, son of the Imrei Noam, R' Meir Dzikeve. They had one son.
            R' Benzion    
         
        Dvora (18?? - 1?) married R' Mendel Mariles (1840 - 1920), son  of R' Yitzchok, ABD Ryobtycze. R' Mendel first served as rabbi in Dubiecko. When his father passed away in 1892, they moved to Ryobtycze, where he assumed his father's position. They had 2 known children.
            R' Menashe & Miriam Spira    
         
        Yehudit (18?? - 1890?) married the Rabbi of Glogow, R' Alte Moshe Chaim Rubin, also known as Reb Moshele Rnizow. They had one son. Yehudit passed away about one week after his bris.
            R' Menachem Mendel Zayde
         
        R' Meir Yehuda (1846 - 1908), ADMUR of Bukowsko, married twice. His first wife, Sheindel Ruchel Hager, died in childbirth, although the baby survived. His second wife was Miriam, daughter of R' Yisroel of Kossow. They had 4 known children.
            Sheindel Ruchla, Hinda Malka Horowitz, Chaya Toba Spira, Dovid, & Mindel Kanner    
    

     
    Sara (1807 - 1878 [24 Iyar]) married Moshe Schonfeld (1810 - 1883 [27 Mar Cheshvan]), son of Eliezer, of Medzilaborce, Slovakia. They had 12 known children.
     
        R' Pesach Avrohm (182? - 1898), ABD Kurima, was married twice. His first wife, Fani Green, daughter of R' Ezriel Green, ABD Mukachevo and author of Nachlas Ezriel. They had 3 known children. After her passing on July 27, 1870, he married Rebeka Schenirer and had another three children. R' Pesach Avrohm served as rabbi in various communities for about ten years before settling in Kurima in 1848. He served there for about fifty years.
            Yosef, Malka Baum, Izak, R' Yakov Meir, Chane Mindel Weiss, & Tzivya    
         
        Lazar (Oct 1827 - 12 Aug 1893 [1 Elul]) married Esther Horowitz. They had 8 known children.
            Shimon, Dovid, Shmuel, Tzvi Elimelech, Yakov, Chana Mindel Laufer, Leah, & Fradja     
         
        Pessil (1828 - 1917 [3 Mar Cheshvan]) married Shaye Zvi Laufer (? - 1906 [16 Adar]), son of Benzion. They had 8 known children.
            Yitzchok Eliezer, Malka (Amalia) Schonfeld, Shulim, Kuppel, Naftali, Shmuel, Miksos, & Israel    
         
        Yitta Leah (c.1830's - ?) married R' Yakov Uri, ABD Turka. He was married to Leah's aunt, Rivka, until her untimely death. R' Yakov himself died in 1855. They had 4 known children from this union.
            Frieda Kalech, Chava Fisch, R' Elyakim & Chana Mindel Newman    
         
        Mordechai Yosef (1835 - 1906 [19 Teves]) was married to Devora Grunberger and had 6 known children. Afterwards he was married to Blima and they had 3 known children.
            Isaac, Lazar, Yehoshua Heschel, Esther Waldman, Rochel Leah Reich, Chana Mindel, Moshe, Dovid, & Freidel Langsam    
         
        Rivka (1836 - 1?) married Naftali Zvi Harpuder. They had 2 known daughters.
            Chana Mindel Meisels & Miriam Reizal    
         
        Shimon (1837 - 1?) married Leah Rochel Rogenfus. They had 3 known children.
            Israel, Herman, & Lazar    
         
        Asher (1840 - 1931) has no details known about him.
         
        Bracha (1842 - 1?) may have married Dovid Meisels.
         
        Mirel Lifsha (1844 - 1?) was married to Ahron.
         
        R' Zvi Elimelech (c.1850 - c.1925), ABD Medzilaborce, married the daughter of R' Meshullam Dov Kalish, dayan in Mukachevo. She died and R' Zvi Elimelech subsequently married her sister, Bayla. He was ABD in Medzilaborce for about 45 years and had 11 known children.
            Feige Graubert, Leah Weissberger, Eliezer, Bracha Rottenberg, girl Kalish, girl Rand, Yakov, Shmuel, Shimon, Gitchu Grunfeld, & Sara Schonfeld    
    

     
    R' Eluzar (1808 - 1865 [13 Elul]), Admur of Lancut, married at the age of fourteen to Toba Chava Yolles . They had 6 known children.
     
        R' Shlomo ([7 Chanuka] 1831 - 1893 [21 Sivan]) was born in Rybotycze, Galica. In 1851 he married Chaya Frima Rivka, daughter of R' Yekusiel Shmelke of Sasov. In 1857/8 R' Shlomo accepted the post of rabbi in Strzyzow, Galicia. In 1882 they moved to Mukachevo. His wife passed away on 14 Tishrei, 1887. They had 2 known sons.
            R' Tzvi Hersch & R' Moshe Yehuda Leib    
         
        R' Menachem Pinchus (1838 - 1912) married the daughter of a wealthy man in Lancut. They had 3 known children.
            R' Shmuel, Malka Wagschal, & Rivka Rochel Rokeach    
         
        R' Simcha (1840 - 1912 [11 Tishrei]) married the daughter of R' Yisroel Aryeh Leib Warman, dayan of Buczaz. They lived in Lancut. Upon his father's passing, he served as ADMUR of Lancut for fifty years. They had 7 known children.
            Chana Mindel Rubin, R' Eluzar, R' Zvi Elimelech, Yosef, R' Yisroel Aryeh, Hudis Rabin, & Nechama Mariles    
         
        R' Zvi Elimelech (Teves 1841 - 1904 [20 Adar]) was born days before his grandfather's passing, and was named after him. He married Frieda Horowitz, daughter of Yehuda. He remarried to the daughter of Yehoshua Elazer Chodrow. She was very learned and wrote a book in Yiddish on family purity (Hilchos Niddah). R' Zvi Elimelech had 3 known children, all from his first marriage. There were no children from his second marriage.
            R' Mordechai, R' Yosef, & Shprintze    
         
        Rochel (18?? - 1?) married R' Meir, son of Pesach Langsam. They had 3 known children.
            R' Elazar, Chaim, & Nacha    
         
        Udel Rivka (18?? - 1?) married her cousin, R' Isiah Naftali Herz, ADMUR of Dynow. They had 2 known daughters.
            Tila Spira & Chana Mindel Spira    
    

     
    R' Shmuel (18?? - 1860) of Bircza, Galicia, was married to the daughter of (Yakov) Naftali Hertz Labin. R' Shmuel worked on disseminating his father's work. In 1846 he printed the Bnei Yissoschur, R' Hersh Mylech's most famous work. They had 5 known children. R' Shmuel died young and his children were raised by relatives.
     
        Meir Meshullam (c.1840 - 1920) married Esther, daughter of Pesach Eisenberg. They had 1 known child.
            Chaya Mindel (Spira) Halberstam    
         
        Moshe Leib (18?? - 1?) married and lived in Przemysl. He had 3 known children.
            girl Ressler,  Eluzer, & girl Halberstam    
         
        girl (18?? - 1?) married R' Boruch Halberstam in 1884. This was his third marriage. No other detail is known.
         
        Perel (18?? - 1?) married R' Meir Yehuda Leibish Langerman (1830 - 1886), ABD Turka. They had 1 known son.
            R' Menachem Nuchom    
         
        girl (18?? - 1?) married Binyomin, son of Chaim, both of Seret. Binyomin was a great-grandson (paternal) of R' Levi Yitzchok of Berdichev. No other detail is known.	
         
        Rivka (18?? - 1?) married Yisroel Shimon Meir Waldman, of Barsha?, Hungary. They had several children. One is known.
            Rochelah Perel Fisch    
    

     
    Rivka (18?? - 1830's) married R' Yakov Uri, ABD Turka. They had 3 known children. Rivka died in her father's lifetime. Her husband, R' Yakov, remarried, to his niece Leah or Yitta Leah, daughter of Sara and Moshe Schonfeld. R' Yakov and Leah had additional children. This has led to some confusion as to which children were from his first wife and which from his second. This was further amplified because of the close family relationship between the wives.
     
        Henya (c.1837 - 1?) married Moshe Yosef Polimer. They lived in Galicia in a town pronounced in Yiddish: Pi-shetz-luv (Pshlov?) and had two children.
            Hannah Fisch & Naphtali Hirsch    
         
        Gittel Hinda (18?? - 1?) married R' Moshe Rottenberg, ABD Kozava. They had one known son.
            R' Yakov    
         
        Avrohm Yehoshua Heshel (18?? - 1?) was married twice. He had 1 son from the first marriage and 6 known children from the second.
            Pinchas Aryeh, Elazar, Sarah Babad, Tova, Nechama, Pessia Honig, & girl     
    






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 11/8/2014
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/nathn-l7.htm
##-----------------TITLE------------------------##
The Nathan Langsam Family
##------------------TEXT------------------------##
The Nathan Langsam Family





Nathan, a son of Pesach Langsam,
 had 1 known daughter. This information originated in a letter from after the Holocaust written by  Itta Wahrenberg nee Schweber. 
 See: 
 


Ita 
	was married to Yoshua Wirtheim and they had 1 known daughter.
        
        Chaya married Leib Diamant. They had one known daughter. 
            Sarah Schweber
        
    







I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 9/1/2014
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/eckstein/nissel.htm
##-----------------TITLE------------------------##
Eckstein Genealogy - The Nissel Eckstein nee Langsam Family
##------------------TEXT------------------------##
Eckstein Genealogy - The Nissel Eckstein nee Langsam Family



 
R' Yitzchok Isaac  was the son of an Eckstein (probably Elimelech) and his wife, Nissel . She was the daughter of Pesach Langsam. R' Yitzchok Isaac Eckstein was ABD of Bikla, Ukraine. He married Rachel Friedman and had 6 known children.
 
    Moshe (18?? - 18??) died young with no children.

     
    Yosef Shlomo  (c.1858 - 1920 [2 Elul]) married twice, first to Lya Steinberger. They had one son and divorced. His second wife was Chava Rosner (18? - 1926 [1 Tamuz]) and they had 8 known children.
     
        Herman (Tzvi Elimelech) (1887 - 1962) married Emma Levy and had seven children.
            Albert, Louis, Lillian Smith, Ernest, Irene Kohen, Sol & Alex    
         
        Goldie (1889 - 19?) was born in Krasna and passed away in New York City. She married Emanuel (Menachem Zvi) Applbaum and had seven children.
            Karl, Morris, Helen Horowitz, Ruth Kalish, Joseph Shelly, Sidney & Martin Louis    
         
        Menachem Mendel (1884 - c.1946) married Sidonia Blank and had four children. Menachem Mendel's final resting place is at Beth Moses Cemetery.
            Hershel, Hinda, Louis & Sara Zimmerman    
         
        Yitzchok Isaac (c.1886 - 1???) married Lena Weiss and had six children.
            Yakov Tzvi, Rochel Spitzer, Sori Loped, Naomi Mazor, Esther Heilper & Chava Eckstein    
         
        Faigy (189? - 190?) passed away at 14 years of age.
         
        Mordche (189? - 19?) married Blanche Wohlberg and had two children.            Jerome & Joseph    
         
        Abie (189? - 19?) married Elsie Rosenberg and had two children.            Clarice Weisinger & Julius    
         
        Regina (189? - 19?) married Joseph Schonfeld. She had no children.
         
        Louis (Chananya Yom Tov Lipa) (189? - 19?) lived in Pittsburgh, PA. He married Miriam Stuhland and had one child. Louis was only 27 years old when he passed away.
            Evelyn     
    

     
    Eliezer (18? - 1943) married Ida Weiss and had six known children.
     
        Joseph (18?? - 191?) died in World War One. He had no children.
         
        Ernest (18?? - 1?) 
         
        Elizabeth (18?? - 1?)
         
        Irene (Rochel) 
         
        Eta (18?? - 1?) married David Phillip and had two children.
            Adena &	Eton    
         
        Lilly (18?? - 1?) married and had two children.
            child & child
    

     
    Malka (18? - 19?) married Yakov Gruenbaum and had 1 known child.
     
        Meir Hersh (1? - 19?) married and had five children.
            Yidel, Rochel, Yoseph Shlomo, Malke & Perel    
    

     
    Asher Anshel (18? - 1946) married Hudis Israel and had three known children.
     
        Yakov (18?? - 1?)
         
        Yisroel Meir (18?? - 1?) married and had five children.
            Yehudis Ehrental, Golda, Aharon, Tzvi Elimelech & Sara
         
        Chaim Hersh (18?? - 1?)
    

     
    Yidel (18?? - 1?) married Golda Spitz and had three known children.
     
        Esther Feige (18?? - 191?) married Chaskel Levy and had eight children.            Dov Levy, Rivka Stein, Sarah Gelber, Heny Schwartz, Sophie Weber, Shaye, Devorah Gambo & Malke Weg
         
        Sarah Malka (18?? - 1?) married Shragi Klein.
         
        Leitche (18?? - 1?) married Amrom Goldstein.
    






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/19/02
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/efrmshml.htm
##-----------------TITLE------------------------##
The Ephraim Shmuel Langsam Family
##------------------TEXT------------------------##
The Ephraim Shmuel Langsam Family



 
Ephraim Shmuel
 , son of Pesach Langsam, had at least one son. Nothing is known about him except that he is presumed to have died young.
 
    Pesach (c. 1820 - c.1895) of Blazowa, Galicia, married Sara Miriam Tscherlit. Together they had 2 known children. Pesach may have later remarried, possibly twice including a women named Fayga. He passed away in the town of Bialka, which is near Blazowa.
         
        Chaim Efraim Shmuel (1838 - Jan 1, 1920) married Miriam (Mary) Landesman (1842 - Apr 22, 1893) in 1855 and had five known children. He came to the USA in 1886 and she followed with her son, Moishe. They arrived in New York city on Sep 22, 1892, aboard the Moraira, sailing out of Hamburg, Germany. Just a short time after her arrival she passed away. Chaim Efraim Shmuel remarried Chana Reisel (1834 - 1914), daughter of Samuel Asper, on Jun 28, 1893.
            Sarah Weissman, Michael (Zvi Elimelech), Moise Itzcha, Pesha Reader & Nathan (Nauta)    
         
        Beila died young. Bella Geier nee Weissman was named after her.
        





I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 1/5/02
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/dovid.htm
##-----------------TITLE------------------------##
The Dovid Langsam Family
##------------------TEXT------------------------##
The Dovid Langsam Family



 
Dovid
  (c.1783- 1866), son of Pesach Langsam, married Esther () of Manastryza, Poland, and they had at least one son.
 
    Pesach (1823 - 1928) was born in Bircza. He married at least 2 times; first to Fayga and then to Beila Feit/Rein. He had 12 known children, 6 from each  marriage. Pesach passed away in either Jawornik or Szklary, both in Poland, at the age of 105.
         
        R' Sholem (1849 - 1937) lived in Lancut, Poland. He was married and had 8 known children. R' Sholem was a mohel and in the metal business. The Lancut yizkor book says that he awoke at 2 or 3 every morning to daven in the synagouge.
            Zvi Elimelech, Abraham, Naomi Gottlieb, Feivish, Jacob, Isaac, Golda & Sara Greenberg    
         
		R' Shimon (1860 - 1940), ABD Mielec, Poland, married Hadassah, daughter of Moishe Mayer Rubin and had five children. Later on he married Rifka of Lancut, Poland.
		Fayga Baer, Hanna Beck, Hinda Englander, Morris & Pesach 
    
         
		Nacha    
         
		Meir married Rochel Spira, daughter of R' Eluzar Spira and Toba Holles, and had 3 known children.
		Elazar, Chaim & Necha 
    
        
		Ita married Asher Zelig Adest, son of Zvi Yakov Adest, and had four children.
		Chana Mindel Birnbach, Efriam Shmuel, Devora Sara Goldman & Josef Chaim    
         
		Sarah  married a Drucker. Her position on the tree is sketchy. According to Mrs. Sarah Bachmant, in an interview on 2 February 2001, this was her great-aunt. She lived in the town Rzeszow, Poland until the age of 107. She had a blessing from the Bnei Yissoschur, R' Hersh Mylech Spira. She is thought to have been a sister to Meir, although she may have been a maternal aunt instead. No other detail is known.
         
		Reisel (1884 - 1884)
         
		Naum  (1888 - 1888)
         
		Nina (1888 - 19?) married Moses Korn-Schneid in 1907 and had two known children.
		Yisroel & Yekuthiel Wolf    
         
		Abraham (1899 - 1903)
         
 		Chaya (1901 - 1906)
         
 		boy (? - c.1942) may have been named Moshe. He perished in the Holocaust.
       





I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 10/15/02
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/langsam/chaimleb.htm
##-----------------TITLE------------------------##
The Chaim Leib Langsam Family
##------------------TEXT------------------------##
The Chaim Leib Langsam Family



 
Chaim Leib
  (c.1783- 1866), son of Pesach Langsam, married Chana, a young woman who was an orphan. They had 7 known children. Chaim Leib was able to obtain some land which he farmed successfully. This enabled him to further increase his holdings. and become known as a gentleman farmer. Of note is the fact that quite a few of his grandchildren bore the names of the Bnei Yissoschur, Tzvi Elimelech, and his wife, Chana Mindel. Perhaps Chaim Leib's wife was a descendant (daughter or granddaughter).
 
    Menachem Mendel (c.1820 - 1915) of Bukowsko, Galicia, married 3 times; to Ita, Perla Lea, & Sara. There were children from all three wives. He had a tavern with an inn in Bukowsko and was known as Roiter (Red) Mendel, due to his red hair.
         
        Gittel (c.1841 - Jan 11, 1914) married Eliezar Ephraim Fischel and had 11 children, 7 of which lived to adulthood. The children all took the surname of Fischel (later changed to Fischer in the USA).
            Sara Rand, Esther, Chaim Leib, Herman (Zvi Elimelech), David, Paul, Emanuel, Wolf, Joseph, Shaye Naftali, & Clara Nobelman    
         
        Avraham (1858 - 1930) was married twice and had 10 children. They lived in Przemysl. His second wife was Chana Mindel Reich.
            David, Sema Bauer, Chaya Fried, Dov Berish, Yitzhak, Chaim Leib, Tzvi Elimelech, Emil, Oscar, & Mordechai    
         
        Esther married Lippe Frank and had 9 children.
            Chaya Gross, Yosef, Efraim, Ita, Zvi Hersch, Miriam (Weinryb) Rosh, Gittel Yachenko, Chava Eckerling, & Meir    
         
        Ita (1861 - 1938) married Berl Roth. They lived in Sanok and had 7 children.
            Solomon, Ewa, Berta, Erna, China, Regina, & Marjem    
         
        Yacov (Yosef?) (1864 - 1919) was married in 1901 to Chaya Sara Seitelbach of Kanczuga. They had 8 children.
            Moshe, Avram, Ephraim Eleazar, Pesach, Mila, ,Harry Bluma, & Esther Weinryb    
         
        Miriam married Tuvia Rand of Bukowsko and had 3 children.
            girl Leiblich, Sinai, & girl Erom    
         
        Chaya married Isak Gottlieb of Pruchnik and had one known child.
            Keila    
         
        Hinde married Arye Leib Fish and had 3 children.
            Miriam, Zipporah, & Elimelech    
         
        Chaim Leib was married and had 2 known children.
            Mirel & Naomi Rappaport    
         
        Pessia married a Ginsburg and had one known child.
            Clara Wakenshaw    
         
        Yosef (1867 - 1943) married Chana of Dukla, Galicia and had 8 children.
            Bracha, Mirla, Chaya, Nechama, David, Hersh Meilach, Mendel, & Yeshayahu    
         
        David (1879 - 1956) married Beila Orum and had 4 children.
            Eliyahu, Brona Helfman, Clara Toder, & Menachem Mendel    
         
        Chana Mindel married Chaim Stern and had 8 children.
            Pesach, Sara, Gittel, boy, boy, boy, Simcha, & Eliezer    
        

     
    Miriam/Mirel  (18?? - 18??) of Dynow, Galicia, married Yehoshua Fish, dayan in Dynow, Galicia. They had 3 known sons.
         
		Naftali
         
		Mendel married Leah and had 5 children.
            David, Leib, Michael, Nechuma Kupferberg, & Ethel Raff    
         
		Zvi Elimelech (1842 - 1894) married Zelda Rochel Kirsch and and had 9 children.
            Moishe, Chaim, Breindel Hertzberg, Shaye, Ethel Metzger, Max, Itale, Frieda Kleinman, & David    
        

     
    Yosef Yehuda
	(18?? - 1???) married and had 6 known children.
     
        Asher Zelig married Roiza and had 10 children.
            Yitzhak, Leah, Hinde Faust, Yakov, Yosef, Dov, Samuel Tzvi Hirsch, Ita Rothfield, Hannah Schleifstein, & Sarah    
         
        Efraim went to the U.S.
         
        Nosson Dov married and had 5 children.
            Hannah Elitsur (Schleifstein), boy, Golda, boy, & Herman (Zvi Elimelech)    
         
        Berish was married and had one known son.
            Solomon    
         
        Golda
         
        Tzvi Elimelech (1855 - ?) married Beila and had 3 known children. After he passed away his wife remarried to a Mehrkrepst and had additional children.
            Miriam Both, Aaron, Yakov & Rose    
        

     
    Chava
         
		
                
        

     
    Ita Raya
         
		
                
        

     
    Pessel
         
		
                
        

     
    Golda
         
		Very little is known about Chava, Ita, Pessel, & Golda. They married into the Popper, Grumet, & Bernstein families.
                
        






I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 10/1/2013
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/desc-aam.htm
##-----------------TITLE------------------------##
Descendants of Avrohm Aba Miller
##------------------TEXT------------------------##
Descendants of Avrohm Aba Miller



 
Generation No. 1

1.  Avrohm Aba2 Miller  (Pesach1 Langsam) was born Abt. 1765, and died Bef. 1850.

Children of Avrohm Aba Miller are:+2i.Yakov Mylech3 Miller, born 1784 in Lenartov, Slovakia; died Abt. 1860 in Obrucna, Slovakia.
+3ii.Pesach Dovid Miller, born Abt. 1808; died Abt. 1872.
+4iii.Yisroel Yitzchok Miller, born Abt. 1814; died Abt. 1891 in Lenartov, Slovakia.

 




Generation No. 2

2.  Yakov Mylech3 Miller (Avrohm Aba2, Pesach1 Langsam) was born 1784 in Lenartov, Slovakia, and died Abt. 1860 in Obrucna, Slovakia.  He married (1) girl Abt. 1820.  He married (2) Obidia (Edel) Veifr Abt. 1848.

Children of Yakov Miller and girl are:+5i.Shabsi4 Miller, born 1822; died January 22, 1909 in Obrucna, Slovakia.
+6ii.Zlate (Zali) Miller, born 1825.
+7iii.Chaskel Miller, born 1827.
+8iv.Rozi Miller, born 1829.
+9v.Mira Miller, born 1834.





Children of Yakov Miller and Obidia Veifr are:10i.Anna4 Miller, born 1849.
11ii.Rezi Miller, born August 01, 1853.
12iii.Kasalin (Rivka ?) Miller, born July 22, 1856.
13iv.Salamon Miller, born Bet. 1857 - September 20 1860.





3.  Pesach Dovid3 Miller (Avrohm Aba2, Pesach1 Langsam) was born Abt. 1808, and died Abt. 1872.  He married Chana Rita Schwartz.

Notes for Pesach Dovid Miller:
The Divrei Chaim, R. Chaim Halberstam, of Nowy Sacz, made the shidduch (match). 

Children of Pesach Miller and Chana Rita Schwartz are:+14i.Raphael Meyer4 Miller, born Abt. 1829.
+15ii.Shabsi Yitzchok Miller, born Abt. 1832; died 1894 in Bukowsko, Poland.
+16iii.Basha Miller, born Bet. 1837 - 1838; died January 02, 1892 in Malcov, Slovakia.
+17iv.Yuska Miller, born Bet. 1842 - 1843; died September 06, 1914 in Malcov, Slovakia.
+18v.Naftali Miller, born 1845 in Malcov, Slovakia; died 1930 in Gorlice, Poland.
+19vi.Shlomo Schonfeld, born 1848; died 1931 in Nyirbator, Hungary.
20vii.boy Miller.
21viii.boy Miller.
22ix.girl Miller.
23x.girl Miller.





4.  Yisroel Yitzchok3 Miller (Avrohm Aba2, Pesach1 Langsam) was born Abt. 1814, and died Abt. 1891 in Lenartov, Slovakia.  He married Gittel.

Children of Yisroel Miller and Gittel are:+24i.Usher Zelig4 Miller, born 1841; died 1923 in Vadovice, Poland.
+25ii.Sora Roiza Miller, born 1847 in Lenartov, Slovakia; died Bet. 1910 - 1919 in Malcov, Slovakia.
+26iii.Avrohm Miller, born November 04, 1853 in Lenartov, Slovakia; died Bet. 1921 - 1922 in Vadovice, Poland.

 




Generation No. 3

5.  Shabsi4 Miller (Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born 1822, and died January 22, 1909 in Obrucna, Slovakia.  He married Hena.

Children of Shabsi Miller and Hena are:+27i.Breindel5 Miller, born 1844; died 1885.
28ii.Shimon Miller, born 1845 in Obrucna, Slovakia; died Bet. 1920 - 1929 in Krynica, Poland.  He married <Unnamed>.

Notes for Shimon Miller:
Shimon Miller (1845 - 1920's) was born in Obrucna, Slovakia. He married & lived in Krynica, Galicia, but did not have children. 

29iii.Chava Miller, born 1851.

Notes for Chava Miller:
Chava Miller may be listed as Anna Miller in the Slovak records for Obrucna.

30iv.Chaja Resy Miller, born January 01, 1852.

Notes for Chaja Resy Miller:
Chaja Resy Miller was found listed in the Slovak records. Nothing else is known about her.

+31v.Sarah Rochel Miller, born 1855; died 1883.
32vi.Abraham Mandel Miller, born March 10, 1856 in Obrucna, Slovakia; died November 12, 1861 in Obrucna, Slovakia.

Notes for Abraham Mandel Miller:
Abraham Mandel (Mar 10, 1856 - Nov 12, 1861) shows up in the Obrucna birth & death records. Even though he has the same civil name, Abraham, as his brother, it is not a real problem. Many times the civil name did not have a direct correlation to the Hebrew name. Additionally, his brother, Avrohm Aba, has his own birth record. Furthermore, that Avrohm Aba died in 1935, in Galicia. 

+33vii.Avrohm Aba Miller, born June 07, 1857 in Obrucna, Slovakia; died 1935 in Krynica, Poland.
34viii.Rivka Miller, born January 01, 1859 in Obrucna, Slovakia; died January 29, 1861 in Obrucna, Slovakia.
35ix.Itcha Miller, born November 01, 1860 in Obrucna, Slovakia; died 1928 in Krynica, Poland.  He married Leah ?.

Notes for Itcha Miller:
Itcha Miller  (Nov 1, 1860 - 1928 [27 Tamuz]) was born in Obrucna, Slovakia. He married Leah, lived in Krynica, Galicia, & had children. Nothing else is known about them. 

36x.Fülop Miller, born 1861.
37xi.Pessi Miller, born January 06, 1862.
+38xii.Multsha Miller, born in Obrucna, Slovakia.
39xiii.Kasalin Miller, born 1866.
40xiv.Esztera Miller, born 1869.





6.  Zlate (Zali)4 Miller (Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born 1825.  She married Marcus Weingarten.

Notes for Zlate (Zali) Miller:
Zlate (Zali) Miller (1825 - ?) lived in Obrucna, Slovakia. Information regarding her family comes from Slovak records. She married Marcus Weingarten of Obrucna, Slovakia. In the Slovak 1869 census of Saros county this record was found: Marcus Weingarten (born 1824) & Zali Müller had 6 children living with them at that time. Salamon - 1849; Zali (yes, same name) - 1852; Kasalin - 1857; Mozses - 1860; Iyak (?maybe Izsak) - 1865; Fani - 1869. 
     Additionally, I found multiple birth records for a son, Israel, in 3 separate volumes. The dates of birth were different in all three books; Jul 22, 1860; Aug 22, 1860; and Jan 4, 1862. I also found a record for Herman, born on Dec 1, 1865. 

Children of Zlate Miller and Marcus Weingarten are:41i.Salamon5 Weingarten, born 1849.
42ii.Zali Weingarten, born 1852.
43iii.Kasalin Weingarten, born 1857.
44iv.Mozses Weingarten, born 1860.
45v.Israel Weingarten, born Bet. July 22, 1860 - January 04, 1862.
46vi.Iyak Weingarten, born 1865.
47vii.Herman Weingarten, born December 01, 1865.
48viii.Fani Weingarten, born 1869.





7.  Chaskel4 Miller (Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born 1827.  He married Sira Süsl Sendrovits.

Notes for Chaskel Miller:
Chaskel Miller (1827 - ?) lived in Obrucna, Slovakia, where he owned an inn. He was extremely strong. Information regarding his family comes primarily from Slovak records. He married Sali Szendrovits of Obrucna, Slovakia. In the Slovak 1869 census of Saros county this record was found: Haszko Müller & Sali Sendrovits (born 1827) had 6 children living with them at that time. Rozalia - 1857; Abrahm - 1858; Bessi - 1861; Pinhefz (? maybe Pinchus) - 1865; Zali - 1868; Izsal (?maybe Izsak or Irsal) - 1869. Additionally, I found birth & death      records for several of their children as follows. They all list Chaskel's wife as Sira Süsl.      
Avrohm Aba, born Nov 6, 1858; Rosy, Jun 2, 1859; Mendel Löb, Sep 3, 1860 - Feb 1, 1861; Breindel, Jan 3, 1863; Pinkus, Jan 1, 1866; Izak Wolf, Jan 1, 1869. 

Children of Chaskel Miller and Sira Sendrovits are:49i.Avrohm Aba5 Miller, born November 06, 1858.
50ii.Rozalia Miller, born June 02, 1859.
51iii.Mendel Löb Miller, born September 03, 1860 in Obrucna, Slovakia; died February 01, 1861 in Obrucna, Slovakia.
52iv.Breindel Miller, born January 03, 1863.
53v.Pinkus Miller, born January 01, 1866.
54vi.Zali Miller, born 1868.
+55vii.Yitzchok Zev Miller, born January 01, 1869; died 1933 in Tylicz, Poland.





8.  Rozi4 Miller (Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born 1829.  She married Hirsch Neigreschel.

Children of Rozi Miller and Hirsch Neigreschel are:56i.Salamon5 Neigreschel, born September 20, 1860.
57ii.Pinkus Neigreschel, born October 18, 1866.
58iii.Abrahm Neigreschel, born 1868.





9.  Mira4 Miller (Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born 1834.  She married Nafsanail Rubin.

Children of Mira Miller and Nafsanail Rubin are:59i.Abrahm5 Rubin, born 1856.
60ii.Juditha Rubin, born 1859.
61iii.Salamon Rubin, born October 07, 1866.





14.  Raphael Meyer4 Miller (Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1829.  He married Leah Goldstein.

Notes for Raphael Meyer Miller:
Raphael Meyer  (1830's - ?) , son of Pesach Dovid Miller, was married to Leah Goldstein of Tylicz, Galicia, and they had 16 children. Only 7 are known. Raphael Meyer and Leah are both buried in the cemetery at Labowa. 

Children of Raphael Miller and Leah Goldstein are:+62i.Avrohm Aba5 Miller, born 1852 in Tylicz, Poland; died May 24, 1918 in Zborov, Slovakia.
+63ii.girl, born Bet. 1850 - 1860.
+64iii.Simon Miller, born May 20, 1858 in Tylicz, Poland; died June 05, 1918 in New York City, NY, USA.
+65iv.Yosef Miller, born Bet. 1859 - 1868; died Bet. 1940 - 1945.
66v.Rochel Miller.  She married ?.

Notes for Rochel Miller:
Rochel  (18? - 19?) of Nowy Sacz, Galicia, was married, with children. She was
      a healer with herbs. She died at a young age. Nothing is known about her children. 

+67vi.Yocheved Miller, born 1871; died Bet. 1931 - 1932 in Tylicz, Poland.
+68vii.Rivka Miller, born Bet. 1872 - 1879; died Bet. 1919 - 1920.





15.  Shabsi Yitzchok4 Miller (Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1832, and died 1894 in Bukowsko, Poland.  He married Esther Pinter.

Notes for Shabsi Yitzchok Miller:
Shabsi  (183? - 1894 [28 Nissan]), son of Pesach Dovid Miller, was married to Esther Pinter (183? - 1892 [11 Iyar]) of Bukowsko, Galicia, and they had 10 children. Shabsi was a very wealthy man and was politically connected with the Kaiser Franz-Joseph of the Austrian empire. Shabsi received a blessing from the Divrei Chaim (R. Chaim Halberstam of Nowy Sacz) for wealth. They had a close relationship and two of Shabsi's children married into the Sanz dynasty. Shabsi was very charitable, even paying for the entire weddings of non-family members, at the behest of the Divrei Chaim. 

Children of Shabsi Miller and Esther Pinter are:+69i.Yakov Hersh5 Miller, born Abt. 1855.
+70ii.Sholom Miller, born Bet. 1857 - 1861; died 1926.
+71iii.Avrohm Miller, born Bet. 1856 - 1863; died 1924.
+72iv.Yocheved Miller, born 1867; died 1909.
+73v.Basha Miller, born Bet. 1867 - 1869; died 1929.
+74vi.Pinchus Miller.
+75vii.Pesach Dovid Miller, born 1873.
+76viii.Bayla Chaya Miller.
77ix.Sara? Miller.
+78x.Miriam Malka Miller, born Abt. 1881.





16.  Basha4 Miller (Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1837 - 1838, and died January 02, 1892 in Malcov, Slovakia.  She married Nusson Diamant.

Children of Basha Miller and Nusson Diamant are:+79i.Avrohm Aba5 Diamant, born January 13, 1860.
+80ii.Yosef Diamant, born December 05, 1868.





17.  Yuska4 Miller (Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1842 - 1843, and died September 06, 1914 in Malcov, Slovakia.  He married (1) Chaya Sandezer.  He married (2) girl.

Notes for Yuska Miller:
Yuska  (1842/3 - September 6, 1914), son of Pesach Dovid Miller, was born in Malcov, Slovakia, and lived in the area of Lenartov & Bardejov, Slovakia. He was married to Chaya Sandezer and they had 4 sons. After Chaya passed away he remarried, to a woman who only spoke German. They had no children together.

Children of Yuska Miller and Chaya Sandezer are:+81i.Chaskel5 Miller, born Bet. 1860 - 1865; died Bet. 1927 - 1928 in Krynica, Poland.
+82ii.Avrohm Aba Miller, born Abt. 1866; died 1936.
+83iii.Levi Yitzchok Miller, born Abt. 1868; died March 09, 1932.
+84iv.Pesach Dovid Miller, born July 12, 1873; died 1937.





18.  Naftali4 Miller (Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born 1845 in Malcov, Slovakia, and died 1930 in Gorlice, Poland.  He married (1) Sura Chivala.  He married (2) Mirel Spira, daughter of Yakov Spira.

Notes for Naftali Miller:
R. Naftali   (1845 - 1930 [14 Adar]), son of Pesach Dovid Miller, was born in Malcov, Slovakia. He was first married to Sura Chivala and had 5 children. They lived in Gorlice (in SW Galicia), Poland, where he was dayan for over forty years. He was a student of the Divrei Chaim, R. Chaim Halberstam of Nowy Sacz. After his wife's passing, R. Naftali traveled to Sienewa for Yom Tov. While there, R. Chezkel Shineva, eldest son of R' Chaim Halberstam, proposed a match with Mirel, daughter of R. Yakov Spira, ABD Tertzel, widow of Avrohm Yitzchok Reiss. The marriage was only in Jewish law, with no civil ceremony. R. Naftali had two children, Itcha & Sarah, with her. Because a civil marriage was not performed, these two children retained the family name of Reiss. Mirel perished in the Holocaust, during its onset, either in the Sulig or Bochnia ghetto. 

Children of Naftali Miller and Sura are:+85i.Shmuel Aron5 Miller, born 1865; died 1942 in Perished in Holocaust.
+86ii.Nechama Miller, born Abt. 1872; died 1940.
+87iii.Moshe Miller, born 1875; died July 23, 1942 in Perished in Holocaust.
+88iv.Yaakov Miller, born Abt. 1878; died 1940 in Perished in Holocaust.
+89v.Chaya Miller, born Abt. 1879; died in Perished in Holocaust.





Children of Naftali Miller and Mirel Spira are:+90i.Itcha5 Reiss, born 1901; died in Perished in Holocaust.
+91ii.Sara Reiss, born 1904; died in Perished in Holocaust.





19.  Shlomo4 Schonfeld (Pesach Dovid3 Miller, Avrohm Aba2, Pesach1 Langsam) was born 1848, and died 1931 in Nyirbator, Hungary.  He married Chaya Gross Abt. 1877 in Tiszakerecseny, Hungary, daughter of Avrohm Hersh Gross.

Notes for Shlomo Schonfeld:
Shlomo   (1848 - 1931 [27 Mar Cheshvan]), son of Pesach Dovid Miller
   was born in either Malcov, or Obrucna (both are in northwestern Slovakia today), or
   Görlice, Galicia, in 1848, the youngest of 7 boys. At Shlomo's bris, Raphael Meyer, his
   oldest brother, was given an honor (like sandik or kvatah). In the 1870's he immigrated
   south to Hungary. At Tiszakerecseny, he obtained papers changing his name to Schönfeld.
   He married Chaya () (1852 - 1922 [27 Sivan]), daughter of Avrohm Hersh Gross,
   who was a chassid of R. Chaim of Sanz, and one of 12 children (11 boys & 1 girl). Mrs.
   S.L. Mendlovic of Williamsburg has much information on the Gross family. Shlomo &
   Chaya had 8 children. Shlomo became a very affluent cattle dealer. He owned a 350 acre
   farm and made an annual trip to Switzerland to purchase cows. He maintained that Swiss
   cows produced superior milk. He was also an agent for the Gott estate. In 1903 (?) he
   moved to Hodasz, and in 1912, to Nyirbator, Hungary where he lived a healthy life until his
   passing. In the fall of 1931 he developed a blockage in his intestine. Realizing that his end
   was near he summoned the family to his bedside. (My grandfather and great-uncle [Naftuli
   & Shabsi Yitzchok] came from the Kaliva (Nagykallo) Yeshiva by train that Thursday
   night. Chava Israel was also there). He passed away that night, November 5, 1931,
   surrounded by his family (he had a minyon). He is buried in Nyirbator and several years
   ago his descendants, Chava Israel and Miriam Werczberger, had his grave site restored. 

Children of Shlomo Schonfeld and Chaya Gross are:+92i.Sara5 Schonfeld, born 1879 in TiszaKerecseny, Hungary; died 1952.
+93ii.Benny Schonfeld, born 1880 in TiszaKerecseny, Hungary; died 1961.
+94iii.Bertha Schonfeld, born 1882 in TiszaKerecseny, Hungary; died April 09, 1975.
+95iv.Rivka Schonfeld, born April 14, 1884 in TiszaKerecseny, Hungary; died August 18, 1963 in Cleveland, OH.
+96v.Harry Schonfeld, born 1885 in TiszaKerecseny, Hungary; died 1956.
97vi.Naftali Schonfeld, born 1887 in TiszaKerecseny, Hungary; died Abt. 1905.

Notes for Naftali Schonfeld:
Naftali  (c1887 - c1905) of TiszaKerecseny, Hungary, drowned while on a boat trip going to visit his father. He was not married. 

98vii.Chaim Schonfeld, born 1890; died 1944 in Perished in Holocaust.  He married Malka Mandel.

Notes for Chaim Schonfeld:
Chaim  (1890 - 1944) of TiszaKerecseny & Nyirbator, Hungary. He married Malka Mandel (she was of the tribe of Levi) & they ran a chicken business. They had no children but his niece, Chava (Israel), lived with them. He & his wife perished in the Holocaust. 

+99viii.Chana Rita Schonfeld, born August 25, 1893; died 1980.





24.  Usher Zelig4 Miller (Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born 1841, and died 1923 in Vadovice, Poland.  He married Chaya Tzivya Wildstein.

Notes for Usher Zelig Miller:
Usher Zelig  (1841 - 1923 [5 Kislev]), son of Yisroel Yitzchok Miller, married Chaya Tzivya Wildstein & they lived in Wielopole Skrzynskie, Galicia. Later on, they moved to Wadowice, where Usher Zelig was a shochet. He was also chazan for the High Holy days. They had several children, although very little information regarding the family is known. Almost the entire family perished in the Holocaust.  

 


Children of Usher Miller and Chaya Wildstein are:+100i.Ozer5 Miller, born Bet. 1860 - 1869.
+101ii.Moshe Miller, born 1870; died 1924 in Wadowice, Poland.
+102iii.Ettel Miller, died in Perished in Holocaust.
103iv.Hersh Shlomo Miller, born April 02, 1874 in Lenartov, Slovakia.

Notes for Hersh Shlomo Miller:
Hersh Shlomo (April 2, 1874 - 19?) showed up in the Slovakian records. He was born in Lenartov, Slovakia, his grandfather's hometown. I am still trying to find out more information regarding this family. 





25.  Sora Roiza4 Miller (Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born 1847 in Lenartov, Slovakia, and died Bet. 1910 - 1919 in Malcov, Slovakia.  She married Nussanel Lauer July 10, 1863 in Lenartov, Slovakia, son of Izak Lauer and Bruche.

Notes for Sora Roiza Miller:
Sarah Roza  (1847 - 191?), daughter of Yisroel Yitzchok Miller, was born in Lenartov, Slovakia. She married R. Nussanel Lauer (born c.1823), ABD of Malcov, Slovakia, and had 9 children. This was his second marriage and he had children from his first marriage. According to Slovak civil records, Sarah Roza was registered as married at age 16, on July 10, 1863, in Lenartov, Slovakia, to R. Nussanel, age 40, of Bobowa, Galicia. It lists his parents as Izak and Bruche. R. Nussanel died suddenly,while traveling, on 7 Tamuz, 1899, and is buried in Kezmarok, Slovakia. 

Notes for Nussanel Lauer:
R. Nussanel Lauer was ABD of Malcov, Slovakia. His marriage to Surah Roiza was his second. He had children from his previous marriage.  R. Nussanel died suddenly,while traveling, on 7 Tamuz, 1899. 

Children of Sora Miller and Nussanel Lauer are:+104i.Yosef5 Lauer, born November 15, 1862 in Liso, Slovakia; died 1932.
+105ii.Malka Leah Lauer, born Bet. 1863 - 1870; died Aft. 1918.
+106iii.Lazar Lauer, born August 15, 1871 in Malcov, Slovakia; died 1931.
+107iv.Chana Lauer, born 1872; died Abt. 1942.
108v.Tzila Lauer, born February 12, 1876 in Malcov, Slovakia; died Abt. 1942 in Holocaust.  She married Landau.

Notes for Tzila Lauer:
Tzila  (Feb 12, 1876 - 194?) was born in Malcov. She married a Landau, but had no children. They lived in Uzhgorod (Ungvar, near Mukachevo), Ukraine. They both perished in the Holocaust. Icsu Ehrman, currently of Israel, lived by them before the war, while he was studying in Yeshiva. 

+109vi.Reygush Lauer, born December 03, 1878 in Malcov, Slovakia.
+110vii.Bayla Lauer, born October 03, 1881 in Malcov, Slovakia; died 1932.
+111viii.Chaim Lauer, born May 01, 1884; died 1945 in Holocaust.
+112ix.Yulishka Lauer, born December 05, 1888 in Malcov, Slovakia; died October 1944 in Perished in Holocaust.





26.  Avrohm4 Miller (Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born November 04, 1853 in Lenartov, Slovakia, and died Bet. 1921 - 1922 in Vadovice, Poland.  He married Chana Yehudis Neiman.

Notes for Avrohm Miller:
Avrohm  (Nov 4, 1853 - 1921/2 [Teves/Shevat 5682]), son of Yisroel Yitzchok Miller, was born in Lenartov, Slovakia. His mohel was Don Frankel. Avrohm married Chana Yehudis, daughter of Moshe Leib Neuman. They first lived in Myslenice, where he was shochet. They then moved to Wadowice, Galicia, where he was shochet and also a chazan. They had 17 children, 9 of which survived to adulthood. 

Children of Avrohm Miller and Chana Neiman are:+113i.Bayla5 Miller, born Abt. 1870; died in Perished in Holocaust.
+114ii.Shaya Zelig Miller, born Abt. 1870; died Abt. 1942 in Perished in Holocaust.
+115iii.Shlomo Miller, born Bet. 1875 - 1879; died Abt. 1944.
+116iv.Chaya Miller, died Abt. 1942 in Perished in Holocaust.
+117v.Eliyahu Miller, died in Perished in Holocaust.
+118vi.Shabsy Miller, died in Perished in Holocaust.
+119vii.Chaim Shimon Miller, born 1880; died Bet. 1941 - 1942 in Perished in Holocaust.
+120viii.Gittel Miller, died 1942 in Perished in Holocaust.
+121ix.Ozer Miller, born Abt. 1890; died Abt. 1942 in Perished in Holocaust.
122x.child Miller.
123xi.child Miller.
124xii.child Miller.
125xiii.child Miller.
126xiv.child Miller.
127xv.child Miller.
128xvi.child Miller.
129xvii.child Miller.

 




Generation No. 4

27.  Breindel5 Miller (Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born 1844, and died 1885.  She married Mordcha Dovid Reiss January 01, 1865 in Obrucna, Slovakia.

Children of Breindel Miller and Mordcha Reiss are:+130i.Bayla6 Reiss, born May 01, 1866; died in Holocaust.
+131ii.Yosef Hersh Reiss, born November 19, 1869; died in Holocaust.
+132iii.Yeshaya Reiss, died in Holocaust.
+133iv.Avrohm Moshe Reiss, born Bet. 1879 - 1881; died 1932.
+134v.Yakov Mylech Reiss, died in Holocaust.
+135vi.Chaim Reiss, born 1876; died 1940.





31.  Sarah Rochel5 Miller (Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born 1855, and died 1883.  She married Hersh Leib Farber.

Notes for Sarah Rochel Miller:
Sarah Rochel Miller (1855 - 1883) of Galicia. She married Hersh Leib Farber, probably before 1869, because she does not show up in the census then as living with her parents. This would also make the death date in relationship to having children more plausible. They had 5 children. 

Children of Sarah Miller and Hersh Farber are:+136i.Breindle6 Farber.
+137ii.Chana Blima Farber.
+138iii.Yakov Farber, died in Holocaust.
+139iv.Malkie Farber, born Abt. 1869; died 1944 in Holocaust.
+140v.Gittel Farber, died Abt. 1915.





33.  Avrohm Aba5 Miller (Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born June 07, 1857 in Obrucna, Slovakia, and died 1935 in Krynica, Poland.  He married Miriam Miller.

Notes for Miriam Miller:
Avrohm Aba  (Jun 7, 1857 - 1935) was married to a cousin, Miriam Miller. It is not currently known who Miriam's parents were but she was orphaned at an early age. Avrohm Aba & Miriam lived in Krynica, Galicia & had 9 children. Many of them perished in the Holocaust. 

Children of Avrohm Miller and Miriam Miller are:+141i.Chaim Reuven6 Miller, born Abt. 1885.
+142ii.Feiga Kendel Miller, born Abt. 1887; died in Holocaust.
+143iii.Itcha Miller, born Abt. 1889; died in Holocaust.
144iv.Sarah Rochel Miller, born 1891; died 1978.  She married Yakov Mylech Miller.

Notes for Sarah Rochel Miller:
Sarah Rochel (1891 - Jul 31, 1978 [27 Tamuz]) married a cousin, Yakov Mylech Miller. She was unable to have children for the first six years of their marriage. They lived in Krynica, where he owned the Villa Roza. They later moved to the US, living in New York, Pittsburgh,Baltimore, Chicago & Newark. They had 3 children.

+145v.Sender Miller, born Bet. 1892 - 1899; died in Holocaust.
+146vi.Ahron Dovid Miller, born Bet. 1893 - 1899; died in Holocaust.
147vii.Yehuda Meyer Miller, born Abt. 1900; died in Holocaust.  He married Frimtcha ?.

Notes for Yehuda Meyer Miller:
Yehuda Meyer Miller (1? - 1942?) married Frimtcha but had no children. He lived in Krynica & owned, in partnership with two of his brothers, the Villa Venice. Yehuda Meyer & Frimtcha both perished in the Holocaust.

+148viii.Leah Miller, born 1902; died 1928 in Krynica, Poland.
149ix.Henne Miller, born Abt. 1904; died Abt. 1905.





38.  Multsha5 Miller (Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born in Obrucna, Slovakia.  She married Chaskel Miller, son of Yuska Miller and Chaya Sandezer.

Notes for Chaskel Miller:
Chaskel Miller married his cousin, Multsha (Amalia ?) , & they had 6 children. When they married they lived in Obrucna, Slovakia. After Multsha's father, Shabsi Miller, passed away, Chaskel moved to Krynica, Poland, where he had a hotel, the Villa Tatarska. 

Children of Multsha Miller and Chaskel Miller are:150i.Eilish6 Miller, died in Holocaust.  He married ?.

Notes for Eilish Miller:
Eilish was married and lived in Meleltz, Galicia. He had no children. He perished in the Holocaust.

 
151ii.Mylech Miller, died in Holocaust.  He married ?.

Notes for Mylech Miller:
Mylech was married and lived in Krynica. He was a talmid chochum. He owned the Villa New York together with his younger brother, Shaul. His entire family perished in the Holocaust.

 
152iii.Avrohm Miller, died in Holocaust.  He married ?.

Notes for Avrohm Miller:
Avrohm was married and lived in Krynica. His entire family perished in the Holocaust.

 
+153iv.Fannie Miller, born 1889; died Abt. 1942 in Holocaust.
154v.Shaul Miller, born 1904; died Abt. 1942 in Holocaust.  He married ?.

Notes for Shaul Miller:
Shaul Miller (1904 - 1942) was married and lived in Krynica. He was a talmid chochum. He owned the Villa New York together with his older brother, Mylech. He tried to escape by going to Bardejov, Slovakia, in the beginning of the war. His entire family perished in the Holocaust.

 
+155vi.Rochel Miller, born 1905; died Abt. 1942 in Holocaust.





55.  Yitzchok Zev5 Miller (Chaskel4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born January 01, 1869, and died 1933 in Tylicz, Poland.  He married Yocheved Miller, daughter of Raphael Miller and Leah Goldstein.

Notes for Yocheved Miller:
Yocheved   (1871-1931/2 [9 Nissan]) was born in Tylicz, Galicia. She married     her cousin, Yitzchok Zev Miller, the son of Chaskel Miller (Chaskel was an innkeeper in Obrucna, Slovakia, & was also extremely strong). They lived in Tylicz & had 6 children. Yocheved's mokum menucha (place of burial) is in Labiva (near Maciejowa, now in Poland, just north of Krynica). This is because at the time there was no bais olam (cemetery) in Tylicz. They buried her in Labowa (near Maciejowa) because it is nearby and because her mother, Leah, is buried there.

Children of Yitzchok Miller and Yocheved Miller are:156i.Kopel6 Miller, born Abt. 1897; died Abt. 1897.
157ii.Yakov Mylech Miller, born February 1899.

Notes for Yakov Mylech Miller:

Yakov Mylech (Feb 1899 - 1958 [2 Teves]) married a cousin, Sarah Rochel. She was unable to have children for the first six years of their marriage. They lived in Krynica, where he owned the Villa Roza. Before moving to the US, he designated his brother, Avrohm Abba, as caretaker. Yakov Mylech & his family lived in New York, Pittsburgh, Baltimore, Chicago, & Newark. They had 3 children.

 
158iii.Shabsi Miller, born 1900.

Notes for Shabsi Miller:
Shabsi (1900 - 1944 [7 Sivan]) was married to Chaya Sarah Leiber, a descendent of R. Chaim Halberstam of Nowy Sacz. They lived in Nowy Sacz and had 4 children. Everyone except Akiva perished in the Holocaust, in Bergen-Belzen, on 17 Elul, 1942.

159iv.Avrohm Abba Miller, born March 11, 1903.

Notes for Avrohm Abba Miller:
Avrohm Abba (Mar 11, 1903 - Jun 1987 [25 Sivan]) married twice. His first wife was Shaindle. They lived in Krynica, where he owned the Villa Paryzanka. He later moved to Nowy Sacz to be close to his brother, Shabsi. There he opened a shnit gesheft (a dry goods store) where he dealt with fabrics and also did pleating work. Avrohm Abba's wife, Shaindle, perished in the Holocaust. After the war he came to the US and married Feigy Rawicki. He had no children. Avrohm Abba & Feigy were both laid to rest in the New Square cemetery.

160v.Leibish Miller.

Notes for Leibish Miller:
Leibish (190?-194?) was married to a woman from Ishtcha (?). They perished in the Holocaust.





62.  Avrohm Aba5 Miller (Raphael Meyer4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born 1852 in Tylicz, Poland, and died May 24, 1918 in Zborov, Slovakia.  He married Breindel Zimmermann December 12, 1873 in Zborov, Slovakia, daughter of Jacob Zimmermann and Rozi Friedman.

Notes for Avrohm Aba Miller:
Avrohm Aba  (1852 - May 24, 1918). He was married to Breindel Zimmermann (daughter of Jakob & Rosi nee Friedman, of Richvald), on December 12, 1873. They lived in Zborov, Slovakia, & had 6 known children. He was in the dairy business (butter). Breindel outlived her husband by many years and lived together with her youngest son, Mordche. She was known as "Breindela Chop", although I do not know why. She perished in the Holocaust along with much of the family. 

Children of Avrohm Miller and Breindel Zimmermann are:+161i.Pesach Dovid6 Miller, born October 03, 1874 in Zborov, Slovakia; died 1974.
162ii.Sarah Miller, born 1882.
163iii.Hinda Miller, born 1884.
164iv.Rivka Miller, born May 18, 1888; died in 1888.
165v.Moishe Miller, born September 30, 1889.
166vi.Mordche Miller, born March 03, 1895.





63.  girl5 (Raphael Meyer4 Miller, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1850 - 1860.  She married ? Zevasser.

Children of girl and ? Zevasser are:167i.Esther6 Zevasser, born Bet. 1870 - 1879.
168ii.Chana Rita Zevasser.
169iii.Itcha Zevasser.
170iv.Yakov Noach Zevasser.





64.  Simon5 Miller (Raphael Meyer4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born May 20, 1858 in Tylicz, Poland, and died June 05, 1918 in New York City, NY, USA.  He married Hannah Friedman.

Notes for Simon Miller:
Simon   (May 20, 1858 - June 5, 1918) was born in Tylicz, Galicia.
      He married Hena Friedman  , of Dlha Luka, Slovakia. They had 6 children. Simon
      lived in Bardejov for some period but came to the US several times, beginning in the
      1880's (probably to check it out). In 1893 Simon and his family (except for Meyer)
      came to the United States (New York). He most likely departed from Bardejov
      (Bardfeld), Slovakia. Meyer had problems with his eyes and came via Hamburg around
      1900 (his son Royal remembers Meyer saying he was 13 years old when he arrived).
      Simon moved, upon his arrival, to Torrington, Connecticut, where he peddled lye. His
      business partner shot him and left him for dead. He survived but had (some) paralysis on
      his left side (leg). He and all his children, with the exception of David, moved back to
      New York in 1903. Simon passed away, from chronic nephritis, at the age of 60. This
      was just a couple of weeks after his brother, Avrohm Aba, passed away. Simon's final
      resting place is at Mount Lebanon Cemetery in Ridgewood, NY. He was survived by 4
      sons, 2 daughters, and 19 grandchildren. 

Children of Simon Miller and Hannah Friedman are:171i.Minnie6 Miller, born 1880.
+172ii.David Miller, born December 14, 1881; died 1964.
173iii.Nathan Miller, born September 13, 1883.
174iv.Meyer Miller, born March 16, 1885 in Bardejov, Slovakia.
175v.Annie Miller, born May 18, 1888.
176vi.Lewis Miller, born 1890.





65.  Yosef5 Miller (Raphael Meyer4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1859 - 1868, and died Bet. 1940 - 1945.

Children of Yosef Miller are:+177i.Zalman6 Miller, died Bet. 1942 - 1944 in Perished in Holocaust.
178ii.boy Miller.





67.  Yocheved5 Miller (Raphael Meyer4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born 1871, and died Bet. 1931 - 1932 in Tylicz, Poland.  She married Yitzchok Zev Miller, son of Chaskel Miller and Sira Sendrovits.

Notes for Yocheved Miller:
Yocheved   (1871-1931/2 [9 Nissan]) was born in Tylicz, Galicia. She married     her cousin, Yitzchok Zev Miller, the son of Chaskel Miller (Chaskel was an innkeeper in Obrucna, Slovakia, & was also extremely strong). They lived in Tylicz & had 6 children. Yocheved's mokum menucha (place of burial) is in Labiva (near Maciejowa, now in Poland, just north of Krynica). This is because at the time there was no bais olam (cemetery) in Tylicz. They buried her in Labowa (near Maciejowa) because it is nearby and because her mother, Leah, is buried there.

Children of Yocheved Miller and Yitzchok Miller are:179i.Kopel6 Miller, born Abt. 1897; died Abt. 1897.
180ii.Yakov Mylech Miller, born February 1899.

Notes for Yakov Mylech Miller:

Yakov Mylech (Feb 1899 - 1958 [2 Teves]) married a cousin, Sarah Rochel. She was unable to have children for the first six years of their marriage. They lived in Krynica, where he owned the Villa Roza. Before moving to the US, he designated his brother, Avrohm Abba, as caretaker. Yakov Mylech & his family lived in New York, Pittsburgh, Baltimore, Chicago, & Newark. They had 3 children.

 
181iii.Shabsi Miller, born 1900.

Notes for Shabsi Miller:
Shabsi (1900 - 1944 [7 Sivan]) was married to Chaya Sarah Leiber, a descendent of R. Chaim Halberstam of Nowy Sacz. They lived in Nowy Sacz and had 4 children. Everyone except Akiva perished in the Holocaust, in Bergen-Belzen, on 17 Elul, 1942.

182iv.Avrohm Abba Miller, born March 11, 1903.

Notes for Avrohm Abba Miller:
Avrohm Abba (Mar 11, 1903 - Jun 1987 [25 Sivan]) married twice. His first wife was Shaindle. They lived in Krynica, where he owned the Villa Paryzanka. He later moved to Nowy Sacz to be close to his brother, Shabsi. There he opened a shnit gesheft (a dry goods store) where he dealt with fabrics and also did pleating work. Avrohm Abba's wife, Shaindle, perished in the Holocaust. After the war he came to the US and married Feigy Rawicki. He had no children. Avrohm Abba & Feigy were both laid to rest in the New Square cemetery.

183v.Leibish Miller.

Notes for Leibish Miller:
Leibish (190?-194?) was married to a woman from Ishtcha (?). They perished in the Holocaust.





68.  Rivka5 Miller (Raphael Meyer4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1872 - 1879, and died Bet. 1919 - 1920.  She married Berel Schermer.

Notes for Rivka Miller:
Rivka  (1870's? - 1919/20) married Roita Ber (Dov/Ber) Schermer. They lived in Tylicz & Krynica, Galicia, & had 8 children. Rivka died from heartache over the death of her son who was killed in the army during World War I. 

Children of Rivka Miller and Berel Schermer are:184i.Sarah Fraidle6 Schermer, born 1892.  She married Moshe Miller.
185ii.Anna Schermer, born June 15, 1894 in Tylicz, Poland; died November 16, 1980.

Notes for Anna Schermer:
Born: June 15, 1894, in Tylicz
Died: Nov 16, 1980
Buried: Washington Cemetery
Stropker Hevra #3, Post 263, Row 2 Grave 1
Arrived US: Feb 13, 1924

186iii.Moshe Dovid.

Notes for Moshe Dovid:
Lived in Antwerp before the war. Was never heard from after war. Was never married

 
187iv.Roiza Schermer, born Abt. 1899.
188v.Mattis Schermer, born February 09, 1900 in Tylicz, Poland; died July 15, 1972.

Notes for Mattis Schermer:
Born: Feb. 9, 1900 in Tylicz
Died: July 15, 1972
SS#: 128-14-7877
Arrived US: Jan. 6, 1923

189vi.boy Schermer, born Abt. 1901; died Abt. 1918 in World War I.
190vii.Basha Schermer.
+191viii.Rochel Schermer, born Abt. 1890; died in Perished in Holocaust.





69.  Yakov Hersh5 Miller (Shabsi Yitzchok4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1855.  He married Toba Lerer.

Children of Yakov Miller and Toba Lerer are:192i.Miriam6 Miller.
193ii.Pinchus Miller.
194iii.Sholom Miller, born 1880.
195iv.Feiga Gittel Miller.
196v.Max Miller, born 1890.
197vi.Marcus Miller, born January 18, 1892.
198vii.Yosef Miller.
199viii.Tzlava Miller.
200ix.Shlome Miller.





70.  Sholom5 Miller (Shabsi Yitzchok4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1857 - 1861, and died 1926.  He married Brucha Kanner.

Children of Sholom Miller and Brucha Kanner are:201i.Chaim Yehuda6 Miller, born Abt. 1875.
202ii.Susha Miller.
203iii.Pinchus Yosef Miller, born 1887.
204iv.Avrohm Miller.
205v.Mordche Miller, born 1890.
206vi.Herschel Miller, born 1894.
207vii.Yoel Moshe Miller.
208viii.Shea Miller.





71.  Avrohm5 Miller (Shabsi Yitzchok4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1856 - 1863, and died 1924.  He married (1) Pushka Werner.  He married (2) Gittel Scheindlin, daughter of Moshe Shamshon Scheindlin.

Notes for Avrohm Miller:
Avrohm   (1856/63 - 1924 [28 Adar]) was a Shiniva chasid. He was married twice, first to Pushka Werner. He had 3 daughters with her. Pushka died when the children were very small & they were raised by her parents. Avrohm's second marriage was to Gittel, the daughter of Moshe Shamshon Scheindlin. On her tombstone in Vranov nad Toplou it says she passed on 5 Tishrei 5689. Avrohm lived in several places. At first he lived in Lubacov (Lubaczow). He then moved to Mudyerotska (Mudjovitz) where he built a beautiful glass and marble house. He even built a glass factory just to make the glass for the house. He came to the US to learn glass making (see Bertha Miller). He also lived in Kvakovitz. Before World War I he moved to Vranov nad Toplou. He had a tremendous estate there, which took several days to traverse on horseback. After World War I it was confiscated. He sent some of his gentile watchman back to the estate but they were murdered. Avrohm had 10 children from his second marriage and at least several were born there. His mukom menucha (place of burial) is in Presov, where he spent his final years. 

Children of Avrohm Miller and Pushka Werner are:209i.Chana6 Miller.
210ii.Malka Miller.
211iii.Batya Miller.





Children of Avrohm Miller and Gittel Scheindlin are:212i.Golda6 Miller, born Bet. 1889 - 1890.
213ii.Tzevetta Miller, born 1891.
214iii.Esther Miller, born Abt. 1895.
215iv.Mary Miller, born Bet. 1897 - 1898.
216v.Sadie Miller, born 1899.
217vi.Mindel Miller, born Abt. 1902.
218vii.Lilly Miller, born 1904.
219viii.Shabsy Miller.
220ix.Shmuel Miller.
221x.Rivka Miller, born Abt. 1901.  She married Mordcha Leib Miller.





72.  Yocheved5 Miller (Shabsi Yitzchok4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born 1867, and died 1909.  She married Moshe Rebhun, son of Ahron.

Notes for Yocheved Miller:
Yocheved  (1867/9 - 1909 [6 Iyar]) married Moshe haLevi Rebhun (son of Aron and Raizel). They lived in Bukowsko, Galicia, & had at least 7 children. They also had twins that did not survive infancy. Sarah may have been one of the twins. According to their grandson, Yankel Rebhun, Moshe Rebhun had a brother Max in the USA and a brother Mordche that was dayan in Belz. 

Children of Yocheved Miller and Moshe Rebhun are:222i.Pesach Dovid6 Rebhun, born 1882.
223ii.Pinchus Rebhun.
224iii.Yankel Rebhun.
225iv.Chaytchu Rebhun, born July 1892.  She married Duvtcha Miller.
226v.Esther Rebhun.
227vi.Shabsi Rebhun.
228vii.Mordcha Rebhun.
229viii.Sarah Rebhun.





73.  Basha5 Miller (Shabsi Yitzchok4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1867 - 1869, and died 1929.  She married Leibleh Rokeach.

Children of Basha Miller and Leibleh Rokeach are:230i.Malka6 Rokeach.
231ii.Baila Rokeach, born 1886.
232iii.Moshe Rokeach.
233iv.Pesach Dovid Rokeach, born 1892.
234v.Yocheved Mirel Rokeach.
235vi.Shabsi Yitzchok Rokeach.
236vii.Yehoshua Rokeach.
237viii.Rivka Rokeach.





74.  Pinchus5 Miller (Shabsi Yitzchok4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam).  He married Tobtcha Weinberg.

Children of Pinchus Miller and Tobtcha Weinberg are:238i.Shabsy6 Miller.
239ii.Esther Miller.
240iii.Chaskel Miller.
241iv.Lipshe Miller.
242v.Shlome Miller.
243vi.Pesach Dovid Miller, born 1912.





75.  Pesach Dovid5 Miller (Shabsi Yitzchok4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born 1873.  He married Sarah Hinda Baron, daughter of Eliezer Yerucham Baron.

Notes for Pesach Dovid Miller:
(1873 - March 20, 1926 [4 Nissan]). He was married to Sarah Hinda, daughter of R. Eliezer Yerucham Baron, of Krakow, a descendent of R. Chaim of Sanz. They lived in Bukowsko, Galicia, & had 3 children. Pesach Dovid last lived in Wien, Austria, where he passed away. I obtained a picture of his tombstone from the Schalom organization. Most of the family perished in the Holocaust. 

Children of Pesach Miller and Sarah Baron are:244i.Layza6 Miller, born Bet. 1890 - 1899.
245ii.Birtchu Miller.
246iii.Yitta Miller.





76.  Bayla Chaya5 Miller (Shabsi Yitzchok4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam).  She married Hersh Kahan.

Notes for Bayla Chaya Miller:
Bayla Chaya  (18? - 194?) was married to Hersh (Herman) Kahan, a descendant of the Kuntros Ha'Sfaikos. They lived in Sighet, Rumania, and had many children. I have been unsuccessful in locating any living survivors from this family, although some facts are known. 
In 1926 their address was Sighatul Mantati, Ilic Mares 24.  They had many children, including Nissel / Nellie Harnik (deceased, no children) and possibly a son/grandson in Long Island. Another son, Shabsi Kahan, lived in Israel, in Zichron Yaakov. There is also a granddaughter named Esther in Haifa. Herman Kahan had a brother (?), Joseph,  who lived in the Bronx at 485 Jackson Avenue, in 1926 . There was another brother (?) named Nachman. 
Herman died sometime around 1920.

Children of Bayla Miller and Hersh Kahan are:247i.Nellie6 Kahan, born 1901.
248ii.Shabsi Kahan.





78.  Miriam Malka5 Miller (Shabsi Yitzchok4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1881.  She married Yosef Zak.

Children of Miriam Miller and Yosef Zak are:249i.Shabsi Yitzchok6 Zak.
250ii.Pesach Dovid Zak.
251iii.Esther Zak.
252iv.Dvorah Zak.
253v.Chana Zak.
254vi.Rochel Zak.
255vii.Bayla Chaya Zak.

Notes for Bayla Chaya Zak:
Was taken away to Germany by Nazis. May have married there.

256viii.Yakov Zak, born 1919.
257ix.child Zak.
258x.child Zak.





79.  Avrohm Aba5 Diamant (Basha4 Miller, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born January 13, 1860.  He married Faiga Rochel Baruch.

Child of Avrohm Diamant and Faiga Baruch is:259i.Nusson6 Diamant, born May 25, 1886.





80.  Yosef5 Diamant (Basha4 Miller, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born December 05, 1868.  He married (1) Yehudis Spira.  He married (2) girl /?/.  He married (3) Yehudis Weil September 15, 1891 in Bardejov, Slovakia.

Notes for Yosef Diamant:
Yosef   (Dec 5, 1868 - 1936) was born in Malcov, Slovakia and lived in Bardejov, Slovakia. He was married 3 times, with children from at least 2 of his wives. He first married Yehudis Spira, lived in Gorlice, Galicia, and had 1 daughter. After Yehudis passed away, Yosef married Yehudis Weil, on September 15, 1891, in Bardejov, and had 3 children with her. 

Child of Yosef Diamant and Yehudis Spira is:260i.Toba6 Diamant, born September 06, 1890.





Children of Yosef Diamant and Yehudis Weil are:261i.Basha6 Diamant, born May 25, 1893.
262ii.Dave Diamant, born August 16, 1900.
263iii.Ray Diamant, born December 04, 1903.





81.  Chaskel5 Miller (Yuska4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1860 - 1865, and died Bet. 1927 - 1928 in Krynica, Poland.  He married Multsha Miller, daughter of Shabsi Miller and Hena.

Notes for Chaskel Miller:
Chaskel Miller married his cousin, Multsha (Amalia ?) , & they had 6 children. When they married they lived in Obrucna, Slovakia. After Multsha's father, Shabsi Miller, passed away, Chaskel moved to Krynica, Poland, where he had a hotel, the Villa Tatarska. 

Children of Chaskel Miller and Multsha Miller are:264i.Eilish6 Miller, died in Holocaust.  He married ?.

Notes for Eilish Miller:
Eilish was married and lived in Meleltz, Galicia. He had no children. He perished in the Holocaust.

 
265ii.Mylech Miller, died in Holocaust.  He married ?.

Notes for Mylech Miller:
Mylech was married and lived in Krynica. He was a talmid chochum. He owned the Villa New York together with his younger brother, Shaul. His entire family perished in the Holocaust.

 
266iii.Avrohm Miller, died in Holocaust.  He married ?.

Notes for Avrohm Miller:
Avrohm was married and lived in Krynica. His entire family perished in the Holocaust.

 
+267iv.Fannie Miller, born 1889; died Abt. 1942 in Holocaust.
268v.Shaul Miller, born 1904; died Abt. 1942 in Holocaust.  He married ?.

Notes for Shaul Miller:
Shaul Miller (1904 - 1942) was married and lived in Krynica. He was a talmid chochum. He owned the Villa New York together with his older brother, Mylech. He tried to escape by going to Bardejov, Slovakia, in the beginning of the war. His entire family perished in the Holocaust.

 
+269vi.Rochel Miller, born 1905; died Abt. 1942 in Holocaust.





82.  Avrohm Aba5 Miller (Yuska4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1866, and died 1936.  He married Hena Treitle.

Notes for Avrohm Aba Miller:
Avrohm Aba  (c1866 - 1936 [7 Kislev]) of Stropkov, Slovakia, was married to Hena Treitle (18? - 1943 [15 Adar I]) & they had 12 children, 10 of which survived to adulthood. All of the children, except for Itcha, perished in the Holocaust together with most of their families. 

Melody Amsel, in an email dated Tue, 22 Aug 2000 12:37:14 PM writes

A list of Stropkov Jews (compiled from transport lists, the 1942 census,and other sources) arranged  family--by--family rich in personal information. The latter is prelude to my forthcoming book (as yet unpublished) on Stropkov.

NOW ONLINE at: 

http://www.jewishgen.org/Yizkor/stropkov1/str003.html#M

On the web page she writes:

MULLER  Eduard (Cheskel), Sept. 15, 1912 (Stropkov), storekeeper, transported Mar. 28, 1942, Stropkov to Zilina, arrived in Auschwitz June 20, 1942, prisoner #40059, perished July 20, 1942 
         Zofia, Sept. 11, 1910 (Michalovce), transported May 23, 1942, from Stropkov, perished

MULLER  Geza, Apr. 9, 1893 (Sandal-Rovna), farmer, exemption, details unknown, perished 
         Shimon, Sept. 2, 1904 (Sandal), exemption, details unknown, perished

MULLER  Hanny Treitel, Feb. 1, 1870 (Stropkov), grandmother, grocer, exemption, details unknown, perished 
         Berta (Breindel), Oct. 14, 1898 (Stropkov ), daughter, exemption, details unknown, perished
         Mozes (Moishe), July 13, 1920 (Stropkov), grandson, deported from Presov, arrived in Auschwitz June 21, 1942, prisoner #40055, perished July 14, 1942
         Serena (Sara), Feb. 10, 1928, exemption, granddaughter, details unknown, perished
         Moishe Aron, June 1, 1932, exemption, grandson, details unknown, perished
         Heinrich (Chaim), Dec. 15, 1904 (Stropkov), son, grocer, transported May 23, 1942, Stropkov to Zilina,
         perished in Auschwitz Sept. 1, 1942
         Gizela Fried, 25.1907 (Vranov), Heinrich's wife, details unknown, perished
         Veva (Blimu), Nov. 25, 1934 (Stropkov), granddaughter, details unknown, perished
         Serena (Sara), Feb. 26, 1936 (Stropkov), granddaughter, details unknown, perished
         Malvina (Malka), July 23, 1937 (Stropkov), details unknown, perished
         Abie, date unknown (Stropkov), details unknown, perished

MULLER  Isak (Itsche), Apr. 27, 1907 (Stropkov), storekeeper, exemption, fled to Hungary, transported 1944 to Auschwitz, survived 
         Lila (Lea, Lytchu) Fogel, May 29, 1912 (Dubove), exemption, details unknown, survived
         Avraham (Avrum, Aba), July 7, 1938 (Stropkov), exemption, details unknown, perished
         Mozes, July 4, 1940 (Stropkov), exemption , details unknown, perished
         Josef, May 31, 1942 (Stropkov), details unknown, perished

MULLER-FRIEDMANN  Julius, Nov. 8, 1907 (Valassa Bela), transported May 23, 1942, Stropkov to Rejowiec, perished 
         Helena Friedmann (daughter of Salamon Friedmann), Jan. 6, 1909 (Stropkov), transported May 23, 1942, Stropkov to Rejowiec, perished
         Osias Friedmann, Mar. 14, 1940 (Stropkov), transported May 23, 1942, Stropkov to Rejowiec, perished

 
                  
                 
                    

 

Children of Avrohm Miller and Hena Treitle are:270i.Moshe6 Miller, born April 14, 1890.  He married Sarah Fraidle Schermer.
271ii.Duvtcha Miller, born July 16, 1892.  He married Chaytchu Rebhun.
272iii.Chana Rita Miller, born October 03, 1894.
273iv.Eilah Miller.
274v.Refuel Miller, born December 26, 1896.
275vi.Gittel Miller, born December 15, 1897.
276vii.Breindle Miller, born November 07, 1899.
277viii.Basha Miller, born July 26, 1901.

Notes for Basha Miller:
http://www.jewishgen.org/Yizkor/stropkov1/str005.html#W

WOLF  Isak Meyer (Srul), Oct. 29, 1901 (Circ), transported May 23, 1942, Stropkov to Zilina, perished 
         Bozena (Basha, Berta) Muller, July 26, 1901 (Stropkov), transported May 23, 1942, Stropkov to Zilina,
         perished
         Josef (Yossi), Dec. 2, 1927 (Stropkov), transported May 23, 1942, Stropkov to Zilina, perished
         Sara Lea (Suri), Nov. 22, 1932 (Stropkov), transported May 23, 1942, Stropkov to Zilina, perished
         Fanny (Faigy), May 14, 1935 (Stropkov), transported May 23, 1942, Stropkov to Zilina, perished
         Avraham (Abie), Dec. 3, 1936 (Stropkov), transported May 23, 1942, Stropkov to Zilina, perished

278ix.Chaim Miller, born December 15, 1904.
279x.Itcha Miller, born April 27, 1907.
280xi.Yechezkel Miller.
281xii.Libu Miller.





83.  Levi Yitzchok5 Miller (Yuska4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1868, and died March 09, 1932.  He married Chay Gitsha.

Notes for Levi Yitzchok Miller:
Levi Yitzchok  (186? - March 9, 1932 [1 Adar II]) of Krynica, Poland. He was married to Chay Gitsha (Chaya Gittel). They had about 4 children. He had the Villa Tel-Aviv & perhaps the Villa Miller as well. He had either a brother-in-law or son-in-law named Pesach Linker, who had a son Moshe, from Slovakia or Hungary. He lived by his grandmother, Chay Gitsha, and was a baker. The Guttfriend's had a restaurant in one of Levi Yitzchok's hotels. Their is a living nephew to them: a Kahne from Israel, now in Boro Park (Bobov?), the son of Srael of Dabrowa. He may be able to find out more information about the family. Levi Yitzchok's family perished in the Holocaust aside from Yosef Masbaum who related new details of his family in May of 1999. Yosef is the only survivor from all of Levi Yitzchok's children and grandchildren. 

Children of Levi Miller and Chay are:282i.Chana6 Miller, born Abt. 1895.
283ii.Eila Miller.
284iii.Dovid Miller.
285iv.Miriam Miller.
286v.Sala Miller.





84.  Pesach Dovid5 Miller (Yuska4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born July 12, 1873, and died 1937.  He married Raizel Guwertmann 1887.

Children of Pesach Miller and Raizel Guwertmann are:287i.Tema Leah6 Miller, born 1895.
288ii.Chana Rita Miller, born 1897.
289iii.Chaskel Miller, born 1899.
290iv.Eilish Miller, born 1901.
291v.Mordcha Leib Miller, born 1903.  He married Rivka Miller.
292vi.Chaim Miller, born 1904.
293vii.Mendel Miller, born 1905.
294viii.Max Miller, born 1909.





85.  Shmuel Aron5 Miller (Naftali4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born 1865, and died 1942 in Perished in Holocaust.  He married Chava Vildstein, daughter of Matisyahu Vildstein.

Notes for Shmuel Aron Miller:
R. Shmuel Aron, Labiva (Labowa) Ruv  (1865 - 1942 [17 Elul]). He and almost all of his descendants perished in the Holocaust. R. Shmuel Aron was extremely sharp, and at the age of 18 was appointed Rabbi of Yidlitch, Galicia. He was married more than once, although only one wife is known: Chava, daughter of R. Matisyahu Vildstein, of Labowa (near Maciejowa). They had 4 children. After World War I, R. Shmuel Aron accepted the post of Rabbi at Labowa, where he became known as Labiva (Labowa) Ruv. He headed a yeshiva there. In 1940 he was sent to the Nowy Sacz ghetto, where he perished. 

Children of Shmuel Miller and Chava Vildstein are:295i.Yoel6 Miller.
296ii.Ben-Zion Miller.
297iii.Sara Chula Miller, born Bet. 1897 - 1898.
298iv.Rochel Leah Miller.





86.  Nechama5 Miller (Naftali4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1872, and died 1940.  She married Yitzchok Nuta Stengal.

Notes for Nechama Miller:
Nechuma  (c1872 - 1940) of Gorlice, Poland was married to Yitzchok Nuta Stengal. They had 10 children, 5 of which survived to adulthood. Yitzchok Nuta and two of his children, with their families, perished in the Holocaust. 

Children of Nechama Miller and Yitzchok Stengal are:299i.Sarah Chula6 Stengal, born 1900.
300ii.Yechiel Stengal, born 1902.
301iii.Luzer Stengal, born 1904.
302iv.Buroch Stengal, born 1907.
303v.Avrohm Stengal, born Bet. 1907 - 1912.
304vi.Roza Stengal, born Bet. 1908 - 1913.
305vii.Chaskel Stengal, born 1913.
306viii.child Stengal.
307ix.child Stengal.
308x.child Stengal.





87.  Moshe5 Miller (Naftali4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born 1875, and died July 23, 1942 in Perished in Holocaust.  He married Nechama Yuta Eisenberg, daughter of ? Eisenberg and Chana.

Notes for Moshe Miller:
R. Moshe'le dayan  (1875 - 1942 [9 Av]) of Gorlice, Poland was married to Nechama Yuta (daughter of Chana Rivka) Eisenberg and they had 5 children. R. Moshe'le assisted his father, and after his passing, took over his position as dayan. He was also a posek, teacher of talmud (daf yomi), orator, mohel, the only m'sader gittin in the city, active in all community affairs, and beloved by all. He was sent to Belzitz on 9 Av, 1942, along with 200 other Jews. His entire family perished in the Holocaust. 

Children of Moshe Miller and Nechama Eisenberg are:309i.Dovid6 Miller.
310ii.Sara Chivala Miller.
311iii.gilr Miller.
312iv.girl Miller.
313v.Chezkel Miller, born Bet. 1927 - 1928.





88.  Yaakov5 Miller (Naftali4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1878, and died 1940 in Perished in Holocaust.  He married Rochel Schermer, daughter of Berel Schermer and Rivka Miller.

Notes for Yaakov Miller:
Yankel  (187? - 1940) of Gorlice, Galicia was married to his cousin, Rochel Schermer of Tylicz, Galicia. They lived in Presov, Slovakia & had 5 children. Only 1, Moshe, survived to adulthood (The Presov records available through the Family History Centers, should give conclusive dates of birth/death & full Hebrew names). The entire family perished in the Holocaust. 


Children of Yaakov Miller and Rochel Schermer are:314i.Yosef6 Miller.
315ii.Chule Miller.
316iii.Moshe Miller, born Abt. 1913.
317iv.Yitzchok Miller, born January 05, 1924.
318v.child Miller.





89.  Chaya5 Miller (Naftali4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1879, and died in Perished in Holocaust.  She married Shimon Nussbaum.

Children of Chaya Miller and Shimon Nussbaum are:319i.Yitzchok6 Nussbaum.
320ii.Dovid Nussbaum.
321iii.Boruch Nussbaum.
322iv.Sara Chivala Nussbaum.
323v.Yankel Nussbaum.





90.  Itcha5 Reiss (Naftali4 Miller, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born 1901, and died in Perished in Holocaust.  He married Ratzah Katz.

Notes for Itcha Reiss:
Itcha  (June 12, 1901 - 1944 [18 Shevat]) was born in Majdanka. His surname was Reiss. He lived in Mukachevo, Ukraine and was married to Ratzah, daughter of R. Menachem Katz. They had 6 children, 5 of which survived to adulthood. During the Holocaust he was taken to a work camp and later to Ramsdorf-Buchenwald, where he perished. His number was 56757. His wife and young children were put in a work ghetto in Mukachevo. From there they were sent to Auschwitz, where they perished, on 4 Sivan 1944. The only survivor was Jack (Yankel), who related many of these details. 

Children of Itcha Reiss and Ratzah Katz are:324i.Avrohm6 Reiss, born 1923.
325ii.Malka Reiss, born 1925.
326iii.Jack Reiss, born 1928.
327iv.Naftali Reiss, born 1931.
328v.Basha Raizel Reiss, born 1934.
329vi.Fraida Reiss, born 1940.





91.  Sara5 Reiss (Naftali4 Miller, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born 1904, and died in Perished in Holocaust.  She married Leibel Yugund, son of ? Yugund.

Notes for Sara Reiss:
Sarah  (1903/4 - 1940) of Gorlice, Poland was married to Leibel Yugund, of Sukol, a chasid of Belz. They lived in Gorlice & had 5 or 6 children. R. Leibel was a dayan there. The entire family perished in the Holocaust. 

Children of Sara Reiss and Leibel Yugund are:330i.child6 Yugund.
331ii.child Yugund.
332iii.child Yugund.
333iv.child Yugund.
334v.child Yugund.





92.  Sara5 Schonfeld (Shlomo4, Pesach Dovid3 Miller, Avrohm Aba2, Pesach1 Langsam) was born 1879 in TiszaKerecseny, Hungary, and died 1952.  She married Pesach Dovid Miller January 08, 1901 in Hodasz, Hungary, son of Avrohm Miller and Breindel Zimmermann.

Notes for Sara Schonfeld:
Sarah   (1879 - 1952 [27 Sivan]) of TiszaKerecseny, Hodasz, & Nyirbator, Hungary, then Kosice, Slovakia, and finally New York City. Sarah came to NY on Sep 12, 1932, aboard the SS Ile de France, together with her daughter, Viola. She was married to her first cousin, once removed, Pesach Dovid Miller  on January 8, 1901, in Hodasz, Hungary. He came to the US much earlier. She was pregnant 11 times, with 5 children surviving to adulthood. 

 
Notes for Pesach Dovid Miller:
Pesach Dovid  (October 3, 1874-1974 [14 Teves]) received a blessing for longevity from the Sanzer Ruv (R. Chaim Halberstam) while he was a small child. He was married to his first cousin, once removed, Sara Schonfeld  on January 8, 1901, in Hodasz, Hungary. She was pregnant 11 times, with 5 children surviving to adulthood. They lived in many places, including Hodasz, Nyirbator, Kosice, & New York City. Pesach Dovid came to live in the US during the early 1920's. He did come on at least two other earlier occasions. He made frequent trips back to Europe to visit his family. His wife and youngest daughter came in 1932. Two of their children (Freitchu & Shabsy), with their entire families, perished in the Holocaust.

Children of Sara Schonfeld and Pesach Miller are:335i.Chana Rita6 Miller, born September 12, 1903.
336ii.Freitchu Miller, born February 15, 1905.
337iii.Erzsebet Miller, born 1911.
338iv.Shabsy Miller, born September 25, 1912.
339v.Naftuli Miller, born May 12, 1914.
340vi.Miklos Miller, born 1917.
341vii.Viola Miller, born February 13, 1920.





93.  Benny5 Schonfeld (Shlomo4, Pesach Dovid3 Miller, Avrohm Aba2, Pesach1 Langsam) was born 1880 in TiszaKerecseny, Hungary, and died 1961.  He married Shaindle Sarah Schwartz March 25, 1902 in Ujfeherto, Hungary.

Notes for Benny Schonfeld:
Benny   (1880? - 1961) of TiszaKerecseny & Hudjudorog, Hungary, New Millford, CT, & then New York City, He married Shaindle Sarah Schwartz on Mar 25, 1902, in Ujfeherto, Hungary, and they had 4 children. Benny came to the US at least twice. He came to stay, aboard the SS Grosser Kurfurst, via the port of New York, on Jan 17, 1913. On the ship manifest it indicates that Benny claims to have been in the US 1905/9. He first stayed by his sister Bertha, but later moved to New York City. His family moved to Szabolcs, Hungary, and came to NY aboard the SS France, on Jan 16, 1921. Benny was then living at 751 E. 5th St., NYC. 

Children of Benny Schonfeld and Shaindle Schwartz are:342i.Dora6 Schonfeld, born May 23, 1905.
343ii.Morton Schonfeld, born March 24, 1906.
344iii.Sam Schonfeld, born March 23, 1911.
345iv.Izzy Schonfeld, born October 13, 1912.





94.  Bertha5 Schonfeld (Shlomo4, Pesach Dovid3 Miller, Avrohm Aba2, Pesach1 Langsam) was born 1882 in TiszaKerecseny, Hungary, and died April 09, 1975.  She married David Miller, son of Simon Miller and Hannah Friedman.

Notes for Bertha Schonfeld:
Bertha   (1882 - Apr 9, 1975 [28/9 Nissan]) of TiszaKerecseny, Hungary, then West Hartford, CT. Bertha came to the US via the port of New York aboard the SS Roterdam, on Dec 4, 1899. She listed her cousin, Abraham Miller, of 67 Lewis St., New York City, as her destination. Abraham is listed in the 1899 NYC directory as being in school. Bertha's uncle, Shabsi of Bukowsko, had a son, Avrohm, that came to the US for a short time to study glassmaking. He does not show up in the 1900 NYC directory or census. Bertha married her first cousin, once removed, David Miller & they had 3 children. They lived in New Millford, where he owned a department store. They later retired to West Hartford, CT. 

Children of Bertha Schonfeld and David Miller are:346i.Betty6 Miller, born 1904.
347ii.Ruth Miller, born 1906.
348iii.Manny Miller, born 1909.





95.  Rivka5 Schonfeld (Shlomo4, Pesach Dovid3 Miller, Avrohm Aba2, Pesach1 Langsam) was born April 14, 1884 in TiszaKerecseny, Hungary, and died August 18, 1963 in Cleveland, OH.  She married Meyer Grunfeld.

Notes for Rivka Schonfeld:
Rivka   (Apr 14, 1884 - Aug 18, 1963 [28 Av]) of TiszaKerecseny, Hungary, then Cleveland, OH. She married Meyer Grunfeld on Oct 25, 1904, in Hodasz, Hungary & they had 4 children. Meyer was born in Hujdunanas, Hungary, on Aug 1, 1880. He & Rivka lived in Miskolc, Hungary. Meyer died while they were still in Miskolc, c.1915. Rivka came to US via the port of New York, on Jan 20, 1933, aboard the SS Leviathan, sailing from Cherbourg, France. She stayed with her daughter, Irene, in the Bronx. In 1952 Rivka, (together with Irene) moved to Cleveland, OH. 


Children of Rivka Schonfeld and Meyer Grunfeld are:349i.Mendel6 Grunfeld, born 1905.
350ii.Irene Grunfeld, born Abt. 1906.
351iii.Bernie Grunfeld, born Abt. 1907.
352iv.Ica Grunfeld, born 1913.





96.  Harry5 Schonfeld (Shlomo4, Pesach Dovid3 Miller, Avrohm Aba2, Pesach1 Langsam) was born 1885 in TiszaKerecseny, Hungary, and died 1956.  He married Raizel Klein November 12, 1907 in Hujdunanas, Hungary.

Notes for Harry Schonfeld:
Harry   (c. 1885 - 1956 [21 Nissan]) of TiszaKerecseny, & Hujdunanas, Hungary, then West Hartford, CT & New York City. He married Raizel Klein on Nov 12, 1907, in Hujdunanas, Hungary, & had 4 children. Harry was divorced from his wife and came to the US through the port of New York aboard the SS George Washington, on April 14, 1913. Raizel and their two surviving sons came in the 1920's. 

Children of Harry Schonfeld and Raizel Klein are:353i.Nucham6 Schonfeld, born Abt. 1908.
354ii.Pesach Dovid Schonfeld, born 1910; died 2000.  He married Chana Mindel Newman.
355iii.Louie Schonfeld, born 1913.
356iv.Yosef Shmuel Schonfeld, born Abt. 1914.





99.  Chana Rita5 Schonfeld (Shlomo4, Pesach Dovid3 Miller, Avrohm Aba2, Pesach1 Langsam) was born August 25, 1893, and died 1980.  She married Meyer Fried June 10, 1913 in Nyirbator, Hungary.

Notes for Chana Rita Schonfeld:
Chana Rita   (Aug 25, 1893 - 1980 [18 Sivan]) of TiszaKerecseny, Hungary. She married Meyer Fried on June 10, 1913, in Nyirbator, Hungary, where they lived & had 6 children. Meyer was born on Dec 22, 1893 in either Hossupayi or Nagykallo, Hungary. He was of the tribe of Levi. After the war the family was in DP camp Ebelsberg, in Linz, Austria. Chana Rita, Meyer, and their son, Mendel, came to the U.S. aboard the SS Sturgin, on June 8, 1949, via the port of Boston, MA. The rest of her family followed. 

Children of Chana Schonfeld and Meyer Fried are:357i.Mugda6 Fried, born 1919.
358ii.Chava Fried, born 1921.
359iii.Mordechai Fried, born 1923.
360iv.Lola Fried, born 1928.
361v.Mendel Fried, born 1930.
362vi.Andor Fried, born 1935.





100.  Ozer5 Miller (Usher Zelig4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1860 - 1869.  He married ? Klagsbald.

Children of Ozer Miller and ? Klagsbald are:363i.child6 Miller.
364ii.child Miller.





101.  Moshe5 Miller (Usher Zelig4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born 1870, and died 1924 in Wadowice, Poland.  He married Faigel Rappaport, daughter of Boruch Rappaport and ? Reigler.

Notes for Moshe Miller:
Moshe  (1870 - 1924 [5 Adar II]) married Faigel Rappaport, daughter of R. Boruch (who was married to a Reigler), and had 5 children. Moshe was first shochet in Amsana (Mszana Dolna), and later dayan & chazan in Wadowice, Galicia. In his later years his vision became impaired but he was still able to daven flawlessly, by heart. In fact, his memory was so good that he could open just the bottom portion of any page in Shulchan Aruch (Code of Jewish Law) and by reading the last few lines of the commentary (Pri Migadim), be able to recite the entire page. He also maintained a yeshiva out of his home. Faigel perished in the Holocaust, on 20 Tamuz, 1943. Almost the entire remainder of the family also perished. 

Children of Moshe Miller and Faigel Rappaport are:365i.Esther6 Miller.
366ii.Ahron Miller.
367iii.Ittle Miller.
368iv.Chaim Boruch Miller, born January 13, 1906; died 1996.

Notes for Chaim Boruch Miller:
Shlome Boruch (Jan 13 1906 - 1996 [29 Kislev]) married Esther Zaks, in 1926. He changed his name to his maternal grandmother's maiden name; Reigler. They lived in Jarwarsnia, Galicia, but had no children. Esther perished in the Holocaust. After the war, Shlome Boruch came to Brooklyn, where he remarried.

+369v.Chaskel Miller, born Abt. 1886; died 1942 in Perished in Holocaust.





102.  Ettel5 Miller (Usher Zelig4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) died in Perished in Holocaust.  She married Yankel Weissbloom.

Notes for Ettel Miller:
Ettel  (18? - 19?) married Yankel Weissbloom. They lived in Wadowice, Galicia & had children. Most of this family, with the exception of one son, perished in the Holocaust. The one son (Moshe) moved to Israel, but passed away around 1980. I am still trying to find out more information regarding this family.

Children of Ettel Miller and Yankel Weissbloom are:370i.Moshe6 Weissbloom, died in circa 1980.
371ii.child Weissbloom.





104.  Yosef5 Lauer (Sora Roiza4 Miller, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born November 15, 1862 in Liso, Slovakia, and died 1932.  He married Rachel Szamet September 06, 1887, daughter of Naftali Szamet and Freide.

Notes for Yosef Lauer:
Yosef  (Nov 15, 1863 - 1932) was born in Liso or Malcov, Slovakia. He married Rachel Szamet (also Sameth, born in Sarospatak, Slovakia, daughter of Naftali (haCohen) & Freide) on Sept 6, 1887. They lived in Richvald and Malcov, where they had 10 children. Yosef came to NY aboard the SS Kaiser Wilhelm II, Nov 30, 1904. His wife and some of their children arrived in 1906. 

Children of Yosef Lauer and Rachel Szamet are:372i.Ethel6 Lauer, born August 28, 1888.
373ii.Anna Lauer, born April 18, 1890.
374iii.Lena Lauer, born February 19, 1892.
375iv.Hena Lauer, born February 19, 1892.
376v.Isidore Lauer, born May 30, 1894.
377vi.Tillie Lauer, born May 06, 1896.
378vii.Samuel Lauer, born January 05, 1901.
379viii.Charles Lauer, born March 15, 1903.
380ix.George Lauer, born Abt. 1905.
381x.Aaron Lauer, born October 16, 1911.





105.  Malka Leah5 Lauer (Sora Roiza4 Miller, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1863 - 1870, and died Aft. 1918.  She married Eliezer Deutsch.

Notes for Malka Leah Lauer:
Malka Leah  (c.1865 - 19?) was married to Eliezer Deutsch and lived in Mukachevo, now in Ukraine. They had 4 children. Malka Leah died after World War I, of cholera. [There was a report that they had a son who changed his name to Chayruti, in Tel-Aviv. His son is a lawyer there (Dizengoff 10 ?). He maybe Ezri Cheruti, on Rehov Melchett,23, Kiryat Ono.] 

Children of Malka Lauer and Eliezer Deutsch are:382i.Rochel6 Deutsch.
383ii.Shani Deutsch.
384iii.Herschel Deutsch.
385iv.Icu Deutsch.





106.  Lazar5 Lauer (Sora Roiza4 Miller, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born August 15, 1871 in Malcov, Slovakia, and died 1931.  He married Hinde Mindel Rosenzweig March 05, 1889 in Slovakia, daughter of Moshe Rosenzweig and Henna Landau.

Notes for Lazar Lauer:
Lazar  (Aug 15, 1871 - 1931 [13 Adar]) was born in Malcov, Slovakia. He was married on Mar 5, 1889, to Hinde Mindel Rosenzweig. She was born in Bardejov, to Moshe & Henna Landau, the granddaughter of R' Yechezkel Landau, the Noda B'Yehuda. Henna was called the Langa Henna, because she was tall like her grandfather. Lazar & Hinde had 10 children. He came to NY on Mar 15, 1906, aboard the SS Bulcher. Hinde came on Sep 28, 1910, aboard the SS Grosser Kurfurst. 

Children of Lazar Lauer and Hinde Rosenzweig are:386i.Esther6 Lauer, born November 1889.
387ii.Isidore Lauer, born January 29, 1891.
388iii.Harry Lauer, born 1895; died July 30, 1918.

Notes for Harry Lauer:
Buried in Washington Cemetery in Brooklyn; marrisa - 718 377 8690
Died in France (fought in WWI) on 
July 30, 1918. He was 23 years old.
Cemetery 1, Post 141, Row 3, Grave 9.
Linas Hazedek Society

389iv.Tillie Lauer, born July 1897.
390v.Jack Lauer, born August 1899.
391vi.Sidney Lauer, born March 1901.
392vii.Gussie Lauer, born December 1903.
393viii.Helen Lauer, born March 1906.
394ix.Moshe Lauer, born July 1911.
395x.George Lauer, born April 01, 1914.





107.  Chana5 Lauer (Sora Roiza4 Miller, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born 1872, and died Abt. 1942.  She married Shimon Keller.

Notes for Chana Lauer:
Chana  Lauer (1872 - 1942?) was married to Shimon Keller. They lived in Sadurav (Ersszodoro, 120 km WNW of Cluj), now in Rumania, and had 8 children. She died of a heart attack at the onset of the Holocaust, when they took her daughter away. The entire family, except for Alexander Kauftheil, perished in the Holocaust. 

Children of Chana Lauer and Shimon Keller are:396i.Miriam6 Keller, born Bet. 1890 - 1899.
397ii.Nessanel Keller.
398iii.Chaskel Keller.
399iv.Rivka Keller, born 1905.
400v.Gittel Keller.
401vi.Zeesel Keller.
402vii.Shprintza Keller.
403viii.Esther Keller.





109.  Reygush5 Lauer (Sora Roiza4 Miller, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born December 03, 1878 in Malcov, Slovakia.  She married (1) ? in Khust.  She married (2) Peretz Klein.

Notes for Reygush Lauer:
Reygush  (Dec 3, 1878 - 19?) was born in Malcov. She was married twice, first in Khust, where she had 1 daughter. Her husband passed away and she married Peretz Klein. They lived in Mukachevo and had 2 daughters.  

Child of Reygush Lauer and ? is:404i.Chava6 ?.





Children of Reygush Lauer and Peretz Klein are:405i.girl6 Klein.
406ii.girl Klein, died in drowned in Tupya River, before the war.





110.  Bayla5 Lauer (Sora Roiza4 Miller, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born October 03, 1881 in Malcov, Slovakia, and died 1932.  She married Moshe Shmuel Ehrman.

Notes for Bayla Lauer:
Bayla  (Oct 3, 1881 - 1932) was born in Malcov. She married Moshe Shmuel Ehrman. They lived in Kralovsky Chlmec (Kiraly Helmec), Slovakia and had 7 children. 

Children of Bayla Lauer and Moshe Ehrman are:407i.Gizi6 Ehrman, born 1905.
408ii.Schoni Ehrman, born 1907.
409iii.Erno Ehrman.
410iv.Etush Ehrman.
411v.Itchu Ehrman, born Abt. 1914.
412vi.Helen Ehrman.
413vii.Ahron Ehrman, born 1920.





111.  Chaim5 Lauer (Sora Roiza4 Miller, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born May 01, 1884, and died 1945 in Holocaust.  He married Rochel Greenwald.

Notes for Chaim Lauer:
Chaim   (May 1, 1884 - 1945) married Rochel Greenwald. They lived in Presov, Slovakia and had 12 children. While hiding with family members from the Nazis, his grandson ran out of hiding. While trying to retreive him they were mistakenly killed by the partisans at the end of the war. 

Children of Chaim Lauer and Rochel Greenwald are:414i.Nussanel6 Lauer, born 1901.
415ii.boy Lauer, born 1903.
416iii.Leibish Lauer, born 1904.
417iv.Margit Lauer, born 1906.
418v.Boruch Lauer.
419vi.Tzirel Lauer.
420vii.Gizelle Lauer, born 1913.
421viii.Chaya Eta Lauer.
422ix.Malka Leah Lauer.
423x.Sholom Lauer.
424xi.Alex Lauer, born 1919.
425xii.Sidonia Lauer, born 1921.





112.  Yulishka5 Lauer (Sora Roiza4 Miller, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born December 05, 1888 in Malcov, Slovakia, and died October 1944 in Perished in Holocaust.  She married Berti Fried.

Notes for Yulishka Lauer:
Yulishka  (Dec 5, 1888 - Oct 1944) was born in Malcov. She married Berti Fried, son of Meir and lived in Korolevo, Ukraine and had 2 sons. Around the end of 1927 they moved to Zilina, Slovakia, where they opened a kosher restaurant. In 1942 Berti went to Nitra, where the rebbe there hid about 2000 Jews in a small vatican. He was subsequently sent to Buchenwald where he was shot in April of 1944. Yulishka perished in the gas chambers of Auschwitz in October, 1944. Alex tells of being saved nine times from certain death during the terrible period of the shoah (Holocaust). 


Children of Yulishka Lauer and Berti Fried are:426i.Alexander6 Fried, born 1925.
427ii.Icsu Fried, born 1927.





113.  Bayla5 Miller (Avrohm4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1870, and died in Perished in Holocaust.  She married Tovia Einhorn Abt. 1895.

Notes for Bayla Miller:
Bayla  (c.1870 - c.1942) married around 1895, to Tovia Einhorn, of Limanowa, Galicia. They lived in Wadowice, Galicia, where they had 10 daughters and 1 son. Tovia supported himself as a fish merchant. After his father-in-law passed away, he became shochet and also a chazan in Wadowice. The family also moved into Avrohm's house, shared by Bayla's youngest brother, Ozer. One of Bayla and Tovia's sons-in-law was a man named Levi, living in Liminov, Poland. Almost all of the family perished in the Holocaust. According to the Wadowice Yizkor book, Tovia and a portion of his family were sent to Auschwitz on 9 Av, 1943. 

Children of Bayla Miller and Tovia Einhorn are:428i.Etka6 Einhorn.
429ii.Roiza Einhorn.
430iii.Sida Einhorn.
431iv.Lutka Einhorn.
432v.Hela Einhorn.
433vi.Manya Einhorn.
434vii.Yisroel Einhorn.
435viii.Freida Einhorn.
436ix.Tushka Einhorn.
437x.Kula Einhorn.
438xi.girl Einhorn.





114.  Shaya Zelig5 Miller (Avrohm4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1870, and died Abt. 1942 in Perished in Holocaust.  He married (1) girl Reifer.  He married (2) Tzirel Baigel, daughter of Meir Baigel.

Notes for Shaya Zelig Miller:
Shaya Zelig  (c.1870 - c.1942) was married to a Reifer and they had 3 daughters. He then married (Liba) Tzirel, daughter of Meir Baigel, and they had 9 children. He was much older than her. Shaya Zelig was an expert shochet, first living in Mislenice and then in Krakow. He was so fast that people used to come and watch him, just to learn his technique. He was killed in the Pordguze Lager. Almost all of the family perished in the Holocaust. 

Esther Mandelbaum, daughter of Ahron Miller, supplied me with much info about this branch. Her m-in-l is a sister to one of Shaya Zelig's d-in-laws.
(718) 436 5096
Jan. 1997

Children of Shaya Miller and girl Reifer are:439i.Faigel6 Miller.
440ii.girl Miller.
441iii.girl Miller.





Children of Shaya Miller and Tzirel Baigel are:442i.Gittel6 Miller.
443ii.girl Miller.
444iii.Shlomo Miller, born 1906.
445iv.Fischel Miller.
446v.Sala Miller.
447vi.Moshe Leib Miller.
448vii.Leah Miller.
449viii.Esther Miller.
450ix.Sholom Miller.
451x.Shaindel Miller.





115.  Shlomo5 Miller (Avrohm4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1875 - 1879, and died Abt. 1944.  He married Henya Goldstein.

Notes for Shlomo Miller:
Shlomo  (1875/9 - 1944?) married Henya Goldstein and lived in Gensenkirchen (Garmisch Partenkirchen?), Germany. They had 10 children. All but Avrohm took their mother's maiden name, Neuman. 

Children of Shlomo Miller and Henya Goldstein are:452i.Yeshaya6 Neuman.
453ii.Manya Neuman.
454iii.Gittel Neuman.
455iv.Yisroel Yitzchok Neuman.
456v.Nusson Neuman.
457vi.Yakov Neuman.
458vii.Sabka Neuman.
459viii.Yosef Neuman.
460ix.Leah Neuman.
461x.Eli Neuman.
462xi.Avrohm Miller.





116.  Chaya5 Miller (Avrohm4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) died Abt. 1942 in Perished in Holocaust.  She married Avrohm Sammet.

Notes for Chaya Miller:
Chaya  (18? - 19?) married Avrohm Sammet, son of Yokil Volf Sammet, dayan in Auschwitz. They had 12 children and lived in Wadowice. Avrohm did not have a livelihood, and frequently visited his sister, Matel Neumark, in Auschwitz. The family perished in the Holocaust. 

Children of Chaya Miller and Avrohm Sammet are:463i.Yisroel Yitzchok6 Sammet.
464ii.Yokil Volf Sammet.
465iii.Sala Sammet.
466iv.Leah Sammet.
467v.Yenta Sammet.
468vi.Chava Sammet.
469vii.Roiza Sammet.
470viii.Mindel Sammet.
471ix.Pera Sammet.
472x.girl Sammet.
473xi.girl Sammet.
474xii.girl Sammet.





117.  Eliyahu5 Miller (Avrohm4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) died in Perished in Holocaust.  He married Yocheved Gittfrieder, daughter of Shaul Gittfrieder.

Notes for Eliyahu Miller:
Eliyahu  (18? - 194?) married Yocheved Gittfrieder (daughter of R. Shaul, dayan in Auschwitz) and had 6 children. They lived in Auschwitz, Poland. The family, except for Sala, perished in the Holocaust. Most of the children were not married before the war. 

Children of Eliyahu Miller and Yocheved Gittfrieder are:475i.Sala6 Miller, born 1925.
476ii.Leah Miller.
477iii.Gittel Miller.
478iv.Reuven Miller.
479v.Yitzchok Miller.
480vi.Avrohm Miller.





118.  Shabsy5 Miller (Avrohm4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) died in Perished in Holocaust.  He married Itka /?/.

Notes for Shabsy Miller:
Shabsy  (18? - 19?) married, Itka, a daughter of the Zakopane shochet. After serving as shochet in Zakopane, they moved to Wadowice and had 6 children. Shabsi also worked in Berlin as an accountant. The entire family, except for Henya, perished in the Holocaust. 

Children of Shabsy Miller and Itka /?/ are:481i.Yisroel6 Miller.
482ii.Henya Miller, born 1915.
483iii.child Miller.
484iv.child Miller.
485v.child Miller.
486vi.child Miller.





119.  Chaim Shimon5 Miller (Avrohm4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born 1880, and died Bet. 1941 - 1942 in Perished in Holocaust.  He married Gittel Kanner.

Notes for Chaim Shimon Miller:
Chaim Shimon  (1880 - 1941/2) married Gittel Kanner. They had 5 children and lived in Auschwitz, Galicia, where he was mohel. They and their oldest sons, with their families, perished in the Holocaust. 

Children of Chaim Miller and Gittel Kanner are:487i.Moshe6 Miller, born 1903.
488ii.Shlomo Miller, born 1905.
489iii.Yisroel Miller, born 1908.
490iv.Ahron Miller, born 1910.
491v.Herschel Miller, born 1915.





120.  Gittel5 Miller (Avrohm4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) died 1942 in Perished in Holocaust.  She married Chaskel Miller, son of Moshe Miller and Faigel Rappaport.

Notes for Gittel Miller:
Gittel  (188? - 1942?) married her cousin, Chezkel Shraga Miller. They lived in Wadowice and had three children. They later moved to Auschwitz, where Chezkel Shraga was a chazan and a shochet. During the war they managed to escape the deportations and fled the city. They were caught at the border of Czechoslovakia and Germany and were killed one by one. 

Children of Gittel Miller and Chaskel Miller are:492i.Avrohm6 Miller.
493ii.Moshe Miller.
494iii.Esther Miller.





121.  Ozer5 Miller (Avrohm4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1890, and died Abt. 1942 in Perished in Holocaust.  He married Mecha Ibbersfeld.

Notes for Ozer Miller:
Ozer  (189? - 1942?) married Mecha Ibbersfeld, the daughter of the Sucha shochet. They lived in Wadowice, in the same building as Ozer's father, Avrohm. Ozer was a shochet, chazan, mohel, and melamid (teacher). They had 11 sons and 1 daughter. None of the children were married. The oldest, Gittel, was only about 17. The entire family perished in the Holocaust. 

Children of Ozer Miller and Mecha Ibbersfeld are:495i.Gittel6 Miller, born Abt. 1925.
496ii.Shlomo Lipa Miller.
497iii.Avrohm Miller.
498iv.Elimelech Miller.
499v.Moshe Leib Miller.
500vi.Yisroel Yitzchok Miller.
501vii.Yehoshua Miller.
502viii.boy Miller.
503ix.boy Miller.
504x.boy Miller.
505xi.boy Miller.
506xii.boy Miller.

 




Generation No. 5

130.  Bayla6 Reiss (Breindel5 Miller, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born May 01, 1866, and died in Holocaust.  She married Avrohm Goldberg.

Children of Bayla Reiss and Avrohm Goldberg are:507i.Esther7 Goldberg.
508ii.Dina Goldberg.
509iii.Breindle Goldberg.





131.  Yosef Hersh6 Reiss (Breindel5 Miller, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born November 19, 1869, and died in Holocaust.  He married Sarah Wald.

Children of Yosef Reiss and Sarah Wald are:510i.Blima7 Reiss.
511ii.Mendel Reiss, born 1897.
512iii.Rivka Reiss.
513iv.Rochel Reiss.
514v.Shlome Reiss.
515vi.Malka Reiss.
516vii.Naftuli Reiss.
517viii.Shaindle Reiss.
518ix.Mordcha Dovid Reiss.





132.  Yeshaya6 Reiss (Breindel5 Miller, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) died in Holocaust.  He married Dreizel Hoflich.

Children of Yeshaya Reiss and Dreizel Hoflich are:519i.Chaya Sarah7 Reiss.
520ii.Michael Reiss.
521iii.Breindle Reiss.
522iv.Yehudis Reiss.
523v.Esther Reiss.
524vi.Avrohm/Aron Moshe Reiss.
525vii.Sheindle Reiss.
526viii.Hena Reiss.
527ix.Mordcha Dovid Reiss.





133.  Avrohm Moshe6 Reiss (Breindel5 Miller, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1879 - 1881, and died 1932.  He married Necha Bodenstein.

Children of Avrohm Reiss and Necha Bodenstein are:528i.Chezkl Shraga7 Reiss, born 1899.
529ii.Breindle Reiss, born Bet. 1900 - 1901.
530iii.Kalman Reiss, born 1903.
531iv.Zissel Reiss, born 1906.
532v.Yehudis Reiss.
533vi.Morry Reiss, born 1912.





134.  Yakov Mylech6 Reiss (Breindel5 Miller, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) died in Holocaust.  He married Sima.

Children of Yakov Reiss and Sima are:534i.Breindle7 Reiss.
535ii.Pesel Reiss.
536iii.Avrohm Leib Reiss.
537iv.Menachem Mendel Reiss.





135.  Chaim6 Reiss (Breindel5 Miller, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born 1876, and died 1940.  He married Lena.

Children of Chaim Reiss and Lena are:538i.Manny7 Reiss, born 1908.
539ii.Bertha Reiss, born 1910.
540iii.Pauline Reiss.
541iv.Davey Reiss, born 1913.





136.  Breindle6 Farber (Sarah Rochel5 Miller, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam).  She married boy Margolis.

Children of Breindle Farber and boy Margolis are:542i.Jack7 Margolis.
543ii.Yussel Margolis.
544iii.Sarah Rochel Margolis.
545iv.Avrohm Margolis.





137.  Chana Blima6 Farber (Sarah Rochel5 Miller, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam).  She married Mayer Farber.

Notes for Mayer Farber:
Mayer Farber was a cousin to his wife, through the Farber side (non-Miller).

Children of Chana Farber and Mayer Farber are:546i.Sarah Rochel7 Farber, born Abt. 1900; died in Holocaust.  She married boy Korman.

Notes for boy Korman:
Sarah Rochel Korman and her husband lived in Lviv where they had children. They all perished in the Holocaust.

547ii.Fannie Farber, born 1902.  She married Jacob Margolis.

Notes for Fannie Farber:
Fannie and Jacob Margolis had no children.

548iii.Mindle Farber, born Abt. 1904; died in Holocaust.  She married Mordcha Ofner.

Notes for Mordcha Ofner:
Mordcha Ofner was Mindle's uncle. He was first married to Mindle's mother's sister - Gittel. Gittel died of the flu at a young age. The family wanted Fannie (Mindle's sister) to marry Mordcha, but she refused. Mindle offered instead. She was only 11. They did not have children.

549iv.Yussel Farber, died in Holocaust.  He married girl.
550v.Edis Farber, died in Holocaust.  She married Chaim Ofner.
551vi.Henya Farber, died in Holocaust.  She married boy.
552vii.Ruzsha Farber, died in Holocaust.  She married boy.
553viii.Shabsy Mayerovitz.  He married girl.

Notes for Shabsy Mayerovitz:
Shabsy lived in Tarnov, Poland, before the war. He moved to Israel and changed his name to Mayerowitz.

 




138.  Yakov6 Farber (Sarah Rochel5 Miller, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) died in Holocaust.  He married girl ?.

Children of Yakov Farber and girl ? are:554i.girl7 Farber.
555ii.girl Farber.





139.  Malkie6 Farber (Sarah Rochel5 Miller, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1869, and died 1944 in Holocaust.  She married (1) Reicher.  She married (2) Yochanon Follman.

Notes for Malkie Farber:
Malkie Farber was married twice, first to a Reicher. They had 1 son together. After Malkie's husband passed away she remarried Yochanon Follman. They lived in Shumrü, but came to the Olyphant, PA, where they had 2 sons.

Child of Malkie Farber and Reicher is:556i.Dovid7 Reicher, born 1899.





Children of Malkie Farber and Yochanon Follman are:557i.Moshe Iri7 Follman, born November 28, 1901 in Olyphant, PA; died February 22, 1981.
558ii.Shimon Follman, born 1903.





140.  Gittel6 Farber (Sarah Rochel5 Miller, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) died Abt. 1915.  She married Mordcha Ofner.

Notes for Gittel Farber:
Gittel died of the flu at a young age. 

Notes for Mordcha Ofner:
Mordcha Ofner was Mindle's uncle. He was first married to Mindle's mother's sister - Gittel. Gittel died of the flu at a young age. The family wanted Fannie (Mindle's sister) to marry Mordcha, but she refused. Mindle offered instead. She was only 11. They did not have children.

Children of Gittel Farber and Mordcha Ofner are:559i.Chaim7 Ofner, died in Holocaust.  He married Edis Farber.
560ii.Sally Ofner, died in Holocaust.  She married boy ?.
561iii.Chayka Ofner, died in Holocaust.  She married boy ?.
562iv.boy Ofner, died in Holocaust.  He married girl ?.





141.  Chaim Reuven6 Miller (Avrohm Aba5, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1885.  He married Sura Gittel.

Children of Chaim Miller and Sura are:563i.Naftali Tzvi7 Miller.
564ii.Yakov Mylech Miller, born 1915.
565iii.Moshe Miller.
566iv.Chava Miller, died in Holocaust.
567v.Shmuel Miller, died in Holocaust.





142.  Feiga Kendel6 Miller (Avrohm Aba5, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1887, and died in Holocaust.  She married Moshe Stern.

Notes for Feiga Kendel Miller:
Feiga Kendel Miller (1880's - 1942) married Moshe Stern & had 4 children. They lived in Krynica and owned the Villa Zgoda. When her sister, Leah, passed away, she took in her oldest daughter, Sarah. They all perished in the Holocaust, except for Rachelle Hena.

Children of Feiga Miller and Moshe Stern are:568i.Rochel Hena7 Stern.
569ii.Helen Stern.
570iii.Maylech Dovid Stern.
571iv.Yashea Stern.





143.  Itcha6 Miller (Avrohm Aba5, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1889, and died in Holocaust.  He married Rudja ?.

Children of Itcha Miller and Rudja ? are:572i.Kopel7 Miller, died in Holocaust.
573ii.Hena Miller, died in Holocaust.
574iii.Zelda Miller, died in Holocaust.





145.  Sender6 Miller (Avrohm Aba5, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1892 - 1899, and died in Holocaust.  He married Leah ?.

Notes for Sender Miller:
Sender (189? - 19?) married Leah & had 4 children. He lived in Krynica & owned, in partnership with two of his brothers, the Villa Venice. They all perished in the Holocaust.

Children of Sender Miller and Leah ? are:575i.Yisroel7 Miller, born Bet. 1919 - 1920; died 1945.
576ii.Rudza Miller, born 1925; died 1935.
577iii.Shimon Miller, died in Holocaust.
578iv.Yechiel Miller, died in Holocaust.





146.  Ahron Dovid6 Miller (Avrohm Aba5, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born Bet. 1893 - 1899, and died in Holocaust.  He married (1) Sara ?.  He married (2) Gittel Hochberger.

Notes for Ahron Dovid Miller:
Ahron Dovid (189? - 1942?) was married twice, first to Sara, who passed away in
the 1930's. They lived in Krynica & had 3 children. He then married Gittel Hochberger & they had 2 children. He owned, in partnership with two of his brothers, the Villa Venice. They all perished in the Holocaust.

Children of Ahron Miller and Sara ? are:579i.Shaindel7 Miller, died in Holocaust.
580ii.Avrohm Aba Miller, died in Holocaust.
581iii.Chana Miller, died in Holocaust.





Children of Ahron Miller and Gittel Hochberger are:582i.Shimon7 Miller, died in Holocaust.
583ii.child Miller, died in Holocaust.





148.  Leah6 Miller (Avrohm Aba5, Shabsi4, Yakov Mylech3, Avrohm Aba2, Pesach1 Langsam) was born 1902, and died 1928 in Krynica, Poland.  She married Shaul Widawski.

Children of Leah Miller and Shaul Widawski are:584i.Shabsi7 Widawski, born 1925.

Notes for Shabsi Widawski:
After Shabsi Widawski's mother passed away, Shabsi lived with his grandparents, Avrohm Aba and Miriam Miller.

585ii.Sarah Widawski, born Bet. 1926 - 1927; died in Holocaust.
586iii.Henny Widawski, born Bet. 1927 - 1928; died in Holocaust.





267.  Fannie6 Miller (Chaskel5, Yuska4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born 1889, and died Abt. 1942 in Holocaust.  She married Herschel Frank.

Children of Fannie Miller and Herschel Frank are:587i.Klara7 Frank.  She married Yoseff Windreich.
588ii.Shoni Frank, born 1911; died Abt. 1942 in Holocaust.
589iii.Ilona Frank, born Abt. 1915.
590iv.Senen Frank.
591v.Rosa Frank.





269.  Rochel6 Miller (Chaskel5, Yuska4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born 1905, and died Abt. 1942 in Holocaust.  She married Nuta Shlomo Schlissel.

Notes for Rochel Miller:
Rochel Miller (1905 - 1942?) married R. Nuta Shlomo Schlissel. They lived in Krynica, & later in Mukachevo, where he was a dayan. They had 5 children. The entire family, except for Zeeshka, perished in the Holocaust.

Children of Rochel Miller and Nuta Schlissel are:592i.Zeeshka7 Schlissel, born Bet. 1930 - 1940.
593ii.Chaya Schlissel, born Bet. 1931 - 1940.
594iii.Malka Schlissel, born Bet. 1932 - 1940.
595iv.Yechezkel Schlissel, born Bet. 1933 - 1940.
596v.Chaim Eliezer Schlissel, born Bet. 1934 - 1940.





161.  Pesach Dovid6 Miller (Avrohm Aba5, Raphael Meyer4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born October 03, 1874 in Zborov, Slovakia, and died 1974.  He married Sara Schonfeld January 08, 1901 in Hodasz, Hungary, daughter of Shlomo Schonfeld and Chaya Gross.

Notes for Pesach Dovid Miller:
Pesach Dovid  (October 3, 1874-1974 [14 Teves]) received a blessing for longevity from the Sanzer Ruv (R. Chaim Halberstam) while he was a small child. He was married to his first cousin, once removed, Sara Schonfeld  on January 8, 1901, in Hodasz, Hungary. She was pregnant 11 times, with 5 children surviving to adulthood. They lived in many places, including Hodasz, Nyirbator, Kosice, & New York City. Pesach Dovid came to live in the US during the early 1920's. He did come on at least two other earlier occasions. He made frequent trips back to Europe to visit his family. His wife and youngest daughter came in 1932. Two of their children (Freitchu & Shabsy), with their entire families, perished in the Holocaust.

Notes for Sara Schonfeld:
Sarah   (1879 - 1952 [27 Sivan]) of TiszaKerecseny, Hodasz, & Nyirbator, Hungary, then Kosice, Slovakia, and finally New York City. Sarah came to NY on Sep 12, 1932, aboard the SS Ile de France, together with her daughter, Viola. She was married to her first cousin, once removed, Pesach Dovid Miller  on January 8, 1901, in Hodasz, Hungary. He came to the US much earlier. She was pregnant 11 times, with 5 children surviving to adulthood. 


Children of Pesach Miller and Sara Schonfeld are:597i.Chana Rita7 Miller, born September 12, 1903.
598ii.Freitchu Miller, born February 15, 1905.
599iii.Erzsebet Miller, born 1911.
600iv.Shabsy Miller, born September 25, 1912.
601v.Naftuli Miller, born May 12, 1914.
602vi.Miklos Miller, born 1917.
603vii.Viola Miller, born February 13, 1920.





172.  David6 Miller (Simon5, Raphael Meyer4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born December 14, 1881, and died 1964.  He married Bertha Schonfeld, daughter of Shlomo Schonfeld and Chaya Gross.

Notes for Bertha Schonfeld:
Bertha   (1882 - Apr 9, 1975 [28/9 Nissan]) of TiszaKerecseny, Hungary, then West Hartford, CT. Bertha came to the US via the port of New York aboard the SS Roterdam, on Dec 4, 1899. She listed her cousin, Abraham Miller, of 67 Lewis St., New York City, as her destination. Abraham is listed in the 1899 NYC directory as being in school. Bertha's uncle, Shabsi of Bukowsko, had a son, Avrohm, that came to the US for a short time to study glassmaking. He does not show up in the 1900 NYC directory or census. Bertha married her first cousin, once removed, David Miller & they had 3 children. They lived in New Millford, where he owned a department store. They later retired to West Hartford, CT. 

Children of David Miller and Bertha Schonfeld are:604i.Betty7 Miller, born 1904.
605ii.Ruth Miller, born 1906.
606iii.Manny Miller, born 1909.





177.  Zalman6 Miller (Yosef5, Raphael Meyer4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) died Bet. 1942 - 1944 in Perished in Holocaust.

Child of Zalman Miller is:607i.Chaim7 Miller, died in Perished in Holocaust.  He married Roiza Miller.





191.  Rochel6 Schermer (Rivka5 Miller, Raphael Meyer4, Pesach Dovid3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1890, and died in Perished in Holocaust.  She married Yaakov Miller, son of Naftali Miller and Sura.

Notes for Yaakov Miller:
Yankel  (187? - 1940) of Gorlice, Galicia was married to his cousin, Rochel Schermer of Tylicz, Galicia. They lived in Presov, Slovakia & had 5 children. Only 1, Moshe, survived to adulthood (The Presov records available through the Family History Centers, should give conclusive dates of birth/death & full Hebrew names). The entire family perished in the Holocaust. 


Children of Rochel Schermer and Yaakov Miller are:608i.Yosef7 Miller.
609ii.Chule Miller.
610iii.Moshe Miller, born Abt. 1913.
611iv.Yitzchok Miller, born January 05, 1924.
612v.child Miller.





369.  Chaskel6 Miller (Moshe5, Usher Zelig4, Yisroel Yitzchok3, Avrohm Aba2, Pesach1 Langsam) was born Abt. 1886, and died 1942 in Perished in Holocaust.  He married Gittel Miller, daughter of Avrohm Miller and Chana Neiman.

Notes for Gittel Miller:
Gittel  (188? - 1942?) married her cousin, Chezkel Shraga Miller. They lived in Wadowice and had three children. They later moved to Auschwitz, where Chezkel Shraga was a chazan and a shochet. During the war they managed to escape the deportations and fled the city. They were caught at the border of Czechoslovakia and Germany and were killed one by one. 

Children of Chaskel Miller and Gittel Miller are:613i.Avrohm7 Miller.
614ii.Moshe Miller.
615iii.Esther Miller.













I would be very interested to hear from anyone with knowledge or an interest in the Miller family.
Moishe Millermoishe@langsam.com

My home address is
           1374 East 28th Street
           Brooklyn NY 11210-5311
           USA

  
Last updated 10/16/00
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/fnaftali.htm
##-----------------TITLE------------------------##
R. Naftali Miller
##------------------TEXT------------------------##
R. Naftali Miller
son of Pesach Dovid & Chana Rita Miller
(1845 - 1930 [14 Adar])
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/fshloime.htm
##-----------------TITLE------------------------##
Shlomo Miller/Sch&oumlnfeld
##------------------TEXT------------------------##
Shloime Miller/Sch&oumlnfeld
son of Pesach Dovid & Chana Rita Miller
 (1848 - 1931 [27 Mar Cheshvan])
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/favrhmvd.htm
##-----------------TITLE------------------------##
Avrom'ala Miller (of Wadowice, Galicia)
##------------------TEXT------------------------##
Avrom'ala Miller (of Wadowice, Galicia)
son of Yisroel Yitzchok & Gittel
(Nov 4, 1853 - 1921/2 [Teves/Shevat 5682])
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Rosa.htm
##-----------------TITLE------------------------##
Rosa Hirschberg
##------------------TEXT------------------------##
Rosa ARONSFRAU HIRSCHBERG

Rosa was the daughter of Hirsch ARONSFRAU & Braindla WEINBERG.
She was born in Krakow on April 25, 1882.
She moved to Antwerp, probably around the turn of the century,
    and married Cyna HIRSCHBERG there on January 29, 1907.
Their first two children, Annie and Emanuel were born in Antwerp.
Because of the war, they moved temporarily to Holland,
    where their third child, Leon, was born.
They returned to Belgium after the war.

This picture was taken in Antwerp on June 5, 1928.

With the onset of the second world war, they attempted
    to emigrate to the United States.
They were killed when their boat was sunk by the Germans
    off the Nenwfoundland coast on Jan 25, 1942.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Braindl.htm
##-----------------TITLE------------------------##
Braindl Weinberg
##------------------TEXT------------------------##
Braindl WEINBERG

Braindl was the daughter of Mozes Elias WEINBERG and Hanna ROSENZWEIG.
She was born in Krakow on May 27, 1852.
She married Hirsch ARONSFRAU (Jun 30, 1844 - 1926/7)
    probably in Krakow in the early 1870's.
They had 11 children.
Braindl passed away in Antwerp approximately 1922.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/RosaSophie.htm
##-----------------TITLE------------------------##
Rosa and Sophie Aronsfrau
##------------------TEXT------------------------##
Rosa and Sophia ARONSFRAU

Rosa (left) was born in Krakow on April 25, 1882.
Sophia (on the right) was born Llata in Krakow on Oct 1, 1878.
They were 2 of the daughters of Hirsch ARONSFRAU & Braindla WEINBERG.

This picture was taken in Antwerp, probably before the 1914 war.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Trinkenreich.htm
##-----------------TITLE------------------------##
Abraham Trinkenreich
##------------------TEXT------------------------##
Abraham Trinkenreich

Abraham Trinkenreich was born probably around 1815.
He married Lea (she died 1874 in Tarnow), they lived in Tarnow,
    and they had at least 6 children.
Their first child, Joseph, was born March 31, 1834.
Their last child, Izrael Mendel, was born October 29, 1854.
(Izrael Mendel married Mary Tilles.)

This picture was taken by Szymon Balicer, whose
    shop was No. 16 ulica Kolejowa in Krakow.
A crude estimate of the picture's date would be 1870.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/pic2/OsiasKosches.htm
##-----------------TITLE------------------------##
Osias Kosches
##------------------TEXT------------------------##
Osias Kosches and family in 1904








 L-to-R standing: Adolf, David Edward, Maurycy
 L-to-R seated: Henryk, Osias, Nache, Ludwik
 L-to-R on floor: Jozef, Artur

 not shown: Liebe, Sussel, Helena




Last modified: Apr 12, 2001
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Ohrenstein3.htm
##-----------------TITLE------------------------##
Chaim David OHRENSTEIN
##------------------TEXT------------------------##
Chaim Dawid OHRENSTEIN was born Dec 14, 1866.

His wife, Rudel DIAMANT, was born 1869 and died during WW I.

Their 5 children (the youngest is Juda, born Nov 18, 1901).
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Ohrenstein2.htm
##-----------------TITLE------------------------##
Juda OHRENSTEIN
##------------------TEXT------------------------##
Juda OHRENSTEIN was born Mar 14, 1840 (Akt #141).

His wife, Ester DIAMANT, was born 1841 (Akt #487).
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Ohrenstein.htm
##-----------------TITLE------------------------##
Szymon OHRENSTEIN
##------------------TEXT------------------------##
Szymon OHRENSTEIN's family

Szymon OHRENSTEIN was born Jul 10, 1870.

His wife, Simche Scheindel KIRSCH, was born Feb 5, 1873.

His children: Ester (b. Jul 22, 1895 or Jul 14, 1896),
Doba (b. Jul 23, 1896),
Fradel (b. Dec 18, 1900),
and Juda (b. Jun 1902).
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/pic2/RuchLIPSCHUTZ.htm
##-----------------TITLE------------------------##
Ruchel LIPSCHUTZ
##------------------TEXT------------------------##
Ruchel LIPSCHUTZ








Ruchel (Rosalie) LIPSCHUTZ (1843-1931)
married Jacob Simon DANZIG (1838-?)
in Krakow 1893.




Last modified: Nov 5, 2001
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Miller/frm/flessert.htm
##-----------------TITLE------------------------##
The Lesser Family
##------------------TEXT------------------------##
Left to Right; back row:
Moshe Shamshon, Esther & Toby
Front row: Tzevetta holding Chana
(c. 1928)
Click on the Photo to see the larger image. It is 21k.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/IslerWedding.html
##-----------------TITLE------------------------##
ISLER Family Wedding
##------------------TEXT------------------------##
ISLER Family Wedding, Nov 1929 Berlin




Wedding of Marga GLEITZMANN, eldest granddaughter of Jacob ISLER to Walter Bernhard LEIB.
Seven of Jacob's children are present, the youngest son having died shortly before this event.
Also, 9 of Jacob's 10 grandchildren are in the picture.

The bridal couple are seated in the center.
Jacob Isler, second row, fifth in from the left (with one man between him and the bride).
Jacob's children, in age order:
  Lina Isler Brock, second row, second from the left, with her husband, Eduard Brock next to her.
  Adele Isler Gleitzmann, second row, ninth from the left (two to the right of her daughter, the bride).
  Alfred Isler, standing, back row, all the way over on the right.
  Julius Isler, standing, third row, all the way over on the left, with his hand on the shoulder of his (second) wife, Louise.
  George Isler, third row on the right side just to the left of the man bending over the girl in the white dress.
  Leon Isler, third row, 11th from the left.
  Caecilie (Cilly) Isler Blumenfeld, third row, 14th from the left. 13th from the left is her husband, Gustav Blumenfeld.
Sitting on the floor, in front, are most of Jacob's grandchildren:
  Werner Isler, son of Julius and Louise is 4th from the left, with the hat (dressed as Harold Lloyd).
  Hanni Blumenfeld Edinger and Inge Blumenfeld, children of Cilly and Gustav Blumenfeld, are the two little girls to the right of Werner..
  Gerda Isler Rosenbaum and Eric Isler, children of George, are the next two children to the right after Inge.
  Skipping past the young couple on the floor next to Eric, the next boy on the floor is Heinz Brock, son of Lina and Eduard Brock.
  Herbert Arnold Isler, son of Julius Isler and his first wife, is the last boy sitting on the floor on the right.
Lotte Brock Passer, daughter of Lina and Eduard Brock, is the girl in the white dress all the way on the right in the second row.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/pic2/SamuelKragen.htm
##-----------------TITLE------------------------##
Samuel KRAGEN
##------------------TEXT------------------------##
Samuel KRAGEN








Samuel KRAGEN (1833-1921)
on his 80th birthday with his family




Last modified: Oct 8, 2006
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/pic2/MenachemMendelSTERNBERG.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Menachem Mendel STERNBERG and family in 1928 (Jordanow)





 L-to-R standing: Rivka, Malka, Ilka (Baruch's bride), Baruch,
       Berta (Izak's wife), Scheindel
 L-to-R sitting: Izak's son, Mozes, Mina Mindel (mother),
       Menachem Mendel (father), Tilla, Izak, Pesia
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/spa1930.htm
##-----------------TITLE------------------------##
Spa 1930
##------------------TEXT------------------------##
Aby KLAJMAN, Anna HIRSCHBERG, Sara (sister of Aby),
Mendel TEITELBAUM, Helena HIRSCHBERG, Betsy (Anna's daughter),
Esther and Simon (Helena's children)

This picture was taken in the 1930's in Spa,
a hill resort near Liege (south Belgium).
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/HeleneAnna.htm
##-----------------TITLE------------------------##
Helene and Anna Hirschberg
##------------------TEXT------------------------##
Helene and Anna HIRSCHBERG

Helene HIRSCHBERG TEITELBAUM (1901-1961)
and Anna HIRSCHBERG KLAJMAN (1904-1943)
were daughters of Abraham Jozef HIRSCHBERG (1868-1928)
and Laura DANZIG (1872-1942).
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/MendHelene.htm
##-----------------TITLE------------------------##
Helene Hirschberg
##------------------TEXT------------------------##
Mendel TEITELBAUM and Helene HIRSCHBERG

Mendel TEITELBAUM (1890-1979)
married Helene HIRSCHBERG (1901-1961)
on March 16, 1922.
This picture probably was taken in 1922.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Klajman.htm
##-----------------TITLE------------------------##
Klajman
##------------------TEXT------------------------##
Abraham KLAJMAN and Hanna HIRSCHBERG

Wedding picture of Abraham KLAJMAN and Hanna HIRSCHBERG
and, probably about 10 years later, their daughter Betsy.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Matzner.htm
##-----------------TITLE------------------------##
Matzner family
##------------------TEXT------------------------##
The wedding of Itzhak MATZNER and Gittle VAGNER

April 29, 1934
Sitting on floor, second from the right is
    Henek (Hertz) HIRSCHBERG.
Sitting on first chair on the right is
    Yetta (Yochevet) HIRSCHBERG (MATZNER), sister of the groom.
Sitting on second chair from the right is
    her mother Riesel (wife of David MATZNER).
Pola MATZNER (sister of Yetta MATZNER)
    is standing the second from the right.
Maria (MATZNER) HERTZIG is the woman with the smile on the top row.
The person to her left, with the "streimel" on his head,
    is her youngest brother, Mendek MATZNER.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/AbrLea.htm
##-----------------TITLE------------------------##
Abraham Josef Hirschberg
##------------------TEXT------------------------##
Abraham Josef HIRSCHBERG and family

This picture was taken (probably during 1904) in Krakow. 
Abraham Joseph HIRSCHBERG (1868-1928) married Lea DANZIG (1872-1942)
on November 3, 1895.
The two children pictured are Israel Jacob (Nov 17, 1899 - Mar 21, 1984)
and Helene (Nov 15, 1902 - 1960's).
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/IsrJacob2.htm
##-----------------TITLE------------------------##
Israel Jacob Hirschberg
##------------------TEXT------------------------##
Israel Jacob (Isidore) HIRSCHBERG with daughter Sonia and niece Monique

This picture was taken in 1956.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/yehuda.htm
##-----------------TITLE------------------------##
Leon Hirschberg (Yehuda BAR-SINAI)
##------------------TEXT------------------------##
Leon HIRSCHBERG and his bride, Minna

Leon was the son of Cyna HIRSCHBERG & Rosa ARONSFRAU.
He was born in Holland in 1915.
He moved to England probably before World War 2 and married there.
He emigrated to Israel after the war and changed his name to Yehuda BAR-SINAI in 1956.
He passed away in 1988.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/AbrLea1.htm
##-----------------TITLE------------------------##
Abraham Josef Hirschberg
##------------------TEXT------------------------##
Abraham Josef HIRSCHBERG and Lea DANZIG

Abraham Joseph HIRSCHBERG (1868-1928) married Lea DANZIG (1872-1942)
on November 3, 1895.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Jakob.htm
##-----------------TITLE------------------------##
Jakob Hirschberg
##------------------TEXT------------------------##
Jakob HIRSCHBERG's death record

In the year 1819, on January 13 at 9 o'clock .....
appeared Moyzes Izenberg, a merchant of age 40, from district 11 residence 20,
son-in-law of the deceased,
and Mozes Kolberg, a servant of age 45, from residence 184 in district 10,
and declared to us that yesterday at 7 o'clock in house 20 of district 11
died Jakob Hirschberg, a merchant, married, of age 60,
son of Hirsza Hendlowicz and Rachel who are already deceased
-- left behind is his wife, Rebeka, daughter of Nattan
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Hirschberg.htm
##-----------------TITLE------------------------##
Rosa Hirschberg and Family
##------------------TEXT------------------------##
Rosa HIRSCHBERG and children

Rosa ARONSFRAU married Cyna HIRSCHBERG in Antwerp
    on January 29, 1907.
Their first two children, Annie and Emanuel were born in Antwerp.
Because of the war, they moved temporarily to Holland,
    where their third child, Leon, was born.
They returned to Belgium after the war.

This picture was taken in Scheveningen, Holland,
    during the war, probably 1917.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/EmilRachel.htm
##-----------------TITLE------------------------##
Emil Hirschberg
##------------------TEXT------------------------##
Emanuel HIRSCHBERG and his wife, Rachelle

Emanuel was the son of Cyna HIRSCHBERG & Rosa ARONSFRAU.
He was born in Antwerp on August 24, 1912.
He married Rachelle (Apr 21, 1912 - Oct 23, 1989)
    in New York on November 15, 1947.
Emanuel passed away on August 14, 1972.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/SchimonHirs.htm
##-----------------TITLE------------------------##
Schimon Hirschberg
##------------------TEXT------------------------##
Schimon and Yetta Hirschberg

The parents of Schalom (Salek) Hirschberg in his winery in Krakow.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/IJHnPEK.htm
##-----------------TITLE------------------------##
Israel Jacob HIRSCHBERG and Kaila PEKLER
##------------------TEXT------------------------##
Israel Jacob HIRSCHBERG and Kaila PEKLER

Israel Jacob HIRSCHBERG (1899-1984)
and Kaila PEKLER (1903-1988) married on December 6, 1927.

Israel Jakob HIRSCHBERG wearing the Austrian army uniform (WW I)
Israel Jakob HIRSCHBERG some years earlier
Kaila PEKLER in Amsterdam, where she lived from 1904 until 1913
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/CynaRosa.htm
##-----------------TITLE------------------------##
Cyna and Rosa Hirschberg
##------------------TEXT------------------------##
Cyna HIRSCHBERG and his wife, Rosa ARONSFRAU

Cyna was the son of Mozes Israel Isser HIRSCHBERG & Elka Ryvka SCHENKER.
He was born in Krakow on November 18, 1879.
Rosa was the daughter of Hirsch ARONSFRAU & Braindla WEINBERG.
She was born in Krakow on April 25, 1882.

They moved to Antwerp, probably around the turn of the century,
    and married there on January 29, 1907.
Their first two children, Annie and Emanuel were born in Antwerp.
Because of the war, they moved temporarily to Holland,
    where their third child, Leon, was born.
They returned to Belgium after the war.
With the onset of the second world war, they attempted
    to emigrate to the United States.
They were killed when their boat (S.S. Mount Kitheron) was sunk by the Germans
    off the coast of Newfoundland on Jan 25, 1942.
(It was a merchant ship waiting for the pilot
to bring the ship in; some of the crew took to life boats and survived.)
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Bertha.htm
##-----------------TITLE------------------------##
Bertha Hirschberg
##------------------TEXT------------------------##
Bertha HIRSCHBERG

Bertha HIRSCHBERG (1911-2001)
married Israel KLENER (1902-1943).
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/IsrJacob.htm
##-----------------TITLE------------------------##
Israel Jacob Hirschberg
##------------------TEXT------------------------##
Israel Jacob HIRSCHBERG

Israel Jacob HIRSCHBERG (1899-1984)
married Kaila PEKLER (1903-1988)
on December 6, 1927.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Anna.htm
##-----------------TITLE------------------------##
Anna Hirschberg
##------------------TEXT------------------------##
Anna HIRSCHBERG and her sons

Anna was the daughter of Cyna HIRSCHBERG & Rosa ARONSFRAU.
She was born in Antwerp on January 17, 1911.
She married Leo ARATEN (Aug 9, 1905 - May 28, 1994)
    in Belgium in 1929
and they moved to Casablanca, where their sons were born.
They ultimately lived in Israel.
Anna passed away in January, 1980.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/AnnaFARBER.htm
##-----------------TITLE------------------------##
Anna FARBER
##------------------TEXT------------------------##
Sonia (HIRSCHBERG) BRAUNER, Anna (FARBER) JAKUBOVIC, and Monique KLENER

This picture was taken in 1956.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/ahnen.html
##-----------------TITLE------------------------##
Ancestry
##------------------TEXT------------------------##
My Father's Ahnentafel


Generation I.

1. Emanuel HIRSCHBERG            Aug 24, 1912 - Aug 14, 1972

Generation II.

2. Cyna HIRSCHBERG               Nov 18, 1879 - Jan 25, 1942
3. Rosa ARONSFRAU                Apr 25, 1882 - Jan 25, 1942

Generation III.

4. Mozes Israel Isser HIRSCHBERG Oct 8, 1852 - 1921
5. Elka Ryvka SCHENKER           1858 - 1929
6. Hirsch (Zvi) ARONSFRAU        Sep, 1853 - Apr 10, 1926
7. Braindla WEINBERG             Apr 27, 1852 - 1922?

Generation IV.

8. Markus HIRSCHBERG             Mar 5, 1827 - before 1906
9. Baila Gitl SCHONKER           Dec 10, 1830 - after 1906
10. Mendla SCHENKER              b. 1817-20
11. Malli (Matki) GOLDWASSER     b. 1820-21
12. Jacques ARONSFRAU            Dec 9, 1817 - before 1902
13. Feigel (Fanny) GROSS         Mar 1, 1829 - after 1902
14. Mozes Elias WEINBERG         b. Apr 3, 1824
15. Hanna ROSENZWEIG             b. 1823

Generation V.

16. Wolf Hirsch HIRSCHBERG       c1794 - Oct 14, 1849
17. Rozy IZENBERG                c1796 - after 1849
18. Cyna SCHONKER                1808 - Apr 17, 1853
19. Chaja Doba SCHWARTZ          1806-07 - Dec 4, 1871 #392
20. Dawid SCHONKER
21. Hendli
22. Abraham GOLDWASSER           1765-72 - Jan 4, 1852
23. Elki                         b. c1778
24. Salomon ARONSFRAU
25. Kendel
26. Herschel GROSS               1806-07 - Jan 22, 1849
27. Hanny Frometty WERMAN        Apr 2, 1809 - Apr 12, 1831
28. Kopel WEINBERG               b. 1795-98
29. Rozy SZYMONOWICZ             b. 1798-99
30. Herszl ROSENZWEIG            b. 1793-94
31. Chai Malki SZWENK            1797 - Jan 31, 1880

Generation VI.

32. Jakob HIRSCHBERG             c1760 - Jan 12, 1819
33. Rebeka                       d. after 1819
34. Mozes?
36. same as 20.
37. same as 21.
38. Leibl SCHWARTZ               b. 1783-84
39. Sory                         b. 1783-84
42. Mozes
46. Feybus
52. Joel GROSS
53. Blumy
54. Aba Michel WERMAN            c1770 - Sep 21, 1831
55. Ester PICELE                 b. c1780
62. Leibl Lazar SZWENK           1750-51 - Apr 13, 1827
63. Teybl                        c1750 - Jun 3, 1832

Generation VII.

64. Hirsch Hendlowicz
65. Rachel
66. Nattan
74. same as 42.
78. Herszl
106. Szaji
108. Michel
110. Marcus PICELE




Dan Hirschberg
dan at ics.uci.edu

Last modified: Jun 12, 2008
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/IJHIRandPEKLER.htm
##-----------------TITLE------------------------##
Israel Jacob HIRSCHBERG and Kaila PEKLER
##------------------TEXT------------------------##
Israel Jacob HIRSCHBERG and Kaila PEKLER

The wedding picture of
Israel Jacob HIRSCHBERG (1899-1984)
and Kaila PEKLER (1903-1988),
who married on December 6, 1927.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/frm/Cyna.htm
##-----------------TITLE------------------------##
Cyna Hirschberg
##------------------TEXT------------------------##
Cyna HIRSCHBERG

Cyna was the son of Mozes Israel Isser HIRSCHBERG & Elka Ryvka SCHENKER.
He was born in Krakow on November 18, 1879.
He moved to Antwerp, probably around the turn of the century,
    and married Rosa ARONSFRAU there on January 29, 1907.
Their first two children, Annie and Emanuel were born in Antwerp.
Because of the war, they moved temporarily to Holland,
    where their third child, Leon, was born.
They returned to Belgium after the war.

This picture was taken in 1928, in South Africa (Lichtenburg?).

With the onset of the second world war, they attempted
    to emigrate to the United States.
They were killed when their boat was sunk by the Germans
    off the coast of Newfoundland on Jan 25, 1942.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/genealogy/Krakow/Families/pic2/SamsonSaraLeaDeutscher.htm
##-----------------TITLE------------------------##
Samson & Sara Lea DEUTSCHER
##------------------TEXT------------------------##
Samson & Sara Lea DEUTSCHER
##------------------URL-------------------------##
http://www.ics.uci.edu/~ics54/00w/
##-----------------TITLE------------------------##
ICS 54: Introduction to Multitasking Operating Systems (36120)
##------------------TEXT------------------------##
UC Irvine,
Information and Computer Science Department
ICS 54: Introduction to Multitasking Operating Systems
Winter 2000:
MW, 11a.m.-12:20p.m., IERF B015
( 36120);
Discussions: Tu, CS 253, 

1-1:50p.m.
(36122).

Instructor:
Stephen Franklin
Teaching Assistant:Junjun Ouyang



Syllabus
Schedule
References




Overview:
This course is an in-depth study of principles and concepts embodied
in modern Internet-connected, multiuser, multitasking operating
systems (MICMMOS, :-) ), including shells, filters, pipelines,
programmability and scripting, extensibility, concurrent processing,
and interprocess communication.  Several integral tools and utilities
are presented.  Unix is used to provide concrete examples, focusing
on the file system, processes, shells, and various tools including
awk, diff, file, find, ftp, grep, make, man, nslookup, sed, sort,
tar, traceroute, uniq, vi, which, zip, etc.

The course provides a solid conceptual and experiential basis for
subsequent work in the programming, system administration, and
effective general use of the Unix operating system.  This conceptual
basis for subsequent work is more generally applicable to other
MICMMOS's and to later courses which study or use them.

Text: Unix:
The Complete Reference by Kenneth Rosen, Douglas Host, 
James Farber, and Richard Rosinski; Osborne/McGraw-Hill; July, 1999;

ISBN: 0-07-211892-X
This book is as much is as much an economical reference as a text.
Its list price is $39.99, but it has been available on the web for
less than $29, including tax and shipping.  Two web sites which
allow you to compare book prices are 
www.bookarea.com and
www.mysimon.com



Comments are welcome.
JavaScript must be enabled in order for this page
   to be fully functional.

   Current as of 19 January 2000
HTML
    4.01 Checked.
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/group/HelpOnPackageInstaller
##-----------------TITLE------------------------##
HelpOnPackageInstaller - GraphModAlg@UCI
##------------------TEXT------------------------##
Search:











HelpOnPackageInstaller







Wiki

Main_PageRecentChangesFindPageHelpContentsHelpOnPackageInstaller



Page
Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    







User
Login






Introduction
Have you ever wondered why we have so many pages in the main distribution? Mostly because we do not have a format to deliver the help pages in one file. Or why installing a theme is not easy because you do not always know where to put the files?  The package installer is a scripting framework for MoinMoin which simplifies installing and delivering extensions for MoinMoin very much. You could use this system to bundle specific templates which e.g. enhance your MoinMoin to be a CRM system. Or you could make your plugins/themes easier installable. 
Installing a package
Some superuser (i.e. a user name contained in cfg.superuser list in the configuration) of the wiki will download your package file from somewhere, upload it to the wiki and then click install in the attached files view. Additionally, he could install the package using the command line (MoinMoin/packages.py i package.zip). 
Creating packages
There are multiple possibilities to create a package. You can use the PackagePages action in order to build a package automatically. Or you can do it manually: you create a zip file which contains your files and a special file MOIN_PACKAGE, the installation script. The script contains one command (sounds complicated but is not really, look at the examples below) per line and gets executed from top to bottom. Example script:MoinMoinPackage|1
ReplaceUnderlay|mypage.txt|HelpContents
AddRevision|mypage2.txt|FrontPage
InstallPlugin|myparser.py|global|parser|myparser.pyThe first line simply marks the file as a script file and sets the revision of the used language. For now, it will be 1. The second line replaces the underlay version of the page HelpContents with the file mypage.txt. The third line adds a new revision to the page FrontPage, i.e. changes it. The fourth line installs a new parser. 
Implemented commands
Note that the commands are not case-sensitive. Print|text Prints the text into the script output, the user will see it afterwards. IgnoreExceptions|boolean Sets the ignore exceptions setting. If exceptions are ignored, the script does not stop if one is encountered. SetThemeName|themename Sets the name of the theme which will be altered next. CopyThemeFile|filename|type|target Copies a theme-related file (CSS, PNG, etc.) into a directory of the current theme. Currently just supported on standalone-like servers. Example: CopyThemeFile|screen.css|css|screen.css InstallPlugin|filename|visibility|plugintype|target Copies a plugin file from filename to target. Visibility may be local which selects the plugin folder of the current wiki or global will selects the folder of the MoinMoin python package. plugintype could be parser, macro, etc.  Example: InstallPlugin|myparser.py|global|parser|myparser.py AddRevision|filename|pagename|author|comment|trivial Adds a revision (read from the file filename) to the page pagename. author specifies the name of the editor and is optional. comment specifies the comment of the revision and is optional. trivial specifies if the revision was a trivial edit and is optional. Example (installs new template files):AddRevision|cust.tpl|CustomerTemplate
AddRevision|phone.tpl|PhoneTemplateDeletePage|pagename|comment Deletes the page pagename, optionally setting comment. Example: DeletePage|FrontPage ReplaceUnderlay|filename|pagename Replaces the underlay version of the page. It can be used to install underlay pages or update them. EnsureVersion|version|lines Aborts the script or skips lines if the version criteria is not met and lines is specified. This example supplies to different parsers and installs the correct one: EnsureVersion|1.3.3|2
InstallPlugin|myparser.py_3|global|parser|myparser.py
Exit
EnsureVersion|1.3.2
InstallPlugin|myparser.py_2|global|parser|myparser.pyExit Stops the script. InstallPackage|Pagename|Filename Installs another package which has to be an attachment called Filename of the page Pagename. Example: InstallPackage|FrontPage|MyCoolPlugin.zip AddAttachment|filename in zip file|filename|pagename|author|comment Example: AddAttachment|2_attachment|song.wav|FrontPage|HansMustermann|thats an example song. DelAttachment|filename|pagename|author|comment Example: DelAttachment|song.wav|FrontPage|HansMustermann|testing RenamePage|pagename|new pagename|author|comment Renames a pagename to a new pagename 





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/group/HelpOnMoinWikiSyntax
##-----------------TITLE------------------------##
HelpOnMoinWikiSyntax - GraphModAlg@UCI
##------------------TEXT------------------------##
Search:











HelpOnMoinWikiSyntax







Wiki

Main_PageRecentChangesFindPageHelpContentsHelpOnMoinWikiSyntax



Page
Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    







User
Login





This page aims to introduce the most important elements of MoinMoin's syntax at a glance, showing first the markup verbatim and then how it is rendered by the wiki engine. Additionally, you'll find links to the relative help pages. Please note that some of the features depend on your configuration. 
Table of Contents
'''Contents''' (up to the 2nd level)
<<TableOfContents(2)>>Contents (up to the 2nd level) Contents
Table of Contents
Headings
heading 1st level
heading 2nd level
Text Formatting
Hyperlinks
Internal Links
External Links
Avoid or Limit Automatic Linking
Drawings
Blockquotes and Indentations
Lists
Unordered Lists
Ordered Lists
Definition Lists
Horizontal Rules
Tables
Tables
Cell Width
Spanning Rows and Columns
Alignment of Cell Contents
Coloured Table Cells
HTML-like Options for Tables
Macros and Variables
Macros
Variables
Smileys and Icons
Parsers
Verbatim Display
Syntax Highlighting
Using the wiki parser with css classes
Comments 
Headings
see: HelpOnHeadlines = heading 1st level =
== heading 2nd level ==
=== heading 3rd level ===
==== heading 4th level ====
===== heading 5th level =====
heading 1st level

heading 2nd level

heading 3rd level

heading 4th level

heading 5th level

Text Formatting
see: HelpOnFormatting  * ''emphasized (italics)''
 * '''boldface'''
 * '''''bold italics'''''
 * `monospace`
 * {{{source code}}}
 * __underline__
 * ,,sub,,script
 * ^super^script
 * ~-smaller-~
 * ~+larger+~
 * --(strike through)--emphasized (italics) boldface bold italics monospace source code underline subscript superscript smaller larger strike through 
Hyperlinks
see: HelpOnLinking 
Internal Links
 * FrontPage
 * [[FrontPage]]
 * HelpOnEditing/SubPages
 * /SubPage
 * ../SiblingPage
 * [[FrontPage|named link]]
 * [[#anchorname]]
 * [[#anchorname|description]]
 * [[PageName#anchorname]]
 * [[PageName#anchorname|description]]
 * [[attachment:filename.txt]]FrontPage FrontPage HelpOnEditing/SubPages /SubPage ../SiblingPage named link #anchorname description PageName#anchorname description filename.txt 
External Links
 * http://moinmo.in/
 * [[http://moinmo.in/]]
 * [[http://moinmo.in/|MoinMoin Wiki]]
 * [[http://static.moinmo.in/logos/moinmoin.png]]
 * {{http://static.moinmo.in/logos/moinmoin.png}}
 * [[http://static.moinmo.in/logos/moinmoin.png|moinmoin.png]]
 * MeatBall:InterWiki
 * [[MeatBall:InterWiki|InterWiki page on MeatBall]]
 * [[file://///servername/share/full/path/to/file/filename%20with%20spaces.txt|link to file filename with spaces.txt]]
 * user@example.comhttp://moinmo.in/ http://moinmo.in/ MoinMoin Wiki http://static.moinmo.in/logos/moinmoin.png  moinmoin.png InterWiki InterWiki page on MeatBall link to file filename with spaces.txt user@example.com 
Avoid or Limit Automatic Linking
 * Wiki''''''Name
 * Wiki``Name
 * !WikiName
 * WikiName''''''s
 * WikiName``s
 * `http://www.example.com`
 * [[http://www.example.com/]]notlinkedWikiName WikiName WikiName WikiNames WikiNames http://www.example.com http://www.example.com/notlinked 
Drawings
 
Blockquotes and Indentations
 indented text
  text indented to the 2nd levelindented text text indented to the 2nd level 
Lists
see: HelpOnLists 
Unordered Lists
 * item 1

 * item 2 (preceding white space)
  * item 2.1
   * item 2.1.1
 * item 3
  . item 3.1 (bulletless)
 . item 4 (bulletless)
  * item 4.1
   . item 4.1.1 (bulletless)item 1 item 2 (preceding white space) item 2.1 item 2.1.1 item 3 item 3.1 (bulletless) item 4 (bulletless) item 4.1 item 4.1.1 (bulletless) 
Ordered Lists

with Numbers
 1. item 1
   1. item 1.1
   1. item 1.2
 1. item 2item 1 item 1.1 item 1.2 item 2 
with Roman Numbers
 I. item 1
   i. item 1.1
   i. item 1.2
 I. item 2item 1 item 1.1 item 1.2 item 2 
with Letters
 A. item A
   a. item A. a)
   a. item A. b)
 A. item Bitem A item A. a) item A. b) item B 
Definition Lists
 term:: definition
 object::
 :: description 1
 :: description 2termdefinition objectdescription 1 description 2 
Horizontal Rules
see: HelpOnRules ----
-----
------
-------
--------
---------
----------       
Tables
see: HelpOnTables 
Tables
||'''A'''||'''B'''||'''C'''||
||1      ||2      ||3      ||ABC1      2      3      
Cell Width
||minimal width ||<99%>maximal width ||minimal width maximal width 
Spanning Rows and Columns
||<|2> cell spanning 2 rows ||cell in the 2nd column ||
||cell in the 2nd column of the 2nd row ||
||<-2> cell spanning 2 columns ||
||||use empty cells as a shorthand || cell spanning 2 rows cell in the 2nd column cell in the 2nd column of the 2nd row  cell spanning 2 columns use empty cells as a shorthand 
Alignment of Cell Contents
||<^|3> top (combined) ||<:99%> center (combined) ||<v|3> bottom (combined) ||
||<)> right ||
||<(> left || top (combined)  center (combined)  bottom (combined)  right  left 
Coloured Table Cells
||<#0000FF> blue ||<#00FF00> green    ||<#FF0000> red    ||
||<#00FFFF> cyan ||<#FF00FF> magenta  ||<#FFFF00> yellow || blue  green     red     cyan  magenta   yellow 
HTML-like Options for Tables
||A ||<rowspan="2"> like <|2> ||
||<bgcolor="#00FF00"> like <#00FF00> ||
||<colspan="2"> like <-2>||A  like <|2>  like <#00FF00>  like <-2>
Macros and Variables

Macros
see: HelpOnMacros <<Anchor(anchorname)>> inserts a link anchor anchorname <<BR>> inserts a hard line break <<FootNote(Note)>> inserts a footnote saying Note <<Include(HelpOnMacros/Include)>> inserts the contents of the page HelpOnMacros/Include inline <<MailTo(user AT example DOT com)>> obfuscates the email address user@example.com to users not logged in 
Variables
see: HelpOnVariables @SIG@ inserts your login name and timestamp of modification @TIME@ inserts date and time of modification 
Smileys and Icons
see: HelpOnSmileys MarkupDisplayMarkupDisplayMarkupDisplayMarkupDisplayX-(:D<:(:o:(:)B):));)/!\<!>(!):-?:\>:>|):-(:-)B-):-));-)|-)(./){OK}{X}{i}{1}{2}{3}{*}{o}   
Parsers
see: HelpOnParsers 
Verbatim Display
{{{
def hello():
    print "Hello World!"
}}}def hello():
    print "Hello World!"
Syntax Highlighting
{{{#!python
def hello():
    print "Hello World!"
}}}



   1 def hello():
   2     print "Hello World!"

Using the wiki parser with css classes
{{{#!wiki red/solid
This is wiki markup in a '''div''' with __css__ `class="red solid"`.
}}}This is wiki markup in a div with css class="red solid". 
Comments
see: HelpOnComments Click on "Comments" in edit bar to toggle the /* comments */ visibility.Click on "Comments" in edit bar to toggle the comments visibility. {{{#!wiki comment/dotted
This is a wiki parser section with class "comment dotted" (see HelpOnParsers).

Its visibility gets toggled the same way.
}}}This is a wiki parser section with class "comment dotted" (see HelpOnParsers). Its visibility gets toggled the same way. 





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/group/HelpOnConfiguration
##-----------------TITLE------------------------##
HelpOnConfiguration - GraphModAlg@UCI
##------------------TEXT------------------------##
Search:











HelpOnConfiguration







Wiki

Main_PageRecentChangesFindPageHelpContentsHelpOnConfiguration



Page
Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    







User
Login





HelpContents > HelpForAdministrators > HelpOnConfiguration This page should help you with configuring an already installed MoinMoin wiki. If you have not installed one yet please go to HelpOnInstalling. Contents
General
Character Set
International Setup
Customization of user preferences
Configuring a single wiki
Configuration of multiple wikis
Index of all Configuration Options
Related Topics 
General
 
Character Set
Moin uses Unicode internally, and utf-8 for external output and input, like pages, HTML output and translation files. The external character set is defined in config.charset to utf-8. This setting is fine for all languages, as any character can be encoded in UTF-8. You should not change this value, although technically it is possible.  Important: to use Unicode values, you must setup a correct coding line in the first line of your configuration file. Check that your editor is configured correctly. Certain options must use Unicode values. For example, the site name could contain German umlauts or French accents or be in Chinese or Hebrew. Because of this, you must use unicode strings for those items. Unicode strings are defined by prefixing the letter u to the string. Here are some examples:     # Site name, used by default for wiki name-logo [Unicode]
    sitename = u"Jürgen's Wiki"
    # another example:
    sitename = u'הוויקי של יורגן'Read the comments in the configuration file - they tell you which options must use Unicode values. Notes: You can't mix different encodings in the same file. If your coding line says iso-8859-1, all your characters, the whole file content, must be in that encoding. If you use utf-8 encoding (or plain ascii), you don't have to use unicode strings, moin will decode your string correctly for you.  
International Setup
The default configuration file shipped with moin uses iso-8859-1 coding. This is fine for Latin languages like English or German, but not usable for non-latin languages. If you want to have non-latin characters in your configuration items, use utf-8 coding for the config file. Set the first line of all configuration files to this line: # -*- coding: utf-8 -*- You need a text editor being capable of (and also really using) utf-8 encoding for editing the config files. Values using unicode strings (international users might want to change them): sitename logo_string page_front_page navi_bar page_category_regex page_dict_regex page_group_regex page_template_regex page_license_page page_local_spelling_words acl_rights_default acl_rights_before acl_rights_after mail_from For ready made configuration in your language, see ConfigMarket. 
Customization of user preferences
You can predefine, disable or remove several options on the UserPreferences page, see HelpOnConfiguration/UserPreferences.  
Configuring a single wiki
If you run a single wiki, you should not copy the file farmconfig.py into your configuration directory (remove it and the .pyc file, if it is there). Without farmconfig, moin uses the default wikiconfig.py wikiconfig.py usually is located besides your moin.cgi driver script. If you need to make a custom install, it can be located anywhere, but you must add the path to the directory where it is located to your Python system path in your server script. See the "System Path Configuration" section in your server script. General notes on wiki/farmconfig.py structure: # -*- coding: iso-8859-1 -*-

from MoinMoin.config.multiconfig import DefaultConfig

class Config(DefaultConfig):

    sitename = u'MyWiki'   # u means that it will be converted to Unicode
    interwikiname = 'MyWiki'
    data_dir = '/where/ever/mywiki/data/'
    underlay_dir = '/where/ever/mywiki/underlay/'
    
    # More settings follow...First, you must define the coding of the config file. The default setting is suited for Latin ("western") languages only, for international setup, read  section #intsetup. If you don't define the coding, you can't use non-ascii characters. Next we import moin's internal default configuration. The default configuration includes values for all options, so we don't have to define all values, just what we want to customize. Then we define a new configuration class called "Config" and inherit all settings from the default configuration we imported. Note that the class name must be "Config". Next lines are the configuration options for the Config class. Note that each line must be indented by 4 spaces, tabs are not allowed. Moin will not run if you use wrong indentation. A common configuration item is sitename - in most cases you don't want your wiki to have the default "Untitled Wiki" name. You can define any name you like in any language, but before you do that, read section #character-set. If you followed the install instructions, the wiki will run without any other change, but you might want to change some values, like data_dir, data_underlay_dir acl_rights_before and more. For most cases, setting all the values in the supplied wikiconfig.py file is enough. Anything we do not define simply stays at moin's internal defaults which we inherited from DefaultConfig.  
Configuration of multiple wikis
The moinmoin wiki engine is capable of handling multiple wikis using a single installation, a single set of configuration files and a single server process. Especially for persistent environments like twisted, this is necessary, because the twisted server will permanently run on a specific IP address and TCP port number. So for virtual hosting of multiple domains (wikis) on the same IP and port, we need the wiki engine to permanently load multiple configs at the same time and choose the right of them when handling a request for a specific URL. To be able to choose the right config, moin uses config variable wikis located in the file farmconfig.py - it simply contains a list of pairs (wikiname, url-regex). Please only use valid python identifiers for wikiname (to be exact: identifier ::= (letter|"_") (letter | digit | "_")* - just try with a simple word if you didn't understand that grammar rule). When processing a request for some URL, moin searches through this list and tries to match the url-regex against the current URL. If it doesn't match, it simply proceeds to the next pair. If it does match, moin loads a configuration file named <wikiname>.py (usually from the same directory) that contains the configuration for that wiki. farmconfig.py in the distribution archive has some sample entries for a wiki farm running multiple wikis. You need to adapt it to match your needs if you want to run multiple wikis.  For simpler writing of these help pages, we will call such a <wikiname>.py configuration file simply wikiconfig.py, of course you have to use the filename you chose. Of course you have already adapted the wikis setting in farmconfig.py (see above), so we only give some hints how you can save some work. Please also read the single wiki configuration hints, because it explains config inheritance. We now use the class-based configuration to be able to configure the common settings of your wikis at a single place: in the base configuration class (see farmconfig.py for an example): farmconfig.py: # -*- coding: iso-8859-1 -*-
# farmconfig.py:
from MoinMoin.config.multiconfig import DefaultConfig
class FarmConfig(DefaultConfig):
    url_prefix = '/wiki'
    show_hosts = True
    underlay_dir = '/where/ever/common/underlay'
    # ...Explanation: first we import the default config, like we do when configuring a single wiki now we define a new farm config class - and inherit from the default config then we change everything that our farm wikis have in common, leaving out the settings that they need to be different this FarmConfig class will now be used by the config files of the wikis instead of moin's internal DefaultConfig class, see below: The configs of your individual wikis then only keep the settings that need to be different (like the logo, or the data directory or ACL settings). Everything else they get by inheriting from the base configuration class, see moinmaster.py for a sample. moinmaster.py: # -*- coding: iso-8859-1 -*-
# moinmaster.py:
from farmconfig import FarmConfig
class Config(FarmConfig):
    show_hosts = False
    sitename = u'MoinMaster'
    interwikiname = 'MoinMaster'
    data_dir = '/org/de.wikiwikiweb.moinmaster/data/'
    # ...Explanation: see single wiki configuration, the only difference is that we inherit from FarmConfig (that inherited from DefaultConfig) instead of directly using DefaultConfig now we override show_hosts to be False - we want it for most wikis in our farm, but not for this one we also override sitename, interwikiname and data_dir (the usual stuff)  
Index of all Configuration Options
The following table contains default values and a short description for all configuration variables. Most of these can be left at their defaults, those you need to change with every installation are listed in the sample wikiconfig.py that comes with the distribution.  Variable name  Default  Description  SecurityPolicy  None  Class object hook for implementing security restrictions  acl_...  ...  wiki-wide access control list definition (see HelpOnAccessControlLists)  allow_xslt  False  True to enable XSLT processing via 4Suite (note that this enables anyone with enough know-how to insert arbitrary HTML into your wiki, which is why it defaults to False)  actions_excluded  ['xmlrpc']  Exclude unwanted actions (list of strings)  attachments  None  If None, send attachments via CGI. Every other value is DEPRECATED. auth  [moin_login, moin_session]  list of auth functions, to be called in this order (see HelpOnAuthentication and HelpOnSessions)  bang_meta  True  enable !NoWikiName markup  cache_dir  'data/cache'  Path to the farm wide cache directory. New in 1.6.  caching_formats  ['text_html']  output formats that are cached; set to [] to turn off caching (useful for development)  changed_time_fmt  '%H:%M'  Time format used on RecentChanges for page edits within the last 24 hours  chart_options  None  If you have gdchart, use something like chart_options = {'width': 720, 'height': 540}  cookie_domain  None  farmconfig: use this domain for the MoinMoin cookie  cookie_path  None  farmconfig: use this path for the MoinMoin cookie  cookie_lifetime  12 =0: forever, ignore user 'remember_me' setting; >0: n hours, or forever if user checked 'remember_me'; <0 -n hours, ignore user 'remember_me' setting data_dir  './data/'  Path to the data directory containing your (locally made) wiki pages.  data_underlay_dir  './underlay/'  Path to the underlay directory containing distribution system and help pages.  date_fmt  '%Y-%m-%d'  System date format, used mostly in RecentChanges  datetime_fmt  '%Y-%m-%d %H:%M:%S'  Default format for dates and times (when the user has no preferences or chose the "default" date format)  default_markup  'wiki'  Default page parser / format (name of module in MoinMoin.parser)   docbook_html_dir  '/usr/share/xml/docbook/stylesheet/nwalsh/html/'  Path to the directory with the Docbook to HTML XSLT files (optional, used by the docbook parser). The default value is correct for Debian Etch.  edit_bar  ['Edit', 'Comments', 'Discussion', 'Info', 'Subscribe', 'Quicklink', 'Attachments', 'ActionsMenu']  list of edit bar entries, 'Discussion' is a placeholder for the supplementation_page_name  editor_default  'text'  Editor to use by default, 'text' or 'gui'  editor_ui  'freechoice'  Editor choice shown on the user interface, 'freechoice' or 'theonepreferred'  editor_force  False  Force using the default editor  editor_quickhelp  {'wiki':"...", 'rst':"..."}  Quickhelp provided at the bottom of edit pages.  To customize, specify a dictionary with key matching default_markup (e.g. 'wiki') and give a string value containing wiki markup  edit_locking  'warn 10'  Editor locking policy: None, 'warn <timeout in minutes>', or 'lock <timeout in minutes>'  edit_rows  20  Default height of the edit box  hacks  {}  for use by moin development  hosts_deny  []  List of denied IPs; if an IP ends with a dot, it denies a whole subnet (class A, B or C)  html_head  ""  Additional <HEAD> tags for all pages (see HelpOnThemes)  html_head_posts  robots: noindex,nofollow  Additional <HEAD> tags for POST requests  html_head_index  robots: index,follow  Additional <HEAD> tags for some few index pages  html_head_normal  robots: index,nofollow  Additional <HEAD> tags for most normal pages  html_head_queries  robots: noindex,nofollow  Additional <HEAD> tags for requests with query strings, like actions  html_pagetitle  None  Allows you to set a specific HTML page title (if not set, it defaults to the value of sitename)  interwiki_preferred  []  In dialogues, show those wikis at the top of the list.  interwikiname  None  InterWiki name (prefix, moniker) of the site, or None  language_default  'en'  Default language for user interface and page content, see HelpOnLanguages! language_ignore_browser  False  Ignore user's browser language settings, see HelpOnLanguages! log_reverse_dns_lookups  True  Do a reverse DNS lookup on page SAVE. If your DNS is broken, set to False to speed up SAVE. logo_string  sitename  The wiki logo top of page, HTML is allowed (<img> is possible as well) [Unicode]  mail_from  None  From: header used in sent mails, e.g. mail_from = u'Jürgen Wiki <noreply@example.com>'. See /EmailSupport. mail_import_subpage_template  u"$from-$date-$subject"  This is the template for the pagename generated by the mail import code. See /EmailSupport. New in 1.6.  mail_import_pagename_envelope  u"%s"  Special use, see /EmailSupport. New in 1.6.  mail_import_pagename_search  ['subject', 'to', ]  Where and in which order to search for the target pagename, see /EmailSupport. New in 1.6.  mail_import_pagename_regex  r'\[\[([^"]*)\]\]'  Special use, see /EmailSupport. New in 1.6.  mail_import_wiki_addrs  []  The e-mail address(es) of the e-mails that should go into the wiki See /EmailSupport. New in 1.6.  mail_import_secret  ""  The secret that matches the mailimportconf.py configuration file. See /EmailSupport. New in 1.6.  mail_login  None  "user pwd" if you need to use SMTP AUTH  mail_smarthost  None  IPv4 address or hostname of an SMTP-enabled server (with optional :port appendix, defaults to 25). Note that email features (notification, mailing of login data) works only if this variable is set.  mail_sendmail  None  If set to e.g. '/usr/sbin/sendmail -t -i', use this sendmail command to send mail. Default is to send mail by an internal function using SMTP.  mimetypes_xss_protect ['text/html', 'application/x-shockwave-flash', 'application/xhtml+xml',]   "content-disposition: inline" isn't used for them when a user downloads such attachments  mimetypes_embed ['application/x-dvi', 'application/postscript', 'application/pdf', 'application/ogg', 'application/vnd.visio', 'image/x-ms-bmp', 'image/svg+xml', 'image/tiff', 'image/x-photoshop',  'audio/mpeg', 'audio/midi', 'audio/x-wav', 'video/fli', 'video/mpeg', 'video/quicktime', 'video/x-msvideo', 'chemical/x-pdb', 'x-world/x-vrml',]  mimetypes used by HelpOnMacros/EmbedObject  navi_bar  [u'%(page_front_page)s', u'RecentChanges', u'FindPage', u'HelpContents',]  Most important page names. Users can add more names in their quick links in UserPreferences. To link to URL, use u"[url link title]", to use a shortened name for long page name, use u"[LongLongPageName title]". To use page names with spaces, use u"[page_name_with_spaces any title]" [list of Unicode strings]  nonexist_qm  False  Default for displaying WantedPages with a question mark, like in the original wiki (changeable by the user)  page_category_regex  u'^Category[A-Z]'  Pagenames containing a match for this regex are regarded as Wiki categories [Unicode]  page_credits  [...]  list with html fragments with logos or strings for crediting.   page_dict_regex  u'[a-z0-9]Dict$'  Pagenames containing a match for this regex are regarded as containing variable dictionary definitions [Unicode]  page_footer1  ""  Custom HTML markup sent before the system footer (see HelpOnThemes)  page_footer2  ""  Custom HTML markup sent after the system footer (see HelpOnThemes)  page_front_page  u'HelpOnLanguages'  Name of the front page. We don't expect you to keep the default. Just read HelpOnLanguages in case you're wondering... [Unicode]  page_group_regex  u'[a-z0-9]Group$'  Pagenames containing a match for this regex are regarded as containing group definitions [Unicode]  page_header1  ""  Custom HTML markup sent before the system header / title area but after the body tag (see HelpOnThemes)  page_header2  ""  Custom HTML markup sent after the system header / title area (and body tag) (see HelpOnThemes)  page_iconbar  ["view", ...]  list of icons to show in iconbar, valid values are only those in page_icons_table. Available only in classic theme.  page_icons_table  dict  dict of {'iconname': (url, title, icon-img-key), ...}. Available only in classic theme.  page_license_enabled  False  Show a license hint in page editor.  page_license_page  u'WikiLicense'  Page linked from the license hint. [Unicode]  page_local_spelling_words  u'LocalSpellingWords'  Name of the page containing user-provided spellchecker words [Unicode]  page_template_regex  u'[a-z0-9]Template$'  Pagenames containing a match for this regex are regarded as templates for new pages [Unicode]  quicklinks_default  []  List of preset quicklinks which is set for a new user on account creation. Existing accounts are not affected by this option whereas changes in navi_bar do always affect existing accounts. Preset quicklinks can be removed by the user in the userpreference menu, navi_bar settings not.  refresh  None  refresh = (minimum_delay_s, targets_allowed) enables use of #refresh 5 PageName processing instruction, targets_allowed must be either 'internal' or 'external'  search_results_per_page  10  Number of hits shown per page in the search results  shared_intermap  None  Path to a file containing global InterWiki definitions (or a list of such filenames)  show_hosts  True  Disable this option to hide host names and IPs  show_interwiki  False  Enable this option to let the theme display your interwiki name  show_login  True  Disable this option to get login/logout action removed  show_names  True  Disable this option to hide names from the info view and RecentChanges (this was previously done by show_hosts)  show_section_numbers  0  1 to show section numbers in headings by default  show_timings  False  Shows some timing values at bottom of page - used for development  show_version  False  Show MoinMoin's version at the bottom of each page  sitename  u'Untitled Wiki'  Short description of your wiki site, displayed below the logo on each page, and used in RSS documents as the channel title [Unicode]  stylesheets  []  List of tuples (media, csshref) to insert after theme css, before user css  subscribed_pages_default  []  List of preset page subscriptions which is set for a new user on account creation.  superuser  []  List of trusted user names with wiki system administration super powers (not to be confused with ACL admin rights!). For an example see HelpOnSuperUser. Used for e.g. making full backups, software installation, language installation via SystemPagesSetup and more. See also HelpOnPackageInstaller. supplementation_page  False  Enable to show supplementation_page_name in theme for each page supplementation_page_nameu'Discussion'default name for supplementation_page supplementation_page_templateu'DiscussionTemplate'default template for supplementation_page textchas  {}  dict of anti-spam questions/answers, see HelpOnTextChas  textchas_disabled_group  None  group name which members don't get textchas, see HelpOnTextChas  theme_default  'modern'  the name of the theme that is used by default (see HelpOnThemes)  theme_force  False  If True, do not allow to change the theme  trail_size  5  Number of pages in the trail of visited pages  tz_offset  0.0  default time zone offset in hours from UTC  ua_spiders  ...|google|wget|...  A regex of HTTP_USER_AGENTs that should be excluded from logging  url_mappings  {}  lookup table to remap URL prefixes (dict of 'prefix': 'replacement'); especially useful in intranets, when whole trees of externally hosted documents move around  url_prefix_static  '/moin_static160'  used as the base URL for icons, css, etc. - includes the moin version number and changes on every release. This replaces the deprecated and sometimes confusing url_prefix = '/wiki' setting.  url_prefix_action  None  Use 'action' to enable action URL generation to be compatible with robots.txt. It will generate .../action/info/PageName?action=info then. Recommended for internet wikis.  unzip_attachments_count  51  max. number of files which are extracted from the zip file  unzip_attachments_space  200MB  max. total amount of bytes can be used to unzip files  unzip_single_file_size  2MB  max. size of a single file in the archive which will be extracted user_autocreate  False  If set to True user accounts are created automatically (see HelpOnAuthentication).  user_checkbox_defaults  dict  Sets the default settings of the UserPreferences checkboxes. See /UserPreferences or multiconfig.py for the default settings. Example: user_checkbox_defaults = {'edit_on_doubleclick': 0}  user_checkbox_disable  []  a list of checkbox names to be disabled in the UserPreferences. A disabled checkbox is displayed greyedout and uses the default value set in user_checkbox_defaults.  user_checkbox_fields  [...]  list of checkbox items, see /UserPreferences or multiconfig.py  user_checkbox_remove  []  a list of checkbox names to be removed from the UserPreferences. A removed checkbox uses the default value set in user_checkbox_defaults. See /UserPreferences  user_dir  []  share user data between multiple wikis. See HelpOnUserHandling  user_email_unique  True  check emails for uniqueness and don't accept duplicates.  user_form_defaults []  a list of form defaults for UserPreferences. See /UserPreferences  user_form_disable  []  a list of form field names to be disabled in the UserPreferences. A disabled field is displayed greyed out and uses the default value set in user_form_defaults. See /UserPreferences  user_form_fields  [...]  list of userprefs form items, see /UserPreferences or multiconfig.py  user_form_remove  []  a list of form field names to be removed from the UserPreferences. A removed form field uses the default value set in user_form_defaults. See /UserPreferences  user_homewiki  Self  interwiki name of the wiki where the user home pages are located (useful if you have many users). You could even link to nonwiki "user pages" if the wiki username is in the target URL.  xapian_index_dir  None  if set, set and use a separate index directory for every wiki distinguished by wikiname; useful for wikifarms to seperate indices (Note: needs rebuilding the index, see HelpOnXapian)  xapian_index_history  True  enabling this will instruct the indexer to index all revisions of a page to let users search in their history (Note: needs rebuilding the index, see HelpOnXapian)  xapian_search  False  enables Xapian search, see HelpOnXapian for more information on the setup  xapian_stemming  True  enables stemming of terms in Xapian (Note: needs rebuilding the index, see HelpOnXapian) Some values can only be set from MoinMoin/config/__init__.py (part of the MoinMoin code and thus GLOBALLY changing behaviour of all your wikis), but not from the individual wiki's config - you should only touch them if you know what you are doing:  charset  'utf-8'  the encoding / character set used by the wiki  Do not change this - it is not tested and we can't support it.   lowerletters  ucs-2 lowercase letters  Lowercase letters, used to define what is a WikiName  smileys  [...]  a list of smiley markups MoinMoin supports - image and image sizes are defined in the theme code.  umask  0770  umask used by MoinMoin, the default gives rights to owner and group, but not to world.  upperletters  ucs-2 uppercase letters  uppercase letters, used to define what is a WikiName  url_schemas  []  additional URL schemas you want to have recognized (list of strings; e.g. ['ldap', 'imap']) 
Related Topics
HelpOnInstalling/StandaloneServer HelpOnAccessControlLists - how to manage access to pages with ACLs HelpOnThemes - how to change the appearance of your wiki HelpOnSpellCheck - how to configure and maintain the spell checking option /EmailSupport - how to work with emails in MoinMoin. HelpOnXmlPages (configure both XML and DocBook rendering) /SecurityPolicy /FileAttachments /ApacheVoodoo /SurgeProtection  HelpForDevelopers HelpForUsers 





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/group/HelpOnAdministration
##-----------------TITLE------------------------##
HelpOnAdministration - GraphModAlg@UCI
##------------------TEXT------------------------##
Search:











HelpOnAdministration







Wiki

Main_PageRecentChangesFindPageHelpContentsHelpOnAdministration



Page
Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    







User
Login





HelpContents > HelpForAdministrators > HelpOnAdministration The following pages contain information on various subtopics important to MoinMoin admins. If you are about to install a new version please go to HelpOnInstalling. If you want to configure your wiki go to HelpOnConfiguration. 
General
HelpOnAccessControlLists - how to manage access to pages with ACLs HelpOnAutoAdmin - when you want to give some users or user groups admin rights on some pages HelpOnLanguages - how MoinMoin uses different languages HelpOnPageDeletion - how to delete pages HelpOnSpam - what to do with spam HelpOnUserHandling - how to manage user accounts HelpOnSuperUser - users with special rights HelpOnAuthentication - how to configure alternate authentication options 
Updating
HelpOnUpdating - how to update an existing MoinMoin installation HelpOnUpdatingPython - how to move to a more recent version of Python 
Advanced Topics
HelpOnSynchronisation HelpOnMoinCommand  HelpForDevelopers HelpForUsers 





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/group/FrontPage
##-----------------TITLE------------------------##
FrontPage - GraphModAlg@UCI
##------------------TEXT------------------------##
Search:











FrontPage







Wiki

Main_PageRecentChangesFindPageHelpContentsFrontPage



Page
Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    







User
Login






WikiName Wiki
What is this wiki about? Interesting starting points: RecentChanges: see where people are currently working WikiSandBox: feel free to change this page and experiment with editing FindPage: search or browse the database in various ways SyntaxReference: quick access to wiki syntax SiteNavigation: get an overview over this site and what it contains 
How to use this site
A Wiki is a collaborative site, anyone can contribute and share: Edit any page by pressing Edit at the top or the bottom of the page  Create a link to another page with joined capitalized words (like WikiSandBox) or with [[words in brackets]] Search for page titles or text within pages using the search box at the top of any page See HelpForBeginners to get you going, HelpContents for all help pages. To learn more about what a WikiWikiWeb is, read about WhyWikiWorks and the WikiNature. Also, consult the HelpMiscellaneous/FrequentlyAskedQuestions page.  This wiki is powered by MoinMoin. 





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/group/HelpOnProcessingInstructions
##-----------------TITLE------------------------##
HelpOnProcessingInstructions - GraphModAlg@UCI
##------------------TEXT------------------------##
Search:











HelpOnProcessingInstructions







Wiki

Main_PageRecentChangesFindPageHelpContentsHelpOnProce...nstructions



Page
Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    







User
Login





HelpForUsers > HelpOnEditing > HelpOnProcessingInstructions MoinMoin processing instructions have the same semantics as in XML: they control the paths taken when processing a page. Processing Instructions (PIs) are lines that start with a "#" character followed by a keyword and optionally some arguments; the keyword is always handled case-insensitive. Two consecutive hash marks at the start of a line are a comment that won't appear in the processed page. All PIs must appear at the very start of a page. An exception are comment PIs, those may appear anywhere within a  page using "wiki" format, but not in pages using other formats. For more information on the possible markup, see HelpOnEditing.  Processing instructions MoinMoin knows of: Contents
## comment
#format
#redirect
#refresh
#pragma
section-numbers
keywords
description
supplementation
#deprecated
#language 
## comment
## a comment, any text here is ignored 
#format
Defines the input format for this page.  #FORMAT format-specifier optional-argumentsformat-specifier can be: wiki: default MoinMoin wiki markup plain: normal plain text python: colored Python code creole: alternative wiki syntax (see HelpOnCreoleSyntax) Any other installed parser name. See HelpOnParsers for additional parsers available and ParserMarket for user provided parsers. Some parsers can accept optional arguments. Check the documentation of the parser for the possible options. 
#redirect
Redirect to a different page (see PageRedirect) #REDIRECT pagename
#refresh
Redirect to a different page (or an external URL or just refresh the same page, if left out) Needs to be enabled in the server configuration, see HelpOnConfiguration #REFRESH delay targettarget can be either a page name, or a fully qualified url. Here are two examples: #refresh 0 FrontPage
#refresh 5 http://example.com/
#pragma
Sets processing modes for this page: #PRAGMA mode arguments Mode names are not case-sensitive.  MoinMoin knows few pragmas, and you may add more and use them for your own themes or macros. Here are the known pragmas: 
section-numbers
Switches automatic numbering of section headers. #pragma section-numbers offoff or 0 disable numbering, on or 1 enables numbering. The default mode is set by the show_section_numbers config option. When enabling numbering, its possible to use specific heading level: #pragma section-numbers 2Only displays section numbers for headings of level 2 and up (similarly for 3 to 6). 
keywords
adds a <meta> tag with keywords which tells search engines what you can find on the particular page. #pragma keywords Cars, Vehicles, Foo 
description
adds a <meta> tag which contains the description of the particular page. #pragma description This page is about cars. 
supplementation
is used to enable or disable a supplementation for the current page e.g. a discussion page #pragma supplementation-page onoff disables the supplementation for the current page. See also HelpOnConfiguration/SupplementationPage for more. 
#deprecated
Mark this page as deprecated. #DEPRECATEDFurther changes to the page will create no backup versions and using it will cause the current revision to show along with the revision previous to the deprecation. This allows you to remove all of the page's content, insert #deprecated, and then write a short message explaining the reason behind this action. By doing this you are effectively freezing the last version of the page, making it unavailable for searches (no hits on stale content), but you are keeping the content available for viewing. Removing the PI from the page will store no backup of the deprecation warning. In comparison to #REDIRECT this PI gives the ability to give the user a reason why this page is no longer of use and why they should go to a new one, while #REDIRECT will throw them to the new page without any reason. Not removing the page's content when adding #deprecated will cause the page to render twice. 
#language
Set page language and direction. #language language-nameSet page language and direction. Language name is the iso-639-1 code. MoinMoin ignore languages that does not have a translation file in MoinMoin/i18n/. See also HelpOnLanguages. 





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/group/WikiCourse/02%20Finding%20information
##-----------------TITLE------------------------##
WikiCourse/02 Finding information - GraphModAlg@UCI
##------------------TEXT------------------------##
Search:











WikiCourse02 Finding information







Wiki

Main_PageRecentChangesFindPageHelpContents02 Finding information



Page
Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    







User
Login





Slideshow ^  |<  << Slide 2 of 44 >>  >|  
Finding information
MoinMoin has many ways to find information in the wiki: 
Searching
Search field in the navigation area on the top of the page For a title search, type in the search keywords and hit "enter" (or click on title). For a full-text search, type in the search keywords and click on text. Menu item FindPage Includes indexes of all pages sorted by page names and words in the page name. Advanced search functions.  The title search can also be used to quickly navigate to pages that you only roughly know the title of. You can find further information on the help page HelpOnSearching. 
Navigation in the wiki
RecentChanges: The latest changes made to the wiki. SiteNavigation: The starting point for exploring the wiki. WikiSandBox: You can experiment here as much as you want. FindPage: Even more ways to browse the wiki. TitleIndex: An alphabetical list of all page names. 





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/group/WikiCourse/08%20Hot%20Keys
##-----------------TITLE------------------------##
WikiCourse/08 Hot Keys - GraphModAlg@UCI
##------------------TEXT------------------------##
Search:











WikiCourse08 Hot Keys







Wiki

Main_PageRecentChangesFindPageHelpContentsWikiCourse/08 Hot Keys



Page
Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    







User
Login





Slideshow ^  |<  << Slide 8 of 44 >>  >|  
Hot keys
The usual hot keys work in the editor: Shift + arrow for select Ctrl + C for copy Ctrl + X for cut Ctrl + V for insert Ctrl + Z for undo Ctrl + Y for repeat 
Mouse
Of course you can also select with the mouse and use your browser's editing features.  Linux / X11: A left doubleclick selects and copies a word, and a click on the middle mouse key is insert. 





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/group/WikiCourse/04%20Creating%20a%20wiki%20account
##-----------------TITLE------------------------##
WikiCourse/04 Creating a wiki account - GraphModAlg@UCI
##------------------TEXT------------------------##
Search:











WikiCourse04 Creating a wiki account







Wiki

Main_PageRecentChangesFindPageHelpContents04 Creating...iki account



Page
Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    







User
Login





Slideshow ^  |<  << Slide 4 of 44 >>  >|  
Creating a wiki account
Using a wiki is often possible without creating an account (this depends on the security preferences). However, using the wiki with an account is easier and better, because you can: set a temporal bookmark on RecentChanges. customize and personalize the navigation. set your time zone. subscribe to pages and get informed when a change is made. do much more. To create an account, use the link register in the navigation area. Then you will have to enter: a name (it is a good idea to use FirstnameLastname). a password (not too simple!). the password again (to avoid typing errors). an e-mail address (for notifications or if you forgot your password)  Then click on Create profile.  The account will be created and you can log in to the wiki using your user name and password.  You are logged in if you see the user name in the navigation area. 





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/group/WikiCourse/16%20Wiki%20internal%20links
##-----------------TITLE------------------------##
WikiCourse/16 Wiki internal links - GraphModAlg@UCI
##------------------TEXT------------------------##
Search:











WikiCourse16 Wiki internal links







Wiki

Main_PageRecentChangesFindPageHelpContents16 Wiki internal links



Page
Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    







User
Login





Slideshow ^  |<  << Slide 15 of 44 >>  >|  
Wiki internal links
One of the most important features of the wiki is the internal linking to other wiki pages, therefore it is quite simple. 
WikiNames ("CamelCase")
If you WriteWordsTogether like FistnameLastname or CamelCase or MoinMoin, so that there are at least two changes between capital letters and lower case letters, MoinMoin will automatically link this word to the page of the same name. This is quite simple, because wiki markup isn't necessary. But the unusual syntax isn't everyone's cup of tea, so there is one more alternative, the so-called "free link". 
Input
CamelCase !CamelCaseButNotLinked
Display
CamelCase CamelCaseButNotLinked 
Free links
If you want to link pages, which aren't in CamelCase or if you just don't like CamelCase, you can also link this way: 
Input
A [[free link]] and [[other page|another page]].
Display
A free link and another page. 
Tracing backwards from links
If you click on the page name in the navigation area, the wiki looks for pages which link to this page name. This can be used for so-called wiki badges. You just write somewhere: ToDo: Call costumer foobar regarding ... ToDo is CamelCase, so it links to a homonymous page, which isn't very exiting.   But you can click on the page name on the page ToDo and lo and behold, you find every page that also includes a ToDo. 





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/group/WikiCourse/40%20Creating%20more%20pages
##-----------------TITLE------------------------##
WikiCourse/40 Creating more pages - GraphModAlg@UCI
##------------------TEXT------------------------##
Search:











WikiCourse40 Creating more pages







Wiki

Main_PageRecentChangesFindPageHelpContents40 Creating more pages



Page
Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    







User
Login





Slideshow ^  |<  << Slide 24 of 44 >>  >|  
Creating more pages
The easiest and best way to create more pages is to: think of a good page name. edit an appropriate page, add a link to the new page, and save it. click on the link to the new page prepare to edit using: an empty page. a page template (a list of templates is displayed on the left).  the list of similar page names shown to ensure that there isn't any slightly different named page on the same topic. start editing, fill the page with content, and save it.  This method makes sure that new pages are always accessible from links on already existing pages. 





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/group/WikiCourse/19%20Symbols
##-----------------TITLE------------------------##
WikiCourse/19 Symbols - GraphModAlg@UCI
##------------------TEXT------------------------##
Search:











WikiCourse19 Symbols







Wiki

Main_PageRecentChangesFindPageHelpContentsWikiCourse/19 Symbols



Page
Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    







User
Login





Slideshow ^  |<  << Slide 18 of 44 >>  >|  
Symbols
MoinMoin also supports some graphical symbols, like the so called smileys that frequently appear in e-mails and chats:  {1} {2} {3}      /!\ (!) (./) {X} {i} {OK}         {*} {o}     :) B-) :( X-(      For more see HelpOnSmileys. 





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/benchmarks/
##-----------------TITLE------------------------##
Index of /uaifiles/benchmarks/
##------------------TEXT------------------------##
Index of /uaifiles/benchmarks/

NameLast ModifiedSizeTypeParent Directory/ -  Directory1-wcsp.tar.gz2008-Sep-09 16:32:1741.5Mapplication/octet-stream1.networks2008-Sep-09 16:28:144.2Kapplication/octet-stream2-bn2o.tar.gz2008-Sep-09 16:32:176.1Mapplication/octet-stream2.networks2008-Sep-09 16:28:140.7Kapplication/octet-stream3-diagnose.tar.gz2008-Sep-09 16:32:17459.6Kapplication/octet-stream3.networks2008-Sep-09 16:28:142.9Kapplication/octet-stream4-grids.tar.gz2008-Sep-09 16:32:182.9Mapplication/octet-stream4-sub.networks2008-Sep-09 16:28:141.0Kapplication/octet-stream4.networks2008-Sep-09 16:28:1410.6Kapplication/octet-stream5-linkage.tar.gz2008-Sep-09 16:32:18159.9Kapplication/octet-stream5.networks2008-Sep-09 16:28:140.7Kapplication/octet-stream6-promedas.tar.gz2008-Sep-09 16:32:181.8Mapplication/octet-stream6.networks2008-Sep-09 16:28:159.4Kapplication/octet-stream7-uai06-mpe.tar.gz2008-Sep-09 16:32:31126.9Mapplication/octet-stream7.networks2008-Sep-09 16:28:151.8Kapplication/octet-stream8-uai06-pe.tar.gz2008-Sep-09 16:32:44128.1Mapplication/octet-stream8.networks2008-Sep-09 16:28:152.3Kapplication/octet-stream9-relational.tar.gz2008-Sep-09 16:32:4841.3Mapplication/octet-stream9-sub.networks2008-Sep-09 16:28:151.5Kapplication/octet-stream9.networks2008-Sep-09 16:28:1511.7Kapplication/octet-stream

lighttpd/1.4.26
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uai08/FileFormat
##-----------------TITLE------------------------##
FileFormat - UAI '08 Workshop: Probabilistic Reasoning Systems
##------------------TEXT------------------------##
Search:







Login



FileFormat




FrontPageRecentChangesFindPageHelpContentsFileFormat



Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    










Evaluation file format
We use the simple text file format specified below to describe problem instances. The format is a generalization of the Ergo file format initially developed by Noetic Systems Inc. for their Ergo software. Evaluation benchmark files typically have the ending .uai. 
Structure
A file in the UAI format consists of the following two parts, in that order: <Preamble>

<Function tables>The contents of each section (denoted <...> above) are described in the following: 
Preamble
The preamble starts with one line denoting the type of network. This will be either BAYES (if the network is a Bayesian network) or MARKOV (in case of a Markov network). This is followed by a line containing the number of variables. The next line specifies each variable's domain size, one at a time, separated by whitespace (note that this implies an order on the variables which will be used throughout the file). The fourth line contains only one integer, denoting the number of functions in the problem (conditional probability tables for Bayesian networks, general factors for Markov networks). Then, one function per line, the scope of each function is given as follows: The first integer in each line specifies the size of the function's scope, followed by the actual indexes of the variables in the scope. The order of this list is not restricted, except when specifying a conditional probability table (CPT) in a Bayesian network, where the child variable has to come last. Also note that variables are indexed starting with 0. For instance, a general function over variables 0, 5 and 11 would have this entry: 3 0 5 11A simple Markov network preamble with three variables and two functions might for instance look like this: MARKOV
3
2 2 3
2
2 0 1
3 0 1 2The first line denotes the Markov network, the second line tells us the problem consists of three variables, let's refer to them as X, Y, and Z. Their domain size is 2, 2, and 3 respectively (from the third line). Line four specifies that there are 2 functions. The scope of the first function is X,Y, while the second function is defined over X,Y,Z. An example preamble for a Belief network over three variables (and therefore with three functions) might be: BAYES
3
2 2 3
3
1 0
2 0 1
2 1 2The first line signals a Bayesian network. This example has three variables, let's call them X, Y, and Z, with domain size 2, 2, and 3, respectively (from lines two and three). Line four says that there are 3 functions (CPTs in this case). The scope of the first function is given in line five as just X (the probability P(X)), the second one is defined over X and Y (this is P(Y|X)). The third function, from line seven, is the CPT P(Z|Y). We can therefore deduce that the joint probability for this problem factors as P(X,Y,Z) = P(X).P(Y|X).P(Z|Y). 
Function tables
In this section each function is specified by giving its full table (i.e, specifying the function value for each tuple). The order of the functions is identical to the one in which they were introduced in the preamble. For each function table, first the number of entries is given (this should be equal to the product of the domain sizes of the variables in the scope). Then, one by one, separated by whitespace, the values for each assignment to the variables in the function's scope are enumerated. Tuples are implicitly assumed in ascending order, with the last variable in the scope as the 'least significant'. To illustrate, we continue with our Bayesian network example from above, let's assume the following conditional probability tables: X P(X) 0 0.436 1 0.564 X Y P(Y|X) 0 0 0.128 0 1 0.872 1 0 0.920 1 1 0.080 Y Z P(Z|Y) 0 0 0.210 0 1 0.333 0 2 0.457 1 0 0.811 1 1 0.000 1 2 0.189 The correspoding function tables in the file would then look like this: 2
 0.436 0.564

4
 0.128 0.872
 0.920 0.080

6
 0.210 0.333 0.457
 0.811 0.000 0.189 (Note that line breaks and empty lines are effectively just whitespace, exactly like plain spaces " ". They are used here to improve readability.) 
Summary
To sum up, a problem file consists of 2 sections: the preamble and the full the function tables, the names and the labels For our Markov network example above, the full file could be: MARKOV
3
2 2 3
2
2 0 1
3 0 1 2

4
 4.000 2.400
 1.000 0.000

12
 2.2500 3.2500 3.7500
 0.0000 0.0000 10.0000
 1.8750 4.0000 3.3330
 2.0000 2.0000 3.4000Here is the full Bayesian network example from above: BAYES
3
2 2 3
3
1 0
2 0 1
2 1 2

2
 0.436 0.564

4
 0.128 0.872
 0.920 0.080

6
 0.210 0.333 0.457
 0.811 0.000 0.189 
Expressing evidence
Evidence is specified in a separate file. This file has the same name as the original problems file but an added .evid extension at the end. For instance, problem.uai will have evidence in problem.uai.evid. The file simply starts with a line specifying the number of evidence variables. This is followed by the pairs of variable and value indexes for each observed variable, one pair per line. The indexes correspond to the ones implied by the original problem file. If, for our above example, we want to specify that variable Y has been observed as having its first value and Z with its second value, the file example.uai.evid would contain the following: 2
 1 0
 2 1
Examples
Some example problem instances are available here. FileFormat  (last edited 2010-07-19 18:46:07 by LarsOtten)






Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uai08/ArthurChoi
##-----------------TITLE------------------------##
ArthurChoi - UAI '08 Workshop: Probabilistic Reasoning Systems
##------------------TEXT------------------------##
Search:







Login



ArthurChoi




FrontPageRecentChangesFindPageHelpContentsArthurChoi



Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    










Arthur Choi
http://www.cs.ucla.edu/~aychoi/ ArthurChoi  (last edited 2008-09-24 14:58:21 by LarsOtten)






Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uai08/ExactPR/TimeSolved
##-----------------TITLE------------------------##
ExactPR/TimeSolved - UAI '08 Workshop: Probabilistic Reasoning Systems
##------------------TEXT------------------------##
Search:







Login



ExactPRTimeSolved




FrontPageRecentChangesFindPageHelpContentsExactPR/TimeSolved



Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    










Exact PR: Time vs. Instances Solved Results
We first show nine plots, one for each benchmark class that was run. Note that some solvers do not accept Markov networks as input and are shown as constant 0 in these cases.                   The overall results, for all benchmark sets. Note that this does not take into account the vastly differing number of benchmark set sizes as well as the fact that some solvers don't work on Markov networks.   ExactPR/TimeSolved  (last edited 2008-09-17 20:21:30 by ArthurChoi)






Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/exact-pe/exact.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Exact PR: Instances Solved vs. Cumulative Time Results
click plot for full-size image
linear scalelog scale
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Diagnose
Bayes networks
100 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uai08/ExactPR/SolvedTime
##-----------------TITLE------------------------##
ExactPR/SolvedTime - UAI '08 Workshop: Probabilistic Reasoning Systems
##------------------TEXT------------------------##
Search:







Login



ExactPRSolvedTime




FrontPageRecentChangesFindPageHelpContentsExactPR/SolvedTime



Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    










Exact PR: Instances Solved vs. Cumulative Time Results
Note that the absence of a solver from a plot means it does not accept networks on the respective benchmarks (i.e., Bayes-only solvers do not accept Markov networks).                   The overall results, for all benchmark sets. Note that this does not take into account the vastly differing number of benchmark set sizes as well as the fact that some solvers don't work on Markov networks.   ExactPR/SolvedTime  (last edited 2008-09-17 20:45:09 by ArthurChoi)






Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uai08/SiteNavigation
##-----------------TITLE------------------------##
SiteNavigation - UAI '08 Workshop: Probabilistic Reasoning Systems
##------------------TEXT------------------------##
Search:







Login



SiteNavigation




FrontPageRecentChangesFindPageHelpContentsSiteNavigation



Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    









SiteNavigation is the central place to explore this wiki. MoinMoin supports the following IndexingSchemes: RecentChanges TitleIndex WordIndex FindPage WantedPages OrphanedPages AbandonedPages RandomPage PageSize PageHits You can navigate to other wiki pages related to the current page by selecting these actions, available through the dropdown lists in the edit bars at the top and/or bottom of each page: LikePages LocalSiteMap Additionally, there are the <<PageList>>, <<FullSearch(...)>>, <<Navigation(...)>>, and <<TableOfContents>> macros, which allow you to automatically generate indices for cohesive parts of a wiki (see HelpOnMacros). 





Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-pe-scores/rel.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Approx PR: Cumulative Score vs Cumulative Time Results
using relative error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-pe-errors/rel.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Approx PR: Instances vs Cumulative Error Results
using relative error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uai08/vibhav
##-----------------TITLE------------------------##
vibhav - UAI '08 Workshop: Probabilistic Reasoning Systems
##------------------TEXT------------------------##
Search:







Login



vibhav




FrontPageRecentChangesFindPageHelpContentsvibhav



Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    










Vibhav Gogate
http://www.ics.uci.edu/~vgogate/ vibhav  (last edited 2008-09-24 14:59:06 by LarsOtten)






Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uai08/LarsOtten
##-----------------TITLE------------------------##
LarsOtten - UAI '08 Workshop: Probabilistic Reasoning Systems
##------------------TEXT------------------------##
Search:







Login



LarsOtten




FrontPageRecentChangesFindPageHelpContentsLarsOtten



Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    










Lars Otten
http://www.ics.uci.edu/~lotten/ LarsOtten  (last edited 2008-09-24 14:57:35 by LarsOtten)






Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uai08/ExactMAR/SolvedTime
##-----------------TITLE------------------------##
ExactMAR/SolvedTime - UAI '08 Workshop: Probabilistic Reasoning Systems
##------------------TEXT------------------------##
Search:







Login



ExactMARSolvedTime




FrontPageRecentChangesFindPageHelpContentsExactMAR/SolvedTime



Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    










Exact MAR: Instances Solved vs. Cumulative Time Results
Note that the absence of a solver from a plot means it does not work on the respective benchmarks (Markov networks).                   The overall results, for all benchmark sets. Note that this does not take into account the vastly differing number of benchmark set sizes as well as the fact that some solvers don't work on Markov networks.   ExactMAR/SolvedTime  (last edited 2008-09-17 20:57:44 by ArthurChoi)






Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uai08/ExactMAR/TimeSolved
##-----------------TITLE------------------------##
ExactMAR/TimeSolved - UAI '08 Workshop: Probabilistic Reasoning Systems
##------------------TEXT------------------------##
Search:







Login



ExactMARTimeSolved




FrontPageRecentChangesFindPageHelpContentsExactMAR/TimeSolved



Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    










Exact MAR: Time vs. Instances Solved Results
We first show nine plots, one for each benchmark class that was run. Note that some solvers do not accept Markov networks as input and are shown as constant 0 in these cases.                   The overall results, for all benchmark sets. Note that this does not take into account the vastly differing number of benchmark set sizes as well as the fact that some solvers don't work on Markov networks.   ExactMAR/TimeSolved  (last edited 2008-09-17 20:53:44 by ArthurChoi)






Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/exact-mar/exact.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Exact MAR: Instances Solved vs. Cumulative Time Results
click plot for full-size image
linear scalelog scale
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Diagnose
Bayes networks
100 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uai08/HelpOnSearching
##-----------------TITLE------------------------##
HelpOnSearching - UAI '08 Workshop: Probabilistic Reasoning Systems
##------------------TEXT------------------------##
Search:







Login



HelpOnSearching




FrontPageRecentChangesFindPageHelpContentsHelpOnSearching



Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    










Queries
With the MoinMoin search engine the same search patterns are allowed in the search and title search input fields as in the parameters for the FullSearch  (FullSearchCached) and the PageList macros. There may be several search term seperated by white space Terms are combined by default with an AND operation - only pages containing all search term are returned Double or single quotes may be used to include white space within search terms (phrase search) - before a search term means NOT. Pages containing this term are excluded from the result regex:TERM is treated as a regular expression.  MoinMoin follows Python regex rules (see http://docs.python.org/lib/re-syntax.html for more info) title:TERM searches in pages whose titles match TERM Normal search terms do search the titles, too. Matches in titles get more weight than matches in pages. case:TERM searches case sensitive linkto:TERM searches for links to TERM language:LANG-ISO-CODE searches for pages written in a given language ISO code, e.g. en, de category:CAT searches for pages belonging to CategoryCAT; replaces old regular expression mimetype:TYPE searches for pages and attachments with mimetype TYPE, e.g. image/png  Currently only available with Xapian!  Does this comment apply to item above or below?? domain:TERM searches for pages in a domain like underlay or system (for system pages) title:, regex:, linkto: and case: may be used in combination in one search term these modifiers may be abbreviated to any length: e.g. re:, t:, reg:, cas:, l: If you want to use multiple prefixes, you have to concatenate them like this: t:re:TERM - must be put before any other modifiers OR operator has a lower precedence than the implicit AND (e.g., car deisel or gas will find any page containing both "car" and "deisel", but will also hit on pages containing "gas", even if "car" is not on the page.) Parentheses can be used for grouping 
Examples
title:Help macrosearches for help pages that contain the word "macro". apple (computer or "operating system")searches for pages containing the word "apple" and at least one of "computer" or "operating system". windows winamp or linux xmmssearches for pages containing both "windows" and "winamp", and also for pages containing both "linux" and "xmms". "is text"Will match "this text" or "is texts". Quotes are used only to include whitespace, and do not mean "exactly this phrase". linkto:WindowsPage title:Linux searches for pages that have "Linux" in the page name and that link to WindowsPager:\bdog\b searches for the word "dog" and does not find e.g. the word "doggy".help -domain:system search for pages containing the word "help" but which are not system pagescategory:homepage title:thomas search for pages in CategoryHomepage with the word "thomas" in the title (user homepages of all persons named Thomas)
TitleSearch and PageList
uses the same patterns title: is virtually added to every search term 
Xapian
See HelpOnXapian for more information on Xapian and its setup. 





Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uai08/HelpOnTables
##-----------------TITLE------------------------##
HelpOnTables - UAI '08 Workshop: Probabilistic Reasoning Systems
##------------------TEXT------------------------##
Search:







Login



HelpOnTables




FrontPageRecentChangesFindPageHelpContentsHelpOnTables



Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    










Table Markup
To create a table, you start and end a line using the table marker "||". Between those start and end markers, you can create any number of cells by separating them with "||". To get a centered cell that spans several columns, you start that cell with more than one cell marker. Adjacent lines of the same indent level containing table markup are combined into one table. For more information on the possible markup, see HelpOnEditing. 
Table Attributes
Apart from the option to repeat cell markers to get columns spanning several other columns, you can directly set many HTML table attributes. Any attributes have to be placed between angle brackets <...> directly after the cell marker. The wiki-like markup has the following options: <-2>: colspan <|2>: rowspan <style="..."> will put that style info into cell (td) html <rowstyle="..."> will put that style info into row (tr) html <tablestyle="..."> will put that style info into table (table) html <class="..."> will put that CSS class into cell (td) html <rowclass="..."> will put that CSS class into row (tr) html <tableclass="..."> will put that class into table (table) html <id="..."> will put that CSS id into cell (td) html The style stuff is all you need for styling your tables. Just use CSS formatted style there and it will be inlined in the generated HTML tag. Alternatively, the admin and the user (the admin in the theme file, the user via UserPreferences can extend moin's CSS by his own definitions, so users can refer to them using class or id. You can use several options at the same time by writing them one after the other within the same angle brackets (e.g. <tablestyle="..." rowstyle="..."> on the first cell, to set both the table-wide style and the first-row style). We still support the old table markup, but generate the effect by appending additional values to the style parameter: <50%>: cell width (will append width: 50%; to style) <width="50%">: does the same <tablewidth="100%">: set table width to 100% (only valid in first table row) <(>: left aligned (will append text-align: left; to style) <:>: centered (will append text-align: center; to style) <)>: right aligned (will append text-align: right; to style) <^>: aligned to top (will append vertical-align: top; to style) <v>: aligned to bottom (will append vertical-align: bottom; to style) <#XXXXXX>: background color (will append background-color: #XXXXXX; to style) <bgcolor="#XXXXXX"> does the same <rowbgcolor="#XXXXXX"> set row background color (only valid in first cell) <tablebgcolor="#XXXXXX"> set table background color If you use several conflicting options like <(:)>, the last option wins. There is no explicit option for vertical centering (middle), since that is always the default. 
Example
 NEW STYLE: General table layout and HTML like options::
 ||||||<tablestyle="width: 80%">'''Heading'''||
 ||cell 1||cell2||cell 3||
 ||<rowspan=2> spanning rows||||<style="background-color: #E0E0FF;"> spanning 2 columns||
 ||<rowstyle="background-color: #FFFFE0;">cell2||cell 3||
 Cell width::
 || narrow ||<style="width: 99%; text-align: center;"> wide ||
 Spanning rows and columns::
 ||<|2> 2 rows || row 1 ||
 || row 2 ||
 ||<-2> row 3 over 2 columns ||
 Alignment::
 ||<style="text-align: left;">left ||<style="vertical-align: top; text-align: center;"|3> top ||<style="vertical-align: bottom;"|3> bottom ||
 ||<style="text-align: center;"> centered ||
 ||<style="text-align: right;"> right ||
 Fonts::
 || normal ||<style="font-weight: bold;"> bold ||<style="color: #FF0000;"> red ||<style="color: #FF0000; font-weight: bold;"> boldred ||
 Colors::
 ||<style="background-color: red;"> red ||<style="background-color: green;"> green ||<style="background-color: blue;"> blue ||

 OLD STYLE: General table layout and HTML like options::
 ||||||<tablewidth="80%">'''Heading'''||
 ||cell 1||cell2||cell 3||
 ||<rowspan=2> spanning rows||||<bgcolor="#E0E0FF"> spanning 2 columns||
 ||<rowbgcolor="#FFFFE0">cell2||cell 3||
 Cell width::
 || narrow ||<:99%> wide ||
 Spanning rows and columns::
 ||<|2> 2 rows || row 1 ||
 || row 2 ||
 ||<-2> row 3 over 2 columns ||
 Alignment::
 ||<(> left ||<^|3> top ||<v|3> bottom ||
 ||<:> centered ||
 ||<)> right ||
 Colors::
 ||<#FF8080> red ||<#80FF80> green ||<#8080FF> blue ||
 Line breaks within cells::
 || line 1[[BR]]line 2||
Display
NEW STYLE: General table layout and HTML like optionsHeadingcell 1cell2cell 3 spanning rows spanning 2 columnscell2cell 3Cell width narrow  wide Spanning rows and columns 2 rows  row 1  row 2  row 3 over 2 columns Alignmentleft  top  bottom  centered  right Fonts normal  bold  red  boldred Colors red  green  blue OLD STYLE: General table layout and HTML like optionsHeadingcell 1cell2cell 3 spanning rows spanning 2 columnscell2cell 3Cell width narrow  wide Spanning rows and columns 2 rows  row 1  row 2  row 3 over 2 columns Alignment left  top  bottom  centered  right Colors red  green  blue Line breaks within cells line 1
line 2
Insert Table Data from other sources
comma separated values: see HelpOnParsers#csvparser include wiki pages: see Include 
Bulleted lists and other complex content within cells
 see MiniPage macro 





Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uai08/HelpOnEditing
##-----------------TITLE------------------------##
HelpOnEditing - UAI '08 Workshop: Probabilistic Reasoning Systems
##------------------TEXT------------------------##
Search:







Login



HelpOnEditing




FrontPageRecentChangesFindPageHelpContentsHelpOnEditing



Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    









HelpForUsers > HelpOnEditing 
Page Editing
Names of pages may either LookLikeThis (that is called a WikiName) or [[Like this]] (a so-called free link). If you write a word that LookLikeThis, it will be automatically turned into a link. More details about this you find on HelpForBeginners. The following pages describe the elements (wiki markup) you can use to get special formatting effects: HelpOnFormatting - general text formatting rules HelpOnLinking - external hyperlinks and inline images HelpOnHeadlines - section headings HelpOnRules - horizontal rules HelpOnLists - lists and indented sections HelpOnTables - tables HelpOnDictionaries - dictionaries HelpOnSmileys - how to insert a  HelpOnMacros - Macros allow you to use dynamic elements in a page HelpOnParsers - data processing parsers (replaces Processors) HelpOnProcessingInstructions - how to influence page formatting  HelpOnVariables - how variables work (built in and self-defined) HelpOnXmlPages - how to store pages with XML content and process them via XSLT HelpOnEditLocks - how to behave correctly when edit locking is activated HelpOnCategories - how to group wiki pages /SubPages - how to group together related information To experiment with wiki markup, go to the WikiSandBox and then click on "EditText" at the bottom of the page. Use your browser's "open a new window with this link" feature on the word "WikiSandBox", so you can keep the help pages open side-by-side to the editing window. 
Automatic Backup of Drafts
Every time you are in the editor and use the "Preview", "Spell Check", "Cancel" or "Save Changes" buttons, moin saves a draft copy of your work internally. Use preview often! If you hit "cancel" accidentally, your machine crashes, or the browser window was accidentally closed, then the automatic backup of your draft may be easily recovered. To recover that draft, you simply edit that page again. If there is a draft, an alert message will be in the message box and a "load draft" button will be present.  Clicking the "load draft" will load your saved draft into the editor box replacing the current revision already loaded. You can continue editing the loaded draft, but this time try to save it at the end.   Don't use the "preview", "spell check", "save changes" or "cancel" buttons on that page before "load draft" or you will overwrite your old draft with a new one. If you successfully save a page, the internal draft copy of it is not needed any more and will be deleted. 





Immutable PageCommentsInfoAttachments


    More Actions:
    Raw TextPrint ViewRender as DocbookDelete Cache------------------------Check SpellingLike PagesLocal Site Map------------------------Rename PageDelete Page------------------------Subscribe User------------------------Remove SpamRevert to this revisionPackage PagesSync Pages------------------------LoadSaveSlideShow
    
    





MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-errors/sum-rel.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
sum relative error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-scores/avg-abs.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
avg absolute error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-scores/sum-ms.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
sum mean squared error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-scores/avg-h2.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
avg hellinger error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-errors/sum-kl.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
sum kl error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-errors/avg-ms.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
avg mean squared error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-errors/avg-kl.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
avg kl error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-scores/sum-rel.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
sum relative error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-scores/avg-kl.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
avg kl error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-scores/sum-abs.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
sum absolute error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-errors/sum-ms.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
sum mean squared error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-errors/avg-rel.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
avg relative error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-scores/sum-h2.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
sum hellinger error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-errors/avg-h2.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
avg hellinger error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-errors/sum-abs.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
sum absolute error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-errors/avg-abs.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
avg absolute error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-scores/avg-ms.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
avg mean squared error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-scores/avg-rel.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
avg relative error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-errors/sum-h2.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
sum hellinger error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/uaifiles/plots/approx-mar-scores/sum-kl.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
sum kl error
click plot for full-size image
after 1 minutesafter 2 minutesafter 5 minutesafter 10 minutesafter 20 minutes
WCSPs
Bayes and Markov networks
97 networks
BN20
Bayes networks
binary variables
18 networks
Grids
Bayes networks
binary variables
320 networks
Linkage
Markov networks
22 networks
Promedas
Markov networks
binary variables
238 networks
UAI-MPE
Bayes networks
57 networks
UAI-PE
Bayes networks
78 networks
Relational
Bayes networks
binary variables
251 networks
All Networks
Bayes and Markov networks
1181 networks
Bayesian Networks only
Bayes networks
824 networks
Binary Networks only
Bayes and Markov networks
binary variables
827 networks
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/repos/mpe/
##-----------------TITLE------------------------##
Index of /repos/mpe/
##------------------TEXT------------------------##
Index of /repos/mpe/

NameLast ModifiedSizeTypeParent Directory/ -  Directorycpcs/2008-May-07 10:22:09-  Directorygrids/2008-Apr-25 10:43:51-  Directoryiscas89/2008-Apr-25 10:43:51-  Directorylinkage/2008-Apr-25 10:43:58-  Directoryprotein/2013-Jan-09 19:39:57-  Directoryuaicomp06/2008-Apr-25 10:43:57-  Directory

lighttpd/1.4.26
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/repos/wcsp/
##-----------------TITLE------------------------##
Index of /repos/wcsp/
##------------------TEXT------------------------##
Index of /repos/wcsp/

NameLast ModifiedSizeTypeParent Directory/ -  Directorycelar6/2008-Apr-25 10:43:44-  Directoryiscas89/2008-Apr-25 10:43:44-  Directorymastermind/2008-Apr-25 10:43:44-  Directoryspot5/2008-Apr-25 10:43:44-  Directory

lighttpd/1.4.26
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/repos/ilp/
##-----------------TITLE------------------------##
Index of /repos/ilp/
##------------------TEXT------------------------##
Index of /repos/ilp/

NameLast ModifiedSizeTypeParent Directory/ -  Directoryauction/2008-Apr-25 10:43:58-  Directorydubois/2008-Apr-25 10:43:58-  Directorymiplib/2008-Apr-25 10:43:58-  Directoryuwlp/2008-Apr-25 10:43:58-  Directory

lighttpd/1.4.26
##------------------URL-------------------------##
http://graphmod.ics.uci.edu/repos/pe/
##-----------------TITLE------------------------##
Index of /repos/pe/
##------------------TEXT------------------------##
Index of /repos/pe/

NameLast ModifiedSizeTypeParent Directory/ -  Directoryuaicomp06/2008-Apr-25 10:43:51-  Directory

lighttpd/1.4.26
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioUndergrads/cguevara/guevara-contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




UNDERGRADUATE:WE ARE LUCI: BIOGRAPHIES: UNDERGRADUATE STUDENTS:Chris Guevara:Contact





Bio

	Research Areas:	Interactive Media, Artificial Intelligence,
			Computer Graphics

	Email:		cguevara@uci.edu
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioUndergrads/rvu/vu-contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




UNDERGRADUATE:WE ARE LUCI: BIOGRAPHIES: UNDERGRADUATE STUDENTS:Richard Vu:Contact





Contact Information

	Research Areas:	Interactive Media, Green Computing,
			Cultural Anthropology, Computer Game
			Culture and Technology, Artificial
			Intelligence, Computer System Design
			
	Email:		ravu@uci.edu
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioUndergrads/eolson/olson-contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




UNDERGRADUATE:WE ARE LUCI: BIOGRAPHIES: UNDERGRADUATE STUDENTS:Erik Olson:Contact





Contact Information

	Research Areas:	Augmented Reality, Artificial Intelligence,
			Materials Science, Robotics, Cybernetics,
			Hydrogen Internal Combustion Engines,
			Aerodynamics, Nanoscale Engineering,
			High-Performance Transportation, Defense
			Technology Engineering

	Email:		eolson@uci.edu
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioUndergrads/mwong/wong-contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




UNDERGRADUATE:WE ARE LUCI: BIOGRAPHIES: UNDERGRADUATE STUDENTS:Matthew Wong:Contact





Contact Information

	Research Areas:	Biomedical Imaging Devices, Biophotonics,
			Anthropology of Kinship, Sociocultural
			Anthropology

	Email:		wongmr@uci.edu
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioUndergrads/ddinh/dinh-contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




UNDERGRADUATE:WE ARE LUCI: BIOGRAPHIES: UNDERGRADUATE STUDENTS:David Dinh:Contact





Contact Information

	Research Areas:	Green Computing, Microelectronics,
			Ubiquitous Computing, Scientific
			Computing, Computer Systems Design,
			Embedded Computer Systems

	Email:		ddinh1@uci.edu
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioUndergrads/skaufman/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




UNDERGRADUATE:WE ARE LUCI: BIOGRAPHIES: UNDERGRADUATE STUDENTS:Sam Kaufman:Contact





Contact Information


	Email:		kaufmans@uci.edu

	Telephone:	(209) 761-6245
##------------------URL-------------------------##
http://drzaius.ics.uci.edu/~mopix/
##-----------------TITLE------------------------##
mopix
##------------------TEXT------------------------##
mopix is an
application for mobile and stationary use that engages spatial and
contextual annotation, media sharing and interaction with strangers and
acquaintances. Set up in large public spaces (public displays) but also
accessible
through private (e.g. a web interface at home) and semi-private (e.g. a
mobile phone in public) interfaces, it establishes a link between a
physically perceived world and a virtual playground. 

      

      Annotating a
public space with pictures taken with a camera phone and with text
messages, users leave digital traces behind that are linked to their
physical locations and can be retrieved by other passersby with their
mobile phones or via public displays that are distributed within the
spatial environment. Walking through a city, strolling along a street,
or shopping in a mall translates into an activity that extends beyond
the immediate visible space and into an imaginary playground that lets
strangers interact with each other in unobtrusive ways. While privacy
is maintained through virtually shared identities without revealing the
link between an individual’s physical presence and a digital
artifact, individual perceptions of the environment are shared by
revealing different spatial and contextual interpretations and
understandings.
       
  

    project
members:  

      
      
    Silvia Lindtner: lindtner[at]uci.edu
      
    Judy Chen: judychen[at]uci.edu

      
      
    University of California, Irvine
      
    Department of Informatics
      
    Donald Bren School of Information
      
    and Computer Science

      
      
    lab: http://luci.ics.uci.edu/

      

      
      
    last updated: Sep-07
       

      We envision mopix to be a system that will constitute a virtual space that is
linked to the users’ immediate physical environment,
transgressing the clear line between a virtual playground and the
everyday physical world. This allows a less restricted form of social
interaction while, at the same time, encouraging explorative engagement
with one’s environment, where play remains a form of everyday
practice and is not performed apart from everyday life. Pre-constructed
dichotomies between self and other, as well as different spatial
interpretations are made visible in order to play with
“surveilling” and “being
surveilled”. 

      

      However, this
should not be restricted to users carrying mobile phones or to users
who are logged into the system. Instead the application will function
as an environment for collaborative space and context annotation. It
will support all members of a spatial context, including short term
visitors such as tourists, inhabitants such as locals and vendors,
business people who are traveling, teenagers on their way home from
school, etc
. 
  
       
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/djp3/service.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Donald J. Patterson:Service





Service
2011
	Program Committee Chair
		UBICOMP 2011

2010
	External Reviewer
		UBICOMP 2010
		Pervasive 2010
	Committee
		UCI ICS Student Access, Outreach, Retention Committee 
		UCI ICS Informatics Chair Recommendation Committee 

2009
	Program Committee Member
		AAAI Spring Symposium 2009: Human Behavior Modeling 
	External Reviewer
		ISWC 2009
		Pervasive 2009
		IEEE Pervasive
		PUC
		UBICOMP 2009
		IUI 2009
		PMC
	Committee
		UCI ICS Student Access, Outreach, Retention Committee 

2008
	Program Committee Chair
		Pervasive 2008: Sixth International Conf. on Pervasive Computing
	External Reviewer
		IEEE Transactions on Software Engineering
		CSCW 2008
		UIST 2008
		UBICOMP 2008
	Director
		Laboratory for Ubiquitous Computing and Interaction
	Committee
		UCI ICS Student Access, Outreach, Retention Committee 

2007
	Program Committee Member
		Pervasive 2007: Fifth International Conf. on Pervasive Computing
		AAAI Spring Symposium 2007: Interaction Challenges for Intell. Agents 
	External Reviewer
		CHI 2007: Human Factors in Computing Systems
		 UBICOMP 2007: Ubiquitous Computing 
	Committee
		UCI ICS Informatics Undergraduate Recruiting Committee 

2006
	Program Committee Member
		Pervasive 2006: Fourth International Conf. on Pervasive Computing
		LoCA 2006: 2nd Intl. Wkshp on Location/Context-Awareness
	External Reviewer
		CHI 2006: Human Factors in Computing Systems
		NSF: National Science Foundation 
		CAL MICRO: University of California Micro Program
	Local Arrangements Chair
		UBICOMP 2006: Eighth International Conf. on Ubiquitous Computing
	Committee
		UCI ICS Computing and Networking Committee Member 

2005
	Program Committee Member
		 AAAI 2005: Twentieth National Conf. on Artificial Intelligence
	External Reviewer
		UBICOMP 2005: Seventh Intl. Conf. on Ubiquitous Computing
		IEEE Transactions on Information Technology in BioMedicine
		Pervasive 2005: Third Intl. Conf. on Pervasive Computing
	Participant
		DARPA Workshop on Advancing Assisted Cognition for TBI
2004
	External Reviewer
		UBICOMP 2004: Sixth Intl. Conf. on Ubiquitous Computing 
2002
	Committee 
		UW CSE Graduate Student Recruiting Chair
2001
	Committee 
		UW CSE Graduate Student Body Coordinator
2000
	Committee 
		UW CSE Graduate Student Body Social Coordinator
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/djp3/classes.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Donald J. Patterson:Teaching/Classes





Classes

University of California, Irvine
2013 Winter
		Instructor:
			Informatics 134: U/I Software Project 

2012 Fall
		Instructor:
			Informatics 241: Intro to Ubiquitous Computing and Interaction 
			Informatics 133: U/I Software  

2012 Winter
		Instructor:
			Informatics 241: Intro to Ubiquitous Computing and Interaction 
			Informatics 134: U/I Software Project 

2011 Fall
		Instructor:
			Informatics 133: U/I Software  

2011 Winter
		Instructor:
			Informatics 134: U/I Software Project 

2010 Fall
		Instructor:
			Informatics 133: U/I Software  

2010 Winter
		Instructor:
			Computer Science 221: Information Retrieval 

2009 Fall
		Instructor:
			Informatics 133: Human Computer Interaction (SW) 

2009 Winter
		Instructor:
			Informatics 141 / Computer Science 121: Information Retrieval
			Informatics 241: Intro to Ubiquitous Computing and Interaction 

2008 Fall
		Instructor:
			Computer Science 221: Information Retrieval 

2008 Spring
		Instructor:
			Informatics 242: Ubiquitous Computing and Interaction

2008 Winter
		Instructor:
			Informatics 141 / Computer Science 121: Information Retrieval
			Informatics 290: Recent Research in Ubiquitous Computing

2007 Fall
		Instructor:
			Informatics 290: Recent Research in Ubiquitous Computing

2007 Spring
		Instructor:
			CS 221: Information Retrieval 
			Informatics 132: Human Computer Interaction Project Course
			Informatics 290: Recent Research in Ubiquitous Computing

2007 Winter
		Instructor:
			Informatics 131: Human Computer Interaction
			ICS 290: Recent Research in Ubiquitous Computing
2006 Fall	
		Guest Lecturer:
			ICS 200: Seminar in Research in ICS
	Summer	
		Supervisor:
			ICS 199: Individual Study
	Spring	
		Instructor:
			INF 132/ICS 105: Human Computer Interface Project Course
			Interface design for Web 2.0 and AJAX applications
			ICS 290: Recent Research in Ubiquitous Computing
		Guest Lecturer:
			NETSYS 295: Introduction to Network Research 
			Informatics 44: Seminar in Informatics Research Topics
		Supervisor:
			ICS 299: Individual Study
			ICS 298: Thesis Supervision 
			ICS 199: Individual Study
	Winter
		Instructor:
			ICS 280: Special Topics in Ubiquitous Computing
		 	Ubiquitous Computing for Post-Crisis Logistics
			ICS 290: Recent Research in Ubiquitous Computing
		Guest Lecturer:
			ICS 200: Seminar in Research in ICS
			ICS 229: Seminar in Informatics 
		Supervisor:
			ICS 299: Individual Study
			ICS 298: Thesis Supervision 
2005 Fall
		Instructor:
			ICS 290: Recent Trends in Ubiquitous Computing
		Guest Lecturer:
			ICS 212: Embedded Systems: Slides 1, Slides 2
		Supervisor:
			ICS 299: Individual Study

University of Washington
2004 Fall
		Guest Lecturer:
			CSE 573: Artificial Intelligence
2002 Spring
		Teaching Assistant:
			CSE 590HK: Technology for Alzheimer's Disease
2001 Fall
		Teaching Assistant:
			CSE 573: Artificial Intelligence
2000 Fall
		Head Teaching Assistant:
			CSE 143: Computer Programming II

University of Maryland Extension Campus
1998 Winter
			Math 100: Transitional Mathematics
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/djp3/publications.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Donald J. Patterson:Publications





Publications (bibtex, text version, google scholar)

Book Chapters Pervasive Computing in the Home and Community (link,pdf)Conference Proceedings Ubiquitous Computing, 2011 ACM International Conference, UBICOMP 2011, Beijing, China, Sept 17, 2011Pervasive Computing, 6th International Conference, Pervasive 2008, Sydney, Australia, May 19-22, 2008Journal Articles, Peer Reviewed Collapse Informatics and Practice: Theory, Method, and Design (under review)()Efficiently Scaling Up Crowdsourced Video Annotation: A Set of Best Practices for High Quality, Economical Video Labeling (link,pdf)Informing and Performing: Investigating How Mediated Sociality Becomes Visible (link,pdf)Supporting the Transition from Hospital to Home for Premature Infants Using Integrated Mobile Computing and Sensor Support (link,pdf)Assessment of Infant Movement with a Compact Wireless Accelerometer System (link,pdf)Overcoming Blind Spots in Interaction Design: A Case Study in Designing for African AIDS Orphan Care Communities (link,pdf)An Ecosystem For Learning and Using Sensor-Driven IM Messages (link,pdf)Building Personal Maps from GPS Data (link,pdf)Learning and Inferring Transportation Routines (link,pdf)Serum Phosphate Levels and Mortality Risk among People with Chronic Kidney Disease (link,pdf)Inferring Activities from Interactions with Objects (link,pdf)Conference Papers, Peer Reviewed Augmenting Gesture Recognition with Erlang-Cox Models To Identify Neurological Disorders in Premature Babies (pdf)Massively Distributed Authorship of Academic Papers (link,pdf)Collapse informatics: Augmenting the Sustainability and ICT4D Discourse in HCI (link,pdf)Involuntary Gesture Recognition for Predicting Cerebral Palsy in High-Risk Infants (link,pdf)Efficiently Scaling Up Video Annotation with Crowdsourced Marketplaces (link,pdf)Twitter, Sensors and UI: Robust Context Modeling for Interruption Management (link,pdf)Getting Places: Collaborative Predictions from Status (link,pdf)Constructing Topological Maps of Displays with 3-D Positioning Information (link,pdf)Status on Display: a Field Trial of Nomatic*Viz (link,pdf)Global Priors of Place and Activity Tags (link,pdf)Online Everywhere: Evolving Mobile Instant Messaging Practices (link,pdf)Interactive and intelligent visual communication systems (link,pdf)Involving Intelligent Assistants in Active Human Communication (pdf)Nomatic: Location By, For, and Of Crowds. (link,pdf)Fine-Grained Activity Recognition by Aggregating Abstract Object Usage (link,pdf)Opportunity Knocks: a System to Provide Cognitive Assistance with Transportation Services (link,pdf)Mining Models of Human Activities from the Web (link,pdf)Contextual Computer Support for Human Activity (link,pdf)Inferring High-Level Behavior from Low-Level Sensors (link,pdf)Pre-mRNA Secondary Structure Prediction Aids Splice Site Prediction (link,pdf)Magazine Articles What if Sustainability Doesn't Work Out? (pdf)Micro-presence: changing the 'status' quo (link,pdf)Workshop Papers, Peer Reviewed Informatics at UC, Irvine (link,pdf)NomaticBubbles: Visualizing Communal Whereabouts (link,pdf)Building Personal Maps from GPS Data (link,pdf)Guide: Towards Undestanding Daily Life via Auto-Identification and Statistical Analysis (link,pdf)Expressive, Tractable and Scalable Techniques for Modeling Activities of Daily Living (pdf)Research on Statistical Relational Learning at the University of Washington (link,pdf)Intelligent Ubiquitous Computing to Support Alzheimer's Patients: Enabling the Cognitively Disabled (link,pdf)The Activity Compass (doc)Auto-Walksat: A Self-Tuning Implementation of Walksat (link,pdf)Workshop Papers, InvitedSupporting Individuals with Special Needs through Intelligent Visual Schedules (pdf)Behavior Recognition in Assisted Cognition (link,pdf)Bayesian Techniques for Location Estimation (link,pdf)Ph.D. Thesis Assisted Cognition: Compensatory Activity Assistance Technology (pdf)Technical Reports LUCI Lab Annual Report (2009-003)Measuring Display Interaction in the Presence of Context Information (2009-002)Status on Display: A Field Trial of Nomaitc*Viz (2009-001)Understanding the Digital Divide in Southern Africa (2008-002)Sporadic State Estimation for General Activity Inference (pdf)Modeling Details of the Activity Tracker (pdf)The Probabilistic Activity Toolkit: Towards Enabling Activity-Aware Computer Interfaces (pdf)
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/djp3/presentations.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Donald J. Patterson:Presentations





Presentations (missing ones available on request)
2012
	"Augmenting Gesture Recognition with Erlang-Cox Models To Identify
		Neurological Disorders in Premature Babies"
		9/7/2012 UBICOMP 2012: 14th Intl. Conf. on Ubiquitous Computing
	"In the Cloud Computing Trenches: Observations, Reflections and
		Experiences"
		7/24/2012 UCI Extension
	"Status Quo: Micro-presence in an always online world"
		7/24/2012 UCI Extension
	"When Camera Meets Accelerometer: A Way for 3D Interaction of Mobile
		Phones"
		5/21/2012 MobileHCI
	"In the Cloud Computing Trenches: Observations, Reflections and
		Experiences"
		2/7/2012 UCI Extension
2011
	"In the Cloud Computing Trenches: Observations, Reflections and
		Experiences"
		11/16/2011 Northrop Grumman 
	"Involuntary Gesture Recognition for Predicting Cerebral Palsy in High-Risk
		Infants"
		11/14/2011 NIH Grant Workshop
	"Collapse Computing"
		11/12/2011 2011 Workshop Uniting the Californias, UCMEXUS
	"Distinguishing Translation and Rotation for Real-time Phone Gesture
		Interaction"
		11/12/2011 2011 Workshop Uniting the Californias, UCMEXUS
2010
	"Involuntary Gesture Recog. for Predicting Cerebral Palsy in HR Infants"
		10/10/2010 Int. Symposium on Wearable Computers 2010, Korea 
	"Efficiently Scaling Up Video Annotation with Crowdsourced Marketplaces"
		5/6/2010 California Institute of Technology, CalVision Workshop 
	"Assessment of Infant Movement Using Infant Accelerometer System"
		5/4/2010 Pediatric Academic Societies’ Annual Meeting 
	"Social Media for the Church: Opportunities and Challenges"
		2/26/2010 Vanguard Univ., National Leadership of Assemblies of God 
	
2009
	"Status Quo: Micro-presence in an always online world"
		12/04/2009 UCLA CENS Technical Seminar Series
	"Constructing Topological Maps of Displays with 3-D Positioning Information"
		11/19/2009 AmI 2009: 3rd European Conf. on Ambient Intelligence
	
2008
	"Online Everywhere: Evolving Mobile Instant Messaging Practice"
		09/19/2008 UBICOMP 2008: 10th Intl. Conf. on Ubiquitous Computing
	"Design of Interactive Visual Scheduling Systems"
		05/17/2008 IMFAR 2008: International Meeting for Autism Research
	"Intro to Location"
		03/12/2008 Brea-Olinda Global IT Academy Lecture
	"Intro to Location"
		03/12/2008 Inf 290: UBICOMP Project Class Guest Lecture
2007
	"Nomatic: Context Aware Instant Messaging" 
		9/16/2007 UBICOMP 2007: 9th Intl. Conf. on Ubiquitous Computing
	"Automatic Window Resizing and Its Impact on User Productivity" 
		4/12/2007 21st National Conference on Undergraduate Research
	"Involving Intelligent Assistants in Active Human Communication" 
		3/27/2007 AAAI Spring Symposium 2007: Interaction Challenges
2006
	"Nomatic*Gaim: Context Aware Instant Messaging" 
		9/19/2006 UBICOMP 2006: 8th Intl. Conf. on Ubiquitous Computing
	"Nomatic*Aid: Parasitic Data Transport for Crisis Response" 
		9/19/2006 UBICOMP 2006: 8th Intl. Conf. on Ubiquitous Computing
	"Nomatic*Aid: Location {by, for, of} Crowds"
		6/9/2006 Netsys 295 Guest Lecture
	"Nomatic*Gaim: Context Aware Instant Messaging" 
		5/8/2006 Pervasive 2006: 4th Intl. Conf. on Pervasive Computing
	"Nomatic: Location {by, for, of} Crowds"
		2/1/2006 SIGCHI: O.C. Local Chapter Presentation
	"Nomatic: Location {by, for, of} Crowds"
		1/20/2006 UCI ICS Informatics Department Presentation
2005
	"Fine-grained Activity Recognition by Aggregating Abstract Object Usage"
		10/17/2005 IEEE Internation Symposium on Wearable Computers
		Best paper award
2004
	"Fine-grained Model-based Activity Recognition from RFIDs"
		12/17/2004 NIPS 2004: Wkshp. on Activity Recognition and Discovery
	"Fast, Detailed Inference of Diverse Daily Human Activities"
		10/24/2004 UIST 2004 
	"Fast, Detailed Inference of Diverse Daily Human Activities"
		9/7/2004 UBICOMP 2004 Demonstration
	"A Modeling Language for Activity Recognition"
		9/6/2004 Intel Research Cambridge
	"Future Technology for Aging"
		3/16/2004 Presentation to U.S. Congressional staff
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/djp3/biography.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Donald J. Patterson:Biography





Biography

	Don Patterson is an Associate Professor in the Informatics Department in the Donald Bren School of Information and Computer Sciences at the University of California at Irvine and currently the director of LUCI.

	He grew up mostly in Virginia, went to Thomas Jefferson High School for Science & Technology, then Cornell University to study Computer Science (B.S.) and Electrical Engineering (M.Eng).  He spent some time in the Navy on the USS CURTIS WILBUR (DDG-54) stationed in Japan and the USS SIMON LAKE (AS-33) stationed in Italy.  He went to grad school in the University of Washington's Department of Computer Science and Engineering. 

	While there, he was an NDSEG fellow and did research on artificial intelligence and its application to Alzheimer's Disease management and DNA biotechnology.  He was an intern at Intel Research Seattle. His primary advisors were Henry Kautz and Dieter Fox with whom he worked on the Activity Compass also known as "Opportunity Knocks."

	His current research interests focus on context-aware computing and how to make a computer operate appropriately when it leaves the office and moves into the greater world: Ubiquitous computing meets Artificial Intelligence meets Human-Computer Interaction.

	My full C.V. is available upon request
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/djp3/collaborators.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Donald J. Patterson:Advisees





Graduated Students 
	Xianghua Ding (Ph.D. Chair)
	Daniel Massaguer (Ph.D. Committee)
	Johanna Brewer (Ph.D. Committee)
	Amanda Williams (Ph.D. Committee)
	Vijay Rajakumar (M.S. Chair) 6/4/2010 
	Justin Tang (M.S. Chair) 12/4/2009 
	Phoebe Lin (M.S. Chair) 6/4/2009 
	Jahnavi Kondragunta (M.S. Chair) 6/3/2009 
	Kah Liu (M.S. Chair) 3/20/2009 
	Nicholas Noack (M.S. Chair) 9/2008 
	Tosin Aiyelokun (M.S. Chair) 9/2008

Graduate Student Advisees
	Junius Gunaratne (Ph.D. Chair)
	Vrishti Gulati (Ph.D. Chair)

Undergraduate Student Advisees
	Sam Kaufman (UW, Seattle Grad School, 2010)
	Andrew Zaldivar 
	Chris Baker (UC, Boulder Grad School, 2007)
	Daniel Hwang (IBM, 2006)
	Kah Liu (FileNet, 2006)
	Nathaniel Marracco
	Alan Morton (2006)

Advancement Committee Member
	Eric Baumer (Ph.D. 2009)
	Eric Linstead (Ph.D. 2009)
	Jennifer Rode (Ph.D. 2007)
		Ubiquitous Technology for Domestic Work
	Nithya Sambasivan  
	Yongjie Zheng  
	Yasser Ganjisaﬀar  
	Sara Javanmardi  
	Pinaki Sinha  
	Joshua O’Madadhain
	Nodari Sitchinava  
	Srikanth K. Agaram 
	Alex Behm 
	Judy Chen 
	Bo Gong
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/djp3/etc.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Donald J. Patterson:etc...





Etc...

	External Links
		My occasionally used research blog, Codex Caelestis
		My highly offensive personal blog, Codex Perductum

	Things I care about:
		Jesus
		My church, Newport Mesa Church
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/djp3/projects.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Donald J. Patterson:Projects





Active Projects (contact me to help!)
AIGR: Automated Involuntary Gesture Recognition- Detecting Cerebral Palsy in babies in the NICU using accelerometersSUDS: Status Update Decision System-Using Geo-located Status updates to figure out local eventsBit Coin: Enabling a vending machine to take bit coin.Gift Box: Studying the social life around the internet of things.
Dormant Projects
Nomatic*Gaim: Intelligent Context-Aware IMNomatic*Aid: Supporting Humanitarian Relief using Context-Aware ComputersAmbient Social DisplaysSALi: Gathering context with limited resourcesFlypaper: Large-Screen Computing Interfaces
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/djp3/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Donald J. Patterson:Contact





Contact Information

Awesome! You are interested in contacting me! I'm looking forward to it.  BUT BEFORE YOU EMAIL, CALL OR IM ME you should know this:

I get a lot of emails and phone calls from people I don't know yet.  Lots of people want to discuss things they are working on or get my advice on a project or a collaboration or to join my research group.  I probably get about 5 requests a day.  I'm actually really happy about that.  It's almost 150 new interesting people a month! 

Unfortunately, I only have 24 hours a day.   In the hours I've got, I can't follow up on every one of these terrific people.  I usually can't answer all my email, and I unfortunately can't get coffee with everyone I would like to.  Here are some ideas that I have for having more effective conversations with me.

If you just want to introduce yourself or say hi - great!  It's nice to know there are people out there who are paying attention.  Please let me know who you are and some details about yourself and your background.

If you want to do graduate work at UCI or in particular with me - great! The Department of Informatics accepts people to the graduate program jointly, not on a professor by professor basis.  The Department of Informatics, the Department of Computer Science and the Department of Statistics, the three departments in the Donald Bren School for Information and Computers Sciences, put together advice for how to have the best shot at being accepted and it can be seen in the video located here: (http://www.ics.uci.edu/ugrad/resources/index.php#07).  If you have a special situation, please indicate what your timeline and funding situation is in the first email you send me.  

If you want something from me, send lots of information in your first email. The more I know about you and your project the more likely it is that I will find your idea so fully awesome that I must write back.

Let's plan to start our conversation on email, not on the phone or over coffee. I'm all for coffee.  If things go great we can always schedule something in the future.  If you really want to talk face to face, try meeting up with me at a conference. 

If you are actually using any technology that I have been a part of creating - PLEASE mention that.  I really value feedback from people who are using my stuff. 

It's frustrating when people ask to "pick my brain"  That really implies that you have nothing to offer.  That is probably not true.  If you just want to know my opinion about stuff then listen to one of my podcasts, read my papers, take a class I'm teaching or look at my slides.  I put everything I can online. 

If you want to collaborate on a project with me tell me upfront what you expect from me.  What is the project for?  What are the goals?  Is there a timeline and budget.  Anything and everything right away.

If you want my feedback on something you're working on, send me a link or an article or a video or slides or whatever else will help me get up to speed as quickly as possible.  This is much better than trying to schedule a meeting with me.  I don't often have time for this kind of thing because I am madly working on my own projects.  If you are absolutely dying for my input, ask for a half-day or day of consulting time.  It is easier for me to make time for formal advice than it is to offer it informally.

Please don't hide your address or phone number. One of the ways that I decide whether or not I should listen to someone is by seeing how open they are.  Calling from an unknown number, IM'ing me from an invisible account, and emailing me with unusually formatted email raises red flags for me (if it even gets through my junk filters).

You don't have to leave multiple messages. If you repeatedly call me, or keep sending me emails (like more than 3) because I haven't responded yet, you probably need to find someone who can respond faster than me with whom to work.  Don't take it personally, it's just that I've already used up my 24 hours today.

Thanks for reading all these ideas My contact information can be found here.  Some of these ideas originated with Jane McGonigal at avantgame.com.  Thanks Jane!
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/jpd/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Paul Dourish:Contact





Contact Information


	Mailing Address:	Professor Paul Dourish
			Department of Informatics
			University of California, Irvine
			5086 Bren Hall
			Irvine, CA 92697-3440

	Email:		jpd@ics.uci.edu
	Website:		http://www.ics.uci.edu/~jpd

	Fax:		(949) 824-4056

	Office Manager:	Marty Beach, (949) 824-2901
	Faculty Assistant:	Sabina Chung, (949) 824-0247
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/cramer/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Steve Cramer:Contact





Contact Information


	Mailing Address:	Associate Professor Steven Cramer, M.D.
			Department of Neurology
			University of California, Irvine Medical Center
			101 The City Drive South
			Building 53, Room 203
			Orange, CA 92868-4280

	Email:		scramer@uci.edu
	Website:		
	http://www.ucihs.uci.edu/anatomy/cramerbio.html	

	Voice:		(714) 456-6876
	Fax:		(714) 456-8805
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/yunan/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Yunan Chen:Contact





Contact Information


	Research Areas:	
	Interactive systems for clinical and translational research

	Mailing Address:	Assistant Professor Yunan Chen
			Department of Informatics
			University of California, Irvine
			5066 Donald Bren Hall
			Irvine, CA 92697-3440

	Email:		yunanc@ics.uci.edu
	Website:		
	http://www.ics.uci.edu/~yunanc/Site/About_Me.html

	Voice:		(949) 824-0959
	Fax:		(949) 824-4056

	Office Manager:	Marty Beach, (949) 824-2901
	Faculty Assistant:	Sabina Chung, (949) 824-0247
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/wmt/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Bill Tomlinson:Contact





Contact Information


	Mailing Address:	Professor Bill Tomlinson
			Department of Informatics
			University of California, Irvine
			430A ICS 1 Bldg.
			Irvine, CA 92697-3440

	Email:		wmt@ics.uci.edu
	Website:		http://www.ics.uci.edu/~wmt

	Telephone:	(949) 824-9804
	Fax:		(949) 824-4056

	Office Manager:	Marty Beach, (949) 824-2901
	Faculty Assistant:	Sabina Chung, (949) 824-0247
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/hayesg/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Gillian Hayes:Contact





Contact Information


	Research Areas:	UbiComp, CSCW, Education Technology,
			Assistive Technology, Medical Informatics

	Mailing Address:	Professor Gillian Hayes
			Department of Informatics
			University of California, Irvine
			5072 Donald Bren Hall
			Irvine, CA 92697-3440

	Email:		gillianrh@ics.uci.edu
	Website:		http://www.ics.uci.edu/~hayesg/

	Voice:		(949) 824-1483
	Fax:		(949) 824-4056

	Office Manager:	Marty Beach, (949) 824-2901
	Faculty Assistant:	Sabina Chung, (949) 824-0247
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/nardi/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Bonnie Nardi:Contact





Contact Information


	Bonnie Nardi is a professor in the Department of Informatics. 

	An anthropologist, she has conducted field studies centered on digital technology in a variety of contexts including offices, schools, homes, libraries, hospitals, scientific laboratories, and virtual worlds. 
	
	Her book "My Life as a Night Elf Priest: An Anthropological Account of World of Warcraft" will be published in June 2010 (University of Michigan Press).
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/givargis/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Tony Givargis:Contact





Contact Information


	Mailing Address:	Assoicate Professor Tony Givargis
			Department of Computer Science
			University of California, Irvine
			3019 Bren Hall 
			Irvine, CA 92697-3435

	Email:		givargis@ics.uci.edu
	Website:		http://www.ics.uci.edu/~givargis
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioFaculty/dutt/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




FACULTY:WE ARE LUCI: BIOGRAPHIES: FACULTY:Nikil Dutt:Contact





Contact Information


	Mailing Address:	Chancellor's Professor Nikil Dutt
			Department of Computer Science
			Department of EECS 
			University of California, Irvine
			3086 Donald Bren Hall
			Irvine, CA 92697-3435

	Email:		dutt@uci.edu
	Website:		http://www.ics.uci.edu/~dutt

	Voice:		(949) 824-7219
	Fax:		(949) 824-7219

	Faculty Assistant:	Lisa Schilling, lisas@ics.uci.edu
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioAffiliates/svoida/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




AFFILIATES:WE ARE LUCI: BIOGRAPHIES: AFFILIATES:Stephen Voida:Contact
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioAffiliates/svoida/biography.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




AFFILIATES:WE ARE LUCI: BIOGRAPHIES: AFFILIATES:Stephen Voida:Biography
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioAffiliates/ebaumer/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




AFFILIATES:WE ARE LUCI: BIOGRAPHIES: AFFILIATES:Eric Baumer:Contact





Contact Information


	Research Areas::	HCI, Social Media,
			Critical Thinking and Creativity,
			Computational Linguistics, Metaphor,
			Educational Technology

	Website:		http://ericbaumer.com
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioAffiliates/dkhan/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




AFFILIATES:WE ARE LUCI: BIOGRAPHIES: AFFILIATES:Danish Khan:Contact





Contact Information


	Affiliation:	Danish was an undergraduate researcher
			in LUCI who transferred to University of California, 
			Berkeley.
	Email:		dkhan@uci.edu
##------------------URL-------------------------##
http://www.ics.uci.edu/~kobsa/courses/ICS104/06F/syllabus.htm
##-----------------TITLE------------------------##
IN4MATIX 131 / ICS104 -- Fall 2006
##------------------TEXT------------------------##
 Draft,
                9/26/06
                      IN4MATIX 131 / ICS 
104:
Human-Computer Interaction
Instructor: 
Alfred Kobsa

  kobsa @ uci.edu , Rm. CS 430C, 
    Bldg. 302
    
    TA: Judy Chen (judychen @ uci.edu)
  
   
  Disclaimer: These are guidelines intended
    to help students plan their work in this course. However, the instructor
    does reserve the right to make changes if needed.
  

General 
Educational Aims: This course gives an introduction to human-computer interaction
 with an emphasis on user interface design. Students learn about HCI theory,
guidelines 
for effective interface design, and the evaluation of user interfaces. 
Specific 
Objectives:
At the conclusion of this course, the student should be able 
to: - realize the importance of user-centered design, design prototyping, 
and formative and summative evaluation, - have attained the ability to design 
and evaluate user interfaces of low and medium complexity based on guidelines,
- 
realize the impact of human factors research and cognitive psychology on HCI, and
- 
be familiar with some of the outstanding research problems being studied 
in the field of HCI.
Requirements: Students should have used computers 
and different software for at least one year. 
Character of course: Lecture with discussion, self-study of the required
  readings, some homework, and
a term project in collaboration with the UCI library.  
Location and Time:        Lecture:   TTh
  8:00-9:20am, ICS 180
                 	                     Discussion: 
    F   12-1:50pm, PSCB 210  (starts 9/29)
                                                           w/
 TA Judy Chen (judychen @ uci.edu)
  
Required readings: 
Ben Shneiderman and Catherine Plaisant (2004): Designing the User Interface,
    Fourth
  Edition, Addison-Wesley, ISBN 0-321-19786-0.Farkas,
      D. K. and Farkas, J. B. (2000): Guidelines for Designing Web
       Navigation. Technical Communication 4(2000), 341-358.
             Electronic 
          version (for class usage only! )             
          Another required reading will be distributed when
          due.  
Optional readings:
Jeff Johnson (2000): GUI Bloopers: Don'ts and Do's for Software Developers
                      and Web Designers. Revised edition. Morgan Kaufmann, ISBN
    1-55860-582-7.Catherine Courage and Kathy Baxter (2005): Understanding Your Users: A
    Practical Guide to User Requirements -- Methods, Tools, & Techniques.
  Morgan Kaufmann. ISBN-1-55860-935-0.Jenny Preece, Yvonne Rogers, Helen Sharp, David Benyon
        (1994): Human-computer interaction. Addison-Wesley Pub, 1994, ISBN
    0201627698.Michael G. Paciello: Web Accessibility for People with Disabilities.CMP
    Books, 2000. ISBN 1-929629-08-7,Kent L. Norman (1991):
    The Psychology of Menu Selection. Exeter, England and Portland, Oregon: Intellect.
    ISBN 089391553XJan H.
      Spyridakis: Guidelines for Authoring Comprehensible Web Pages  and Evaluating
      Their Success. Technical Communication
                        4 (2000), 359-382. 
            Electronic 
                        version (for class usage only!) 
                        
                        All books should be available in the UCI
                        bookstore, and from a reserve in
                        the  Science Library.
      Compare off-campus prices: Shneiderman/Plaisant, Johnson,
      Courage/Baxter, Preece
      et al, Paciello, Norman
Course Notes: HTML, PDF
Grading:25% for mid-term exam  35% 
for final exam 15% for term project 10% for homework 10% for takehome exams   5% for pop quiz (second half of quarter) up to 10% bonus for active in-class 
participation
Efficient reading: see here
Cheating: see here
Students with Disabilities: see here
ICS Deadlines:   Adding/dropping this class: through WebReg
  only (by Oct. 6)
Course Evaluation: November 24 until December 3 (11:59pm)
Office hours: After class, or Tue 9:30-10:30am, Rm 430C, CS Building
  (302)
                       (contact
me in class or send email beforehand) 
This course is prerequisite for:
    IN4MATX 132 / ICS
105: Project in Human-Computer Interaction and User Interfaces
 
Syllabus: 
  
Unit DateTopicReading (*)Homework 1  9/26What is HCI and why should we learn about it?SP1.1-1.5, P1Homework 1 (due
      10/6**)
     2  9/28Elements of HCIP2Takehome quiz 1 (distributed in class; due 10/6**)  310/3Cognitive FoundationsP4-6Takehome quiz 9 (distributed in class; due 10/6**)  410/5Interface Metaphors, Conceptual ModelsP7  510/10Input and Output DevicesSP9, P11-12Takehome quiz 2 (distributed in class; due 10/13**) 610/12Interaction Styles, Style-Independent Design Principles (overview); 
      Command InterfacesSP2.2-SP2.3,  P13Homework 2 (due 11/3)
      710/17 Menu Interfaces, GuidelinesSP7.1-7.3, P13.2-3, N4.1Takehome quiz 8 (distributed in class; due 10/**)
      Takehome
        quiz 7 (due 10/20**)
     810/19
    Menus and NavigationSP7.3-7.6, P13.3, N6 910/24
    Form-FillsSP7.7, P13.4 1010/26
    Direct ManipulationSP6.1-6.3, P13.6-7  10/27Discussion of midterm example
        questions
    (12-1:50pm, PSCB 210)  1110/31
    Midterm exam (open books) 
      
    1211/2Style-Independent Design PrinciplesSPp473, SP12.2Takehome quiz 6+11 (distributed in class; due 11/9 at the
      beginning of the class)1311/7Screen layoutSP12.4Homework 3 (due 11/31)
      Takehome 3+4 (distributed in class;
        due 11/17) 1411/9Guidelines for Selected Screen Elements 
      (text, graphics, colors, windows, etc.)SP12.4-12.6, P14 1511/14Interfaces for Hypermedia SystemsF&FStart term
          project (distributed in class; due 12/8)
    
    1611/16Interfaces for CSCW, Virtual Reality and Mobile DevicesSP10, P16.1-16.2, P28.4       1711/21Interfaces for People with Disabilities
      User-Adaptive Applications    
    SP1.5, Pa1-4Takehome quiz 10 (distributed in class; due 11/31)
    Takehome quiz 5 (distributed in class; due 11/31)1811/23 No class (Thanksgiving)  1911/28Iterative Design, Interface Development ToolsS5.3-5.4, P27-28.3 2011/30EvaluationSP4, P29-31, CB  11/31Questions on final exam (12-1:50pm,
    PSCB 210)   Final Exam: Dec 5, 8:00
            – 10:00 a.m. 
            Term
            project due on Dec. 8
                            
      
(*) Only the Shneiderman & Plaisant (SP) and the Farkas & Farkas 
(FF) texts are required readings(**) These items are due
at the beginning of the discussion session.
Codes: P ... Preece et al. (1994)             Pa: 
Paciello (2000)            J: 
Johnson (2000) 
            SP: Shneiderman
& Plaisant (2003) 
            CB 
... Courage & Baxter (2005) 
           
N ... Norman (1991)             
FF .... Farkas and Farkas (2000)  
           
P1-2                        
Preece et al., Chapter 1-2             P1.3-1.5                  
Preece et al., Sections 1.3 through 1.5            
           Pp.101-103             Preece
et al., page 101-103
        Exercises in the books are not required, albeit 
  doing them is useful. 
        
     
##------------------URL-------------------------##
http://www.ics.uci.edu/~djp3/classes/2007_01_01_ICS131/
##-----------------TITLE------------------------##
ICS 131 Winter 2006-2007 Department of Informatics, UCI
##------------------TEXT------------------------##
Informatics 131: Human Computer Interaction
Winter 2006-2007
Department of Informatics
Donald Bren School of Information and Computer Sciences 
 Home | Administrative Policies  | Course Structure | Materials | Assignment Schedule | FAQ 

  This course presents basic principles of human-computer interaction (HCI). Introduces students to user interface design techniques, design guidelines, and usability testing. Students gain the ability to design and evaluate user interfaces and become familiar with some of the outstanding research problems in HCI. 
   
  This quarter we will be focusing on HCI practice (techniques, guidelines, testing), HCI tools (XML, Google WTK), and Social/Technical Impact of HCI. 


  Lecture: M W F 9:00 - 9:50
  Classroom: ICS 180 
   
  Discussion Section: T  2:00 - 2:50
  Classroom: SST 220B 
   
  Instructor: Professor Don Patterson
  Email: djp3@ics.uci.edu
  Office Hours: T R 9:00 - 9:50, ICS2 Room 214 
   
  Teaching Assistant: Silvia Lindtner
  Email: lindtner@ics.uci.edu
  Office Hours/Discussion Section: T  2:00 - 2:50, SST 220B 
   
  Reader: Harmony Jiang
  Email: sjiang1@uci.edu 
  Office Hours: TBD 
   
   
##------------------URL-------------------------##
http://www.ics.uci.edu/~djp3/classes/2007_04_02_INF132/
##-----------------TITLE------------------------##
Spring 2007:INF 132 Human Computer Interaction Project Course: Department of Informatics, UCI
##------------------TEXT------------------------##
Informatics 132: Human Computer Interaction Project Course 
Spring 2007
Department of Informatics
Donald Bren School of Information and Computer Sciences 
University of California, Irvine 
 Home | Administrative Policies  | Course Structure | Materials | Assignment Schedule | FAQ 

  The goal of this project course is to prepare students to create and evaluate user interfaces to software systems through a one-quarter project.
   
  This quarter we will primarily focus on developing a next generation web application (Web 2.0 ish). We will use mobile phone technology, GPS device and AJAX programming to develop a web application that spans the physical and virtual world. 


  See  the final projects that the class put together! Web 2.0, mashup, Google maps, Facebook, Yahoo! feeds it's all here. 


  Instructor: Professor Don Patterson
  Email: djp3@ics.uci.edu
  Lecture: T R 9:30 - 10:50
  Classroom: ICS 180 
  Office Hours: 
  
    M  9:30 - 10:30, Bren Hall Room 5084 
     W 8:30 - 9:30, Bren Hall Room 5084 
  
   
  Teaching Assistant: Silvia Lindtner
  Email: lindtner@ics.uci.edu
  Discussion Section: F  4:00 - 4:50
  Classroom: ICS 180 
   
  Reader: Harmony Jiang
  Email: sjiang1@uci.edu 
   
##------------------URL-------------------------##
http://www.ics.uci.edu/~djp3/classes/2006_03_30_ICS105/index.html
##-----------------TITLE------------------------##
ICS 105:Human Computer Interaction Project Course
##------------------TEXT------------------------##
Information and Computer Science 105 /
    Informatics 132 
      Human Computer Interaction Project Course:
    Designing AJAX and Web 2.0 applications
    Spring Quarter 2006 
    
  


  Instruction Team
      Prof. Donald J. PattersonNick Noack , TA Jeansoo Khim, Reader (jkhim@uci.edu) 
    Places and Times
      Lecture
          Location: CS 180 Time:  Tuesdays and Thursdays 8:00 - 9:20 
        Discussion Section
          (with Nick)
          :
          Location: ICF 101 
        Time: Friday 2:00pm to 2:50 pm Office Hours :
          Location: ICS2 214 Time: Monday 4:00pm to 5:00pm 
        
    Links
      Link to Detailed ScheduleThis Website
    Reference Texts:
       AJAX in Action Google Map HacksJ2ME: The Complete Reference General HCI resources from the Science Librarian
          here 
        
    Fast Links
      Go to Recent Schedule Go to Mailing List Archive
          Announcements Discussion            
        Go to Final Projects Showcase 
    


  Overview:
       This course is going to give students an opportunity to create an AJAX/Web 2.0 application and evaluate it using HCI evaluation techniques. 
    Structure:
       Lectures, one on-going design/development/evaluation project, self-evaluations 
    Grading:
      Based on completing assignments according to specification and group self-evalutions 
    


  Students with Disabilities
      or Special Needs
       Any student who feels he or she may need an
          accommodation based on the impact of a
          disability (or anything else) should contact me privately to
          discuss his or her specific needs. Also
          contact the Disability Services Center at
          (949) 824-7494 as soon as possible to better
          ensure that such accommodations are
          implemented in a timely fashion.
    


   Schedule (Always subject to change) 
    April 4th
        : Intro
        
          Deadlines
        
        Welcome
            Mashups/RemixingWeb 2.0 
          Get-To-Know-You SurveyCourse Overview
            Web 2.0/AJAX Application development and evaluation 
          From Class:
            Professors Notes 
          
      April 6th
        : Technology 
        : Web 1.0
        
          Assignment #1 Due April 10th at noon
          Complete Human Subjects Training:
          Details
        Admin
            Class Profile
                SummaryDetails
              
          Web 1.0
            HTTPHTMLXMLXHTML
          From Class:
            Professor's Notes 
                Basic HTML Example HTML Example (wet boards +) HTML Example (lists +) HTML Example (table +) 
              LiveHTTPHeaders plug-in Handout #1 
                Answer to #1 Answer to #3  
              
          
      April 11th
        Admin
            There is one survey which is complete. This was to get info about the class. If you didn't do it, that's okay. There is an EEE quiz (#1) which is complete. If you didn't do it and haven't said anything, that's a problem. Do the Human subjects training immediately, and let the staff know when you are done.There is an EEE quiz (#2) which is due on Monday April 17th at noon. Before you can take the quiz, which is really just letting us know that you are done with the assignment, you have to do the assignment. There was a piece of paper that I handed out in class which I also called a quiz, which was really just a practice assignment. I won't call those a quiz anymore. Sorry! 
          Web 1.5: AJAX #1: Ideas behind the next generation Web
            Professor's Notes 
          
      April 13th
        
          Assignment #2 Due April 17th at noon 
          Turn in URL of a web site that you built: 
          Details 
        AJAX #2: Javascript and the DOM
            Professor's Notes 
                example_00example_01example_02example_03example_04
              
          
      April 18th
        AJAX #3: CSS:Cascading Style Sheets
            Professor's Notes 
          
      April 20th
        
          Assignment #3 Due April 24th at noon
          Turn in your group and a project concept:
          Details
        AJAX #4: Javascript and XMLHttpRequest
            Professor's Notes 
          
      April 25th
        Google Maps API 2.0
            Professor's Notes 
          
      April 27th
        Intro to J2ME: Developing applications for a mobile phone
            Professor's Notes 
                includes pointer to case study which uses xml for script library
              Professor's Slides Sample Mobile Phone Application (helloworldplus)
                Examples come with the Nokia downloads also. 
              
          
      May 2nd
        Google Maps Mashups
            Case Studies
            Professor's Notes 
          
      May 4th
        Web 2.0  Case Studies/ Flex-time for overflow of previous topics 
      May 9th
        
          Mandatory Course Mid-Point Evaluation Due May 8th at noon, see EEE 
        
        Project Meeting and Development
            Anteator Idol Resources 
          
      May 11th
        
          Re-work of Assignment #3 Due May 11th at noon
          Address the problems in your first submission and resubmit to the drop box
        Project Meeting and Development 
      May 16th
        GPSComponent Review
            Professor's Notes More notes 
          Example of a PERL script that gets data from a URL
            example (look at URL and then at the resulting web page) 
          
      May 18th 
        Usability Design Workshop 
      May 23rd      
        : Evaluation
        Resources
            Anteator Idol Resources Grading Form Discussion
          Anteater Idol:
            Team Ninja
                Vote
              Team H2J2
                Vote
              Team Billy
                Vote
              
          
      May 25th
        
        Anteater Idol:
            Team Aeolian
                Vote
               Mondego
                Vote
               Mobgas
                Vote
              
          
      May 30th
        
          Assignment #4 Due before class on 6/1/2006 
          Read this summary of UI evaluation: link 
		  Develop one acceptance test, two quantitative tests, and a cognitive walk-through task for the evaluation fair starting Thursday.
		  Find something equivalent to a stop watch that you can use for your quantitative tests.
        Anteater Idol:
            Team Cache Money (no monkeys)
                Vote
              worldVue
                Vote
              Blogger King
                Vote
              Vertical Blue
                Vote
              
          
      June 1st
        Evaluation Fair:
            Teams #1,#2,#3,#4,#5,#6 OperatingTeams #7,#8,#9,#10 Guinea Pigs 
          
      June 6th
        Evaluation Fair:
            Teams #4,#5,#6,#7,#8,#9,#10 OperatingTeams #1,#2,#3 Guinea Pigs
          
      June 8th
	   
           Assignment #5 Due June 13th at 10am 
          Turn in a project report including in an analysis of the HCI evaluation and a proposed redesign and group self-evaluation: 
          Details
        Evaluation Fair:
            Teams #1,#2,#3,#7,#8,#9,#10 Operating Teams #4,#5,#6 Guinea Pigs 
          
      Final Exam Week:
        
       
	  
        June 12th-June16th
		  
           Assignment #6 Due June 13th at noon 
          Turn in a group self-evaluation using the survey in the EEE tools: 
          This link may work
      
	
  


    
  Last updated:
    Thursday, June 8, 2006 7:41 AM
##------------------URL-------------------------##
http://www.ics.uci.edu/~kobsa/courses/ICS105/07W/syllabus.htm
##-----------------TITLE------------------------##
Inf132 -- Winter 2007
##------------------TEXT------------------------##
 
Draft,
  25 Feb. 2007
 
IN4MATIX 132: Project
    in HCI and Interfaces 
   Instructor: 
Alfred Kobsa (kobsa@uci.edu)
  TA: Yang Wang (yangwang@uci.edu)

  

  Disclaimer: These are guidelines intended
    to help students plan their work in this course. However, the instructor
    does reserve the right to make changes if needed. 

Important note: 
This class  requires a high amount of coursework.
General 
Educational Aims:In this class, students will practice the design and evaluation 
of user interfaces. They will learn about different methods for user interface
  
evaluation and experimental design. In concrete projects, students will have
  to carefully chose between competing
methods and apply them to obtain empirically verified evaluation results. They
   will practice collaboration in teams, including
  the presentation 
of the project results in oral and written form. Specific 
Objective: At the conclusion of this course, students should 
be able to:  - realize the importance of user-centered design, and formative 
and summative evaluation - choose between different methods for user interface 
evaluation - select an appropriate experimental design
- carry out usability experiments
 - have attained 
the ability to evaluate user interfaces of low and medium complexity  
- have 
familiarity with some of the outstanding research problems in the field of Human-Computer 
Interaction

  
  Prerequisites: Informatics 101, 111 and 131 (Inf 131 is a must!!)
  
  Character of course: 

Lecture, and student presentations about project progress
 Students will collaborate in teams of 3 to 5, depending 
on the number of students enrolled and the nature of their projects. 
 
Readings: 
Catherine Courage and Kathy Baxter (2005): Understanding Your
    Users: A Practical Guide to User Requirements -- Methods, Tools, & Techniques.
  Morgan Kaufmann. ISBN-1-55860-935-0Joseph S. Dumas and Janice C. Redish (1999):
              A Practical Guide To Usability Testing. Norwood, N.J. Ablex Publishing
              Corp. Revised 
    edition 1999, Intellect Ltd.: ISBN 1841500208
    
    The readings are available 
    from  a course
    reserve in the Science Library and from the UCI
    bookstore (also check online: Courage/Baxter, Dumas/Redish).
    
Optional readings:
• Jeffrey Rubin (1994): Handbook of Usability Testing: 
How to Plan, Design, and Conduct Effective Tests. John Wiley & Sons. ISBN: 0471594032 
• Jakob Nielsen and Robert L. Mack (1994): Usability Inspection Methods. 
New York: John Wiley & Sons. ISBN 0-471-01877-5. 
Location/Times: 
  TTh  11:00am-12:20pm.  SE2
1306 
Discussion:          Fr 2-2:50pm SE2
1306 (teaching assistant: Yang Wang <yangwang@uci.edu>) 

Grading: 
          
 70% for project work (team score, unless vetoed).
           25% for final exam
 


























          
5% for "tidbits"
           10% 
bonus for active in-class participation

Efficient reading: see here
Cheating: see here
Students with Disabilities: see here
Add/drop:   Only until the BEGINNING of the class on 1/16.
    Course Evaluation:  7pm Friday, March 9 through 11:45pm
    Sunday, March 18
Office hours: Alfred Kobsa: after class, or Tue 12:30am-1:30pm, Rm
  430C, CS Building (302)
                       (contact
me in class or send email beforehand)
 
  
Syllabus (changes possible, discussions will
      be added as needed on Fridays 2-2:50pm)
   #Date 
& Time LocationTopicReadings/materials
      due before class11/09
          11-12:20 ICF
              101 
  1. Introduction
  2. User Needs Analysis
  2.1
  Interviews
    D&R Ch.3, C&B Ch.72 
  1/11 11-12:20SE2
        13062.2 SurveysC&B Ch.831/16 11-12:20SE2 1306Customers' presentation of Projects 1-4 4 
  1/18 11-12:20 
    SE2 1306Customers' presentation of Projects 5-10 5 
  1/23 11-12:20 
    SE2 13062.3 Wants and
      Needs Analysis, Card SortingC&B Ch. 9-1061/25 11-12:20SE2
        13062.4 Field Studies
      C&B Ch.13
    1/30 11-12:20SE2 1306No class 72/1 11-12:20SE2 1306Initial presentation of projects 1-4Powerpoint slides of presenting projects82/2 2-3:20pmSE2 1306Make-up class:
    Initial presentation of projects 5-9Powerpoint slides of presenting projects92/6 11-12:20SE2 13062.5 Focus groups, group task analysisC&B Ch 12, 11102/8 11-12:20SE2 13063. Usability evaluations
      3.1 Heuristik evaluation
      3.2 Cognitive walkthrough
    3.3 
    Usability experimentsD&R Ch5,7,8,12,13112/13
          11-12:20 SE2
                1306Interim presentation of projects
        1-3 
Powerpoint slides of presenting projects122/15
      11-12:20SE2 1306Interim presentation of projects
      4-6Powerpoint slides of presenting
      projects132/20 11-12:20SE2 1306Interim presentation of projects
    6-9Powerpoint slides of presenting projects142/22 11-12:20SE2 13063.3.1 Preparing a usability experimentD&R Ch.14-16; C&B Ch.4152/27 11-12:20SE2 13063.3.2 Selecting, recruiting and informing
            usersC&B Ch.3,5,6; D&R Ch.10163/1 11-12:20SE2 13063.3.3 Running a user studyD&R Ch.17-20173/6 11-12:20SE2 13063.3.4. Analyzing and presenting
                the results
                4. Establishing user orientation in a company
            D&R Ch.8,20-24; C&B
          Ch.14183/8 11-12:20SE2 1306Final presentation of projects 1-3Powerpoint
                slides of presenting projects193/13 11-12:20SE2 1306Final presentation of projects 4-6Powerpoint
                  slides of presenting projects203/15 11-12:20SE2 1306Final presentation of projects 6-9Powerpoint
                    slides of presenting projects3/20 10:30-12:30SE2
          1306Final
  Exam 3/23
      midnightFinal reports due 
Legend:
C&B = Catherine Courage and Kathy Baxter (2005)D&R = Joseph S. Dumas and Janice C. Redish (1999)
C&B Ch.7 = Chapter 7 of Catherine Courage and Kathy Baxter (2005)
 
        
##------------------URL-------------------------##
http://drzaius.ics.uci.edu/meta/classes/informatics161_fall06/
##-----------------TITLE------------------------##
Informatics 161
##------------------TEXT------------------------##
Informatics 161: Social Analysis of Computerization
This course will introduce you to the social analysis of computerization. You will learn how to think about computerization as a social phenomenon. This course will familiarize you with various social analytical approaches to the study of computerization. You will become acquainted with social analysis at various levels: from small groups to society.
Meeting Information
Location: CS 174
Lecture Time: Wednesday and Friday, 3:30pm - 4:50pm
Discussion Section 1: Mon. 3pm to 3:50pm in ET 204
Discussion Section 2: Mon. 4pm to 4:50pm in ET 202
Instructor Information
Charlotte P. Lee
cplee@ics.uci.edu
Office: Calit2 4416
Office Hours: Wednesday 1:00 - 2:30pm
Amanda Williams, Teaching Assistant
amandamw@ics.uci.edu
amandamarisa on AIM
metamanda on Yahoo
Office Hours: Fri. 1:30 - 3:15pm @ Calit2 Room 4300

Silvia Lindtner, Reader
lindtner@ics.uci.edu
Office Hours: Tu. 1:00-2:00pm @ Calit2 Room 4300
Marisa Cohn, Reader
mlcohn@ics.uci.edu
Office Hours: M. 11:30am-12:30pm @ Computer Science Trailer, 127A
 
Schedule

        Date
      
        Topic
      
        Reading(s) Due
      
        Deliverables: Assignment Due / Quizzes or Exams
      
        Sept 27
        No Section Meetings This Week
      
        Course Introduction
      
        None
      
         
      
        Sept 29
      
        Computers as Tools and Social Systems
      
        Kling, What is Social Informatics
         
      
         
      
        Oct 4
         
      
        Utopian and Dystopian Visions
      
        Howcraft and Fitzgerald, From Utopia to Dystopia
        Start: Lievrouw, Information and Equity
      
         
      
        Oct 6
      
        Approaches to Studying Computerization
      
        Finish: Lievrouw, Information and Equity
        Dourish, Chapter: Social Computing
      
         
      
        Oct 11
         
         
      
        IM and Blogging
      
        Nardi et al. Why we blog.
        Grinter and Palen, Instant Messaging in Teen Life
      
        Due in Section, Monday Oct. 9: Assignment 1
      
        Oct 13
         
      
        File Sharing
         
      
        Voida et. al Personal Technologies
        Electronic Frontier Foundation, RIAA vs. The People
      
         
      
        Oct 18
         
      
        Computer Games
	Guest Lecture: Silvia Lindtner
         
      
        Ducheneaut et al. Alone together?
        Huff, Gender, Software Design, and Occupational Equity
	Redding et al. Health Behavior Models
      
         
      
        Oct 20
         
      
        Computer Supported Cooperative Work
      
        Grudin, J. Why Groupware Applications Fail
        Ackerman, Challenge of CSCW
      
         
      
        Oct 25
         
      
        Participatory Design
      
        Mackay et al, Reconfiguring the user
        Kensing and Blomberg, Participatory Design 
      
        Due in Class: Assignment 2. Please bring a draft or final version of the assignment to section on Monday, Oct 23 to share with your section. Each section will choose 4 people to present their research to the class during the last class session for extra credit.
      
        Oct 27
         
      
        Democratic Participation
        Guest Lecture: Kelly Garrett
      
        Resnick, Beyond Bowling Together, Esp. pages 10-21
        Garrett, Protest in an Information Society, Esp. pages 4-23
      
         
         
      
        Nov 1
        No Section Meetings This Week
      
        Online Communities
        Guest Lecture: Steve Abrams
      
        Malhotra et al., Evolution of a Virtual Community
        Carroll and Rosson, Trajectory for Community Networks
        
      
         
      
        Nov 3
      
        Guest Lecture: Amanda Williams
      
        Paulos and Goodman, The Familiar Stranger
        Williams and Dourish, Imagining the City
      
         
      
        Nov 8
      
        Exam
      
        None
         
      
        Midterm Exam in Class
      
        Nov 10
      
        Veteran's Day, No Class
      
        None
      
         
      
        Nov 15
         
      
        Privacy
        Guest Lecture: Paul DiGioia
      
        Dourish and Anderson Collective Information Practice
         
      
        Due in Class: Assignment 3
        Also, discuss in-class trial and meet with your team
      
        Nov 17
         
      
        Design
      
        Johnson and Miller, Dialogue on Responsiblity, Moral Agency, and IT Systems
        Hughes et al.  From Ethnographic Record to System Design.
      
         
      
        Nov 22
         
      
        
        
      
        Prepare for trial on your own
      
         
      
        Nov 29
        No Section Meetings This Week
      
        In-class Trial:
	The Case of Your Face
      
        None
      
         
      
        Dec 1
      
        Selected Student Presentations
        Closing Remarks
      
        None
      
        Final Papers Due
      

Assignments
Assignment 1: Analyzing Images (2 to 3 pages)
The purpose of this assignment is to get you to look closely at some ways in which technology is portrayed.
Find two images of computer/information technology.  One should be utopian, one dystopian.  These images can be from advertising, magazines, newspapers, articles, billboards, TV, movies, or even music.  For each of these images:
1) Indicate EXACTLY where you found it (in other words, which source, the date it was published, the name of the TV show or movie, channel, date, you get the idea).
2) Describe the technology presented and indicate if it is current, future, science fictional.
3) How is the technology presented?  What kind of people are affected by it and are presented as using it?  Who is the target audience (children, computer professionals, individuals, families, etc?).  What is the technology supposed to do to or for them?
4) What is the "real message" being presented?  Is it to get you to buy something, believe something, protest something, fear something?
5) How did you react to this image and did you believe what is being presented?  Why or why not?
Your write-up should NOT be in the Question and Answer format presented here, but should be written as a narrative.  Use these questions as a guide.
 
Assignment 2: Prospectus for Final Paper (1 to 2 pages)
The purpose of this assignment is to get you started on your final paper.
Write a 1 to 2 page prospectus that provides answers to the following:
What is a contemporary controversial computerization topic that interests you?Why is this a timely topic? Why now?Who are the stakeholders? What are the stakes for each stakeholder?What technology is involved?You must cite at least 2 academic journal articles or books. Include full citations. Attach photocopies or printouts of the first page of your articles or books.
Your write-up should NOT be in the Question and Answer format presented here, but should be written as a narrative.  Use these questions as a guide.
 
		Assignment 3: More Literature for the Final Paper (2 to 3 pages, not including photocopies)
			
			The purpose of this assignment is to help you continue working on your final paper. Make sure you turn in both an electronic and a hard copy. Your assignment is due on Wednesday, Nov. 15 in class.
			
			Find 3 additional academic articles (i.e. appearing in a peer-reviewed journal or conference) or books about your chosen topic. You'll be spending a little time on them so try to choose interesting articles. Non-academic articles or books are unacceptable for this assignment. If you are unsure as to how to find academic articles on a given topic, a reference librarian can help direct you to good sources including some that can be accessed through ANTPAC.
			
			1) For each article:
			a) Provide a full citation.. Choose a citation format in which to list all your papers. Common citation formats include MLA or APA or Chicago Style.
			b) For each article, state what field or discipline (e.g. HCI, Psychology, Sociology, Policy Studies, Organizational Studies, etc.) the book or article is from.
			c) Summarize each article or book in your own words.
			d) Provide a photocopy of the title page of each article or book on both electronic and hard copies.
			
			2) Synthesize the readings
			a) Compare and contrast your readings. How are they different? How are they similar? Do the articles have methods, themes, or arguments in common? Are they concerned with similar or dissimilar aspects of your topic?
			b) List 3 questions that you have about your chosen topic after reading these articles.
			
		
		 
		Final Paper
You will write a final paper in this class. The topic is open for either paper, but they should cover issues which clearly relate to and reference the reading in the course. You are expected to relate your papers to the course readings and to include a reference list. Excellent papers will also cite additional sources that are not on the reading list.
The paper will be approximately 3000 words.
Grading
Assignment 1: 10%
Assignment 2: 10%
Assignment 3: 10%
Midterm Exam: 30%
Final Paper: 40%
Late assignments will be downgraded 1/3 of a letter grade per day.
Grades that fall on or near the border (e.g. A-/B+) will be decided at the instructor's discretion.
 
Bibliography
Ackerman, M. (2000). The intellectual challenge of CSCW: The gap between social requirements and technical feasibility. Human-Computer Interaction, 15(2/3), 179. [PDF]
Carroll, J. M. & Rosson, M. B. (2003). A trajectory for community networks. The Information Society, 19(5), 381. [PDF]
Dourish, P. (2004). Where the action is: The foundations of embodied interaction [PDF]
Dourish, P. In press. collective information practice: Exploring privacy and security as social and cultural phenomena Springer Berlin / Heidelberg. [PDF]
Ducheneaut, N., Yee, N., Nickell, E., & Moore, R. J. (2006). "Alone Together?": Exploring the Social Dynamics of Massively Multiplayer Online Games. Montreal, Quebec, Canada: ACM Press. [PDF]
Electronic Frontier Foundation. RIAA vs. the people: Two years later.
Garett, R. K. (2006). Protest in an information society: A review of literature on social movements and new ICTs. Information, Communication Society, 9(2), 202. [PDF]
Grinter, R. E., & Palen, L. (2002). Instant messaging in teen life. CSCW '02: Proceedings of the 2002 ACM Conference on Computer Supported Cooperative Work, New Orleans, Louisiana, USA. 21-30. [PDF]

Grudin, J. (1989). Why groupware applications fail: Problems in design and evaluation. Information Technology People, 4(3), 245. [PDF]
Grudin, J., & Palen, L. Why groupware succeeds: Discretion or mandate? ACM Conf. Computer-Supported Cooperative Work ECSCW'95, Stockholm, Sweden. [PDF]
Howcroft, D., & Fitzgerald, B. "from Utopia to Dystopia: The Twin Faces of the Internet" [PDF]
Huff, C. (2002). Gender, software design, and occupational equity. SIGCSE Bulletin, 34(2), 112. [PDF]
Hughes, J., Randall, D., & Shapiro, D. (1993). From ethnographic record to system design: Some experiences from the field. Computer Supported Cooperative Work, 1(3), 123. [PDF]
Johnson, D. G., & Miller, K. W. (2006). A dialogue on responsibility, moral agency, and IT systems. SAC '06: Proceedings of the 2006 ACM Symposium on Applied Computing, Dijon, France. 272-276. [PDF]
Kensing, F., & Bloomberg, J. (1998). Participatory design: Issues and concerns. Computer Supported Cooperative Work, 7(3/4), 167. [PDF]
Kling, R. (1999). What is social informatics and why does it matter. D-Lib Magazine, 5(1), 1.
Lievrouw. (2003). Information and equity. Annual Review of Information Science and Technology, 37(1), 499. [PDF]
Mackay, & et al. (2000). Reconfiguring the user: Using rapid application development. Social Studies of Science, 30(5), 737. [PDF]
Malhotra, A., Gosain, S., & Hars, A. (1997). Evolution of a virtual community: Understanding design issues through a longitudinal study. ICIS '97: Proceedings of the Eighteenth International Conference on Information Systems, Atlanta, Georgia, United States. 59-74. [PDF]
Nardi, B. A., Schiano, D. J., Gumbrecht, Michelle, Swartz, & Luke. (2004). Why we blog. Communications of the ACM, 47(12), 41. [PDF]
Paulos, E., & Goodman, E. (2004). The familiar stranger: Anxiety, comfort, and play in public places. CHI '04: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, Vienna, Austria. 223-230. [PDF]
Resnick, P., Bikson, T., Mynatt, E., Puttnam, R., Sproull, L., & Wellman, B. (2000). Beyond bowling together: SocioTechnical capital. CSCW '00: Proceedings of the 2000 ACM Conference on Computer Supported Cooperative Work, Philadelphia, Pennsylvania, United States. 363. [PDF]
Voida, A., Grinter, R. E., Ducheneaut, N., Edwards, W. K., & Newman, M. W. (2005). Listening in: Practices surrounding iTunes music sharing. CHI '05: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, Portland, Oregon, USA. 191-200. [PDF]
Wellman, B., & Hogan, B. (2004). The internet in everyday life. In W. S. Bainbridge (Ed.), Berkshire encyclopedia of human-computer interaction (pp. 389-389-397). Great Barrington, MA: Berkshire Publishing.
Williams, A. and Dourish, P. (In press). Imagining the City: The Cultural Dimensions of Urban Computing. IEEE Computer Society [PDF]

Optional Readings
Agre, P. E. (1997). Toward a critical technical practice: Lessons learned in trying to reform AI. In G. Bowker, L. Gasser, L. Star & B. Turner (Eds.), Bridging the great divide: Social science, technical systems, and cooperative work ()Erlbaum.
Asaro, P. M. (2000). Transforming society by transforming technology: The science and politics of participatory design. Accounting, Management, and Information Technologies, 10(4), 257.
Button, G., & Dourish, P. (1996). Technomethodology: Paradoxes and possibilities. CHI '96: Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, Vancouver, British Columbia, Canada. 19-26. from http://doi.acm.org/10.1145/238386.238394
Fisher, D. R., & Wright, L. M. (2001). On utopias and dystopias: Toward an understanding of the discourse surrounding the internet. Journal of Computer-Mediated Communication, 6(2)
Mackay, H., & Gillespie, G. Extending the social shaping of technology approach: Ideology and appropriation

Policies

The instructor reserves the right to change the syllabus at any time.

Add/drop: The last day to drop this course is the end of the second week of classes.  

Respect: This class involves significant in-class discussion of topics on which you and your classmates may have differences in opinion. Please be respectful of others at all times.

Academic honesty: Please familiarize yourself with the latest UCI academic honesty policy: http://www.editor.uci.edu/catalogue/appx/appx.2.htm. The consequences of academic dishonesty are not worth the risks. 

Technology in class: Please turn off all cell phones/pagers/etc. before the beginning of each class. Please do not use notebook computers during class for any purpose not directly relating to this class. Please do not instant message or check email during class.

Correspondence: We will send course announcements by email to the official course mailing list, so you should check your email regularly. Note that this mailing list goes to the email address that the registrar has for you (your UCInet ID). If you prefer to read your Email on another account, you should set your UCInet account to forward your Email to your preferred account (you can do this on the web at http://phwww.cwis.uci.edu/cgi-bin/phupdate).

Assignments: All written assignments should use standard formatting – Times style font size 12 or Arial/Tahoma style font size 10, 8.5x11in paper, 1" margins, double spaced. Paper copies of each assignment should be turned in at the end of class on the day listed on the course outline below.
##------------------URL-------------------------##
http://www.ics.uci.edu/~djp3/classes/2006_01_01_ICS280/
##-----------------TITLE------------------------##
ICS 280: Special topics in Informatics
##------------------TEXT------------------------##
Information and Computer Science 280
      Special Topics in Ubiquitous Computing:
    Ubiquitous Computing for Post-Crisis Logistics
    Winter Quarter 2006 
    
  


  Professor
      Donald J. Patterson
    Lectures
      Location: CS 253Time:  Tuesdays and Thursdays 9:30 - 10:50 Link to Detailed ScheduleLink to GPS Projects page
          Geocache Course #1 (IE only) Geocache Course #2 (Javascript-enabled browser required, download this to run it locally without network connection) 
        Link to Final Project 
    Website:
      http://www.ics.uci.edu/~djp3/classes/2006_01_01_ICS280
    Reference Texts:
      Understanding GPS: Principles and Applications, 2nd Edition AJAX in Action Google Map Hacks J2ME: The Complete Reference 
    


  Overview:
       This course is going to look at issues of
          loosely centralized coordination of
          humanitarian relief  resources in the wild, either from
          natural or man-made causes.
          
          We are focusing on the months after a crisis, not the hours or minutes. Under this umbrella we will cover:
           Non-governmental relief work needsGPS theory, technology Wi-Fi localization theory and technologyOther localization technologiesIntro to AJAX web programmingProgramming to Google Maps/ Yahoo! Maps API Inference from location informationSample-based inference techniques Inference on graphs as time allows we will look at mobile platform development issues 
        There are some opportunities for collaborations with the Harvard School of Public Health based on successful completion of coursework. 
    Structure:
       All students are expected to attend lectures,
          participate in and lead some discussions. This
          course will require have  several small projects related to course content and presentations of the projects. 
    Grading:
       All students enrolled in the course will
          earn a letter grade based upon:
           class
              attendance and participation presentation(s) in class project workperformance appraisals by
              team members as applicable.
        
    


  Students with Disabilities
      or Special Needs
       Any student who feels he or she may need an
          accommodation based on the impact of a
          disability (or anything else) should contact me privately to
          discuss his or her specific needs. Also
          contact the Disability Services Center at
          (949) 824-7494 as soon as possible to better
          ensure that such accommodations are
          implemented in a timely fashion.
    


   Schedule
      January 10th
          Administration and introduction to the problem of relief work 
        January 12th
          More MotivationDue:
               Read CrisisMap paperFind a current news article about a humanitarian problem Propose a  mobile system that would have solved the problem Pick a paper to present on January 24th and/or January 26th 
            Notes from class 
        January 17th
          GPS Overview Notes from class 
        January 19th
          GPS DetailsNotes from class 
        January 24th
          Augmented GPS Details GPS error group project introduction
              Do an error analysis - urban canyon, temporal variation Create a piece of DGPS offline error correction softwareCreate a geocaching course 
            Notes from class Slides from class 
        January 26th
          Due (read all and [possibly] present the following papers)
              Starfire Whitepaper : Jose
                  Slides
                Collaborative GPS/INS Navigation in Urban Environment : Mamadou
                  Slides
                Data Fusion of Four ABS Sensors and GPS for an Enhanced Localization of Car-like Vehicle: Wiwat
                  Slides
                
            Due: GPS project and group assignment GPS Project descriptions 
        January 31st
          Due (read all and 
              [possibly] present the following papers)
              3 GPS research paper presentations
                  Impact of Multipath and Cross-Correlation on GPS acquisition in Indoor Environments: Gary Suh
                      Slides
                    Global Positioning System (GPS) for Submersibles : Ryan
                      Slides
                    Performance evaluation of GPS augmentation using Quasi-Zenith Satellite System : Son
                      Slides
                    Effect of Kinematics and Interference on Assisted GPS : Roger Autonomous Vehicle Positioning with GPS in Urban Canyon Environments :Trung
                      Slides
                    
                
            
        February 2nd
          Overflow paper presentations Due (read following paper)
              Localizing Beyond GPS
                  Location Systems for Ubiquitous Computing 
                
            
        February 7th
          Due
              GPS Quiz (mix multiple choice/ short answer) ~30 minutes covering motivation, lectures and papers up to this point. Open note, closed friend, time constrained.
            More Localizing Beyond GPS
              Notes Place Lab: Device Positioning Using Radio Beacons in the Wild
            
        February 9th
          Beyond Localizing
              Using GPS to learn significant locations and predict movement across multiple users Inferring High-Level Behavior from Low-Level SensorsOpportunity Knocks: a System to Provide Cognitive Assistance with Transportation Services
            
        February 14th
          More Beyond Localizing Due
              Geocaching course description 15 minute presentation of results/experience/findings 
            
        February 16th
          Run the geocache course  (bring laptop that can localize you) 
        February 21st
          More Beyond Localizing
              SlidesNotes
            
        February 23rd
          Place Lab
              SlidesNotes
            
        February 28th
          AJAX Theory
              Slides
            Final project assignment 
        March 2nd
          AJAX Technologies
              DHMTLSlide Notes (has some of the links we mentioned in it)
                  HTML example XML example XHTML example Javascript
                      Javascript basic example Javascript timer example Javascript convert to uppercase example 
                    CSS
                      no styling example styles A, B, C (stylesheet A,B,C) Styles applied elsewhere none, A, B, C CSS class example (stylesheet A) : 
                    DOM
                      Javascript accessing DOM to change CSS example 
                    
                Linkfest
                  HTML validator CSS validator Link validator Javascript Tutorial CSS definition CSS Zen Garden 
                
            
        March 7th
          AJAX Technologies
              XMLHTTPRequestObjectSlideLinkfest
                  AJAX: A new approach to Web Applications (This is the article that coined the term) Mastering AJAX AJAX login Accessing SOAP with AJAX 
                Interesting Google Map Mashups
                  PlacefinderZip Code Mapper City Mapper Package Mapper Chicago Crime Mapper 
                      Howto
                    Geocoder Javascript tool 
                
            Nokia stuff (links in the Notes) SlidesNotes
              example XMLHttpRequest 
            
        March 9th 
          Google Maps Technologies
              SlidesNotes (Some links in here too)
                  Links
                      Original Google Maps Mashup Geocoder.usHello world Google API example (look at the source, the actual functionality is broken because it isn't hosted on the right site) 
                    
                
            
        March 14th
          Group Meeting/Office Hours 
              Notes
                  Web example of capturing clicks in Google Maps Web example of capturing clicks and making a marker in Google Maps 
                
            
        March 16th
          Group Meeting/Office Hours 
              Notes
                  Google Maps to Google Earth Tool example (lost the link) 
                
            
        March 23rd
          Due: Final Project presentations 8am to 10am 
        
    


    
  last update:
    Thursday, March 30, 2006 12:56 PM
##------------------URL-------------------------##
http://www.ics.uci.edu/~lindtner/
##-----------------TITLE------------------------##
silvia lindtner
##------------------TEXT------------------------##
If you are not redirected automatically, follow the link: www.silvialindtner.com
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioResearchers/hertz/6ef646b08177f18d841b9bf79f5f2f7b0693de5c.html
##-----------------TITLE------------------------##
LUCI: The Laboratory for Ubiquitous Computing and Interaction
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




RESEARCHERS:WE ARE LUCI: BIOGRAPHIES: RESEARCHERS:  Garnet Hertz:1337






	        		

	
	

	


	
	



	
		
			This site was designed for viewing with the Macromedia Flash Player.
			Get Flash here.
			Alternatively we have a lightweight HTML version of the site
			here.
			Alternatively, alternatively you can bypass the flash detection if you wish.
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioResearchers/hertz/biography.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




RESEARCHERS:WE ARE LUCI: BIOGRAPHIES: RESEARCHERS:  Garnet Hertz:Biography





Biography

Doctor Garnet Hertz is a Fulbright Scholar and contemporary artist whose work explores themes of technological progress, innovation, do-it-yourself culture and interdisciplinarity. His work often involves building real-world technologies that are designed to take his audience into a speculative future gone humorously astray. In the process, Hertz's work inverts the idea that technology needs to be faster, more efficient or higher resolution: innovation is born out of human emotion, historical tradition, and creative obsession.

Hertz is Co-Director of the Values in Design Lab at UC Irvine, is Artist in Residence / Research Scientist in Informatics at UC Irvine and is Faculty in the Media Design Program at Art Center College of Design. He has shown his work at several notable international venues in thirteen countries including SIGGRAPH, Ars Electronica, Transmediale and DEAF and was awarded the prestigious 2008 Oscar Signorini Award in robotic art. He is founder and director of Dorkbot SoCal, a monthly Los Angeles-based lecture series on DIY culture, electronic art and design. His research is widely cited in academic publications, and popular press on his work has disseminated through 25 countries including The New York Times, Wired, The Washington Post, NPR, USA Today, NBC, CBS, TV Tokyo and CNN Headline News. More info: http://conceptlab.com
##------------------URL-------------------------##
http://luci.ics.uci.edu/lightweight/bioResearchers/hertz/contact.html
##-----------------TITLE------------------------##
Light Weight: LUCI: The Laboratory for Ubiquitous Computing and Interaction at UCI
##------------------TEXT------------------------##
Lightweight Version
Interactive Flash Version






UP




RESEARCHERS:WE ARE LUCI: BIOGRAPHIES: RESEARCHERS:  Garnet Hertz:Contact





Contact Information

	Research Areas:	Theory of information technology and
			culture, interdisciplinary media arts
			practice, robotics, critical design,
			IT obsolescence and upcycling, DIY.

	Lab:		5065 Bren Hall
	Studio:		2302 CalIT2
	Email:		ghertz@uci.edu
	Website:		http://conceptlab.com/
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/SendEvent.html
##-----------------TITLE------------------------##
Class SendEvent
##------------------TEXT------------------------##
Class SendEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----ProcessorEvent
                   |
                   +----SendEvent


 public class SendEvent
   extends ProcessorEvent

An event of this class represents a request from a task to send a message
  between two processors




  

 
	SendEvent(Object, EventDestination, float, int, long, int, long, int)
   
   
	SendEvent(Object, EventDestination, float, int, long, int, long, int, boolean)
   


  

 
	getDestinationProcessor()
   
   
	getFromTask()
   
   
	getToTask()
   
   
	isMigration()
   
   
	toString()
   
   
	transmissionSize()
   



  



SendEvent

 public SendEvent(Object f,
                  EventDestination t,
                  float ti,
                  int fromProc,
                  long fromTask,
                  int toProc,
                  long toTask,
                  int size)


SendEvent

 public SendEvent(Object f,
                  EventDestination t,
                  float ti,
                  int fromProc,
                  long fromTask,
                  int toProc,
                  long toTask,
                  int size,
                  boolean m)



  


isMigration

 public boolean isMigration()


getDestinationProcessor

 public int getDestinationProcessor()


transmissionSize

 public int transmissionSize()


getToTask

 public long getToTask()


getFromTask

 public long getFromTask()


toString

 public String toString()

 Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/PeIdleEvent.html
##-----------------TITLE------------------------##
Class PeIdleEvent
##------------------TEXT------------------------##
Class PeIdleEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----ProcessorEvent
                   |
                   +----PeIdleEvent


 public class PeIdleEvent
   extends ProcessorEvent

Event that signals that a processor has become idle

 See Also:
     Processor




  

 
	PeIdleEvent(Object, EventDestination, float, int, int)
   


  

 
	equals(Object)
   Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   
	getReason()
   
   
	toString()
   



  



PeIdleEvent

 public PeIdleEvent(Object f,
                    EventDestination t,
                    float ti,
                    int pe,
                    int re)



  


equals

 public boolean equals(Object o)

 Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   Overrides:
     equals in class ProcessorEvent
  

toString

 public String toString()

 Overrides:
     toString in class SimEvent
  

getReason

 public int getReason()
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/NetworkEvent.html
##-----------------TITLE------------------------##
Class NetworkEvent
##------------------TEXT------------------------##
Class NetworkEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----NetworkEvent


 public class NetworkEvent
   extends SimEvent

Defines events that are to be sent to the network

 See Also:
     Network




  

 
	NetworkEvent(Object, EventDestination, int)
   


  

 
	equals(Object)
   Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method




  



NetworkEvent

 public NetworkEvent(Object f,
                     EventDestination t,
                     int ti)



  


equals

 public boolean equals(Object o)

 Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   Overrides:
     equals in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/ExponentialDistribution.html
##-----------------TITLE------------------------##
Class ExponentialDistribution
##------------------TEXT------------------------##
Class ExponentialDistribution


java.lang.Object
   |
   +----ProbabilityDistribution
           |
           +----ExponentialDistribution


 public final class ExponentialDistribution
   extends ProbabilityDistribution




  

 
	ExponentialDistribution(float)
    Constructs an exponential probability distribution.
   
	ExponentialDistribution(float, float)
    Constructs a shifted exponential probability distribution.


  

 
	floatSample()
    Returns a float sample from this probability distribution.
   
	floatSample(float)
    Returns a float sample from this probability distribution.
   
	floatSample(float, float)
    Returns a float sample from this probability distribution.
   
	intSample()
    Returns an integer sample from this probability distribution.
   
	newInstance(double[])
    Creates a new instance of this probability distribution.



  



ExponentialDistribution

 public ExponentialDistribution(float mean)

 Constructs an exponential probability distribution.

   Parameters:
     mean - mean value.
  

ExponentialDistribution

 public ExponentialDistribution(float mean,
                                float low)

 Constructs a shifted exponential probability distribution.

   Parameters:
     mean - mean value.
     low - lower bound.
  


  


newInstance

 public static ProbabilityDistribution newInstance(double params[])

 Creates a new instance of this probability distribution.

   Parameters:
     params - array of parameters.
     Returns:
     a new instance of this probability distribution.
  

floatSample

 public static float floatSample(float mean)

 Returns a float sample from this probability distribution.

   Parameters:
     mean - mean value.
     Returns:
     a float sample from this probability distribution.
  

floatSample

 public static float floatSample(float mean,
                                 float low)

 Returns a float sample from this probability distribution.

   Parameters:
     mean - mean value.
     low - lower bound.
     Returns:
     a float sample from this probability distribution.
  

intSample

 public int intSample()

 Returns an integer sample from this probability distribution.

   Returns:
     an integer sample from this probability distribution.
     Overrides:
     intSample in class ProbabilityDistribution
  

floatSample

 public float floatSample()

 Returns a float sample from this probability distribution.

   Returns:
     a float sample from this probability distribution.
     Overrides:
     floatSample in class ProbabilityDistribution
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/GangScheduling.html
##-----------------TITLE------------------------##
Class GangScheduling
##------------------TEXT------------------------##
Class GangScheduling


java.lang.Object
   |
   +----GangScheduling


 public class GangScheduling
   extends Object
   implements SchedulerInterface

Example: A very simple gang scheduler




  

 
	GangScheduling(TheSimulator)
   


  

 
	EndOfTimeSlice(float, int)
   
	EndOfTimeSlice

	Invoked at the end of a time slice


   
	GlobalClock(float)
   
 Invoked when a receiving a global clock signal

 
   
	JobArrival(float, int)
   Invoked when a new job arrives

 
   
	main(String[])
   
   
	PeIdle(float, int, int)
    Invoked when a PE has become idle for some reason

 
   
	TaskArrival(float, long)
   
 Invoked when a new task arrives, only if the network is asynchronous

 
   
	TaskStateChange(float, long)
   
 Invoked when a task has changed state

 



  



GangScheduling

 public GangScheduling(TheSimulator ts)



  


JobArrival

 public void JobArrival(float time,
                        int jobId)

 Invoked when a new job arrives

   Parameters:
     time - Time when the job arrived
     jobID - ID of the job that arrived
  

TaskStateChange

 public void TaskStateChange(float time,
                             long taskID)

 Invoked when a task has changed state

   Parameters:
     time - Time when the change of state occured
     task - ID of the task that changed state
  

PeIdle

 public void PeIdle(float time,
                    int peId,
                    int reason)

 Invoked when a PE has become idle for some reason

   Parameters:
     time - Time when the PE became idle
     peId - The id of the PE that became idle
     reason - Why the PE became idle. Not implemented.
  

EndOfTimeSlice

 public void EndOfTimeSlice(float time,
                            int peId)

 EndOfTimeSlice
	Invoked at the end of a time slice



TaskArrival

 public void TaskArrival(float time,
                         long taskID)

 Invoked when a new task arrives, only if the network is asynchronous

   Parameters:
     time - Time when the task arrived
     task - ID of the task that arrived
  

GlobalClock

 public void GlobalClock(float time)

 Invoked when a receiving a global clock signal

   Parameters:
     time - Time when the global clock arrived
  

main

 public static void main(String args[])
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/EndIOTaskEvent.html
##-----------------TITLE------------------------##
Class EndIOTaskEvent
##------------------TEXT------------------------##
Class EndIOTaskEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskEvent
                   |
                   +----InternalTaskEvent
                           |
                           +----EndIOTaskEvent


 public class EndIOTaskEvent
   extends InternalTaskEvent

An end of I/O task event.

 See Also:
     Task




  

 
	EndIOTaskEvent(Task, float)
    Constructs an end I/O task event.


  

 
	toString()
    Returns a string representation of this object.



  



EndIOTaskEvent

 public EndIOTaskEvent(Task task,
                       float time)

 Constructs an end I/O task event.

   Parameters:
     task - responsible task.
     time - time stamp.
  


  


toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/AllNames.html
##-----------------TITLE------------------------##
Index of all Fields and Methods
##------------------TEXT------------------------##
All Packages  Class Hierarchy
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z



  Index of all Fields and Methods



 A 

 	addEvent(SimEvent).
Method in class Simulator
   insert a future event in the event queue

   	addEventGenerator(EventGenerator).
Method in class Simulator
   add a event generator to this simulator
 
   	addLink(int, int, int).
Method in class Network
   Add a link between two processors usinf processor id's
  
   	addLink(String, String, int).
Method in class Network
   Add a link between two processors using processor names
  
   	addNeighbour(Processor, int).
Method in class Processor
   Add a new neighbour to this processor
  
   	addOneWayNeighbour(Processor, int).
Method in class Processor
   
   	addProcessor(int, int, int).
Method in class Network
   Add a processor to the network
 
   	addProcessor(int, int, int, float, float, float).
Method in class Network
   
   	addProcessor(Processor, Processor[]).
Method in class Network
   Add a processor to the network
  
   	addProcessor(String, int, int).
Method in class Network
   Add a processor to the network, timeslicelength default to 10
 
   	addProcessor(String, int, int, int).
Method in class Network
   Add a processor to the network
 
   	addRelativeEvent(SimEvent).
Method in class Simulator
   insert a future event in the event queue
  the time specified in the event is relative to the global time

   	allIdleProcessors().
Method in class Network
     
   	allIdleProcessors().
Method in class TheSimulator
   
 Return an array with id's for the currently idle processors

 
   	allProcessors().
Method in class Network
   
   	ASYNCHRONOUS.
Static variable in class Network
   If the network is ASYNCHRONOUS





 C 

 	callJobArrival(float, int).
Method in class TheSimulator
    Calls the SchedulerInterface routine JobArrival in the scheduler

 
   	callTaskStateChange(float, long).
Method in class TheSimulator
    Calls the SchedulerInterface routine TaskStateChange in the scheduler

 
   	CommTaskEvent(Task, float).
Constructor for class CommTaskEvent
    Constructs a communication task event.
   	COMMUNICATING.
Static variable in class SuspendedTaskEvent
    Reason for suspension is communication.
   	COMMUNICATING.
Static variable in class Task
    The communicating state.




 D 

 	DEADLINE.
Static variable in class SuspendedTaskEvent
    Reason for suspension is that the Task has reached it's deadline

   	dispatchEvent(SimEvent).
Method in class Network
   If this network is ASYNCHRONOUS this method simply passes the event on to the simulator
  if the network is SYNCHRONOUS it makes sure all the events arrive to the simulator at the same time
  




 E 

 	ENDED.
Static variable in class SuspendedTaskEvent
    Reason for suspension is end of task.
   	ENDED.
Static variable in class Task
    The ended state.
   	endedJobs().
Method in class JobManager
    Returns an array with global job identifier for ended jobs,
 managed by this object.
   	EndIOTaskEvent(Task, float).
Constructor for class EndIOTaskEvent
    Constructs an end I/O task event.
   	EndOfSpinningEvent(Task, float).
Constructor for class EndOfSpinningEvent
    Constructs a end of spinning event

 
   	EndOfTimeSlice(float, int).
Method in class GangScheduling
   
	EndOfTimeSlice

	Invoked at the end of a time slice


   	EndOfTimeSlice(float, int).
Method in interface SchedulerInterface
    Invoked when a timeslice has expired on a PE.
   	EndOfTimeSliceEvent(Object, EventDestination, float, int).
Constructor for class EndOfTimeSliceEvent
   
   	EndSyncTaskEvent(Task, int).
Constructor for class EndSyncTaskEvent
    Constructs an end synchronization task event.
   	EndTaskEvent(Task, float).
Constructor for class EndTaskEvent
    Constructs an end task event.
   	equals(Object).
Method in class NetworkEvent
   Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   	equals(Object).
Method in class PeIdleEvent
   Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   	equals(Object).
Method in class ProcessorEvent
   Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   	equals(Object).
Method in class ScheduleTaskEvent
   Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   	equals(Object).
Method in class SimEvent
   Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   	equals(Object).
Method in class TaskEvent
   Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   	eventProcessed(SimEvent).
Method in interface EventGenerator
   Every time the simulator processes an event created by an EventGenerator
  the EventGenerator will be notified via this method

   	eventProcessed(SimEvent).
Method in class GlobalClockEventGenerator
   
   	ExponentialDistribution(float).
Constructor for class ExponentialDistribution
    Constructs an exponential probability distribution.
   	ExponentialDistribution(float, float).
Constructor for class ExponentialDistribution
    Constructs a shifted exponential probability distribution.




 F 

 	floatSample().
Method in class ExponentialDistribution
    Returns a float sample from this probability distribution.
   	floatSample().
Method in class HyperErlangDistribution
    Returns a float sample from this probability distribution.
   	floatSample().
Method in class NormalDistribution
    Returns a float sample from this probability distribution.
   	floatSample().
Method in class ProbabilityDistribution
    Returns a float sample from this probability distribution.
   	floatSample().
Method in class UniformDistribution
    Returns a float sample from this probability distribution.
   	floatSample(float).
Static method in class ExponentialDistribution
    Returns a float sample from this probability distribution.
   	floatSample(float, float).
Static method in class ExponentialDistribution
    Returns a float sample from this probability distribution.
   	floatSample(float, float).
Static method in class NormalDistribution
    Returns a float sample from this probability distribution.
   	floatSample(float, float).
Static method in class UniformDistribution
    Returns a float sample from this probability distribution.




 G 

 	GangScheduling(TheSimulator).
Constructor for class GangScheduling
   
   	generateJob(int, float, int, int, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, float, float, String).
Method in class JobManager
    Generates a job and adds it to this object.
   	generateTask(float, int, float).
Method in class Job
    Generates a task and adds it to this job.
   	generateTasks(int, float, int, float).
Method in class Job
    Generates the given number of tasks and adds them to this job.
   	getAverageCommunicationTime().
Method in class Task
    Returns the average communication time.
   	getAverageCommunicationTime().
Method in class TaskStatistics
    Returns the average communication time.
   	getAverageIOTime().
Method in class Task
    Returns the average I/O time.
   	getAverageIOTime().
Method in class TaskStatistics
    Returns the average I/O time.
   	getAverageSynchronizationTime().
Method in class Task
    Returns the average synchronization time.
   	getAverageSynchronizationTime().
Method in class TaskStatistics
    Returns the average synchronization time.
   	getAverageTimeslice().
Method in class Network
   
   	getComputationTime().
Method in class Task
    Returns the computation time of this task.
   	getComputationTime().
Method in class TaskStatistics
    Returns the computation time of this task.
   	getDestinationProcessor().
Method in class SendEvent
   
   	getExecutionTime().
Method in class Job
    Returns the total execution time of the job.
   	getExecutionTime().
Method in class Task
    Returns the total execution time for this task.
   	getExecutionTime().
Method in class TaskStatistics
    Returns the total execution time for this task.
   	getFrom().
Method in class SimEvent
   
   	getFromTask().
Method in class ReceiveEvent
   
   	getFromTask().
Method in class SendEvent
   
   	getId().
Method in class Job
    Returns the global job identifier for this object.
   	getId().
Method in class Task
    Returns the global task identifier for this object.
   	getJob().
Method in class Task
    Returns object Job associated with this task.
   	getJob(int).
Method in class JobManager
    Returns the sought job.
   	getJobExecutionTime(int).
Method in class JobManager
    Returns the execution time for the given job.
   	getJobId().
Method in class Task
   
   	getJobId(long).
Method in class TheSimulator
   
   	getJobType().
Method in class Job
   
   	getJobTypeId(int).
Method in class TheSimulator
   
   	getLocalId().
Method in class Task
    Returns the local task identifier for this object.
   	getManager().
Method in class Job
    Returns the manager of this job.
   	getMaxCommunicationTime().
Method in class Task
    Returns the maximum communication time.
   	getMaxCommunicationTime().
Method in class TaskStatistics
    Returns the maximum communication time.
   	getMaxIOTime().
Method in class Task
    Returns the maximum I/O time.
   	getMaxIOTime().
Method in class TaskStatistics
    Returns the maximum I/O time.
   	getMaxSynchronizationTime().
Method in class Task
    Returns the maximum synchronization time.
   	getMaxSynchronizationTime().
Method in class TaskStatistics
    Returns the maximum synchronization time.
   	getNeighbours().
Method in class Processor
   
   	getNeighbours(int).
Method in class Network
   return the neighbours of the processor
  
   	getNeighbours(int).
Method in class TheSimulator
    Returns the neighbours of a processor

 
   	getNetwork().
Method in class Simulator
   override this method to access the Network object

   	getNetwork().
Method in class TheSimulator
    Return the object Network.
   	getNumberOfIOOperations().
Method in class Task
    Returns the number of I/O operations performed by this task.
   	getNumberOfIOOperations().
Method in class TaskStatistics
    Returns the number of I/O operations performed by this task.
   	getNumberOfReceives().
Method in class Task
    Returns the number of messages received by this task.
   	getNumberOfReceives().
Method in class TaskStatistics
    Returns the number of messages received by this task.
   	getNumberOfSends().
Method in class Task
    Returns the number of messages sent by this task.
   	getNumberOfSends().
Method in class TaskStatistics
    Returns the number of messages sent by this task.
   	getNumberOfSynchronizations().
Method in class Task
    Returns the number of synchronization performed by this task.
   	getNumberOfSynchronizations().
Method in class TaskStatistics
    Returns the number of synchronization performed by this task.
   	getPeId().
Method in class Processor
   
   	getPeId().
Method in class ProcessorEvent
   
   	getPEId().
Method in class RunTaskEvent
    Returns the identifier for processing element to run task on.
   	getPEId().
Method in class Task
    Returns the identifier for the processing element that this
 object belongs to.
   	getPEId(long).
Method in class JobManager
    Returns the identifier for the processing element which the
 given task is located on.
   	getPEId(long).
Method in class TheSimulator
    Returns the id of the processor on which task with taskId resides

 
   	getPeriod().
Method in class ScheduleTaskEvent
   
   	getProcessor(int).
Method in class Network
   get the processor with the corresponding ID
 
   	getRandomProcessor().
Method in class Network
   
   	getReason().
Method in class PeIdleEvent
   
   	getReason().
Method in class SuspendedTaskEvent
    Returns the reason for suspension.
   	getSimulator().
Method in class Job
    Returns the simulator that this object belongs to.
   	getSimulator().
Method in class JobManager
    Returns the simulator.
   	getSpawningSize().
Method in class SpawnTaskEvent
    Returns the spawning size.
   	getSpinning().
Method in class Task
    Returns true if a task is spinning.
   	getSpinSync().
Method in class Task
    Returns if a task is spinning due to synchronization.
   	getState().
Method in class Task
    Returns the current state of this object.
   	getTask().
Method in class ScheduleTaskEvent
   
   	getTask(long).
Method in class Job
    Returns the sought task.
   	getTask(long).
Method in class JobManager
    Returns the sought task.
   	getTask(long).
Method in class TheSimulator
    Return the object task corresponding to a given id.
   	getTaskId().
Method in class TaskArrivalEvent
    Returns the global task identifier of arrived task.
   	getTaskId().
Method in class TaskEvent
    Returns the global task identifier of destination task.
   	getTaskSpinning().
Method in class Task
    Returns if the task is spinning or not.
   	getTaskStatistics(int).
Method in class JobManager
    Returns statistics for the given task.
   	getThroughput(int, int).
Method in class JobManager
    Returns the throughput.
   	getTime().
Method in class SimEvent
   
   	getTime().
Method in class Simulator
   
  
   	getTimeSlice().
Method in class RunTaskEvent
    Returns the length of the time slice.
   	getTimeToFirstScheduling().
Method in class Task
    Returns the time from task creation to first scheduling of this
 task.
   	getTimeToFirstScheduling().
Method in class TaskStatistics
    Returns the time from task creation to first scheduling of this
 task.
   	getTo().
Method in class SimEvent
   
   	getTotalCommunicationTime().
Method in class Task
    Returns the total Communication time.
   	getTotalIOTime().
Method in class Task
    Returns the total I/O time.
   	getTotalSynchronizationTime().
Method in class Task
    Returns the total Synchronization time.
   	getToTask().
Method in class SendEvent
   
   	getType().
Method in class Network
   Get the network type
  
   	globalClock.
Variable in class Simulator
   
   	GlobalClock(float).
Method in class GangScheduling
   
 Invoked when a receiving a global clock signal

 
   	GlobalClock(float).
Method in interface SchedulerInterface
   
 Invoked when a global clock is trasmited to all processors

 
   	GlobalClockEventGenerator(Network).
Constructor for class GlobalClockEventGenerator
   




 H 

 	handleEvent(ProcessorEvent).
Method in class Processor
   Takes care of events arriving from the Network

   	handleEvent(SimEvent).
Method in class JobManager
    Handles incoming events.
   	handleEvent(SimEvent).
Method in class Network
   Receives events from the simulator, implements the interface EventDestination
  
   	handleEvent(SimEvent).
Method in class Task
    Handles incoming events.
   	handleEvent(SimEvent).
Method in class TheSimulator
   
 Overrides handleEvent in Simulator.
   	hasCommonTasks(TaskSynchronization).
Method in class TaskSynchronization
    Tests if this monitor has any tasks in common with the
 given one.
   	hasEnded().
Method in class Job
    Tests if the job has ended.
   	HyperErlangDistribution(double, double, int, double).
Constructor for class HyperErlangDistribution
    Constructs a hypererlang probability distribution.




 I 

 	id.
Variable in class Processor
   
   	initializeGenerator(Simulator).
Method in interface EventGenerator
   When the EventGenerator is registered in the simulator the 
   initzializeGenerator(Simulator) method will be called

   	initializeGenerator(Simulator).
Method in class GlobalClockEventGenerator
   
   	initiateGlobalSynchronization(Task).
Method in class Job
    Initiates global synchronization.
   	initiateLocalSynchronization(Task).
Method in class Job
    Initiates local synchronization.
   	InternalTaskEvent(Task, float).
Constructor for class InternalTaskEvent
    Constructs an internal task event.
   	intSample().
Method in class ExponentialDistribution
    Returns an integer sample from this probability distribution.
   	intSample().
Method in class HyperErlangDistribution
    Returns an integer sample from this probability distribution.
   	intSample().
Method in class NormalDistribution
    Returns an integer sample from this probability distribution.
   	intSample().
Method in class ProbabilityDistribution
    Returns an integer sample from this probability distribution.
   	intSample().
Method in class UniformDistribution
    Returns an integer sample from this probability distribution.
   	intSample(float, float).
Static method in class UniformDistribution
    Returns an integer sample from this probability distribution.
   	involves(Task).
Method in class TaskSynchronization
    Tests if the given task is involved in this synchronization.
   	IO.
Static variable in class SuspendedTaskEvent
    Reason for suspension is I/O.
   	IOCompletionTime(float).
Method in class Processor
   Models contention in the disk associated with this processor 
	by serializing consecutive requests

 
   	isContainedWithin(int, int).
Method in class Job
    Specifies whether or not the execution of this job is
 completely contained within the given interval of time.
   	isIdle().
Method in class Processor
     
   	isMigration().
Method in class SendEvent
   
   	isNeighbour(Processor).
Method in class Processor
   




 J 

 	Job(JobManager, int, int, float, int, int, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, float, float, String).
Constructor for class Job
    Constructs a job.
   	JobArrival(float, int).
Method in class GangScheduling
   Invoked when a new job arrives

 
   	JobArrival(float, int).
Method in interface SchedulerInterface
   
 Invoked when a new job arrives

 
   	jobClass().
Method in class Job
    Returns the user-defined class of the job.
   	jobClass(int).
Method in class JobManager
    Returns the job class defined by the user.
   	jobClass(int).
Method in class TheSimulator
   
 Returns user defined job class

 
   	jobEnded(int).
Method in class JobManager
    Called by an ended job.
   	jobIdPart(long).
Static method in class Task
    Returns the global job identifier part of the given
 global task identifier.
   	JobManager(TheSimulator).
Constructor for class JobManager
    Constructs a job manager.
   	jobs().
Method in class JobManager
    Returns an array with global job identifiers for all jobs
 managed by this object.
   	jobs().
Method in class TheSimulator
   
 Returns an array with global job identifiers for all jobs managed by this object

 
   	jobsWithLeastTasks().
Method in class JobManager
    Returns an array with global job identifiers for jobs, managed
 by this object, with least number of tasks.
   	jobsWithLeastTasks().
Method in class TheSimulator
   
Returns an array with global job identifiers for jobs, managed by this object, with least number of tasks

 
   	jobsWithLeastTasks(int).
Method in class JobManager
    Returns an array with global job identifiers for jobs, managed
 by this object, with least number of tasks in the given state.
   	jobsWithLeastTasks(int).
Method in class TheSimulator
   
 Returns an array with global job identifiers for jobs, managed by this object, with least number of tasks in the given state

 
   	jobsWithMostTasks().
Method in class JobManager
    Returns an array with global job identifiers for jobs, managed
 by this object, with most number of tasks.
   	jobsWithMostTasks().
Method in class TheSimulator
   
 Returns an array with global job identifiers for jobs, managed by this object, with most number of tasks

 
   	jobsWithMostTasks(int).
Method in class JobManager
    Returns an array with global job identifiers for jobs, managed
 by this object, with most number of tasks in the given state.
   	jobsWithMostTasks(int).
Method in class TheSimulator
   
 Returns an array with global job identifiers for jobs, managed by this object, with most number of tasks in the given state

 
   	joinWith(TaskSynchronization).
Method in class TaskSynchronization
    Joins this monitor with the given one.





 L 

 	localIdPart(long).
Static method in class Task
    Returns the local task identifier part of the given
 global task identifier.




 M 

 	main(String[]).
Static method in class GangScheduling
   
   	makeId(int, int).
Static method in class Task
    Creates a global task identifier from a global job identifier
 and a local task identifier.
   	MIGRATING.
Static variable in class Task
    The migrating state.




 N 

 	Network().
Constructor for class Network
   Creates a new network, does not create any processors or connections, use other method for this

   	Network(TheSimulator, FileInputStream).
Constructor for class Network
   Creates a new network with the specified characteristics
  
   	NetworkEvent(Object, EventDestination, int).
Constructor for class NetworkEvent
   
   	newInstance(double[]).
Static method in class ExponentialDistribution
    Creates a new instance of this probability distribution.
   	newInstance(double[]).
Static method in class HyperErlangDistribution
    Creates a new instance of this probability distribution.
   	newInstance(double[]).
Static method in class NormalDistribution
    Creates a new instance of this probability distribution.
   	newInstance(double[]).
Static method in class ProbabilityDistribution
    Creates a new instance of this probability distribution.
   	newInstance(double[]).
Static method in class UniformDistribution
    Creates a new instance of this probability distribution.
   	NO_PROCESSOR.
Static variable in class Processor
   
   	NormalDistribution(float, float).
Constructor for class NormalDistribution
    Constructs a normal probability distribution.
   	nrIdleProcessors().
Method in class TheSimulator
   
 Return the number of idle processors in the current network

 
   	nrProcessors().
Method in class Network
   return the number of processors in this network
  
   	nrProcessors().
Method in class TheSimulator
   
 Return the number of processors in the current network

 
   	numberOfJobs().
Method in class JobManager
    Returns the number of jobs managed by this object.
   	numberOfJobs().
Method in class TheSimulator
   
 Returns the number of jobs managed by this object

 
   	numberOfLivingTasks().
Method in class Job
    Returns the number of living tasks contained by this object.
   	numberOfLivingTasks().
Method in class JobManager
    Returns the total number of living tasks, contained by jobs
 managed by this object.
   	numberOfTasks().
Method in class Job
    Returns the number of tasks contained by this object.
   	numberOfTasks().
Method in class JobManager
    Returns the total number of tasks, contained by jobs managed
 by this object.
   	numberOfTasks().
Method in class TheSimulator
   
 Returns the total number of tasks, contained by jobs managed by this object
 
 
   	numberOfTasks(int).
Method in class Job
    Returns the number of tasks in the given state, contained by
 this object.
   	numberOfTasks(int).
Method in class JobManager
    Returns the number of tasks in the given state, contained by
 jobs managed by this object.
   	numberOfTasks(int).
Method in class TheSimulator
   
 Returns the number of tasks in the given state, contained by jobs managed by this object

 
   	numberOfTasksInJob(int).
Method in class JobManager
    Returns the number of tasks contained by the given job.
   	numberOfTasksInJob(int).
Method in class TheSimulator
   
 Returns the number of tasks contained by the given job

 
   	numberOfTasksInJob(int, int).
Method in class JobManager
    Returns the number of tasks in the given state, contained by
 the given job.
   	numberOfTasksInJob(int, int).
Method in class TheSimulator
   
 Returns the number of tasks in the given state, contained by the given job

 
   	numberOfTasksInJobOnPE(int, int).
Method in class JobManager
    Returns the number of tasks on the given processing element,
 contained by the given job.
   	numberOfTasksInJobOnPE(int, int).
Method in class TheSimulator
    Returns the number of tasks on the given processing element, contained by the given job.
   	numberOfTasksInJobOnPE(int, int, int).
Method in class JobManager
    Returns the number of tasks on the given processing element
 in the given state, contained by the given job.
   	numberOfTasksInJobOnPE(int, int, int).
Method in class TheSimulator
    Returns the number of tasks on the given processing element
 in the given state, contained by the given job.
   	numberOfTasksOnPE(int).
Method in class Job
    Returns the number of tasks on the given processing element,
 contained by this object.
   	numberOfTasksOnPE(int).
Method in class JobManager
    Returns the number of task on the given processing element.
   	numberOfTasksOnPE(int, int).
Method in class Job
    Returns the number of tasks on the given processing element
 in the given state, contained by this object.
   	numberOfTasksOnPE(int, int).
Method in class JobManager
    Returns the number of task on the given processing element
 in the given state.
   	numberOfTasksSpinning().
Method in class Job
    Returns the number of tasks spinning, contained by
 this object.
   	numberOfTasksSpinSync().
Method in class Job
    Returns the number of tasks spinning due to synchronization, contained by
 this object.





 P 

 	PeIdle(float, int, int).
Method in class GangScheduling
    Invoked when a PE has become idle for some reason

 
   	PeIdle(float, int, int).
Method in interface SchedulerInterface
    Invoked when a PE has become idle for some reason

 
   	PeIdleEvent(Object, EventDestination, float, int, int).
Constructor for class PeIdleEvent
   
   	PreemptStatistics(int, float).
Method in class TheSimulator
   
   	PreemptTaskEvent(Task, float).
Constructor for class PreemptTaskEvent
    Constructs a preempt task event.
   	printStatistics().
Method in class TheSimulator
   
   	ProbabilityDistribution().
Constructor for class ProbabilityDistribution
   
   	processEvent(SimEvent).
Method in class Simulator
   override this method to see all events that pass through the simulator

   	processEvent(SimEvent).
Method in class TheSimulator
    Overrides method in Simulator.
   	Processor(int, Network, int, int, int, TheSimulator).
Constructor for class Processor
   Create a new processor with the specified characteristics
  
   	Processor(int, Network, int, int, int, TheSimulator, float, float, float).
Constructor for class Processor
   Create a new processor with the specified characteristics for a LogP network

 

   	ProcessorEvent(Object, EventDestination, float, int).
Constructor for class ProcessorEvent
   
   	pSeed.
Static variable in class ProbabilityDistribution
    Random number generator for internal use.




 Q 

 	queueElements().
Method in class Simulator
   




 R 

 	randomTask(Task).
Method in class Job
    Returns a randomly chosen task.
   	randomTasks(float, Task).
Method in class Job
    Returns an array of randomly chosen tasks.
   	rd.
Static variable in class HyperErlangDistribution
   
   	rd.
Static variable in class UniformDistribution
   
   	readConfigStream(FileInputStream).
Method in class Network
   Creates a network according to the supplied instream
 for a specification of the file format see configfile.spec

   	READY.
Static variable in class Task
    The ready state.
   	ReceiveEvent(SendEvent).
Constructor for class ReceiveEvent
   
   	regScheduler(SchedulerInterface).
Method in class TheSimulator
    Registers an instance of the Scheduler class in the simulator

 
   	removeEvent(SimEvent).
Method in class Network
   Removes an already existing event from the global simulation queue
  
   	removeEvent(SimEvent).
Method in class Simulator
   
   	removeEvents(Object).
Method in class Simulator
   
   	removeEventsToTask(long).
Method in class TheSimulator
   
   	RUNNING.
Static variable in class Task
    The running state.
   	RunTaskEvent(Object, EventDestination, float, long, int, float).
Constructor for class RunTaskEvent
    Constructs a run task event.




 S 

 	scheduleTask(int, long, float, float).
Method in class TheSimulator
    Schedules a task at a processor at a certain time

 
   	ScheduleTaskEvent(Object, EventDestination, float, int, long, float).
Constructor for class ScheduleTaskEvent
   
   	SendEvent(Object, EventDestination, float, int, long, int, long, int).
Constructor for class SendEvent
   
   	SendEvent(Object, EventDestination, float, int, long, int, long, int, boolean).
Constructor for class SendEvent
   
   	setFrom(Object).
Method in class SimEvent
   
   	setSeed(long).
Static method in class ProbabilityDistribution
    Sets the seed of the generator the the samples.
   	setStopTime(int).
Method in class Simulator
   
   	setTime(float).
Method in class SimEvent
   
   	setTo(EventDestination).
Method in class SimEvent
   
   	setType(int).
Method in class Network
   Set the network type
  
   	setType(int, int).
Method in class Network
   Set the network type
  
   	SimEvent(Object, EventDestination, float).
Constructor for class SimEvent
   
   	Simulator().
Constructor for class Simulator
   
   	size().
Method in class TaskSynchronization
    Returns the number of involved tasks.
   	SpawnTaskEvent(Task, float, int).
Constructor for class SpawnTaskEvent
    Constructs an spawn task event.
   	spinTime.
Variable in class Task
    Spin time of the task


   	start().
Method in class Simulator
   call this method to start the simulation

   	start().
Method in class TheSimulator
   
 Starts the simulation


   	StartIOTaskEvent(Task, float).
Constructor for class StartIOTaskEvent
    Constructs a start I/O task event.
   	stateOfTask(long).
Method in class TheSimulator
    Return the state of a task

 
   	stop().
Method in class Simulator
   override this method to perform some action when
  the simulation has stopped

   	stop().
Method in class TheSimulator
    Overrides stop method in Simulator.
   	SUSPENDED.
Static variable in class Task
    The suspended state.
   	SuspendedTaskEvent(Object, EventDestination, int, int, int).
Constructor for class SuspendedTaskEvent
    Constructs an suspended task event.
   	synchronizationRequested(Task).
Method in class Job
    Tests if a synchronization has been requested for the given
 task.
   	synchronize(Task).
Method in class Job
    Notifies this job that a tasks synchronizes.
   	synchronize(Task, Simulator).
Method in class TaskSynchronization
    Synchronizes the given task.
   	SYNCHRONIZING.
Static variable in class SuspendedTaskEvent
    Reason for suspension is synchronization.
   	SYNCHRONIZING.
Static variable in class Task
    The synchronizing state.
   	SYNCHRONOUS.
Static variable in class Network
   If the network is SYNCHRONOUS




 T 

 	TaskArrival(float, long).
Method in class GangScheduling
   
 Invoked when a new task arrives, only if the network is asynchronous

 
   	TaskArrival(float, long).
Method in interface SchedulerInterface
   
 Invoked when a new task arrives, only if the network is asynchronous

 
   	TaskArrivalEvent(Object, EventDestination, int, long).
Constructor for class TaskArrivalEvent
    Constructs a task arrival event.
   	taskEnded(Task, float).
Method in class Job
    Called by an ended task.
   	TaskEvent(Object, EventDestination, float, long).
Constructor for class TaskEvent
    Constructs a task event.
   	tasks().
Method in class Job
    Returns an array with global task identifiers for all tasks
 contained by this object.
   	tasks().
Method in class JobManager
    Returns an array with global task identifiers for tasks,
 contained by jobs managed by this object.
   	tasks().
Method in class TheSimulator
   
 Returns an array with global task identifiers for tasks, contained by jobs managed by this object.
   	tasks(int).
Method in class Job
    Returns an array with global task identifiers for all tasks
 in the given state, contained by this object.
   	tasks(int).
Method in class JobManager
    Returns an array with global task identifiers for tasks
 in the given state, contained by jobs managed by this object.
   	tasks(int).
Method in class TheSimulator
   
Returns an array with global task identifiers for tasks in the given state, contained by jobs managed by this object.
   	tasksInJob(int).
Method in class JobManager
    Returns an array with global task identifiers for tasks
 contained by the given job.
   	tasksInJob(int).
Method in class TheSimulator
   
 Returns an array with global task identifiers for tasks contained by the given job.
   	tasksInJob(int, int).
Method in class JobManager
    Returns an array with global task identifiers for tasks in
 the given state, contained by the given job.
   	tasksInJob(int, int).
Method in class TheSimulator
   
 Returns an array with global task identifiers for tasks in the given state contained by the given job.
   	tasksInJobOnPE(int, int).
Method in class JobManager
    Returns an array with global task identifiers for all tasks
 on the given processing element, contained by the given job.
   	tasksInJobOnPE(int, int).
Method in class TheSimulator
    Returns an array with global task identifiers for all tasks
 on the given processing element, contained by the given job.
   	tasksInJobOnPE(int, int, int).
Method in class JobManager
    Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by the given job.
   	tasksInJobOnPE(int, int, int).
Method in class TheSimulator
    Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by the given job.
   	tasksOnPE(int).
Method in class Job
    Returns an array with global task identifiers for all tasks
 on the given processing element, contained by this object.
   	tasksOnPE(int).
Method in class JobManager
    Returns an array with global task identifiers for all tasks
 on the given processing element, contained by jobs managed
 by this object.
   	tasksOnPE(int, int).
Method in class Job
    Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by this object.
   	tasksOnPE(int, int).
Method in class JobManager
    Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by jobs managed by this object.
   	TaskStateChange(float, long).
Method in class GangScheduling
   
 Invoked when a task has changed state

 
   	TaskStateChange(float, long).
Method in interface SchedulerInterface
   
 Invoked when a task has changed state

 
   	TaskStatistics(Task).
Constructor for class TaskStatistics
    Constructs a tasks statistics object.
   	TaskSynchronization(Task, Task[]).
Constructor for class TaskSynchronization
    Constructs a task synchronization monitor.
   	TheSimulator(String[]).
Constructor for class TheSimulator
   
 Constructor.
   	timeSlice.
Variable in class Simulator
   
   	toString().
Method in class CommTaskEvent
    Returns a string representation of this object.
   	toString().
Method in class EndIOTaskEvent
    Returns a string representation of this object.
   	toString().
Method in class EndOfSpinningEvent
    Returns a string representation of this object.
   	toString().
Method in class EndOfTimeSliceEvent
   
   	toString().
Method in class EndSyncTaskEvent
    Returns a string representation of this object.
   	toString().
Method in class EndTaskEvent
    Returns a string representation of this object.
   	toString().
Method in class Job
    Returns a string representation of this object.
   	toString().
Method in class PeIdleEvent
   
   	toString().
Method in class PreemptTaskEvent
    Returns a string representation of this object.
   	toString().
Method in class Processor
   
   	toString().
Method in class ReceiveEvent
   
   	toString().
Method in class RunTaskEvent
    Returns a string representation of this object.
   	toString().
Method in class ScheduleTaskEvent
   
   	toString().
Method in class SendEvent
   
   	toString().
Method in class SimEvent
   
   	toString().
Method in class SpawnTaskEvent
    Returns a string representation of this object.
   	toString().
Method in class StartIOTaskEvent
    Returns a string representation of this object.
   	toString().
Method in class SuspendedTaskEvent
    Returns a string representation of this object.
   	toString().
Method in class Task
    Returns a string representation of this object.
   	toString().
Method in class TaskSynchronization
    Returns a string representation of this object.
   	transmissionSize().
Method in class SendEvent
   




 U 

 	UniformDistribution(float).
Constructor for class UniformDistribution
    Constructs a uniform probability distribution that generates values
 within the interval [0, high] with uniform probability.
   	UniformDistribution(float, float).
Constructor for class UniformDistribution
    Constructs a uniform probability distribution that generates values
 within the interval [low, high] with uniform probability.
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/SimEvent.html
##-----------------TITLE------------------------##
Class SimEvent
##------------------TEXT------------------------##
Class SimEvent


java.lang.Object
   |
   +----SimEvent


 public class SimEvent
   extends Object

This class represents an event that can be processed by the Simulator. 
  Subclasses to this class include more event specific information




  

 
	SimEvent(Object, EventDestination, float)
   


  

 
	equals(Object)
   Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   
	getFrom()
   
   
	getTime()
   
   
	getTo()
   
   
	setFrom(Object)
   
   
	setTime(float)
   
   
	setTo(EventDestination)
   
   
	toString()
   



  



SimEvent

 public SimEvent(Object f,
                 EventDestination t,
                 float ti)



  


equals

 public boolean equals(Object o)

 Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   Overrides:
     equals in class Object
  

toString

 public String toString()

 Overrides:
     toString in class Object
  

getFrom

 public Object getFrom()


getTo

 public EventDestination getTo()


getTime

 public float getTime()


setTo

 public void setTo(EventDestination ed)


setTime

 public void setTime(float t)


setFrom

 public void setFrom(Object f)
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/Task.html
##-----------------TITLE------------------------##
Class Task
##------------------TEXT------------------------##
Class Task


java.lang.Object
   |
   +----Task


 public class Task
   extends Object
   implements EventDestination

Implements a task, which is part of a job. A unique number, called
 the global task identifier, is associated with each job.
 This identifier is composed of the identifier for the job that the
 task is part of, and a local task identifier which
 uniquely identifies a task within its job.

 See Also:
     JobManager, Job




  

 
	COMMUNICATING
    The communicating state.
   
	ENDED
    The ended state.
   
	MIGRATING
    The migrating state.
   
	READY
    The ready state.
   
	RUNNING
    The running state.
   
	spinTime
    Spin time of the task


   
	SUSPENDED
    The suspended state.
   
	SYNCHRONIZING
    The synchronizing state.


  

 
	getAverageCommunicationTime()
    Returns the average communication time.
   
	getAverageIOTime()
    Returns the average I/O time.
   
	getAverageSynchronizationTime()
    Returns the average synchronization time.
   
	getComputationTime()
    Returns the computation time of this task.
   
	getExecutionTime()
    Returns the total execution time for this task.
   
	getId()
    Returns the global task identifier for this object.
   
	getJob()
    Returns object Job associated with this task.
   
	getJobId()
   
   
	getLocalId()
    Returns the local task identifier for this object.
   
	getMaxCommunicationTime()
    Returns the maximum communication time.
   
	getMaxIOTime()
    Returns the maximum I/O time.
   
	getMaxSynchronizationTime()
    Returns the maximum synchronization time.
   
	getNumberOfIOOperations()
    Returns the number of I/O operations performed by this task.
   
	getNumberOfReceives()
    Returns the number of messages received by this task.
   
	getNumberOfSends()
    Returns the number of messages sent by this task.
   
	getNumberOfSynchronizations()
    Returns the number of synchronization performed by this task.
   
	getPEId()
    Returns the identifier for the processing element that this
 object belongs to.
   
	getSpinning()
    Returns true if a task is spinning.
   
	getSpinSync()
    Returns if a task is spinning due to synchronization.
   
	getState()
    Returns the current state of this object.
   
	getTaskSpinning()
    Returns if the task is spinning or not.
   
	getTimeToFirstScheduling()
    Returns the time from task creation to first scheduling of this
 task.
   
	getTotalCommunicationTime()
    Returns the total Communication time.
   
	getTotalIOTime()
    Returns the total I/O time.
   
	getTotalSynchronizationTime()
    Returns the total Synchronization time.
   
	handleEvent(SimEvent)
    Handles incoming events.
   
	jobIdPart(long)
    Returns the global job identifier part of the given
 global task identifier.
   
	localIdPart(long)
    Returns the local task identifier part of the given
 global task identifier.
   
	makeId(int, int)
    Creates a global task identifier from a global job identifier
 and a local task identifier.
   
	toString()
    Returns a string representation of this object.



  


READY

 public static final int READY

 The ready state.


RUNNING

 public static final int RUNNING

 The running state.


ENDED

 public static final int ENDED

 The ended state.


SUSPENDED

 public static final int SUSPENDED

 The suspended state.


SYNCHRONIZING

 public static final int SYNCHRONIZING

 The synchronizing state.


MIGRATING

 public static final int MIGRATING

 The migrating state.


COMMUNICATING

 public static final int COMMUNICATING

 The communicating state.


spinTime

 public float spinTime

 Spin time of the task



  


makeId

 public static long makeId(int jobId,
                           int localId)

 Creates a global task identifier from a global job identifier
 and a local task identifier.

   Parameters:
     jobId - a global job identifier.
     localId - a local task identifier.
     Returns:
     a global task identifier.
  

jobIdPart

 public static int jobIdPart(long taskId)

 Returns the global job identifier part of the given
 global task identifier.

   Parameters:
     taskId - a global task identifier.
     Returns:
     a global job identifier.
  

localIdPart

 public static int localIdPart(long taskId)

 Returns the local task identifier part of the given
 global task identifier.

   Parameters:
     taskId - a global task identifier.
     Returns:
     a local task identifier.
  

getId

 public long getId()

 Returns the global task identifier for this object.

   Returns:
     the global task identifier for this object.
  

getLocalId

 public int getLocalId()

 Returns the local task identifier for this object.

   Returns:
     the local task identifier for this object.
  

getState

 public int getState()

 Returns the current state of this object.

   Returns:
     the current state of this object.
  

getSpinning

 public boolean getSpinning()

 Returns true if a task is spinning.

   Returns:
     s true if a task is spinning.
  

getSpinSync

 public boolean getSpinSync()

 Returns if a task is spinning due to synchronization.

   Returns:
     s if a task is spinning due to synchronization.
  

getJobId

 public int getJobId()


getJob

 public Job getJob()

 Returns object Job associated with this task.

   Returns:
     s object Job associated with this task.
  

getPEId

 public int getPEId()

 Returns the identifier for the processing element that this
 object belongs to.

   Returns:
     the identifier for the processing element that this
 object belongs to.
  

getComputationTime

 public float getComputationTime()

 Returns the computation time of this task.

   Returns:
     the computation time of this task.
  

getNumberOfSends

 public int getNumberOfSends()

 Returns the number of messages sent by this task.

   Returns:
     the number of messages sent by this task.
  

getNumberOfReceives

 public int getNumberOfReceives()

 Returns the number of messages received by this task.

   Returns:
     the number of messages received by this task.
  

getAverageCommunicationTime

 public float getAverageCommunicationTime()

 Returns the average communication time.

   Returns:
     the average communication time.
  

getMaxCommunicationTime

 public float getMaxCommunicationTime()

 Returns the maximum communication time.

   Returns:
     the maximum communication time.
  

getNumberOfSynchronizations

 public int getNumberOfSynchronizations()

 Returns the number of synchronization performed by this task.

   Returns:
     the number of synchronization performed by this task.
  

getTaskSpinning

 public boolean getTaskSpinning()

 Returns if the task is spinning or not.

   Returns:
     if the task is spinning or not.
  

getAverageSynchronizationTime

 public float getAverageSynchronizationTime()

 Returns the average synchronization time.

   Returns:
     the average synchronization time.
  

getMaxSynchronizationTime

 public float getMaxSynchronizationTime()

 Returns the maximum synchronization time.

   Returns:
     the maximum synchronization time.
  

getNumberOfIOOperations

 public int getNumberOfIOOperations()

 Returns the number of I/O operations performed by this task.

   Returns:
     the number of I/O operations performed by this task.
  

getAverageIOTime

 public float getAverageIOTime()

 Returns the average I/O time.

   Returns:
     the average I/O time.
  

getMaxIOTime

 public float getMaxIOTime()

 Returns the maximum I/O time.

   Returns:
     the maximum I/O time.
  

getTotalSynchronizationTime

 public float getTotalSynchronizationTime()

 Returns the total Synchronization time.

   Returns:
     the total Synchronization time.
  

getTotalCommunicationTime

 public float getTotalCommunicationTime()

 Returns the total Communication time.

   Returns:
     the total Communication time.
  

getTotalIOTime

 public float getTotalIOTime()

 Returns the total I/O time.

   Returns:
     the total I/O time.
  

getTimeToFirstScheduling

 public float getTimeToFirstScheduling()

 Returns the time from task creation to first scheduling of this
 task.

   Returns:
     the time from task creation to first scheduling of this
 task.
  

getExecutionTime

 public float getExecutionTime()

 Returns the total execution time for this task.

   Returns:
     the total execution time for this task.
  

handleEvent

 public void handleEvent(SimEvent event)

 Handles incoming events.

   Parameters:
     event - incoming event.
  

toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class Object
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/Simulator.html
##-----------------TITLE------------------------##
Class Simulator
##------------------TEXT------------------------##
Class Simulator


java.lang.Object
   |
   +----Simulator


 public class Simulator
   extends Object

A generic simulation class.
  subclass this class to customize a simulator




  

 
	globalClock
   
   
	timeSlice
   


  

 
	Simulator()
   


  

 
	addEvent(SimEvent)
   insert a future event in the event queue

   
	addEventGenerator(EventGenerator)
   add a event generator to this simulator
 
   
	addRelativeEvent(SimEvent)
   insert a future event in the event queue
  the time specified in the event is relative to the global time

   
	getNetwork()
   override this method to access the Network object

   
	getTime()
   
  
   
	processEvent(SimEvent)
   override this method to see all events that pass through the simulator

   
	queueElements()
   
   
	removeEvent(SimEvent)
   
   
	removeEvents(Object)
   
   
	setStopTime(int)
   
   
	start()
   call this method to start the simulation

   
	stop()
   override this method to perform some action when
  the simulation has stopped




  


globalClock

 public float globalClock


timeSlice

 public float timeSlice



  



Simulator

 public Simulator()



  


addEventGenerator

 public void addEventGenerator(EventGenerator eg)

 add a event generator to this simulator

   Parameters:
     eg - the EventGenerator to add
     See Also:
     EventGenerator
  

addEvent

 public void addEvent(SimEvent e)

 insert a future event in the event queue



addRelativeEvent

 public void addRelativeEvent(SimEvent e)

 insert a future event in the event queue
  the time specified in the event is relative to the global time



removeEvent

 public SimEvent removeEvent(SimEvent e)


removeEvents

 public void removeEvents(Object o)


queueElements

 public Enumeration queueElements()


processEvent

 public void processEvent(SimEvent e)

 override this method to see all events that pass through the simulator



getNetwork

 public Network getNetwork()

 override this method to access the Network object



start

 public void start()

 call this method to start the simulation



stop

 public void stop()

 override this method to perform some action when
  the simulation has stopped



getTime

 public float getTime()

 Returns:
     the current global time
  

setStopTime

 public void setStopTime(int t)
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/SpawnTaskEvent.html
##-----------------TITLE------------------------##
Class SpawnTaskEvent
##------------------TEXT------------------------##
Class SpawnTaskEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskEvent
                   |
                   +----InternalTaskEvent
                           |
                           +----SpawnTaskEvent


 public class SpawnTaskEvent
   extends InternalTaskEvent

A spawn task event.

 See Also:
     Task




  

 
	SpawnTaskEvent(Task, float, int)
    Constructs an spawn task event.


  

 
	getSpawningSize()
    Returns the spawning size.
   
	toString()
    Returns a string representation of this object.



  



SpawnTaskEvent

 public SpawnTaskEvent(Task task,
                       float elapsedTime,
                       int spawnSize)

 Constructs an spawn task event.

   Parameters:
     task - responsible task.
     time - time stamp.
     spawnSize - size of spawning.
  


  


getSpawningSize

 public int getSpawningSize()

 Returns the spawning size.

   Returns:
     the spawning size.
  

toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/EndTaskEvent.html
##-----------------TITLE------------------------##
Class EndTaskEvent
##------------------TEXT------------------------##
Class EndTaskEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskEvent
                   |
                   +----InternalTaskEvent
                           |
                           +----EndTaskEvent


 public class EndTaskEvent
   extends InternalTaskEvent

An end task event.

 See Also:
     Task




  

 
	EndTaskEvent(Task, float)
    Constructs an end task event.


  

 
	toString()
    Returns a string representation of this object.



  



EndTaskEvent

 public EndTaskEvent(Task task,
                     float time)

 Constructs an end task event.

   Parameters:
     task - responsible task.
     time - time stamp.
  


  


toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/HyperErlangDistribution.html
##-----------------TITLE------------------------##
Class HyperErlangDistribution
##------------------TEXT------------------------##
Class HyperErlangDistribution


java.lang.Object
   |
   +----ProbabilityDistribution
           |
           +----HyperErlangDistribution


 public final class HyperErlangDistribution
   extends ProbabilityDistribution




  

 
	rd
   


  

 
	HyperErlangDistribution(double, double, int, double)
    Constructs a hypererlang probability distribution.


  

 
	floatSample()
    Returns a float sample from this probability distribution.
   
	intSample()
    Returns an integer sample from this probability distribution.
   
	newInstance(double[])
    Creates a new instance of this probability distribution.



  


rd

 protected static Random rd



  



HyperErlangDistribution

 public HyperErlangDistribution(double lambda1,
                                double lambda2,
                                int order,
                                double p1)

 Constructs a hypererlang probability distribution.

   Parameters:
     mean - mean value.
     low - lower bound.
  


  


newInstance

 public static ProbabilityDistribution newInstance(double params[])

 Creates a new instance of this probability distribution.

   Parameters:
     params - array of parameters.
     Returns:
     a new instance of this probability distribution.
  

floatSample

 public float floatSample()

 Returns a float sample from this probability distribution.

   Returns:
     a float sample from this probability distribution.
     Overrides:
     floatSample in class ProbabilityDistribution
  

intSample

 public int intSample()

 Returns an integer sample from this probability distribution.

   Returns:
     an integer sample from this probability distribution.
     Overrides:
     intSample in class ProbabilityDistribution
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/StartIOTaskEvent.html
##-----------------TITLE------------------------##
Class StartIOTaskEvent
##------------------TEXT------------------------##
Class StartIOTaskEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskEvent
                   |
                   +----InternalTaskEvent
                           |
                           +----StartIOTaskEvent


 public class StartIOTaskEvent
   extends InternalTaskEvent

A start of I/O task event.

 See Also:
     Task




  

 
	StartIOTaskEvent(Task, float)
    Constructs a start I/O task event.


  

 
	toString()
    Returns a string representation of this object.



  



StartIOTaskEvent

 public StartIOTaskEvent(Task task,
                         float time)

 Constructs a start I/O task event.

   Parameters:
     task - responsible task.
     time - time stamp.
  


  


toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/UniformDistribution.html
##-----------------TITLE------------------------##
Class UniformDistribution
##------------------TEXT------------------------##
Class UniformDistribution


java.lang.Object
   |
   +----ProbabilityDistribution
           |
           +----UniformDistribution


 public final class UniformDistribution
   extends ProbabilityDistribution




  

 
	rd
   


  

 
	UniformDistribution(float)
    Constructs a uniform probability distribution that generates values
 within the interval [0, high] with uniform probability.
   
	UniformDistribution(float, float)
    Constructs a uniform probability distribution that generates values
 within the interval [low, high] with uniform probability.


  

 
	floatSample()
    Returns a float sample from this probability distribution.
   
	floatSample(float, float)
    Returns a float sample from this probability distribution.
   
	intSample()
    Returns an integer sample from this probability distribution.
   
	intSample(float, float)
    Returns an integer sample from this probability distribution.
   
	newInstance(double[])
    Creates a new instance of this probability distribution.



  


rd

 protected static Random rd



  



UniformDistribution

 public UniformDistribution(float low,
                            float high)

 Constructs a uniform probability distribution that generates values
 within the interval [low, high] with uniform probability.

   Parameters:
     low - lower bound of distribution interval.
     high - upper bound of distribution interval.
  

UniformDistribution

 public UniformDistribution(float high)

 Constructs a uniform probability distribution that generates values
 within the interval [0, high] with uniform probability.

   Parameters:
     high - upper bound of distribution interval.
  


  


newInstance

 public static ProbabilityDistribution newInstance(double params[])

 Creates a new instance of this probability distribution.

   Parameters:
     params - array of parameters.
     Returns:
     a new instance of this probability distribution.
  

intSample

 public static int intSample(float low,
                             float high)

 Returns an integer sample from this probability distribution.

   Parameters:
     low - lower bound of distribution interval (inclusive).
     high - upper bound of distribution interval (inclusive).
     Returns:
     an integer sample from this probability distribution.
  

floatSample

 public static float floatSample(float low,
                                 float high)

 Returns a float sample from this probability distribution.

   Parameters:
     low - lower bound of distribution interval (inclusive).
     high - upper bound of distribution interval (exclusive).
     Returns:
     a float sample from this probability distribution.
  

intSample

 public int intSample()

 Returns an integer sample from this probability distribution.

   Returns:
     an integer sample from this probability distribution.
     Overrides:
     intSample in class ProbabilityDistribution
  

floatSample

 public float floatSample()

 Returns a float sample from this probability distribution.

   Returns:
     a float sample from this probability distribution.
     Overrides:
     floatSample in class ProbabilityDistribution
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/EndSyncTaskEvent.html
##-----------------TITLE------------------------##
Class EndSyncTaskEvent
##------------------TEXT------------------------##
Class EndSyncTaskEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskEvent
                   |
                   +----InternalTaskEvent
                           |
                           +----EndSyncTaskEvent


 public class EndSyncTaskEvent
   extends InternalTaskEvent

An end of synchronization task event.

 See Also:
     Task




  

 
	EndSyncTaskEvent(Task, int)
    Constructs an end synchronization task event.


  

 
	toString()
    Returns a string representation of this object.



  



EndSyncTaskEvent

 public EndSyncTaskEvent(Task task,
                         int time)

 Constructs an end synchronization task event.

   Parameters:
     task - a task.
     time - time stamp.
  


  


toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/TaskEvent.html
##-----------------TITLE------------------------##
Class TaskEvent
##------------------TEXT------------------------##
Class TaskEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskEvent


 public class TaskEvent
   extends SimEvent

A task event.

 See Also:
     Task




  

 
	TaskEvent(Object, EventDestination, float, long)
    Constructs a task event.


  

 
	equals(Object)
   Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   
	getTaskId()
    Returns the global task identifier of destination task.



  



TaskEvent

 public TaskEvent(Object from,
                  EventDestination to,
                  float time,
                  long taskId)

 Constructs a task event.

   Parameters:
     from - sender of event.
     to - receiver of event.
     time - time stamp.
     taskId - global task identifier of destination task.
  


  


getTaskId

 public long getTaskId()

 Returns the global task identifier of destination task.

   Returns:
     the global task identifier of destination task.
  

equals

 public boolean equals(Object o)

 Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   Overrides:
     equals in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/SchedulerInterface.html
##-----------------TITLE------------------------##
Interface SchedulerInterface
##------------------TEXT------------------------##
Interface SchedulerInterface

 public interface interface SchedulerInterface

Interface that the scheduler must implement in
 order to receive information from the simulator.




  

 
	EndOfTimeSlice(float, int)
    Invoked when a timeslice has expired on a PE.
   
	GlobalClock(float)
   
 Invoked when a global clock is trasmited to all processors

 
   
	JobArrival(float, int)
   
 Invoked when a new job arrives

 
   
	PeIdle(float, int, int)
    Invoked when a PE has become idle for some reason

 
   
	TaskArrival(float, long)
   
 Invoked when a new task arrives, only if the network is asynchronous

 
   
	TaskStateChange(float, long)
   
 Invoked when a task has changed state

 



  


PeIdle

 public abstract void PeIdle(float time,
                             int PeId,
                             int reason)

 Invoked when a PE has become idle for some reason

   Parameters:
     time - Time when the PE became idle
     PeId - The id of the PE that became idle
     reason - Why the PE became idle. Not implemented.
  

EndOfTimeSlice

 public abstract void EndOfTimeSlice(float time,
                                     int PeId)

 Invoked when a timeslice has expired on a PE.

   Parameters:
     time - Time when the timeslice expired
     PeId - The id of the PE at which the timeslice has expired
  

TaskArrival

 public abstract void TaskArrival(float time,
                                  long taskID)

 Invoked when a new task arrives, only if the network is asynchronous

   Parameters:
     time - Time when the task arrived
     task - ID of the task that arrived
  

GlobalClock

 public abstract void GlobalClock(float time)

 Invoked when a global clock is trasmited to all processors

   Parameters:
     time - Time of the global clock
  

JobArrival

 public abstract void JobArrival(float time,
                                 int jobID)

 Invoked when a new job arrives

   Parameters:
     time - Time when the job arrived
     jobID - ID of the job that arrived
  

TaskStateChange

 public abstract void TaskStateChange(float time,
                                      long taskID)

 Invoked when a task has changed state

   Parameters:
     time - Time when the change of state occured
     task - ID of the task that changed state
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/ProbabilityDistribution.html
##-----------------TITLE------------------------##
Class ProbabilityDistribution
##------------------TEXT------------------------##
Class ProbabilityDistribution


java.lang.Object
   |
   +----ProbabilityDistribution


 public abstract class ProbabilityDistribution
   extends Object

Generic probability distribution.




  

 
	pSeed
    Random number generator for internal use.


  

 
	ProbabilityDistribution()
   


  

 
	floatSample()
    Returns a float sample from this probability distribution.
   
	intSample()
    Returns an integer sample from this probability distribution.
   
	newInstance(double[])
    Creates a new instance of this probability distribution.
   
	setSeed(long)
    Sets the seed of the generator the the samples.



  


pSeed

 public static long pSeed

 Random number generator for internal use.



  



ProbabilityDistribution

 public ProbabilityDistribution()



  


newInstance

 public static ProbabilityDistribution newInstance(double params[])

 Creates a new instance of this probability distribution.

   Parameters:
     params - array of parameters.
     Returns:
     a new instance of this probability distribution.
  

setSeed

 public static void setSeed(long seed)

 Sets the seed of the generator the the samples.

   Parameters:
     seed - new seed.
  

intSample

 public abstract int intSample()

 Returns an integer sample from this probability distribution.

   Returns:
     an integer sample from this probability distribution.
  

floatSample

 public abstract float floatSample()

 Returns a float sample from this probability distribution.

   Returns:
     a float sample from this probability distribution.
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/Job.html
##-----------------TITLE------------------------##
Class Job
##------------------TEXT------------------------##
Class Job


java.lang.Object
   |
   +----Job


 public class Job
   extends Object

Implements a job. A unique number, called the global job
 identifier, is associated with each job.

 See Also:
     JobManager, Task




  

 
	Job(JobManager, int, int, float, int, int, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, float, float, String)
    Constructs a job.


  

 
	generateTask(float, int, float)
    Generates a task and adds it to this job.
   
	generateTasks(int, float, int, float)
    Generates the given number of tasks and adds them to this job.
   
	getExecutionTime()
    Returns the total execution time of the job.
   
	getId()
    Returns the global job identifier for this object.
   
	getJobType()
   
   
	getManager()
    Returns the manager of this job.
   
	getSimulator()
    Returns the simulator that this object belongs to.
   
	getTask(long)
    Returns the sought task.
   
	hasEnded()
    Tests if the job has ended.
   
	initiateGlobalSynchronization(Task)
    Initiates global synchronization.
   
	initiateLocalSynchronization(Task)
    Initiates local synchronization.
   
	isContainedWithin(int, int)
    Specifies whether or not the execution of this job is
 completely contained within the given interval of time.
   
	jobClass()
    Returns the user-defined class of the job.
   
	numberOfLivingTasks()
    Returns the number of living tasks contained by this object.
   
	numberOfTasks()
    Returns the number of tasks contained by this object.
   
	numberOfTasks(int)
    Returns the number of tasks in the given state, contained by
 this object.
   
	numberOfTasksOnPE(int)
    Returns the number of tasks on the given processing element,
 contained by this object.
   
	numberOfTasksOnPE(int, int)
    Returns the number of tasks on the given processing element
 in the given state, contained by this object.
   
	numberOfTasksSpinning()
    Returns the number of tasks spinning, contained by
 this object.
   
	numberOfTasksSpinSync()
    Returns the number of tasks spinning due to synchronization, contained by
 this object.
   
	randomTask(Task)
    Returns a randomly chosen task.
   
	randomTasks(float, Task)
    Returns an array of randomly chosen tasks.
   
	synchronizationRequested(Task)
    Tests if a synchronization has been requested for the given
 task.
   
	synchronize(Task)
    Notifies this job that a tasks synchronizes.
   
	taskEnded(Task, float)
    Called by an ended task.
   
	tasks()
    Returns an array with global task identifiers for all tasks
 contained by this object.
   
	tasks(int)
    Returns an array with global task identifiers for all tasks
 in the given state, contained by this object.
   
	tasksOnPE(int)
    Returns an array with global task identifiers for all tasks
 on the given processing element, contained by this object.
   
	tasksOnPE(int, int)
    Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by this object.
   
	toString()
    Returns a string representation of this object.



  



Job

 public Job(JobManager manager,
            int id,
            int numberOfTasks,
            float startTime,
            int peId,
            int jobTypeId,
            ProbabilityDistribution endDist,
            ProbabilityDistribution spawnDist,
            ProbabilityDistribution spawnSizeDist,
            ProbabilityDistribution ioDist,
            ProbabilityDistribution ioDurationDist,
            ProbabilityDistribution commDist,
            ProbabilityDistribution laxityDist,
            float syncProb,
            float globalSyncProb,
            String jClass)

 Constructs a job.

   Parameters:
     manager - manager for this job.
     id - global job identifier.
     numberOfTasks - initial number of tasks.
     startTime - start time of job.
     peId - processing element identifier.
     endDist - end task distribution.
     spawnDist - task spawning distribution.
     spawnSizeDist - distribution for task spawning size.
     ioDist - task I/O distribution.
     ioDurationDist - task I/O duration distribution.
     commDist - task communication distribution.
     syncProb - probability for communication being
 synchronization.
     laxityDist - deadline laxity distribution
     globalSyncProb - probability for synchronization being
 global.
  


  


getManager

 protected JobManager getManager()

 Returns the manager of this job.

   Returns:
     the manager of this job.
  

getSimulator

 protected TheSimulator getSimulator()

 Returns the simulator that this object belongs to.

   Returns:
     the simulator that this object belongs to.
  

getId

 public int getId()

 Returns the global job identifier for this object.

   Returns:
     the global job identifier for this object.
  

numberOfTasks

 public int numberOfTasks()

 Returns the number of tasks contained by this object.

   Returns:
     the number of tasks contained by this object.
     See Also:
     Task
  

numberOfLivingTasks

 public int numberOfLivingTasks()

 Returns the number of living tasks contained by this object.

   Returns:
     the number of living tasks contained by this object.
     See Also:
     Task
  

numberOfTasks

 public int numberOfTasks(int taskState)

 Returns the number of tasks in the given state, contained by
 this object.

   Parameters:
     state - a task state.
     Returns:
     the number of tasks in the given state, contained by
 this object.
     See Also:
     Task
  

numberOfTasksSpinning

 public int numberOfTasksSpinning()

 Returns the number of tasks spinning, contained by
 this object.

   Returns:
     the number of tasks spinning, contained by
 this object.
     See Also:
     Task
  

numberOfTasksSpinSync

 public int numberOfTasksSpinSync()

 Returns the number of tasks spinning due to synchronization, contained by
 this object.

   Returns:
     the number of tasks spinning due to synchronization, contained by
 this object.
     See Also:
     Task
  

numberOfTasksOnPE

 public int numberOfTasksOnPE(int peId)

 Returns the number of tasks on the given processing element,
 contained by this object.

   Parameters:
     peId - a processing element identifier.
     Returns:
     the number of tasks on the given proecssing element,
 contained by this object.
     See Also:
     Task
  

numberOfTasksOnPE

 public int numberOfTasksOnPE(int peId,
                              int taskState)

 Returns the number of tasks on the given processing element
 in the given state, contained by this object.

   Parameters:
     peId - a processing element identifier.
     taskState - a task state.
     Returns:
     the number of tasks on the given proecssing element,
 contained by this object.
     See Also:
     Task
  

tasks

 public long[] tasks()

 Returns an array with global task identifiers for all tasks
 contained by this object.

   Returns:
     an array with global task identifiers for all tasks
 contained by this object.
     See Also:
     Task
  

tasks

 public long[] tasks(int taskState)

 Returns an array with global task identifiers for all tasks
 in the given state, contained by this object.

   Parameters:
     taskState - a task state.
     Returns:
     an array with global task identifiers for all tasks
 in the given state, contained by this object.
     See Also:
     Task
  

tasksOnPE

 public long[] tasksOnPE(int peId)

 Returns an array with global task identifiers for all tasks
 on the given processing element, contained by this object.

   Parameters:
     peId - a processing element identifier.
     Returns:
     an array with global task identifiers for all tasks
 on the given processing element, contained by this object.
     See Also:
     Task
  

tasksOnPE

 public long[] tasksOnPE(int peId,
                         int taskState)

 Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by this object.

   Parameters:
     peId - a processing element identifier.
     Returns:
     an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by this object.
     See Also:
     Task
  

generateTask

 public void generateTask(float time,
                          int peId,
                          float endTimeJob)

 Generates a task and adds it to this job.

   Parameters:
     time - global time.
     peId - identifier for processing element to put task in.
  

generateTasks

 public void generateTasks(int n,
                           float time,
                           int peId,
                           float endTimeJob)

 Generates the given number of tasks and adds them to this job.

   Parameters:
     n - number of tasks.
     time - global time.
     peId - identifier for processing element to put tasks in.
  

getTask

 protected Task getTask(long taskId)

 Returns the sought task.

   Parameters:
     taskId - global task identifier for sought task.
     Returns:
     the sought task.
  

randomTasks

 protected Task[] randomTasks(float fract,
                              Task excluded)

 Returns an array of randomly chosen tasks.

   Parameters:
     fract - fraction of living tasks to choose.
     excluded - task to exclude from selection.
     Returns:
     an array of randomly chosen tasks.
  

randomTask

 protected Task randomTask(Task excluded)

 Returns a randomly chosen task.

   Parameters:
     excluded - task to exclude from selection.
     Returns:
     a randomly chosen task.
  

taskEnded

 protected void taskEnded(Task task,
                          float taskEndTime)

 Called by an ended task.

   Parameters:
     task - ended task.
     taskEndTime - time when task ended.
  

hasEnded

 public boolean hasEnded()

 Tests if the job has ended.

   Returns:
     true if there are no living tasks left in
 this job; false otherwise.
  

getExecutionTime

 public float getExecutionTime()

 Returns the total execution time of the job.

   Returns:
     the total execution time of the job.
  

getJobType

 public int getJobType()


jobClass

 public String jobClass()

 Returns the user-defined class of the job.

   Returns:
     the user-defined class of the job.
  

isContainedWithin

 protected boolean isContainedWithin(int start,
                                     int end)

 Specifies whether or not the execution of this job is
 completely contained within the given interval of time.

   Parameters:
     start - start of time interval.
     end - end of time interval.
     Returns:
     true if the execution of this job is
 completely contained within the given interval of time;
 false otherwise.
  

toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class Object
  

synchronizationRequested

 protected boolean synchronizationRequested(Task task)

 Tests if a synchronization has been requested for the given
 task.

   Parameters:
     task - a task.
     Returns:
     true if the given task is expected to
 synchronize; false otherwise.
  

synchronize

 protected void synchronize(Task task)

 Notifies this job that a tasks synchronizes.

   Parameters:
     task - synchronizing task.
  

initiateGlobalSynchronization

 protected boolean initiateGlobalSynchronization(Task task)

 Initiates global synchronization.

   Parameters:
     task - initiating task.
     Returns:
     true if synchronization could be
 initiated; false otherwise.
  

initiateLocalSynchronization

 protected boolean initiateLocalSynchronization(Task task)

 Initiates local synchronization.

   Parameters:
     task - initiating task.
     Returns:
     true if synchronization could be
 initiated; false otherwise.
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/Processor.html
##-----------------TITLE------------------------##
Class Processor
##------------------TEXT------------------------##
Class Processor


java.lang.Object
   |
   +----Processor


 public class Processor
   extends Object

Represents a processor in the Network

 See Also:
     Network




  

 
	id
   
   
	NO_PROCESSOR
   


  

 
	Processor(int, Network, int, int, int, TheSimulator)
   Create a new processor with the specified characteristics
  
   
	Processor(int, Network, int, int, int, TheSimulator, float, float, float)
   Create a new processor with the specified characteristics for a LogP network

 



  

 
	addNeighbour(Processor, int)
   Add a new neighbour to this processor
  
   
	addOneWayNeighbour(Processor, int)
   
   
	getNeighbours()
   
   
	getPeId()
   
   
	handleEvent(ProcessorEvent)
   Takes care of events arriving from the Network

   
	IOCompletionTime(float)
   Models contention in the disk associated with this processor 
	by serializing consecutive requests

 
   
	isIdle()
     
   
	isNeighbour(Processor)
   
   
	toString()
   



  


NO_PROCESSOR

 public static final int NO_PROCESSOR


id

 public int id



  



Processor

 public Processor(int i,
                  Network n,
                  int s,
                  int bs,
                  int tsl,
                  TheSimulator sim)

 Create a new processor with the specified characteristics

   Parameters:
     i - The processor id
     n - The newtwork to which the processor belongs
     bs - The size of the processors communication buffer
     s - The speed of this processor in some unit
  

Processor

 public Processor(int i,
                  Network n,
                  int s,
                  int bs,
                  int tsl,
                  TheSimulator sim,
                  float _L,
                  float _o,
                  float _g)

 Create a new processor with the specified characteristics for a LogP network




  


toString

 public String toString()

 Overrides:
     toString in class Object
  

getPeId

 public int getPeId()


getNeighbours

 public int[] getNeighbours()


IOCompletionTime

 public float IOCompletionTime(float dt)

 Models contention in the disk associated with this processor 
	by serializing consecutive requests

   Parameters:
     dt - - Duration of current request
     See Also:
     Task
  

handleEvent

 public void handleEvent(ProcessorEvent pe)

 Takes care of events arriving from the Network



addNeighbour

 public void addNeighbour(Processor p,
                          int speed)

 Add a new neighbour to this processor

   Parameters:
     p - the new neighbour
     speed - the speed of the communication link between the two processors
  

addOneWayNeighbour

 public void addOneWayNeighbour(Processor p,
                                int speed)


isNeighbour

 public boolean isNeighbour(Processor p)

 Returns:
     Wheter processor p is a neighbour of this processor
  

isIdle

 public boolean isIdle()

 Returns:
     Wheter this processor is currently running a task
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/ReceiveEvent.html
##-----------------TITLE------------------------##
Class ReceiveEvent
##------------------TEXT------------------------##
Class ReceiveEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskEvent
                   |
                   +----ReceiveEvent


 public class ReceiveEvent
   extends TaskEvent

This class represents an event that is issued every time a processor gets a message from
  another task




  

 
	ReceiveEvent(SendEvent)
   


  

 
	getFromTask()
   
   
	toString()
   



  



ReceiveEvent

 public ReceiveEvent(SendEvent e)



  


getFromTask

 public long getFromTask()


toString

 public String toString()

 Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/EndOfTimeSliceEvent.html
##-----------------TITLE------------------------##
Class EndOfTimeSliceEvent
##------------------TEXT------------------------##
Class EndOfTimeSliceEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----ProcessorEvent
                   |
                   +----EndOfTimeSliceEvent


 public class EndOfTimeSliceEvent
   extends ProcessorEvent

Event that signals that a timeslice has expired on a processor

 See Also:
     Processor




  

 
	EndOfTimeSliceEvent(Object, EventDestination, float, int)
   


  

 
	toString()
   



  



EndOfTimeSliceEvent

 public EndOfTimeSliceEvent(Object f,
                            EventDestination t,
                            float ti,
                            int pe)



  


toString

 public String toString()

 Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/TheSimulator.html
##-----------------TITLE------------------------##
Class TheSimulator
##------------------TEXT------------------------##
Class TheSimulator


java.lang.Object
   |
   +----Simulator
           |
           +----TheSimulator


 public class TheSimulator
   extends Simulator
   implements EventDestination

A subclass of Simulator

 See Also:
     Simulator




  

 
	TheSimulator(String[])
   
 Constructor.


  

 
	allIdleProcessors()
   
 Return an array with id's for the currently idle processors

 
   
	callJobArrival(float, int)
    Calls the SchedulerInterface routine JobArrival in the scheduler

 
   
	callTaskStateChange(float, long)
    Calls the SchedulerInterface routine TaskStateChange in the scheduler

 
   
	getJobId(long)
   
   
	getJobTypeId(int)
   
   
	getNeighbours(int)
    Returns the neighbours of a processor

 
   
	getNetwork()
    Return the object Network.
   
	getPEId(long)
    Returns the id of the processor on which task with taskId resides

 
   
	getTask(long)
    Return the object task corresponding to a given id.
   
	handleEvent(SimEvent)
   
 Overrides handleEvent in Simulator.
   
	jobClass(int)
   
 Returns user defined job class

 
   
	jobs()
   
 Returns an array with global job identifiers for all jobs managed by this object

 
   
	jobsWithLeastTasks()
   
Returns an array with global job identifiers for jobs, managed by this object, with least number of tasks

 
   
	jobsWithLeastTasks(int)
   
 Returns an array with global job identifiers for jobs, managed by this object, with least number of tasks in the given state

 
   
	jobsWithMostTasks()
   
 Returns an array with global job identifiers for jobs, managed by this object, with most number of tasks

 
   
	jobsWithMostTasks(int)
   
 Returns an array with global job identifiers for jobs, managed by this object, with most number of tasks in the given state

 
   
	nrIdleProcessors()
   
 Return the number of idle processors in the current network

 
   
	nrProcessors()
   
 Return the number of processors in the current network

 
   
	numberOfJobs()
   
 Returns the number of jobs managed by this object

 
   
	numberOfTasks()
   
 Returns the total number of tasks, contained by jobs managed by this object
 
 
   
	numberOfTasks(int)
   
 Returns the number of tasks in the given state, contained by jobs managed by this object

 
   
	numberOfTasksInJob(int)
   
 Returns the number of tasks contained by the given job

 
   
	numberOfTasksInJob(int, int)
   
 Returns the number of tasks in the given state, contained by the given job

 
   
	numberOfTasksInJobOnPE(int, int)
    Returns the number of tasks on the given processing element, contained by the given job.
   
	numberOfTasksInJobOnPE(int, int, int)
    Returns the number of tasks on the given processing element
 in the given state, contained by the given job.
   
	PreemptStatistics(int, float)
   
   
	printStatistics()
   
   
	processEvent(SimEvent)
    Overrides method in Simulator.
   
	regScheduler(SchedulerInterface)
    Registers an instance of the Scheduler class in the simulator

 
   
	removeEventsToTask(long)
   
   
	scheduleTask(int, long, float, float)
    Schedules a task at a processor at a certain time

 
   
	start()
   
 Starts the simulation


   
	stateOfTask(long)
    Return the state of a task

 
   
	stop()
    Overrides stop method in Simulator.
   
	tasks()
   
 Returns an array with global task identifiers for tasks, contained by jobs managed by this object.
   
	tasks(int)
   
Returns an array with global task identifiers for tasks in the given state, contained by jobs managed by this object.
   
	tasksInJob(int)
   
 Returns an array with global task identifiers for tasks contained by the given job.
   
	tasksInJob(int, int)
   
 Returns an array with global task identifiers for tasks in the given state contained by the given job.
   
	tasksInJobOnPE(int, int)
    Returns an array with global task identifiers for all tasks
 on the given processing element, contained by the given job.
   
	tasksInJobOnPE(int, int, int)
    Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by the given job.



  



TheSimulator

 public TheSimulator(String args[])

 Constructor.

   Parameters:
     arguments - Runtime arguments supplied
     See Also:
     Network, Job1
  


  


regScheduler

 public void regScheduler(SchedulerInterface sched)

 Registers an instance of the Scheduler class in the simulator

   Parameters:
     sched - An instance of the Scheduler class
     See Also:
     Scheduler
  

start

 public void start()

 Starts the simulation

   Overrides:
     start in class Simulator
  

stop

 public void stop()

 Overrides stop method in Simulator. Called when the simulation has ended i.e no
 more events to process

   Overrides:
     stop in class Simulator
     See Also:
     Simulator
  

printStatistics

 public void printStatistics()


processEvent

 public void processEvent(SimEvent e)

 Overrides method in Simulator. Forwards End Of Timeslice events to the registered
 scheduler by calling EndOfTimeSlice method in the Scheduler class. Also prints out
 event information using the event's toString-method.

   Parameters:
     e - An instance of the SimEvent class
     Overrides:
     processEvent in class Simulator
     See Also:
     SimEvent, Scheduler
  

PreemptStatistics

 public void PreemptStatistics(int PeId,
                               float time)


handleEvent

 public void handleEvent(SimEvent e)

 Overrides handleEvent in Simulator.

   Parameters:
     e - An instance of SimEvent
     See Also:
     Simulator, SimEvent
  

removeEventsToTask

 protected void removeEventsToTask(long taskId)


scheduleTask

 public void scheduleTask(int PeId,
                          long taskId,
                          float time,
                          float period)

 Schedules a task at a processor at a certain time

   Parameters:
     PeId - Processor ID
     taskId - Task ID
     time - Time to schedule task
  

numberOfJobs

 public int numberOfJobs()

 Returns the number of jobs managed by this object

   Returns:
     the number of jobs managed by this object
  

numberOfTasks

 public int numberOfTasks()

 Returns the total number of tasks, contained by jobs managed by this object

   Returns:
     the total number of tasks, contained by jobs managed by this objec
  

numberOfTasks

 public int numberOfTasks(int state)

 Returns the number of tasks in the given state, contained by jobs managed by this object

   Parameters:
     taskState - a task state.
     Returns:
     the number of tasks in the given state, contained by jobs managed by this object
  

numberOfTasksInJob

 public int numberOfTasksInJob(int jobId)

 Returns the number of tasks contained by the given job

   Parameters:
     jobId - a global job identifier
     Returns:
     the number of tasks contained by the given job
     Throws: IllegalArgumentException
     if the given job is not managed by this object
  

jobClass

 public String jobClass(int jobId)

 Returns user defined job class

   Parameters:
     jobId - a global job identifier
     Returns:
     the string describing job
     Throws: IllegalArgumentException
     if the given job is not managed by this object
  

numberOfTasksInJob

 public int numberOfTasksInJob(int jobId,
                               int taskState)

 Returns the number of tasks in the given state, contained by the given job

   Parameters:
     jobId - a global job identifier
     taskState - a task state
     Returns:
     the number of tasks in the given state, contained by the given job
     Throws: IllegalArgumentException
     if the given job is not managed by this object
  

tasksInJob

 public long[] tasksInJob(int jobId)

 Returns an array with global task identifiers for tasks contained by the given job.

   Parameters:
     jobId - a global job identifier.
     Returns:
     an array with global task identifiers for tasks contained by the given job.
     Throws: IllegalArgumentException
     if the given job is not managed by this object.
  

tasksInJob

 public long[] tasksInJob(int jobId,
                          int taskState)

 Returns an array with global task identifiers for tasks in the given state contained by the given job.

   Parameters:
     jobId - a global job identifier.
     Returns:
     an array with global task identifiers for tasks in the given statecontained by the given job.
     Throws: IllegalArgumentException
     if the given job is not managed by this object.
  

tasks

 public long[] tasks()

 Returns an array with global task identifiers for tasks, contained by jobs managed by this object.

   Returns:
     an array with global task identifiers for tasks, contained by jobs managed by this object
  

tasks

 public long[] tasks(int state)

 Returns an array with global task identifiers for tasks in the given state, contained by jobs managed by this object.

   Parameters:
     state - a task state
     Returns:
     an array with global task identifiers for tasks in the given state, contained by jobs managed by this object
  

jobs

 public int[] jobs()

 Returns an array with global job identifiers for all jobs managed by this object

   Returns:
     an array with global job identifiers for all jobs managed by this object
  

jobsWithLeastTasks

 public int[] jobsWithLeastTasks()

 Returns an array with global job identifiers for jobs, managed by this object, with least number of tasks

   Returns:
     an array with global job identifiers for jobs, managed by this object, with least number of tasks
  

jobsWithMostTasks

 public int[] jobsWithMostTasks()

 Returns an array with global job identifiers for jobs, managed by this object, with most number of tasks

   Returns:
     an array with global job identifiers for jobs, managed by this object, with most number of tasks
  

jobsWithLeastTasks

 public int[] jobsWithLeastTasks(int state)

 Returns an array with global job identifiers for jobs, managed by this object, with least number of tasks in the given state

   Parameters:
     state - - a task state
     Returns:
     an array with global job identifiers for jobs, managed by this object, with least number of tasks in the given state
  

jobsWithMostTasks

 public int[] jobsWithMostTasks(int state)

 Returns an array with global job identifiers for jobs, managed by this object, with most number of tasks in the given state

   Parameters:
     state - - a task state
     Returns:
     an array with global job identifiers for jobs, managed by this object, with most number of tasks in the given state
  

nrProcessors

 public int nrProcessors()

 Return the number of processors in the current network

   Returns:
     the number of processors in the current network
  

nrIdleProcessors

 public int nrIdleProcessors()

 Return the number of idle processors in the current network

   Returns:
     the number of idle processors in the current network
  

allIdleProcessors

 public int[] allIdleProcessors()

 Return an array with id's for the currently idle processors

   Returns:
     an array with id's for the currently idle processors
  

getPEId

 public int getPEId(long taskId)

 Returns the id of the processor on which task with taskId resides

   Parameters:
     taskId - Task identifier
     Returns:
     Processor identifier
  

numberOfTasksInJobOnPE

 public int numberOfTasksInJobOnPE(int jobId,
                                   int peId)

 Returns the number of tasks on the given processing element, contained by the given job.

   Parameters:
     jobId - a global job identifier.
     peId - a processing element identifier.
     Returns:
     the number of tasks on the given processing element, contained by the given job.
     Throws: IllegalArgumentException
     if the given job is not managed by this object.
     See Also:
     Job, Task
  

tasksInJobOnPE

 public long[] tasksInJobOnPE(int jobId,
                              int peId)

 Returns an array with global task identifiers for all tasks
 on the given processing element, contained by the given job.

   Parameters:
     jobId - a global job identifier.
     peId - a processing element identifier.
     Returns:
     an array with global task identifiers for all tasks
 on the given processing element, contained by the given job.
     Throws: IllegalArgumentException
     if the given job is not
 managed by this object.
     See Also:
     Task
  

tasksInJobOnPE

 public long[] tasksInJobOnPE(int jobId,
                              int peId,
                              int taskState)

 Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by the given job.

   Parameters:
     jobId - a global job identifier.
     peId - a processing element identifier.
     taskState - a task state.
     Returns:
     an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by the given job.
     Throws: IllegalArgumentException
     if the given job is not
 managed by this object.
     See Also:
     Task
  

numberOfTasksInJobOnPE

 public int numberOfTasksInJobOnPE(int jobId,
                                   int peId,
                                   int taskState)

 Returns the number of tasks on the given processing element
 in the given state, contained by the given job.

   Parameters:
     jobId - a global job identifier.
     peId - a processing element identifier.
     taskState - a task state.
     Returns:
     the number of tasks on the given processing element
 in the given state, contained by the given job.
     Throws: IllegalArgumentException
     if the given job is not
 managed by this object.
     See Also:
     Job, Task
  

getNeighbours

 public int[] getNeighbours(int PeId)

 Returns the neighbours of a processor

   Parameters:
     PeId - The id of the processor
     Returns:
     An array with the id's of the neighbour processors
  

stateOfTask

 public int stateOfTask(long taskId)

 Return the state of a task

   Parameters:
     The - task id
     Returns:
     The state of the task
  

getJobId

 public int getJobId(long taskId)


getJobTypeId

 public int getJobTypeId(int jobId)


getNetwork

 public Network getNetwork()

 Return the object Network.
 Overrides method in Simulator.java

   Returns:
     the Task
     Overrides:
     getNetwork in class Simulator
     See Also:
     Task
  

getTask

 public Task getTask(long taskId)

 Return the object task corresponding to a given id.

   Parameters:
     Task - Id
     Returns:
     the Task
     See Also:
     Task
  

callJobArrival

 public void callJobArrival(float time,
                            int jobID)

 Calls the SchedulerInterface routine JobArrival in the scheduler

   Parameters:
     time - Arrival time of the new job
     jobID - the id of the new job
     See Also:
     JobManager
  

callTaskStateChange

 public void callTaskStateChange(float time,
                                 long taskID)

 Calls the SchedulerInterface routine TaskStateChange in the scheduler

   Parameters:
     time - time when the change of state occurred
     taskID - id of the task
     See Also:
     Task
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/ScheduleTaskEvent.html
##-----------------TITLE------------------------##
Class ScheduleTaskEvent
##------------------TEXT------------------------##
Class ScheduleTaskEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----ProcessorEvent
                   |
                   +----ScheduleTaskEvent


 public class ScheduleTaskEvent
   extends ProcessorEvent

Event generated when a task is scheduled




  

 
	ScheduleTaskEvent(Object, EventDestination, float, int, long, float)
   


  

 
	equals(Object)
   Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   
	getPeriod()
   
   
	getTask()
   
   
	toString()
   



  



ScheduleTaskEvent

 public ScheduleTaskEvent(Object f,
                          EventDestination et,
                          float ti,
                          int pe,
                          long taskId,
                          float p)



  


equals

 public boolean equals(Object o)

 Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   Overrides:
     equals in class ProcessorEvent
  

getTask

 public long getTask()


getPeriod

 public float getPeriod()


toString

 public String toString()

 Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/TaskArrivalEvent.html
##-----------------TITLE------------------------##
Class TaskArrivalEvent
##------------------TEXT------------------------##
Class TaskArrivalEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskArrivalEvent


 public class TaskArrivalEvent
   extends SimEvent

Event generated when a new task arrives.

 See Also:
     generateTask




  

 
	TaskArrivalEvent(Object, EventDestination, int, long)
    Constructs a task arrival event.


  

 
	getTaskId()
    Returns the global task identifier of arrived task.



  



TaskArrivalEvent

 public TaskArrivalEvent(Object from,
                         EventDestination to,
                         int time,
                         long taskId)

 Constructs a task arrival event.

   Parameters:
     from - sender of event.
     to - receiver of event.
     time - time stamp.
     taskId - global task identifier of arrived task.
  


  


getTaskId

 public long getTaskId()

 Returns the global task identifier of arrived task.

   Returns:
     the global task identifier of arrived task.
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/CommTaskEvent.html
##-----------------TITLE------------------------##
Class CommTaskEvent
##------------------TEXT------------------------##
Class CommTaskEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskEvent
                   |
                   +----InternalTaskEvent
                           |
                           +----CommTaskEvent


 public class CommTaskEvent
   extends InternalTaskEvent

A communication task event.

 See Also:
     Task




  

 
	CommTaskEvent(Task, float)
    Constructs a communication task event.


  

 
	toString()
    Returns a string representation of this object.



  



CommTaskEvent

 public CommTaskEvent(Task task,
                      float time)

 Constructs a communication task event.

   Parameters:
     task - responsible task.
     time - time stamp.
  


  


toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/GlobalClockEventGenerator.html
##-----------------TITLE------------------------##
Class GlobalClockEventGenerator
##------------------TEXT------------------------##
Class GlobalClockEventGenerator


java.lang.Object
   |
   +----GlobalClockEventGenerator


 public class GlobalClockEventGenerator
   extends Object
   implements EventGenerator

Generates a global clock




  

 
	GlobalClockEventGenerator(Network)
   


  

 
	eventProcessed(SimEvent)
   
   
	initializeGenerator(Simulator)
   



  



GlobalClockEventGenerator

 public GlobalClockEventGenerator(Network network)



  


eventProcessed

 public void eventProcessed(SimEvent e)


initializeGenerator

 public void initializeGenerator(Simulator sim)
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/NormalDistribution.html
##-----------------TITLE------------------------##
Class NormalDistribution
##------------------TEXT------------------------##
Class NormalDistribution


java.lang.Object
   |
   +----ProbabilityDistribution
           |
           +----NormalDistribution


 public final class NormalDistribution
   extends ProbabilityDistribution




  

 
	NormalDistribution(float, float)
    Constructs a normal probability distribution.


  

 
	floatSample()
    Returns a float sample from this probability distribution.
   
	floatSample(float, float)
    Returns a float sample from this probability distribution.
   
	intSample()
    Returns an integer sample from this probability distribution.
   
	newInstance(double[])
    Creates a new instance of this probability distribution.



  



NormalDistribution

 public NormalDistribution(float mean,
                           float deviation)

 Constructs a normal probability distribution.

   Parameters:
     mean - mean value.
     deviation - standard deviation.
  


  


newInstance

 public static ProbabilityDistribution newInstance(double params[])

 Creates a new instance of this probability distribution.

   Parameters:
     params - array of parameters.
     Returns:
     a new instance of this probability distribution.
  

floatSample

 public static float floatSample(float mean,
                                 float deviation)

 Returns a float sample from this probability distribution.

   Parameters:
     mean - mean value.
     deviation - standard deviation.
     Returns:
     a float sample from this probability distribution.
  

intSample

 public int intSample()

 Returns an integer sample from this probability distribution.

   Returns:
     an integer sample from this probability distribution.
     Overrides:
     intSample in class ProbabilityDistribution
  

floatSample

 public float floatSample()

 Returns a float sample from this probability distribution.

   Returns:
     a float sample from this probability distribution.
     Overrides:
     floatSample in class ProbabilityDistribution
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/Network.html
##-----------------TITLE------------------------##
Class Network
##------------------TEXT------------------------##
Class Network


java.lang.Object
   |
   +----Network


 public class Network
   extends Object
   implements EventDestination

This class represents a generic multiprocessor network




  

 
	ASYNCHRONOUS
   If the network is ASYNCHRONOUS
   
	SYNCHRONOUS
   If the network is SYNCHRONOUS


  

 
	Network()
   Creates a new network, does not create any processors or connections, use other method for this

   
	Network(TheSimulator, FileInputStream)
   Creates a new network with the specified characteristics
  


  

 
	addLink(int, int, int)
   Add a link between two processors usinf processor id's
  
   
	addLink(String, String, int)
   Add a link between two processors using processor names
  
   
	addProcessor(int, int, int)
   Add a processor to the network
 
   
	addProcessor(int, int, int, float, float, float)
   
   
	addProcessor(Processor, Processor[])
   Add a processor to the network
  
   
	addProcessor(String, int, int)
   Add a processor to the network, timeslicelength default to 10
 
   
	addProcessor(String, int, int, int)
   Add a processor to the network
 
   
	allIdleProcessors()
     
   
	allProcessors()
   
   
	dispatchEvent(SimEvent)
   If this network is ASYNCHRONOUS this method simply passes the event on to the simulator
  if the network is SYNCHRONOUS it makes sure all the events arrive to the simulator at the same time
  
   
	getAverageTimeslice()
   
   
	getNeighbours(int)
   return the neighbours of the processor
  
   
	getProcessor(int)
   get the processor with the corresponding ID
 
   
	getRandomProcessor()
   
   
	getType()
   Get the network type
  
   
	handleEvent(SimEvent)
   Receives events from the simulator, implements the interface EventDestination
  
   
	nrProcessors()
   return the number of processors in this network
  
   
	readConfigStream(FileInputStream)
   Creates a network according to the supplied instream
 for a specification of the file format see configfile.spec

   
	removeEvent(SimEvent)
   Removes an already existing event from the global simulation queue
  
   
	setType(int)
   Set the network type
  
   
	setType(int, int)
   Set the network type
  



  


SYNCHRONOUS

 public static final int SYNCHRONOUS

 If the network is SYNCHRONOUS


ASYNCHRONOUS

 public static final int ASYNCHRONOUS

 If the network is ASYNCHRONOUS



  



Network

 public Network()

 Creates a new network, does not create any processors or connections, use other method for this



Network

 public Network(TheSimulator sim,
                FileInputStream is)

 Creates a new network with the specified characteristics

   Parameters:
     sim - An instance of TheSimulator
     is - An input stream specifying how the networks topology looks
            (see detailed description in here)
  


  


dispatchEvent

 public void dispatchEvent(SimEvent se)

 If this network is ASYNCHRONOUS this method simply passes the event on to the simulator
  if the network is SYNCHRONOUS it makes sure all the events arrive to the simulator at the same time

   Parameters:
     se - the event to be dispatched
  

addProcessor

 public int addProcessor(String name,
                         int speed,
                         int bufferSize,
                         int tslc)

 Add a processor to the network

   Parameters:
     name - The name used for this processor when using the addLink method
     speed - The processor speed
     bufferSize - The size of the processors communications buffer
     tslc - the length of this processors timeslice
     Returns:
     the id of the new processor
  

addProcessor

 public int addProcessor(int speed,
                         int bufferSize,
                         int tslc,
                         float L,
                         float o,
                         float g)


addProcessor

 public int addProcessor(int speed,
                         int bufferSize,
                         int tslc)

 Add a processor to the network

   Parameters:
     speed - The processor speed
     bufferSize - The size of the processors communications buffer
     tslc - the length of this processors timeslice
     Returns:
     the id of the new processor
  

getProcessor

 public Processor getProcessor(int peId)

 get the processor with the corresponding ID

   Parameters:
     peId - the processor ID
  

addProcessor

 public int addProcessor(String name,
                         int speed,
                         int bufferSize)

 Add a processor to the network, timeslicelength default to 10

   Parameters:
     name - The name used for this processor when using the addLink method
     speed - The processor speed
     bufferSize - The size of the processors communications buffer
     Returns:
     the id of the new processor
  

addLink

 public void addLink(String proc1,
                     String proc2,
                     int speed)

 Add a link between two processors using processor names

   Parameters:
     proc1 - The first processor
     proc2 - The second processor
     See Also:
     addProcessor
  

addLink

 public void addLink(int proc1,
                     int proc2,
                     int speed)

 Add a link between two processors usinf processor id's

   Parameters:
     proc1 - The first processors id
     proc2 - The second processorid id
     See Also:
     addProcessor
  

addProcessor

 public void addProcessor(Processor p,
                          Processor ns[])

 Add a processor to the network

   Parameters:
     p - the processor to add
     ns, - p:s neighbours
  

readConfigStream

 public void readConfigStream(FileInputStream fs)

 Creates a network according to the supplied instream
 for a specification of the file format see configfile.spec



getType

 public int getType()

 Get the network type

   Returns:
     the network type
     See Also:
     Network
  

setType

 public void setType(int s)

 Set the network type

   Parameters:
     s - The type of the Network
  

setType

 public void setType(int s,
                     int timeSliceLength)

 Set the network type

   Parameters:
     s - The type of the Network
     timeSliceLength - the length of the time slice. This set a global timeslice for all processors
  

removeEvent

 public void removeEvent(SimEvent e)

 Removes an already existing event from the global simulation queue

   Parameters:
     e - The event to remove from the simulators queue
  

handleEvent

 public void handleEvent(SimEvent e)

 Receives events from the simulator, implements the interface EventDestination

   Parameters:
     e - the event
  

getAverageTimeslice

 public int getAverageTimeslice()

 Returns:
     the average timeslice for all this networks processors
  

getRandomProcessor

 public int getRandomProcessor()

 Returns:
     a processorID selected at uniform random from this netwoek
  

nrProcessors

 public int nrProcessors()

 return the number of processors in this network

   Returns:
     the number of processors
  

getNeighbours

 public int[] getNeighbours(int PeId)

 return the neighbours of the processor

   Returns:
     An array with the id of the neighbours
  

allIdleProcessors

 public int[] allIdleProcessors()

 Returns:
     An array with id:s for the processors that are currently idle
  

allProcessors

 public int[] allProcessors()

 Returns:
     An array with all processor id's
  This method relies on this class representation of processors.
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/EventGenerator.html
##-----------------TITLE------------------------##
Interface EventGenerator
##------------------TEXT------------------------##
Interface EventGenerator

 public interface interface EventGenerator

You should implement this interface in to order to be able to generate events for the simulator




  

 
	eventProcessed(SimEvent)
   Every time the simulator processes an event created by an EventGenerator
  the EventGenerator will be notified via this method

   
	initializeGenerator(Simulator)
   When the EventGenerator is registered in the simulator the 
   initzializeGenerator(Simulator) method will be called




  


eventProcessed

 public abstract void eventProcessed(SimEvent e)

 Every time the simulator processes an event created by an EventGenerator
  the EventGenerator will be notified via this method



initializeGenerator

 public abstract void initializeGenerator(Simulator sim)

 When the EventGenerator is registered in the simulator the 
   initzializeGenerator(Simulator) method will be called
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/EndOfSpinningEvent.html
##-----------------TITLE------------------------##
Class EndOfSpinningEvent
##------------------TEXT------------------------##
Class EndOfSpinningEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskEvent
                   |
                   +----InternalTaskEvent
                           |
                           +----EndOfSpinningEvent


 public class EndOfSpinningEvent
   extends InternalTaskEvent

A end of spinning event..

 See Also:
     Task




  

 
	EndOfSpinningEvent(Task, float)
    Constructs a end of spinning event

 


  

 
	toString()
    Returns a string representation of this object.



  



EndOfSpinningEvent

 public EndOfSpinningEvent(Task task,
                           float time)

 Constructs a end of spinning event

   Parameters:
     task - responsible task.
     time - time stamp.
  


  


toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/ProcessorEvent.html
##-----------------TITLE------------------------##
Class ProcessorEvent
##------------------TEXT------------------------##
Class ProcessorEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----ProcessorEvent


 public class ProcessorEvent
   extends SimEvent

Defines events that are to be sent to a Processor




  

 
	ProcessorEvent(Object, EventDestination, float, int)
   


  

 
	equals(Object)
   Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   
	getPeId()
   



  



ProcessorEvent

 public ProcessorEvent(Object f,
                       EventDestination t,
                       float ti,
                       int pe)



  


equals

 public boolean equals(Object o)

 Override this method to provide the type
  of equality you want the simulator to
  search for when using the removeEvent method

   Overrides:
     equals in class SimEvent
  

getPeId

 public int getPeId()
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/PreemptTaskEvent.html
##-----------------TITLE------------------------##
Class PreemptTaskEvent
##------------------TEXT------------------------##
Class PreemptTaskEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskEvent
                   |
                   +----InternalTaskEvent
                           |
                           +----PreemptTaskEvent


 public class PreemptTaskEvent
   extends InternalTaskEvent

A preempt task event.

 See Also:
     Task




  

 
	PreemptTaskEvent(Task, float)
    Constructs a preempt task event.


  

 
	toString()
    Returns a string representation of this object.



  



PreemptTaskEvent

 public PreemptTaskEvent(Task task,
                         float time)

 Constructs a preempt task event.

   Parameters:
     task - responsible task.
     time - time stamp.
  


  


toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/TaskStatistics.html
##-----------------TITLE------------------------##
Class TaskStatistics
##------------------TEXT------------------------##
Class TaskStatistics


java.lang.Object
   |
   +----TaskStatistics


 public final class TaskStatistics
   extends Object

Task statistics.

 See Also:
     Task




  

 
	TaskStatistics(Task)
    Constructs a tasks statistics object.


  

 
	getAverageCommunicationTime()
    Returns the average communication time.
   
	getAverageIOTime()
    Returns the average I/O time.
   
	getAverageSynchronizationTime()
    Returns the average synchronization time.
   
	getComputationTime()
    Returns the computation time of this task.
   
	getExecutionTime()
    Returns the total execution time for this task.
   
	getMaxCommunicationTime()
    Returns the maximum communication time.
   
	getMaxIOTime()
    Returns the maximum I/O time.
   
	getMaxSynchronizationTime()
    Returns the maximum synchronization time.
   
	getNumberOfIOOperations()
    Returns the number of I/O operations performed by this task.
   
	getNumberOfReceives()
    Returns the number of messages received by this task.
   
	getNumberOfSends()
    Returns the number of messages sent by this task.
   
	getNumberOfSynchronizations()
    Returns the number of synchronization performed by this task.
   
	getTimeToFirstScheduling()
    Returns the time from task creation to first scheduling of this
 task.



  



TaskStatistics

 protected TaskStatistics(Task task)

 Constructs a tasks statistics object.

   Parameters:
     task - a task.
  


  


getComputationTime

 public float getComputationTime()

 Returns the computation time of this task.

   Returns:
     the computation time of this task.
  

getNumberOfSends

 public int getNumberOfSends()

 Returns the number of messages sent by this task.

   Returns:
     the number of messages sent by this task.
  

getNumberOfReceives

 public int getNumberOfReceives()

 Returns the number of messages received by this task.

   Returns:
     the number of messages received by this task.
  

getAverageCommunicationTime

 public float getAverageCommunicationTime()

 Returns the average communication time.

   Returns:
     the average communication time.
  

getMaxCommunicationTime

 public float getMaxCommunicationTime()

 Returns the maximum communication time.

   Returns:
     the maximum communication time.
  

getNumberOfSynchronizations

 public int getNumberOfSynchronizations()

 Returns the number of synchronization performed by this task.

   Returns:
     the number of synchronization performed by this task.
  

getAverageSynchronizationTime

 public float getAverageSynchronizationTime()

 Returns the average synchronization time.

   Returns:
     the average synchronization time.
  

getMaxSynchronizationTime

 public float getMaxSynchronizationTime()

 Returns the maximum synchronization time.

   Returns:
     the maximum synchronization time.
  

getNumberOfIOOperations

 public int getNumberOfIOOperations()

 Returns the number of I/O operations performed by this task.

   Returns:
     the number of I/O operations performed by this task.
  

getAverageIOTime

 public float getAverageIOTime()

 Returns the average I/O time.

   Returns:
     the average I/O time.
  

getMaxIOTime

 public float getMaxIOTime()

 Returns the maximum I/O time.

   Returns:
     the maximum I/O time.
  

getTimeToFirstScheduling

 public float getTimeToFirstScheduling()

 Returns the time from task creation to first scheduling of this
 task.

   Returns:
     the time from task creation to first scheduling of this
 task.
  

getExecutionTime

 public float getExecutionTime()

 Returns the total execution time for this task.

   Returns:
     the total execution time for this task.
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/InternalTaskEvent.html
##-----------------TITLE------------------------##
Class InternalTaskEvent
##------------------TEXT------------------------##
Class InternalTaskEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskEvent
                   |
                   +----InternalTaskEvent


 public class InternalTaskEvent
   extends TaskEvent

An event internal to a task.

 See Also:
     Task




  

 
	InternalTaskEvent(Task, float)
    Constructs an internal task event.



  



InternalTaskEvent

 public InternalTaskEvent(Task task,
                          float time)

 Constructs an internal task event.

   Parameters:
     task - responsible task.
     time - time stamp.
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/RunTaskEvent.html
##-----------------TITLE------------------------##
Class RunTaskEvent
##------------------TEXT------------------------##
Class RunTaskEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----TaskEvent
                   |
                   +----RunTaskEvent


 public class RunTaskEvent
   extends TaskEvent

This event is sent to a task in order to run it.

 See Also:
     Task




  

 
	RunTaskEvent(Object, EventDestination, float, long, int, float)
    Constructs a run task event.


  

 
	getPEId()
    Returns the identifier for processing element to run task on.
   
	getTimeSlice()
    Returns the length of the time slice.
   
	toString()
    Returns a string representation of this object.



  



RunTaskEvent

 public RunTaskEvent(Object from,
                     EventDestination to,
                     float time,
                     long taskId,
                     int peId,
                     float timeSlice)

 Constructs a run task event.

   Parameters:
     from - sender of event.
     to - receiver of event.
     time - time stamp.
     taskId - global task identifier of destination task.
     peId - identifier for processing element to run task on.
     timeSlice - length of time slice.
  


  


getPEId

 public int getPEId()

 Returns the identifier for processing element to run task on.

   Returns:
     the identifier for processing element to run task on.
  

getTimeSlice

 public float getTimeSlice()

 Returns the length of the time slice.

   Returns:
     the length of the time slice.
  

toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/JobManager.html
##-----------------TITLE------------------------##
Class JobManager
##------------------TEXT------------------------##
Class JobManager


java.lang.Object
   |
   +----JobManager


 public class JobManager
   extends Object
   implements EventDestination

Implements a job manager. All interaction with jobs and tasks
 should go through an instance of this class.

 See Also:
     Job, Task




  

 
	JobManager(TheSimulator)
    Constructs a job manager.


  

 
	endedJobs()
    Returns an array with global job identifier for ended jobs,
 managed by this object.
   
	generateJob(int, float, int, int, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, float, float, String)
    Generates a job and adds it to this object.
   
	getJob(int)
    Returns the sought job.
   
	getJobExecutionTime(int)
    Returns the execution time for the given job.
   
	getPEId(long)
    Returns the identifier for the processing element which the
 given task is located on.
   
	getSimulator()
    Returns the simulator.
   
	getTask(long)
    Returns the sought task.
   
	getTaskStatistics(int)
    Returns statistics for the given task.
   
	getThroughput(int, int)
    Returns the throughput.
   
	handleEvent(SimEvent)
    Handles incoming events.
   
	jobClass(int)
    Returns the job class defined by the user.
   
	jobEnded(int)
    Called by an ended job.
   
	jobs()
    Returns an array with global job identifiers for all jobs
 managed by this object.
   
	jobsWithLeastTasks()
    Returns an array with global job identifiers for jobs, managed
 by this object, with least number of tasks.
   
	jobsWithLeastTasks(int)
    Returns an array with global job identifiers for jobs, managed
 by this object, with least number of tasks in the given state.
   
	jobsWithMostTasks()
    Returns an array with global job identifiers for jobs, managed
 by this object, with most number of tasks.
   
	jobsWithMostTasks(int)
    Returns an array with global job identifiers for jobs, managed
 by this object, with most number of tasks in the given state.
   
	numberOfJobs()
    Returns the number of jobs managed by this object.
   
	numberOfLivingTasks()
    Returns the total number of living tasks, contained by jobs
 managed by this object.
   
	numberOfTasks()
    Returns the total number of tasks, contained by jobs managed
 by this object.
   
	numberOfTasks(int)
    Returns the number of tasks in the given state, contained by
 jobs managed by this object.
   
	numberOfTasksInJob(int)
    Returns the number of tasks contained by the given job.
   
	numberOfTasksInJob(int, int)
    Returns the number of tasks in the given state, contained by
 the given job.
   
	numberOfTasksInJobOnPE(int, int)
    Returns the number of tasks on the given processing element,
 contained by the given job.
   
	numberOfTasksInJobOnPE(int, int, int)
    Returns the number of tasks on the given processing element
 in the given state, contained by the given job.
   
	numberOfTasksOnPE(int)
    Returns the number of task on the given processing element.
   
	numberOfTasksOnPE(int, int)
    Returns the number of task on the given processing element
 in the given state.
   
	tasks()
    Returns an array with global task identifiers for tasks,
 contained by jobs managed by this object.
   
	tasks(int)
    Returns an array with global task identifiers for tasks
 in the given state, contained by jobs managed by this object.
   
	tasksInJob(int)
    Returns an array with global task identifiers for tasks
 contained by the given job.
   
	tasksInJob(int, int)
    Returns an array with global task identifiers for tasks in
 the given state, contained by the given job.
   
	tasksInJobOnPE(int, int)
    Returns an array with global task identifiers for all tasks
 on the given processing element, contained by the given job.
   
	tasksInJobOnPE(int, int, int)
    Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by the given job.
   
	tasksOnPE(int)
    Returns an array with global task identifiers for all tasks
 on the given processing element, contained by jobs managed
 by this object.
   
	tasksOnPE(int, int)
    Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by jobs managed by this object.



  



JobManager

 public JobManager(TheSimulator simulator)

 Constructs a job manager.

   Parameters:
     simulator - a simulator.
  


  


getSimulator

 public TheSimulator getSimulator()

 Returns the simulator.

   Returns:
     the simulator.
  

generateJob

 public void generateJob(int numberOfTasks,
                         float startTime,
                         int peId,
                         int jobTypeId,
                         ProbabilityDistribution endDist,
                         ProbabilityDistribution spawnDist,
                         ProbabilityDistribution spawnSizeDist,
                         ProbabilityDistribution ioDist,
                         ProbabilityDistribution ioDurationDist,
                         ProbabilityDistribution commDist,
                         ProbabilityDistribution laxityDist,
                         float syncProb,
                         float globalSyncProb,
                         String jClass)

 Generates a job and adds it to this object.

   Parameters:
     numberOfTasks - initial number of tasks.
     startTime - start time of job.
     peId - processing element identifier.
     endDist - end task distribution.
     spawnDist - task spawning distribution.
     spawnSizeDist - task spawning size distribution.
     ioDist - task I/O distribution.
     ioDurationDist - task I/O duration distribution.
     commDist - task communication distribution.
     laxityDist - tasx laxity distribution
     syncProb - probability for communication being
 synchronization.
     globalSyncProb - probability for synchronization being
 global.
     See Also:
     Job
  

numberOfJobs

 public int numberOfJobs()

 Returns the number of jobs managed by this object.

   Returns:
     the number of jobs managed by this object.
  

jobs

 public int[] jobs()

 Returns an array with global job identifiers for all jobs
 managed by this object.

   Returns:
     an array with global job identifiers for all jobs
 managed by this object.
     See Also:
     Job
  

endedJobs

 public int[] endedJobs()

 Returns an array with global job identifier for ended jobs,
 managed by this object.

   Returns:
     an array with global job identifier for ended jobs,
 managed by this object.
  

jobsWithLeastTasks

 public int[] jobsWithLeastTasks()

 Returns an array with global job identifiers for jobs, managed
 by this object, with least number of tasks.

   Returns:
     an array with global job identifiers for jobs, managed
 by this object, with least number of tasks.
     See Also:
     Job, Task
  

jobsWithMostTasks

 public int[] jobsWithMostTasks()

 Returns an array with global job identifiers for jobs, managed
 by this object, with most number of tasks.

   Returns:
     an array with global job identifiers for jobs, managed
 by this object, with most number of tasks.
     See Also:
     Job, Task
  

jobsWithLeastTasks

 public int[] jobsWithLeastTasks(int taskState)

 Returns an array with global job identifiers for jobs, managed
 by this object, with least number of tasks in the given state.

   Parameters:
     taskState - a task state.
     Returns:
     an array with global job identifiers for jobs, managed
 by this object, with least number of tasks in the given state.
     See Also:
     Job, Task
  

jobsWithMostTasks

 public int[] jobsWithMostTasks(int taskState)

 Returns an array with global job identifiers for jobs, managed
 by this object, with most number of tasks in the given state.

   Parameters:
     taskState - a task state.
     Returns:
     an array with global job identifiers for jobs, managed
 by this object, with most number of tasks in the given state.
     See Also:
     Job, Task
  

numberOfTasks

 public int numberOfTasks()

 Returns the total number of tasks, contained by jobs managed
 by this object.

   Returns:
     the total number of tasks, contained by jobs managed
 by this object.
     See Also:
     Job, Task
  

numberOfLivingTasks

 public int numberOfLivingTasks()

 Returns the total number of living tasks, contained by jobs
 managed by this object.

   Returns:
     the total number of living tasks, contained by jobs
 managed by this object.
     See Also:
     Job, Task
  

numberOfTasks

 public int numberOfTasks(int taskState)

 Returns the number of tasks in the given state, contained by
 jobs managed by this object.

   Parameters:
     taskState - a task state.
     Returns:
     the number of tasks in the given state, contained by
 jobs managed by this object.
     See Also:
     Job, Task
  

numberOfTasksOnPE

 public int numberOfTasksOnPE(int peId)

 Returns the number of task on the given processing element.

   Parameters:
     peId - a processing element identifier.
     Returns:
     the number of task on the given processing element.
  

numberOfTasksOnPE

 public int numberOfTasksOnPE(int peId,
                              int taskState)

 Returns the number of task on the given processing element
 in the given state.

   Parameters:
     peId - a processing element identifier.
     taskState - a task state.
     Returns:
     the number of task on the given processing element.
  

numberOfTasksInJob

 public int numberOfTasksInJob(int jobId)

 Returns the number of tasks contained by the given job.

   Parameters:
     jobId - a global job identifier.
     Returns:
     the number of tasks contained by the given job.
     Throws: IllegalArgumentException
     if the given job is not
 managed by this object.
     See Also:
     Job, Task
  

jobClass

 public String jobClass(int jobId)

 Returns the job class defined by the user.

   Parameters:
     jobId - a global job identifier.
     Returns:
     a string provided by the user describing the job classification.
     Throws: IllegalArgumentException
     if the given job is not
 managed by this object.
     See Also:
     Job, Task
  

numberOfTasksInJob

 public int numberOfTasksInJob(int jobId,
                               int taskState)

 Returns the number of tasks in the given state, contained by
 the given job.

   Parameters:
     jobId - a global job identifier.
     taskState - a task state.
     Returns:
     the number of tasks in the given state, contained by
 the given job.
     Throws: IllegalArgumentException
     if the given job is not
 managed by this object.
     See Also:
     Job, Task
  

numberOfTasksInJobOnPE

 public int numberOfTasksInJobOnPE(int jobId,
                                   int peId)

 Returns the number of tasks on the given processing element,
 contained by the given job.

   Parameters:
     jobId - a global job identifier.
     peId - a processing element identifier.
     Returns:
     the number of tasks on the given processing element,
 contained by the given job.
     Throws: IllegalArgumentException
     if the given job is not
 managed by this object.
     See Also:
     Job, Task
  

numberOfTasksInJobOnPE

 public int numberOfTasksInJobOnPE(int jobId,
                                   int peId,
                                   int taskState)

 Returns the number of tasks on the given processing element
 in the given state, contained by the given job.

   Parameters:
     jobId - a global job identifier.
     peId - a processing element identifier.
     taskState - a task state.
     Returns:
     the number of tasks on the given processing element
 in the given state, contained by the given job.
     Throws: IllegalArgumentException
     if the given job is not
 managed by this object.
     See Also:
     Job, Task
  

tasks

 public long[] tasks()

 Returns an array with global task identifiers for tasks,
 contained by jobs managed by this object.

   Returns:
     an array with global task identifiers for tasks,
 contained by jobs managed by this object.
     See Also:
     Job, Task
  

tasks

 public long[] tasks(int state)

 Returns an array with global task identifiers for tasks
 in the given state, contained by jobs managed by this object.

   Parameters:
     taskState - a task state.
     Returns:
     an array with global task identifiers for tasks
 in the given state, contained by jobs managed by this object.
     See Also:
     Job, Task
  

tasksOnPE

 public long[] tasksOnPE(int peId)

 Returns an array with global task identifiers for all tasks
 on the given processing element, contained by jobs managed
 by this object.

   Parameters:
     peId - a processing element identifier.
     Returns:
     an array with global task identifiers for all tasks
 on the given processing element, contained by jobs managed
 by this object.
     See Also:
     Task
  

tasksOnPE

 public long[] tasksOnPE(int peId,
                         int taskState)

 Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by jobs managed by this object.

   Parameters:
     peId - a processing element identifier.
     taskState - a task state.
     Returns:
     an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by jobs managed by this object.
     See Also:
     Task
  

tasksInJob

 public long[] tasksInJob(int jobId)

 Returns an array with global task identifiers for tasks
 contained by the given job.

   Parameters:
     jobId - a global job identifier.
     Returns:
     an array with global task identifiers for tasks
 contained by the given job.
     Throws: IllegalArgumentException
     if the given job is not
 managed by this object.
     See Also:
     Job, Task
  

tasksInJob

 public long[] tasksInJob(int jobId,
                          int taskState)

 Returns an array with global task identifiers for tasks in
 the given state, contained by the given job.

   Parameters:
     jobId - a global job identifier.
     taskState - a task state.
     Returns:
     an array with global task identifiers for tasks in
 the given state, contained by the given job.
     Throws: IllegalArgumentException
     if the given job is not
 managed by this object.
     See Also:
     Job, Task
  

tasksInJobOnPE

 public long[] tasksInJobOnPE(int jobId,
                              int peId)

 Returns an array with global task identifiers for all tasks
 on the given processing element, contained by the given job.

   Parameters:
     jobId - a global job identifier.
     peId - a processing element identifier.
     Returns:
     an array with global task identifiers for all tasks
 on the given processing element, contained by the given job.
     Throws: IllegalArgumentException
     if the given job is not
 managed by this object.
     See Also:
     Task
  

tasksInJobOnPE

 public long[] tasksInJobOnPE(int jobId,
                              int peId,
                              int taskState)

 Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by the given job.

   Parameters:
     jobId - a global job identifier.
     peId - a processing element identifier.
     taskState - a task state.
     Returns:
     an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by the given job.
     Throws: IllegalArgumentException
     if the given job is not
 managed by this object.
     See Also:
     Task
  

getPEId

 public int getPEId(long taskId)

 Returns the identifier for the processing element which the
 given task is located on.

   Parameters:
     taskId - global task identifier.
     Returns:
     the identifier for the processing element which the
 given task is located on.
  

getJobExecutionTime

 public float getJobExecutionTime(int jobId)

 Returns the execution time for the given job.

   Parameters:
     jobId - global job identifier.
     Returns:
     the execution time for the given job.
  

getThroughput

 public int getThroughput(int start,
                          int end)

 Returns the throughput.

   Parameters:
     start - start of time interval.
     end - end of time interval.
     Returns:
     the throughput.
  

getTaskStatistics

 public TaskStatistics getTaskStatistics(int taskId)

 Returns statistics for the given task.

   Parameters:
     taskId - global task identifier.
     Returns:
     statistics for the given task.
  

handleEvent

 public void handleEvent(SimEvent event)

 Handles incoming events.

   Parameters:
     event - incoming event.
  

jobEnded

 protected void jobEnded(int jobId)

 Called by an ended job.

   Parameters:
     jobId - global job indetifier of ended job.
  

getJob

 protected Job getJob(int jobId)

 Returns the sought job.

   Parameters:
     jobId - global job identifier for sought job.
     Returns:
     the sought job.
  

getTask

 public Task getTask(long taskId)

 Returns the sought task.

   Parameters:
     taskId - global task identifier for sought task.
     Returns:
     the sought task.
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/packages.html
##-----------------TITLE------------------------##
Package Index
##------------------TEXT------------------------##
API User's Guide  Class Hierarchy  Index
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/TaskSynchronization.html
##-----------------TITLE------------------------##
Class TaskSynchronization
##------------------TEXT------------------------##
Class TaskSynchronization


java.lang.Object
   |
   +----TaskSynchronization


 public class TaskSynchronization
   extends Object

Task synchronization monitor.
 Task synchronization monitors in the same job should always
 be disjoint.




  

 
	TaskSynchronization(Task, Task[])
    Constructs a task synchronization monitor.


  

 
	hasCommonTasks(TaskSynchronization)
    Tests if this monitor has any tasks in common with the
 given one.
   
	involves(Task)
    Tests if the given task is involved in this synchronization.
   
	joinWith(TaskSynchronization)
    Joins this monitor with the given one.
   
	size()
    Returns the number of involved tasks.
   
	synchronize(Task, Simulator)
    Synchronizes the given task.
   
	toString()
    Returns a string representation of this object.



  



TaskSynchronization

 public TaskSynchronization(Task task,
                            Task syncTasks[])

 Constructs a task synchronization monitor.

   Parameters:
     task - requesting task.
     syncTasks - tasks to synchronize with.
  


  


size

 public int size()

 Returns the number of involved tasks.

   Returns:
     the number of involved tasks.
  

involves

 public boolean involves(Task task)

 Tests if the given task is involved in this synchronization.

   Parameters:
     task - a task.
     Returns:
     true if task is involved in this
 synchronization; false otherwise.
  

synchronize

 public boolean synchronize(Task task,
                            Simulator simulator)

 Synchronizes the given task.

   Parameters:
     task - a task.
     simulator - a simulator.
     Returns:
     true if all tasks have been synchronized
 after this; false otherwise.
  

hasCommonTasks

 public boolean hasCommonTasks(TaskSynchronization ts)

 Tests if this monitor has any tasks in common with the
 given one.

   Parameters:
     ts - a task synchronization monitor.
     Returns:
     true if this monitor has any tasks in
 common with the given one; false otherwise.
  

joinWith

 public void joinWith(TaskSynchronization ts)

 Joins this monitor with the given one.

   Parameters:
     ts - a task synchronization monitor.
  

toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class Object
##------------------URL-------------------------##
http://www.ics.uci.edu/~schark/simulator/javadoc/SuspendedTaskEvent.html
##-----------------TITLE------------------------##
Class SuspendedTaskEvent
##------------------TEXT------------------------##
Class SuspendedTaskEvent


java.lang.Object
   |
   +----SimEvent
           |
           +----ProcessorEvent
                   |
                   +----SuspendedTaskEvent


 public class SuspendedTaskEvent
   extends ProcessorEvent

A suspended task event.

 See Also:
     Task




  

 
	COMMUNICATING
    Reason for suspension is communication.
   
	DEADLINE
    Reason for suspension is that the Task has reached it's deadline

   
	ENDED
    Reason for suspension is end of task.
   
	IO
    Reason for suspension is I/O.
   
	SYNCHRONIZING
    Reason for suspension is synchronization.


  

 
	SuspendedTaskEvent(Object, EventDestination, int, int, int)
    Constructs an suspended task event.


  

 
	getReason()
    Returns the reason for suspension.
   
	toString()
    Returns a string representation of this object.



  


ENDED

 public static final int ENDED

 Reason for suspension is end of task.


IO

 public static final int IO

 Reason for suspension is I/O.


SYNCHRONIZING

 public static final int SYNCHRONIZING

 Reason for suspension is synchronization.


COMMUNICATING

 public static final int COMMUNICATING

 Reason for suspension is communication.


DEADLINE

 public static final int DEADLINE

 Reason for suspension is that the Task has reached it's deadline



  



SuspendedTaskEvent

 public SuspendedTaskEvent(Object from,
                           EventDestination to,
                           int time,
                           int peId,
                           int reason)

 Constructs an suspended task event.

   Parameters:
     from - sender of event.
     to - receiver of event.
     time - time stamp.
     peId - identifier for processing element sender runs on.
     reason - reason for suspension.
  


  


getReason

 public int getReason()

 Returns the reason for suspension.

   Returns:
     the reason for suspension.
  

toString

 public String toString()

 Returns a string representation of this object.

   Returns:
     a string representation of this object.
     Overrides:
     toString in class SimEvent
##------------------URL-------------------------##
http://www.ics.uci.edu/~smyth/courses/cs274/homeworks/New%20folder/
##-----------------TITLE------------------------##
Index of /~smyth/courses/cs274/homeworks/New folder
##------------------TEXT------------------------##
Index of /~smyth/courses/cs274/homeworks/New folder
NameLast modifiedSizeDescriptionParent Directory   -  
Apache/2.2.15 (CentOS) Server at www.ics.uci.edu Port 80
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/class/165/notes/avl2.html
##-----------------TITLE------------------------##
AVL
##------------------TEXT------------------------##
Insertion into an AVL Tree 

Balance factors are denoted as follows:
balance factormeaningdenoted by+1R subtree taller+0R,L equal height.-1L subtree taller-

(Heights of subtrees are indicated in parentheses.)

Let X be the deepest node whose balance factor has become "illegal". 
We consider the scenario in which X's balance factor has become too large, +2. 
(The scenario that X's balance factor has become too small, -2, can be
handled in a symmetric manner.) 
This illegal imbalance happened because X previously had a balance
factor of +1, and the insertion caused X's right subtree (headed by Y)
to increase in height. 
This height increase implies that Y had a balance factor of 0,
because otherwise either Y would not gain height or Y
would become illegally imbalanced. 
This scenario is illustrated below and devolves into 2 cases --
the insertion is made into Y's Right subtree or into Y's Left subtree.


                   X+
                  / \
                     Y
                    / \


Case 1: insertion into Y's Right subtree

This is cured by a single rotation, resulting in this subtree
having the same height as it did before the insertion.


           X+(h+2)              X++(h+3)                    Y.(h+2)
          / \                  / \          rotate         / \
       (h)1  Y.(h+1)        (h)1  Y+(h+2)   (XY)L    (h+1)X.  3(h+1)
            / \      ====>       / \        ====>        / \
           2   3                2   3                   1   2
          (h) (h)              (h) (h+1)               (h) (h)
               ^
               |
             insert


Case 2: insertion into Y's Left subtree

There are two possible subtrees of Z where the insertion
may take place that are treated similarly.

This is cured by a double rotation, resulting in this subtree
having the same height as it did before the insertion.


           X+(h+2)              X++(h+3)    double          Z.(h+2)
          / \                  / \          rotate         /  \
       (h)1  Y.(h+1)        (h)1  Y-(h+2)   (XYZ)L    (h+1)X.  Y+(h+1)
            / \      ====>       / \        ====>       / \    / \
        (h)Z.  4(h)        (h+1)Z-  4(h)   same as     1  2   3   4
          / \                  / \          (ZY)R     (h)(h) (h-1)(h)
         2   3                2   3         (XZ)L
      (h-1) (h-1)            (h) (h-1)
         ^
         |
       insert


           X+(h+2)              X++(h+3)    double          Z.(h+2)
          / \                  / \          rotate         /  \
       (h)1  Y.(h+1)       (h)1   Y-(h+2)   (XYZ)L    (h+1)X-  Y.(h+1)
            / \      ====>       / \        ====>       / \    / \
        (h)Z.  4(h)        (h+1)Z+  4(h)   same as     1  2   3   4
          / \                  / \          (ZY)R    (h)(h-1) (h) (h)
         2   3                2   3         (XZ)L
      (h-1) (h-1)          (h-1) (h)
             ^
             |
           insert
##------------------URL-------------------------##
http://www.ics.uci.edu/~maheshmn/conferences.html
##-----------------TITLE------------------------##
Recent and Upcoming Conferences
##------------------TEXT------------------------##
Recent and Upcoming Conferences
(arranged by submission deadline dates)



DateConference NameLocationSubmission DeadlineJune 15-19, 2004
               2004 Symposia on VLSI Technology and CircuitsHonolulu, HawaiiJan 10, 2004Aug 9-11, 2004
               International Symposium on Low Power Electronics and Design (ISLPED'04)Newport Beach, CAFeb 20, 2004Oct 3-6, 2004Custom Integrated
        Circuits Conference (CICC'04)Orlando, FLApr 5, 2004Sept 7-11, 2004
            Symposium on Integrated Circuits and Systems Design (SBCCI'04) BrazilApr 9, 2004Sept 8-10, 2004 International
        Symposium on System Synthesis (ISSS'04)Stockholm, Sweden Apr 12, 2004 Nov 7-11, 2004International
        Conference on Computer-Aided Design (ICCAD'04)San Jose, CAApril 21, 2004Sept 23-24, 2004
        International Conference on Compilers, Architecture, and Synthesis for Embedded Systems(CASES'04) Washington, DCMay 10, 2004Oct 11-13, 2004International
        Conference on Computer Design (ICCD'04)SanJose, CAMay 14, 2004Dec 6-8, 2004
        MICRO-37 Portland, ORMay 28, 2004Jan 3-7, 2005International
        Conference on VLSI Design (VLSI'05)Kolkata, IndiaJuly 10, 2004Jan 18-21, 2005
		     Asia South Pacific Design Automation Conference (ASP-DAC'05)Shangai, ChinaJuly 15, 2004Mar 7-11, 2005
            Design Automation and Test in Europe
        Munich, Germany Sept 8, 2004Feb 6-10, 2005
            IEEE International Solid-State Circuits Conference (ISSCC'05)
        San Francisco, CASept 20, 2004Mar 28-30, 2004 International
					Symposium on Quality Electronic Design (ISQED'05)SanJose, CASept 25, 2004May 23-26, 2004 International
        Symposium on Circuits and Systems (ISCAS'04)Vancouver, CanadaOct 5, 2003June 19-23, 2004
        International Symposium on Computer Architecture (ISCA'04)München, Germany Nov 7, 2003 Apr 18-21, 2004
        International Symposium on Physical Design (ISPD'02)Phoenix, AZDec 4, 2003June 7-11, 2004Design Automation
        Conference (DAC'04)San Diego, CA Nov 24, 2003Apr 26-28, 2004Great Lakes Symposium on VLSI (GLSVLSI'03)Boston, MA Dec 12, 2003


Last modified: June 4, 2004
##------------------URL-------------------------##
http://www.ics.uci.edu/~maheshmn/pubs.html
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Publications


Journal


 Mahesh Mamidipaka, Dan Hirschberg, and Nikil Dutt, "Adaptive Low power address encoding using
self-organizing lists", IEEE Transactions on VLSI Systems (TVLSI) , Pages: 827-834, Volume:11, Issue:5, Oct. 2003.  
 


 Prabhat Mishra, Mahesh Mamidipaka, and Nikil Dutt, " Processor-Memory
Co-exploration using an Architecture Description Language", , ACM Transactions on Embedded Computing Systems (TECS) , Pages: 143-162 , Volume: 3, Issue:1, Feb. 2004. 
 


Mahesh Mamidipaka, Kamal Khouri, Nikil Dutt, and Magdy Abadir, "IDAP: A Tool for High Level Power
Estimation of Custom Array Structures",  IEEE Transactions on CAD (TCAD)  (to appear in Sept. 2004). 
 




Conference


Mahesh Mamidipaka, Satrajit Gupta, and Mahesh Mehendale, "Improving Area  Efficiency of
Residue Number System(RNS) based implementation of DSP algorithms",  Proc. Int'l
Conference on VLSI Design(VLSID), Goa, India (1999). (* BEST STUDENT PAPER AWARD) 
 


 Mahesh Mamidipaka and Mahesh Mehendale, "Improving performance of high precision signal processing
on programmable DSPs",  Proc. IEEE Int'l Symposium on Circuits and Systems (ISCAS),
Orlando, Florida (1999). 
 


Mahesh Mamidipaka, Mahesh Mehendale, and Sunil Sherlekar, " Low Power Realization of Residue Number
System based FIR Filters",  Proc. Int'l conference on  VLSI design(VLSID),
Kolkota, India (2000). 
 


Mahesh Mamidipaka, Dan Hirschberg, and Nikil Dutt, "  Low power address encoding using
self-organizing lists ", Proc. ACM/IEEE Int'l Symp. on Low Power Electronics and Design(ISLPED),
Huntington Beach CA (2001). 
 


Mahesh Mamidipaka, Nikil Dutt, and Dan Hirschberg,"
Efficient power reduction techniques for time multiplexed address buses ",
Proc. 15th ACM Int'l Symp. on System Synthesis(ISSS), Kyoto (2002). 
 


Mahesh Mamidipaka, Nikil Dutt, and Kamal Khouri, "A Methodology for Accurate Modeling of Energy
Dissipation in Array Structures", Proc. Int'l conference on  VLSI design(VLSID),
New Delhi, India (2003). 
 


Mahesh Mamidipaka and Nikil Dutt, "On-chip Stack based Memory Organization for Low Power
Embedded Architectures",  Proc. of Design Automation and Test in Europe(DATE),
Messe Munich, Germany (2003). 
 


Mahesh Mamidipaka, Kamal Khouri, Nikil Dutt, and Magdy Abadir, "IDAP: A Tool for High Level Power
Estimation of Custom Array Structures ",  Proc. of Int'l Conference on Computer Aided Design (ICCAD),
San Jose, CA (2003). 
 


Mahesh Mamidipaka, Kamal Khouri, Nikil Dutt, and Magdy Abadir, "
Analytical Models for Leakage Power Estimation of Memory Array Structures ",
Proc. of Int'l Conference on Hardware/Software and Co-design and System Synthesis
(CODES+ISSS), Stockholm, Sweden (2004). 
 



Technical Reports

Mahesh Mamidipaka, Dan Hirschberg, and Nikil Dutt, "Encoding Techniques for
Low Power  Address Buses", Technical Report, University of California, Irvine, 2001. 
  


Prabhat Mishra, Mahesh Mamidipaka, and Nikil Dutt, "A Framework for Memory Subsystem
Exploration ", CECS Technical Report #02-19, University of California, Irvine, May 2002. 
 


Mahesh Mamidipaka, Kamal Khouri, Nikil Dutt, and Magdy Abadir, "Leakage Power Estimation in SRAMs ",
CECS Technical Report #03-32, University of California, Irvine, Sept 2003. 
 





Disclaimer





The above publications are covered by copyright.
Permission to make digital/hard copy of all or part of the above papers,
technical reports, and presentations for personal or
classroom use is granted without fee provided that copies are not made or
distributed for profit or commercial advantage. To copy otherwise,
to republish, to post on servers, or to redistribute to lists requires
prior specific permission.
##------------------URL-------------------------##
http://www.ics.uci.edu/~wmt/courses/Inf295F09/index.html
##-----------------TITLE------------------------##
Informatics 295
##------------------TEXT------------------------##
Inf 295: Environmental Issues in Information Technology
Fall 2009
Wednesdays 3:30-6:20pm
Location: DBH 1420

	
Instructor
Professor: Bill Tomlinson
Email: wmt@uci.edu
Office: Bren Hall 5068
Office Phone: (949) 824-9804
Office Hours: By appointment.
Course Web Site: http://www.ics.uci.edu/~wmt/courses/Inf295F09/
	
Overview
Explores the relationship between recent developments in information technology and current global environmental issues. Potential topics include sustainable interaction design, ecoinformatics, electronic waste, smart grid technologies, online community building, and others that emerge during the quarter. Course activities involve reading, discussion, and a final project.

	
Schedule

Week	Date	Topic	Student PresentersReadings Due	Assignments
	
1		Sept 30		Introduction 		  	 	
	
2		Oct 7		Environmental Costs of IT Systems(Electronic Waste, Power consumption)Nadine, Roberto		

1) IPCC
2) Climate Group
3) Chetty et al.
	 	
	
3		Oct 14		Sustainable Interaction DesignNadine, Sung, Kyle	
1) Blevis
2) McDonough and Braungart
3) Odom et al.		Select Teams for Final Project (Oct 15, 5pm)
	

4		Oct 21		Community/Politics	Sung, Six, Nazia, Nick
1) Dourish (by email)
2) Lauterbach et al.

3) CharityFocus
4 (optional)) Silberman	 		
	
5		Oct 28		Presentation of proposals		 		 		Present proposal for Final Project, due in class
	
	  6		Nov 4		Energy/Smart GridKyle, Rakesh, Roberto, Nick
1) Amin & Wollenberg
2) Byrne et al.
3) student-assigned readings	 	
	
7		Nov 11		Veteran's Day - No Class 	
	 		 
8		Nov 18		Globalization/DevelopmentSix, Nazia, Rakesh
1) Hawken et al. (Ch 1)
2) Student-assigned readings	 	
	
9		Nov 25 		Group meetings 	 		
			 
10		Dec 2		Presentation of Final Projects	 		 		Final Project presentation due
	
Exam
Week		Dec 9		No class		 		 		Report on Final Project due
	


	
Assignments, Handouts and Links

  Prof. Tomlinson or the students leading discussion will provide assignments at least a week before they are due.  Assignments are due in class on the due date specified, unless otherwise specified.
		
Readings

IPCC. (2007). Summary for Policymakers. Climate Change 2007: The Physical Science Basis. Contribution of Working Group I to the Fourth Assessment Report of the Intergovernmental Panel on Climate Change [Solomon, S., D. Qin, M. Manning, Z. Chen, M. Marquis, K.B. Averyt, M.Tignor and H.L. Miller (eds.)]. Retrieved from http://ipcc-wg1.ucar.edu/wg1/Report/AR4WG1_Print_SPM.pdf



Climate Group. (2008). SMART 2020: Enabling the low carbon economy in the information age. Retrieved March 3, 2009, from http://www.theclimategroup.org/assets/resources/publications/Smart2020Report.pdf


Chetty et al. 2009. It's not easy being green: understanding home computer power management ACM CHI.


Blevis, E. (2007) Sustainable interaction design: invention & disposal, renewal & reuse. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (San Jose, California, USA, April 28 - May 03, 2007). CHI '07. ACM Press, New York, NY, 503-512. 


McDonough, W. & Braungart, M. (2003) Remaking the way we make things. From The Handbook of Environmental Technology Management (Edward Elgar, 2004). 


Odom, W., et al. 2009. Understanding why we preserve some things and discard others in the context of interaction design. CHI 09.


Amin, S. M. & Wollenberg, B.F. (2005) Toward a smart grid: power delivery for the 21st century. Power and Energy Magazine, IEEE Volume 3,  Issue 5,  Sept.-Oct. 2005 Page(s):34 - 41 


Byrne, J., Martinez, C. & Ruggero, C. (2009) 

Relocating Energy in the Social Commons.
 Bulletin of Science, Technology & Society, Vol. 29, No. 2, 81-94. DOI: 10.1177/0270467609332315

Hawken, P., Lovins, A., & Lovins, L. H. (2000). Natural Capitalism: Creating the Next Industrial Revolution (1st ed., p. 416). Back Bay Books. Retrieved from http://www.natcap.org/images/other/NCchapter1.pdf

Szewczyk, R., Osterweil, E., Polastre, J., Hamilton, M., Mainwaring, A., & Estrin, D. (2004). Habitat monitoring with sensor networks. Commun. ACM, 47(6), 34-40. doi: 10.1145/990680.990704. 
	
	
		Grading
			
Class Presentations = 40%
Final Project = 40%
Class Participation = 20%
	
	
Computer and Network Use Policy
	
When working on UCI systems, you are bound by the UCI Computer and Network Use Policy.

	
Add/Drop
	
Students will not be permitted to add or drop this course after the beginning of class on October 7.  

	
Note
	
These are guidelines intended to help students plan their work in this course.  However, the instructor reserves the right to make changes to this syllabus over the course of the quarter.
##------------------URL-------------------------##
http://www.ics.uci.edu/~wmt/courses/Inf235S08/index.html
##-----------------TITLE------------------------##
Informatics 235
##------------------TEXT------------------------##
Inf 235: Advanced User Interface Architecture
Spring 2008
Mondays 9:00-11:50pm
Location: ICS 253

	
Instructor
Professor: Bill Tomlinson
Email: wmt@uci.edu
Office: Bren Hall 5068
Office Phone: (949) 824-9333
Office Hours: Tuesdays 1:00-2:00pm in Bren Hall 5068 or by appointment.
Course Web Site: http://www.ics.uci.edu/~wmt/courses/Inf235S08/
	
Overview
This course discusses architectural concerns in advanced interactive systems. In particular, the course this quarter will examine how environmental issues currently inform the architecture and design of user interfaces, and how these issues could affect them in the future.  In addition to seminar discussions, this course will include a significant implementation and/or analytical project to give students first-hand engagement with the material. 

	
Schedule

Week	Date	Topic	Readings Due	Assignments
	
1		March 31		Introduction 		 	 	
	
2		April 7		No Class - ACM CHI conference		None	 	
	
3		April 14		Sustainable Interface Design		Blevis + TBA		Select Teams (April 18)
	

4		April 21		Interfaces for Community Organizing		Mankoff + TBA	 		
	
5		April 28		Environmental Issues & Mobile Devices		Huang + TBA		 	
	
6		May 5		Presentation of proposals		None		Present proposal for Final Project, due in class
	
7		May 12		Ewaste & Recycling		Jain + TBA		 	
	
8		May 19		Presentation of prototypes		None		Present Final Project prototype, due in class
	
9		May 26 (Memorial Day -Class rescheduled to May 30, 9:00-11:50)		Globalization		Bowers + TBA	 		
	
10		June 2		Presentation of Final Projects		None		Final Project presentation due
	
Exam
Week		June 9		No class		None		Report on Final Project due
	


	
Assignments, Handouts and Links

	Prof. Tomlinson or the students leading discussion will provide assignments at least a week before they are due.  Assignments are due in class on the due date specified, unless otherwise specified.
		
Readings

	Blevis, E. (2007) Sustainable interaction design: invention & disposal, renewal & reuse. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (San Jose, California, USA, April 28 - May 03, 2007). CHI '07. ACM Press, New York, NY, 503-512. 

	
Mankoff, J, Matthews, D., Fussell, S. R., and Johnson, M. (2007) Leveraging Social Networks to Motivate Individuals to Reduce their Ecological Footprints. HICSS 2007.

	
Huang, E. M., Truong, K. N. (2008) Breaking the paradigm of disposable technology: Opportunities for sustainable interaction design for mobile phones.  To appear in the Proceedings of the ACM Conference on Human Factors in Computing Systems (CHI 2008). Florence, Italy.


	
Jain, R., Wullert J. (2002) Challenges: Environmental Design for Pervasive Computing Systems. Proc. Mobile Computing and Networking (2002), 263-270.

	
Bowers, C. (1990) How Computers Contribute to the Ecological Crisis. Computer Professionals For Social Responsibility, Vol. 8, 3, Summer 1990, pp. 5-8.  (only the Bowers section)

	
	
		Grading
			
Class Presentation = 40%
Final Project = 40%
Class Participation = 20%
	
	
Computer and Network Use Policy
	
When working on UCI systems, you are bound by the UCI Computer and Network Use Policy.

	
Add/Drop
	
Students will not be permitted to add or drop this course after the beginning of class on April 14.  

	
Note
	
These are guidelines intended to help students plan their work in this course.  However, the instructor reserves the right to make changes to this syllabus over the course of the quarter.
##------------------URL-------------------------##
http://www.ics.uci.edu/~granger/FAQ.html
##-----------------TITLE------------------------##
Brain Engineering Laboratory - FAQ
##------------------TEXT------------------------##
 





















 




 













Brain Engineering Laboratory: Frequently Asked Questions




 





















Q)  What is "brain engineering"?


 
The Brain Engineering Laboratory has as its goal a fundamental understanding of the brain: its mechanisms, operation, and behaviors.  There has been explosive growth of information about the brain from a broad range of fields including neuroanatomy, physiology, biochemistry and behavior, and tools from mathematics, computer science and engineering are brought to bear to make sense of the voluminous data.  Our laboratory contributes to these fields and uses these data in an integrative way to construct hypotheses of how the brain operates to enable us to think, perceive, feel, and act.  Inevitably, as a scientific field arrives at an understanding of its object of study, we are able to use the information in a proactive way: to construct synthetic models of the system, to enhance its effectiveness, and to fix it when it breaks.  For instance, as biological systems have become increasingly understood, it has become possible to diagnose diseases, to develop drugs to treat them, and to build devices that mimic and can even supplant their operation, such as artificial hearts and limbs.  The fields of medicine and pharmacology have grown from these fundamental biological findings.  The future of brain science will be no less productive, and no less dramatic in its effect on our understanding, and its influence on our day to day lives.


 




Q)  How are "Brain Engineering" and "Neural Networks" related?



A)  The field of neural networks began as psychologists and artificial intelligence researchers had been constructing computer models of human behavior, and noted a number of key facts: 


i) 
Tasks that were easiest for humans were hardest for computers (e.g., perception, language, planning), and tasks that were easiest for computers (e.g., "expert" systems, medical diagnosis, game playing) were hardest for humans.

ii) 
Difficult tasks such as recognizing a complex image (e.g., a face) could be accomplished by people in less than half a second; but brain cells (neurons) could only respond about every 10 milliseconds (one hundredth of a second), leaving time for only about 50-100 steps to accomplish recognition.  No one yet knows of a computer program that could carry out such a complex task in just 100 steps.  Therefore, the fact that millions of neurons operate together, in parallel with each other, may somehow be a key.

iii) 
Parallel computers were becoming possible to build, and all computers were becoming much faster, enabling larger and more complex systems to be built.


This led to the design of software systems that borrowed characteristics from brains, to explore new ways of computing.  These systems, variously termed "massively parallel" computing, "parallel distributed processing (PDP)," "connectionism," "brain-style" or "brain-like" computation, "artificial neural networks," or, eventually, just "neural networks," contained a few shared elements: many simple processors (like neurons), which could only process simple numbers (scalars), extensive connectivity among processors, parallel operation of all processors.  

Powerful statistical methods were developed within this framework, and the results have become used in a range of applications.  The question remained of the relationship between these new methods, and the mechanisms actually being carried out in the human brain.  Were the "artificial neural network" systems capturing the essence of brain computation, and only omitting characteristics that had biological roles, but added no important computational power?

Our lab and others investigate detailed designs of real brain areas, taking advantage of an explosion of new data and insights from the growing fields of neurobiology.  We have found that hitherto ignored details of the anatomical wiring diagrams and physiological operating mechanisms of brain circuits suggest powerful algorithms that bear little resemblance to those in neural networks, and indeed were unexpected from psychological or neuroscience studies.  For example, our models of superficial cortical layers perform the unexpectedly complex task of hierarchical clustering 
[Granger R. (2006) Engines of the brain: The computational instruction set of human cognition. AI Magazine.  (in press).]
 ; our cortical deep-layer models perform a type of hash coding  
[Rodriguez A, Whitson J, Granger R (2004) Derivation and analysis of basic computational operations of thalamocortical circuits.  J. Cognitive Neurosci, 16: 856-877.]
 ; hippocampal field CA3 performs time dilation  [Granger, R., Wiebe, S., Taketani, M., Ambros-Ingerson, J., Lynch, G.  (1997).  Distinct memory circuits comprising the hippocampal region. Hippocampus, 6: 567-578] ; the basal ganglia carry out a form of reinforcement learning
 
[Granger R. (2004) Brain circuit implementation: High-precision computation from low-precision components.  In:Replacement Parts for the Brain (T.Berger,Ed) MA: MIT Press.]
 ;
and so on.  Each of these algorithms, emergent from different brain structures, adds to the "tool kit" or instruction set of processes that might be carried out by the brain, and the resulting models have many attractive abilities and unusually low computational costs compared to other methods, including neural network methods.


 



Q)  How do you know that the brain areas you study are actually carrying out the computational operations that you think they are?




A)  Of course, we don't know; we and all scientists generate hypotheses from the extant data, and continue to test the hypotheses against new data as it arises.  We study particular brain circuits "bottom up", hoping that a circuit's natural operation will suggest the computation that it is carrying out.  As we construct simplified models, we try to be alert to biological features that, if added in, are consistent with (or even enhance) the hypothesized functions, or are inconsistent.  We also attempt as much as possible to identify predictions arising from the models that can be tested via biological or behavioral means, though it is rare that models are able to make specific enough predictions, or that such predictions are testable with any current methods.  Nonetheless, as new biological data occur, we continue to check the model against the known constraints, to either strengthen the model or modify it, or, if necessary, discard a refuted model for a particular brain structure, and begin again.


 



Q)  What experimental predictions of your models have you tested, either behaviorally or biologically?




A)  In the olfactory system, we have studied behavioral  [Granger, R., Staubli, U., Powers, H., Otto, T., Ambros-Ingerson, J., and Lynch, G. (1991). Behavioral tests of a prediction from a cortical network simulation. Psychol. Sci., 2: 116-118]  and physiological predictions
[McCollum, J., Larson, J., Otto, T., Schottler, F. Granger, R.,  and Lynch, G. (1991).  Short-latency single-unit processing in olfactory cortex. J. Cog. Neurosci., 3: 293-299] ; in the hippocampus we have identified a sequence-dependent form of long-term potentiation  [Granger, R., Whitson, J., Larson, J. and Lynch, G. (1994). Non-Hebbian properties of LTP enable high-capacity encoding of temporal sequences.   Proc. Nat'l. Acad. Sci.,  91: 10104-10108] ; and in behavioral tests of human visual thalamocortical processing, we have recently verified predictions from a thalamocortical model [Granger et al., submitted] .  In addition, we have done extensive behavioral studies of the nature of glutamatergic neurotransmitter receptors in the process of learning, via specific pharmacological manipulation of these receptors in animals  [Granger, R., Deadwyler, S., Davis, M., Moskowitz, B., Kessler, M., Rogers, G., and Lynch, G. (1996).  Facilitation of glutamate receptors reverses an age-associated memory impairment in rats. Synapse, 22: 332-337]  and in young and aged human subjects  [Lynch, G., Kessler, M., Rogers, G., Ambros-Ingerson, J., Granger, R. and Schehr, R. (1996).  Psychological effects of a drug that facilitates brain AMPA receptors.  Int J Clinical Psychopharmacol, 11: 13-19; Ingvar, M., Ambros-Ingerson, J., Davis, M., Granger, R., Kessler, M., Rogers, G, Schehr, R., and Lynch., G.  (1997).  Enhancement by an ampakine of memory encoding in humans.  Exper. Neurol., 146: 553-559; Lynch, G., Granger, R., Davis, M., Ambros-Ingerson, J., Kessler, M., Schehr, R.  (1997).  Evidence that a positive modulator of glutamate receptors improves recall in elderly human subjects. Experimental Neurol., 145: 89-92] .


 



Q)  If your models are actually doing what brain circuits do, then do they turn out to be useful methods for applications?




A) The algorithms derived from various brain areas have turned out to be so unexpectedly effective and efficient that they have found use in a variety of real-world applications, ranging from military to industrial to medical uses.  As examples, the Navy has used our systems to process signals from radar and other signal detectors  [Kowtha, V., Satyanarayana, P., Granger, R., and Stenger, D. (1994).  Learning and classification in a noisy environment by a simulated cortical network. Proc. Third Ann. Comp. & Neural Systems Conf.,  Boston: Kluwer, pp. 245-250] ; and a hardware and software system derived from our cortical models has been used to analyze EEG data in normal and early Alzheimer's subjects, as a potential device for aiding clinicians in the early detection of Alzheimer's Disease   [Benvenuto, J., Jin, Y., Casale, M., Lynch, G., Granger, R.  (2002).  Identification of diagnostic evoked response potential segments in Alzheimer¹s Disease.  Exper. Neurology, 176: 269-276; Granger, R.  (2001). Method and computer program product for assessing neurological conditions and treatments using evoked response potentials. U.S. Patent # 6,223,074 (54 claims)] .  

(See the "Applications" page on this site.)


 




Q)  What does "brain engineering" tell us about everyday thought?


 
If each sub-component of the brain has a particular engineering function, then what does that imply for the real use of the brain, which is thinking?  In other words, as we come to understand more about the mechanisms of the brain, will that help us understand how we think?  The answer is yes.

When we "think" about something, like getting ready for work in the morning, we are actually using a large number of distinct brain engines, all in concert, and it is their combined activity that is thought.  Each of the different brain areas modeled gives rise to a different constituent activity of thought, and areas working together can produce computational algorithms that are different from either of the parts independently.  The overall goal of brain engineering is to understand the nature of thought in terms of its constituent brain processes.  Significant strides have been taken, but this is a goal that may take many, many years to achieve.






 







      





 
Home | 
Brain Areas | 
Publications | 
Research |
Applications |
FAQ |
Contact 
 

 

© 2006 TSG.RHG



[GrangerLab]
 

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~granger/contact.html
##-----------------TITLE------------------------##
Brain Engineering Laboratory - Contact
##------------------TEXT------------------------##
 





















 




 













Brain Engineering Laboratory: Contact




 






















Affiliated faculty:


Prof. Pierre Baldi, Department of Computer Science  
Prof. Charles Chubb, Department of Cognitive Science 
Prof. James Fallon, Department of Anatomy and Neurobiology 
Prof. Richard Granger, Department of Computer Science 
Prof. Don Hoffman, Department of Cognitive Science 
Prof. Michael Pazzani, Department of Computer Science 
Prof. Fan-Gang Zeng, Department of Anatomy and Neurobiology 




Contact information:


Prof. R. Granger, Director
Brain Engineering Laboratory 
Computer Science Dept.
University of California 
Irvine, CA 92697-3425 

BELAB@ics.uci.edu

BrainEngineering.com  


 




 


  
.
. 
. 
. 
. 
. 
. 
. 





      


 
 






 
Home | 
Brain Areas | 
Publications |
Research |
Applications |
FAQ |
Contact
 

 

© 2005 TSG.RHG



[GrangerLab]
 


 
##------------------URL-------------------------##
http://www.ics.uci.edu/~granger/Applications.html
##-----------------TITLE------------------------##
Brain Engineering Laboratory - Applications
##------------------TEXT------------------------##
 























 




 













Brain Engineering Laboratory: Applications




 



















 
 
Applications. 
   The computational algorithms derived from brain circuit analysis research have, in some cases, led to methods that have found application in military, industrial, and medical domains.  A few examples follow:

 




Researchers at the U.S. Navy demonstrated that algorithms derived from paleocortex and hippocampus ("Cortical Algorithm" in the figure) outperformed competing methods on analysis and classification of complex signals.  [Kowtha, V., Satyanarayana, P., Granger, R., and Stenger, D. (1994).  Learning and classification in a noisy environment by a simulated cortical network. Proc. Third Ann. Comp. Neural Systems Conf.,  Boston: Kluwer, pp. 245-250].
 
 



Novel designs for new kinds of hardware devices (chips) have been constructed, and new ones are under development. [Hammerstrom, D. (2000). Computational Neurobiology Meets
Semiconductor Engineering.  2000 Conference on Multivalued Logic, IEEE Press].
 
 



Drugs for the treatment of glutamate-based diseases, including Alzheimer's, schizophrenia, ADHD, and autism, have been developed and shown effective in animal and human subjects.  The drug shown above, known in the laboratory as BDP-12, has now been used in extensive FDA-approved clinical tests around the country.  The graph shows significant improvement in the ability of elderly human subjects taking the drug, raising their recall level to that of healthy young subjects. 
[Lynch, G., Granger, R., Davis, M., Ambros-Ingerson, J., Kessler, M., Schehr, R.  (1997).  Evidence that a positive modulator of glutamate receptors improves recall in elderly human subjects. Experimental Neurology, 145: 89-92].
 
 



Novel methods based on thalamocortical algorithms have been used to analyze  data from an EEG-based (electroencephalographic) device, the NeuroGraph, to aid doctors in the early diagnosis of brain diseases such as Alzheimer's, schizophrenia, clinical depression, and ADHD.  These methods are undergoing continued testing in laboratories at major clinical sites in the U.S. and Europe.  [Benvenuto, J., Jin, Y., Casale, M., Lynch, G., Granger, R.  (2002).  Identification of diagnostic evoked response potential segments in Alzheimer's Disease.  Experimental Neurology, 176: 269-276].
 





 



Interview on CNN Headline News discussing the NeuroGraph







 


Summary   

Analysis of a number of important human brain circuits has led to specific and distinct hypotheses of their functions.  Simulations at various levels of simplification and abstraction have demonstrated substantial computational power and efficiency of the hypothesized operations.  
 
Extensive mathematical characterization of these functions, and comparison with related algorithms have been performed and published in scientific journals.  
 
Many of the resulting derived algorithmic methods have led to applications in military, commercial, and medical domains.
 
Specific anatomical, physiological, and behavioral predictions have been tested in animal and human experiments, with results that support the growing body of hypotheses.  
 
Further construction of computational simulation systems, more extensive mathematical analyses, and continued empirical testing of biological and behavioral predictions, are ongoing in our laboratory.
 



      
     
 
 




 
Home | 
Brain Areas |
Publications | 
Research |
Applications |
FAQ |
Contact 
 

 

© 2005 TSG.RHG



[GrangerLab]
 

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~granger/Research1Intro.html
##-----------------TITLE------------------------##
Brain Engineering Laboratory - Research
##------------------TEXT------------------------##
 





















 




 













Brain Engineering Laboratory: Research




 






















Research Part 1: Introduction

Research Part 2: Paleocortical precursors

Research Part 3: Synaptic long term potentiation (LTP) 

Research Part 4: Neocortex

Research Part 5: Applications

 
 


 1. Introduction and Timeline 


Executive Summary   

Analysis of a number of important human brain circuits has led to specific and distinct hypotheses of their functions.  Simulations at various levels of simplification and abstraction have demonstrated substantial computational power and efficiency of the hypothesized operations.  

Extensive mathematical characterization of these functions, and comparison with related algorithms have been performed and published in scientific journals.  

Many of the resulting derived algorithmic methods have led to applications in military, commercial, and medical domains.

Specific anatomical, physiological, and behavioral predictions have been tested in animal and human experiments, with results that support the growing body of hypotheses.  

Further construction of computational simulation systems, more extensive mathematical analyses, and continued empirical testing of biological and behavioral predictions, are ongoing in our laboratory.


 


 
 
Timeline of selected research highlights
  
 


 
 
1990 - 1991
  
 
 
» Simulations of olfactory bulb and paleocortex identify novel hypothesis of olfactory perceptual function



Ambros-Ingerson, J., Granger, R., and Lynch, G. (1990). Simulation of paleocortex performs hierarchical clustering.  Science, 247: 1344-1348. 

Granger, R., and Lynch, G. (1991).  Higher olfactory processes: Perceptual learning and memory. Current Opin. Neurosci., 1: 209-214. 




  » Behavioral and electrophysiological predictions tested in freely moving animals



Granger, R., Staubli, U., Powers, H., Otto, T., Ambros-Ingerson, J., and Lynch, G. (1991). Behavioral tests of a prediction from a cortical network simulation. Psychol. Sci., 2: 116-118. 

McCollum, J., Larson, J., Otto, T., Schottler, F. Granger, R.,  and Lynch, G. (1991).  Short-latency single-unit processing in olfactory cortex. J. Cognitive Neurosci., 3: 293-299.  






 

 
 
1992 - 1994
  
 

 » Network modeling of excitatory-inhibitory physiological interaction in cortex



Coultrip, R., Granger, R., and Lynch, G. (1992).  A cortical model of winner-take-all competition via lateral inhibition. Neural Networks, 5: 47-54. 

Anton, P., Granger, R., and Lynch, G. (1993). Simulated dendritic spines influence reciprocal synaptic strengths and lateral inhibition in the olfactory bulb. Brain Res., 628: 157-165.  




 » Identifcation of 'ampakines': a novel class of centrally-active compounds that act at ampa-type glutamate receptors, which are the most numerous neurotransmitter receptor type in the human brain
 


Granger, R., Staubli, U., Davis, M., Perez, Y., Nilsson, L., Rogers, G., and Lynch, G. (1993). A drug that facilitates glutamatergic transmission reduces exploratory  activity and improves performance in a learning-dependent task. Synapse, 15: 326-329. 






 

 
 
1994 - 1996
  
 

 » derivation of advanced temporal sequence algorithms, and Bayes classification methods, from brain circuits
 


 Granger R, Whitson J, Larson J, Lynch G (1994)  Non-Hebbian properties of LTP enable high-capacity encoding of temporal sequences.   Proc. Nat'l. Acad. Sci.,  91: 10104-10108.   

 Coultrip, R. and Granger, R. (1994). LTP learning rules in sparse networks approximate Bayes classifiers via Parzen's method.  Neural Networks, 7: 463-476.  




 » Modeling of hippocampal fields CA1, CA3, dentate, and entorhinal cortex



 Granger R, Wiebe S, Taketani M, Ambros-Ingerson J, Lynch G.  (1996).  Distinct memory circuits comprising the hippocampal region.  Hippocampus, 6: 567-578. 

 Kilborn, K., Lynch, G., and Granger, R.  (1996).  Effects of LTP on response selectivity of simulated cortical neurons.  J. Cognitive Neurosci., 8: 328-343.  







 

 
 
1996 - 1998
  
 

 » Human and animal studies demonstrating amelioration of age-related deficits via glutamatergic receptor modulation


 Granger, R., Deadwyler, S., Davis, M., Moskowitz, B., Kessler, M., Rogers, G., and Lynch, G. (1996).  Facilitation of glutamate receptors reverses an age-associated memory impairment in rats. Synapse, 22: 332-337. 

 Lynch, G., Granger, R., Davis, M., Ambros-Ingerson, J., Kessler, M., Schehr, R.  (1997).  Evidence that a positive modulator of glutamate receptors improves recall in elderly human subjects. Experimental Neurology, 145: 89-92

 Ingvar M, Ambros J, Davis M, Granger R, Kessler M, Rogers G, Schehr R, Lynch G.  (1997). Enhancement by an ampakine of memory encoding in humans.  Exper Neurol, 146: 553-559. 







 

 
 
1999 - 2001
  
 

 » Novel brain activity assay based on in-situ hybridization of immediate-early genes (IEGs)



Lynch, G., Granger, R., Gall, C., Palmer, L. (2000).  Assay for determination of neuronal activity in brain tissue.  U.S. Patent # 5,998,139 (6 claims). 

Hess U, Granger R, Lynch G, Gall C (1997) Differential patterns of c-fos mRNA expression in amygdala during successive stages of odor discrimination learning.  Learning & Memory 4: 262-283. 





 » Novel method for 2-D current source density analysis for localization of electrophysiological activity



Shimono K, Brucher F, Granger R, Lynch G, Taketani M  (2000)  Origins and distribution of cholinergically induced beta rhythms in hippocampal slices.  J. Neuroscience 20: 8462-8473. 

Shimono, K., Taketani, M., Brucher, F., Kubota, D., Colgin, L., Robertson, S., Granger R., Lynch, G.  (2001).  Continuous two-dimensional current-source density analyses of electrophysiological activity in hippocampal slices.  Neurocomputing 38: 899-905. 





 » Novel methods for EEG-based neurological diagnostics 



Granger R (2001) Method and computer program product for assessing neurological conditions and treatments using evoked response potentials. U.S. Patent # 6,223,074 (54 claims).  

Granger, R., and Lynch, G. (2001).  Method and apparatus for assessing susceptibility to stroke.  U.S. Patent # 6,280,393 (17 claims).  






 

 
 
2002 - 2003
  
 

 » Benzothiadiazides: A new family of glutamate receptor compounds



Phillips, D, Sonnenberg, J, Arai, A, Vaswani, R, Krutzik, P, Kleisli, T, Kessler, M, Granger, R, Lynch, G, Chamberlin, R (2002).  5'-Alkyl-benzothiadiazides: A new subgroup of AMPA receptor modulators with improved affinity.  Bioorganic & Medicinal Chem. 10: 1229-1248.  

Arai, A, Yan-Fang, X, Kessler, M, Phillips, D, Chamberlin, R, Granger, R, Lynch, G. (2002). Effects of 5'-Alklyl-Benzothiadiazides on AMPA receptor biophysics and synaptic responses. Molecular Pharmacology, 62: 566-577. 




 »  Clinical demonstration of EEG-based diagnostic in Alzheimer's patients



Granger, R. (2001).  NeuroGraph Evoked Potential System.  Food and Drug Administration (FDA) 510(k) clearance #K010669. 

Benvenuto J, Jin Y, Casale M, Lynch G, Granger R (2002) Identification of diagnostic evoked response potential segments in Alzheimer¹s Disease.  Exper. Neurology, 176: 269-276.  





 

 
 
2004-2005
  
 

 » Integrative modeling of thalamo-cortico-striatal processing 



 Rodriguez A, Whitson J, Granger R (2004) Derivation and analysis of basic computational operations of thalamocortical circuits.  J. Cognitive Neurosci, 16: 856-877.   
 Granger R, Petrovic S, Felch A, Kerr J, Johnson M, Wuerth C, Benvenuto J. (2004) Engines of the brain: The computational instruction set of perception and cognition.  MIT AAAI Symposium (P.Winston, Ed). CA: AAAI Press. 
 Granger R. (2004) Brain circuit implementation: High-precision computation from low-precision components.  In:Replacement Parts for the Brain (T.Berger,Ed) MA: MIT Press.  













      
     
 
 




 
Home | 
Brain Areas |
Publications | 
Research |
Applications |
FAQ |
Contact 
 

 

© 2005 TSG.RHG



[GrangerLab]
 

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~granger/brainareas.html
##-----------------TITLE------------------------##
Brain Engineering Laboratory - Brain Areas
##------------------TEXT------------------------##
 





















 




 













Brain Engineering Laboratory: Brain Areas




 





















Brain Areas

When the mammals diverged from the reptiles, some 200 million years ago, one portion of the reptilian brain, the olfactory paleocortex, became the precursor of the ensuing elaboration and expansion of the brain.  The newly created structure, the neocortex, became the largest component of the new mammalian brains.  Neocortex takes up more than 30% of a rodent's brain, and the bigger the brain, the larger the percentage of it allometrically that is neocortex, so that more than 70% of a human brain is neocortical.  

In the following figure, examples of brains of reptiles, birds, and two mammals are shown (not to scale).  Whereas avian brain expands a reptilian structure called the dorsal ventricular ridge (DVR), the mammals elaborate and expand the reptilian paleocortex (part of the reptilian pallium) to become the new mammalian neocortex, and its expansion continues through human brains (which have the largest brain weight per body weight of any mammal).





Despite the increased amount of neocortex, the overall circuit design of the entire forebrain (telencephalon) is remarkably conserved across all mammals.  The next figure schematically illustrates the primary components of the telencephalon and their major input and output connections.






The neocortex, and its extensive reciprocal connections with thalamus, is the dominant circuit in our brains; the same pattern of connections is repeated over and over, with only slight variation, throughout the brain.  This figure illustrates the primary substructures and connectivity in thalamocortical circuits.  The schematic on the left shows the layers and primary intra- and inter-laminar connections among thalamus and cortex; the right shows a simplified outline of this that has become the basis for thalamocortical models.











      
      
 
 




 
Home | 
Brain Areas | 
Publications | 
Research |
Applications |
FAQ |
Contact 
 

 

© 2003 TSG.RHG



[GrangerLab]
 

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~granger/publications.html
##-----------------TITLE------------------------##
Brain Engineering Laboratory - Publications
##------------------TEXT------------------------##
 





















 




 













Brain Engineering Laboratory: Publications




 






















Selected recent publications:

Granger R (2005) Engines of the Brain: The computational instruction set of human cognition.  AI Journal (In press).  
  pdf 
 

Rodriguez, A., Whitson, J., Granger, R. (2004). Derivation and analysis of basic computational operations of thalamocortical circuits.  Journal of Cognitive Neuroscience, 16: 856-877.
  pdf 
 

Granger R. (2004)  Brain circuit implementation: High-precision computation from low-precision components.  In: Toward Replacement Parts for the Brain (T.Berger, D.Glanzman, Eds.)  Mass: MIT Press., pp.277-294.
  pdf 


Granger, R.  (2003).  Neural Computation: Olfactory cortex as a model for telencephalic processing.  Learning & Memory (J.Byrne, Ed.), pp.445-450.
  pdf  
 
Benvenuto, J., Jin, Y., Casale, M., Lynch, G., Granger, R.  (2002).  Identification of diagnostic evoked response potential segments in Alzheimer¹s Disease.  Exper. Neurology, 176: 269-276.
  pdf 

Phillips, D, Sonnenberg, J, Arai, A, Vaswani, R, Krutzik, P, Kleisli, T, Kessler, M, Granger, R, Lynch, G, Chamberlin, R (2002).  5'-Alkyl-benzothiadiazides: A new subgroup of AMPA receptor modulators with improved affinity.  Bioorganic & Medicinal Chem. 10: 1229-1248.
  pdf 

Arai, A, Yan-Fang, X, Kessler, M, Phillips, D, Chamberlin, R, Granger, R, Lynch, G. (2002).  Effects of 5'-Alklyl-Benzothiadiazides on AMPA receptor biophysics and synaptic responses.  Molecular Pharmacology, 62: 566-577.
  pdf 


Shimono, K., Taketani, M., Brucher, F., Kubota, D., Colgin, L., Robertson, S., Granger R., Lynch, G.  (2001).  Continuous two-dimensional current-source density analyses of electrophysiological activity in hippocampal slices.  Neurocomputing 38: 899-905.
  pdf 

Granger, R.  (2001). Method and computer program product for assessing neurological conditions and treatments using evoked response potentials. U.S. Patent # 6,223,074 (54 claims).

Granger, R., and Lynch, G. (2001).  Method and apparatus for assessing susceptibility to stroke.  U.S. Patent # 6,280,393 (17 claims).

Granger, R. (2001).  NeuroGraph Evoked Potential System.  Food and Drug Administration (FDA) 510(k) clearance #K010669. 

Shimono, K., Brucher, F., Granger, R., Lynch, G., and Taketani, M.  (2000).  Origins and distribution of cholinergically induced beta rhythms in hippocampal slices.  J. Neuroscience 20: 8462-8473.
  pdf 

Lynch, G., Granger, R., Gall, C., Palmer, L. (2000).  Assay for determination of neuronal activity in brain tissue.  U.S. Patent # 5,998,139 (6 claims).

Lynch, G., and Granger, R.  (2000).  Method for treating sexual dysfunctions.  U.S. Patent #  6,083,947 (33 claims).

Davis, M. Ambros-Ingerson, J., Granger, R., Wu, J., Zabaneh, R., Abdelnaby, M, and Lynch, G.  (1998).  Triazolam impairs delayed recall but not acquisition of various everyday memory tasks in humans.  Experimental Neurol., 148: 124-134.
  pdf 

Kilborn, K., Kubota, D., Lynch, G, and Granger, R.  (1998).  Parameters of LTP induction modulate network categorization behavior.  In: Computational Neurosci (NY: Plenum), 353-358.

Davis, M., Moskovitz, B., Nguyen, M., Lynch, G., Rogers, G., Granger, R. (1997).  A profile of the behavioral changes produced by facilitation of AMPA-type glutamate receptors.  Psychopharmacology, 133: 161-167.

Garzotto, A., Aleksandrovsky, B., Lynch, G., Granger, R.  (1997).  A neocortically derived model of continuous contextual processing.  IEEE Press, Proc. Int¹l Conf Neural Networks, 1: 564-568.

16. Aleksandrovsky, B., Brucher, F., Lynch, G., Granger, R.  (1997).  Neural network model of striatal complex.  In: Biological and Artificial Computation: From Neuroscience to Technology. Int¹l Conf on Artificial and Natural Neural Networks, Berlin: Springer-Verlag, pp.104-115.

Hess, U.S., Granger, R., Lynch, G., Gall, C.M.  (1997). Differential patterns of c-fos mRNA expression in amygdala during successive stages of odor discrimination learning.  Learning and Memory, 4: 262-283.

Lynch, G., Granger, R., Davis, M., Ambros-Ingerson, J., Kessler, M., Schehr, R.  (1997).  Evidence that a positive modulator of glutamate receptors improves recall in elderly human subjects. Experimental Neurol., 145: 89-92.

Ingvar, M., Ambros-Ingerson, J., Davis, M., Granger, R., Kessler, M., Rogers, G, Schehr, R., and Lynch., G.  (1997).  Enhancement by an ampakine of memory encoding in humans.  Exper. Neurol., 146: 553-559.
  pdf 

Granger, R., Wiebe, S., Taketani, M., Ambros-Ingerson, J., Lynch, G.  (1996).  Distinct memory circuits comprising the hippocampal region. Hippocampus, 6: 567-578.
  pdf 

Kilborn, K., Lynch, G., and Granger, R.  (1996).  Effects of LTP on response selectivity of simulated cortical neurons.  J. Cog. Neurosci., 8: 328-343.
  pdf 

Aleksandrovsky, B., Whitson, J., Andes, G., Lynch, G., Granger, R. (1996).  Novel speech processing mechanism derived from auditory neocortical circuit analysis. IEEE Press, Proc. ICSLP Int¹l Conf. on Spoken Language, 1: 558-561.

Lynch, G., Kessler, M., Rogers, G., Ambros-Ingerson, J., Granger, R. and Schehr, R. (1996).  Psychological effects of a drug that facilitates brain AMPA receptors.  Int J Clinical Psychopharmacol, 11: 13-19.

Granger, R., Deadwyler, S., Davis, M., Moskowitz, B., Kessler, M., Rogers, G., and Lynch, G. (1996).  Facilitation of glutamate receptors reverses an age-associated memory impairment in rats. Synapse, 22: 332-337.

Aleksandrovsky, B., Whitson, J., Garzotto, A, Lynch, G., Granger, R. (1996).  An algorithm derived from thalamocortical circuitry stores and retrieves temporal sequences.  IEEE Comp.Soc.Press, Proc. Int¹l Conf. Pattern Recog., 4: 550-554.

Myers, C., Gluck, M., and Granger, R. (1995).  Dissociation of hippocampal and entorhinal function in associative  learning: A computational approach.  Psychobiology, 23: 116-138.

Ozeki, T., Shouval, H., Intrator, N. and Granger, R. (1995).  Analysis of a temporal sequence learning network based on the property of LTP induction.  In: Int'l Symposium on Nonlinear Theory, Las Vegas.

Granger, R. and Lynch, G. (1994).  Cognitive modularity: Computational division of labor in the brain.  In: The Handbook of Neuropsychology, New York: Academic Press. 9: 263-277.

Kowtha, V., Satyanarayana, P., Granger, R., and Stenger, D. (1994).  Learning and classification in a noisy environment by a simulated cortical network. Proc. Third Ann. Comp. & Neural Systems Conf.,  Boston: Kluwer, pp. 245-250.

Coultrip, R. and Granger, R. (1994). LTP learning rules in sparse networks approximate Bayes classifiers via Parzen's method.  Neural Networks, 7: 463-476.

Granger, R., Whitson, J., Larson, J. and Lynch, G. (1994). Non-Hebbian properties of LTP enable high-capacity encoding of temporal sequences.   Proc. Nat'l. Acad. Sci.,  91: 10104-10108.

Gluck, M. and Granger, R. (1993). Computational models of the neural bases of learning and memory. Ann. Rev. Neurosci. 16: 667-706.

Granger, R., Staubli, U., Davis, M., Perez, Y., Nilsson, L., Rogers, G., and Lynch, G. (1993).  A drug that facilitates glutamatergic transmission reduces exploratory  activity and improves performance in a learning-dependent task. Synapse, 15: 326-329.

Anton, P., Granger, R., and Lynch, G. (1993). Simulated dendritic spines influence reciprocal synaptic strengths and lateral inhibition in the olfactory bulb. Brain Res., 628: 157-165.

Anton, P., Granger, R. and Lynch, G. (1992).  Temporal information processing in synapses, cells and circuits.  In: Single neuron computation, (McKenna, Davis and Zornetzer, Eds.), NY: Academic Press, 291-313.

Coultrip, R., Granger, R., and Lynch, G. (1992).  A cortical model of winner-take-all competition via lateral inhibition. Neural Networks, 5: 47-54.

Lynch, G. and Granger, R. (1992). Variations in synaptic plasticity and types of memory in cortico-hippocampal networks. J. Cog. Neurosci., 4: 189-199.

Anton, P., Lynch, G., and Granger, R. (1991).  Computation of frequency-to-spatial transform by olfactory bulb glomeruli.  Biol. Cybern., 65: 407-414.

Granger, R., and Lynch, G. (1991).  Higher olfactory processes: Perceptual learning and memory. Current Opin. Neurosci., 1: 209-214.

Granger, R., Staubli, U., Powers, H., Otto, T., Ambros-Ingerson, J., and Lynch, G. (1991). Behavioral tests of a prediction from a cortical network simulation. Psychol. Sci., 2: 116-118.

McCollum, J., Larson, J., Otto, T., Schottler, F. Granger, R.,  and Lynch, G. (1991).  Short-latency single-unit processing in olfactory cortex. J. Cog. Neurosci., 3: 293-299.

Lynch, G., Larson, J., Staubli, U., Ambros, J., and Granger, R. (1991).  Long-term potentiation and memory operations in cortical networks.  In  Perspectives on Cognitive Neuroscience, Lister, R., and Weingartner, H. (Eds.), New York: Oxford Univ. Press, 110-131.

Granger, R., Staubli, U., Ambros-Ingerson, J., and Lynch, G. (1991).  Specific behavioral predictions from simulations of the olfactory system.  In: Olfaction as a model system for computational neuroscience, (H.Eichenbaum and J.Davis, Eds.), Cambridge: MIT Press.

Lynch, G., Granger, R., and Larson, J. (1990). Empirically derived synaptic learning rules and the phenomenology of  memory. FESN Discussions in Neuroscience, 6: 85-89.

Lynch, G. and Granger, R. (1990).  Olfactory rhythms and the encoding of memory.   Proc. 10th Internat. Symp. on Olfaction and Taste, Oslo, Norway, 246-264.

Ambros-Ingerson, J., Granger, R., and Lynch, G. (1990). Simulation of paleocortex performs hierarchical clustering.  Science, 247: 1344-1348.









      



      
 
 






 
Home | 
Brain Areas | 
Publications | 
Research |
Applications |
FAQ |
Contact 
 

 

© 2005 TSG.RHG



[GrangerLab]
 

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~granger/index.html
##-----------------TITLE------------------------##
Brain Engineering Laboratory - Home
##------------------TEXT------------------------##
 























 




 















The Brain Engineering Laboratory has moved to DARTMOUTH!

Please click here for the new site: 

The Brain Engineering Laboratory at Dartmouth




 
























Director: Prof. Richard Granger 
Computer Science and Cognitive Science Departments 



Background: 


Our brains enable us effortlessly to recognize objects, voices, locations, people, and actions, and to use this information to plan and act in pursuit of our goals.  It's easy: these tasks are so natural for us that we don't notice ourselves working at them.

Yet hundreds of billions of dollars have been spent trying to get computers to perform these tasks.   If we had machines that could understand sights and sounds as we do, we would be able to build systems that could automatically drive a car, or understand phone messages, or help bedridden patients get things from the fridge.   

The only reason we can effortlessly perform these tasks is that we are using an engine that is the most complex object in the known universe.  Our brains are far more intricate than a nuclear reactor, or a supercomputer, or a Mars lander.  To understand them requires collaboration among multiple specialties, including neuroanatomy, physiology, biochemistry, psychology, mathematics, computation and engineering.

Our laboratory studies the detailed anatomical structure, physiological mechanisms, and pharmacology of specific brain circuits, analyzing their operations, constructing and testing mathematical and computational models, and building applications.

Based on the biological rules that our brains use to learn and remember, novel and powerful computational systems have been developed that encode, organize, retrieve, and use information.  

As might be expected of circuitry evolved to process complex environmental information, these systems have been shown to recognize complex signals to a degree that has matched or exceed the capabilities of more conventional approaches, in tests carried out in government, commercial, and medical settings, and versions of these systems are now under development for applications in a range of domains.

As the mechanisms underlying our thoughts and actions become clearer, we inevitably will gain insights into our own perceptions and motivations.  Deepening our scientific understanding of the brain will also aid us in our struggle against the many maladies that can disastrously affect it, from Alzheimer's Disease to schizophrenia.  Our work has involved us closely in the development of new drugs that are under active investigation in the pharmaceutical industry, and new diagnostic methods that are being clinically tested as aids to doctors for the earliest possible identification of brain diseases.





      



      
 
 






 
Home | 
Brain Areas | 
Publications | 
Research | 
Applications |
FAQ |
Contact 
UC Irvine
 

 

© 2003 TSG.RHG



[GrangerLab]
 

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~pazzani/Publications/Publications.html
##-----------------TITLE------------------------##
Michael J. Pazzani: Publications
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~pazzani/Publications/OldPublications.html
##-----------------TITLE------------------------##
Michael Pazzani: Publications on Machine Learning, KDD and Artificial Intelligence
##------------------TEXT------------------------##
Michael J. Pazzani

Department of Information and Computer Science 

University of California, Irvine, CA 92697 

phone: (949) 824-7405 fax: (949) 824-4056

URL: http://www.ics.uci.edu/~pazzani

e-mail: pazzani@ics.uci.edu



 This publication list uses antiquated HTML technology.  Why not
use an intelligent agent to recommend publications.  Go to http://www.ics.uci.edu/~pazzani/Publications/Publications.html


PUBLICATIONS

|2003 |
2002 |
2001 |
2000 |
1999 |
1998 |
1997 |
1996 |
1995 |
1994 |
1993 |
1992 |
1991 |
1990 | 
|
1989 |
1988 |
1987 |
1986 |
1985 |
1984 |
1983 |
2003
Keogh, E., Chu, S., Hart, D., Pazzani, M. Segmenting Time Series: A Survey and Novel Approach.     
Data Mining in Time Series Databases. World Scientific Publishing Company PDF

2002

Daniel Billsus, Clifford A. Brunk, Craig Evans, Brian Gladish and Michael Pazzani (2002). 
Adaptive interfaces for ubiquitous web Communications of The ACM, May 2002, Vol 45, No 5. pg 34-38. 
PDF

Chu, S., Keogh, E., Hart, D., Pazzani, M. (2002). Iterative Deepening Dynamic Time Warping for Time Series. 
The Second SIAM International Conference on Data Mining (SDM-02), 2002. PDF



 Pazzani, M. and Billsus, D. (2002). Adaptive Web Site Agents. Journal of Agents and Multiagent systems,5(2)  205-218 
PDF
 TEST OF GOOGLE ADWORDS







 Keogh, E., , K., Mehrotra S. & Pazzani, M  (2002). 
Locally adaptive dimensionality reduction for indexing large time series databases. 
ACM Transactions on Database Systems, 27(2) 188-228.
PDF

Keogh, E. & Pazzani, M. (2002). Learning the Structure of Augmented Bayesian Classifiers. 
International Journal on Artificial Intelligence Tools. Vol 11. No 4, 587-601. 
PDF

 Miyahara, K. and Pazzani, M. J.  (2002).   Improvement of Collaborative Filtering with the Simple   
Bayesian Classifier. IPSJ Journal, Vol.43, No.11, Information Processing Society of Japan,  November, 2002 
PDF

Pazzani, M. (2002). Commercial Applications of Machine Learning for personalized wireless portals. Pacific Rim Conference on Artificial Intelligence, Springer. Pp 1-5.
PDF

2001



 Bay, S. D. and Pazzani, M. J. (2001). Detecting Group Differences: Mining Contrast Sets. 
 Data Mining and Knowledge Discovery.  Vol 5, No 3 213-246. PDF.


Bay, S. D., Kibler, D., Pazzani, M. J., and Smyth, P. (2001). 
The UCI KDD Archive of Large Data Sets for Data Mining Research and Experimentation. 
In Information Processing Society of Japan Magazine. Volume 42, Number 5, pages 462-466. 
English language version reprinted in SIGKDD Explorations. Volume 2, Issue 2, pages 81-85, 2000. 
PDF.

Keogh, E., Chu, S., Hart, D. & Pazzani, M. (2001). An Online Algorithm for Segmenting Time Series. IEEE International Conference on Data Mining. PDF


Keogh, E., Chu, S.,  & Pazzani, M. (2001). Ensemble-Index: A New Approach to Indexing Large Databases. In 7th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, San Francisco. 
PDF

Keogh, E., Chakrabarti, K., Pazzani, M., &  Mehrotra (2001). Locally adaptive dimensionality reduction for indexing large time series databases. SIGMOD 2001. Best paper award. PDF

Keogh, E., S. Chu & Pazzani, M. (2001). Using ensembles of representations for indexing large databases. International Workshop on Mining Spatial and Temporal data. In conjunction with the Fifth Pacific-Asia Conference on Knowledge Discovery and Data Mining (PAKDD-01). 
PDF

Keogh, E. & Pazzani, M. (2001). Derivative Dynamic Time Warping. In First SIAM International Conference on Data Mining (SDM'2001), Chicago, USA. PDF

M. J. Pazzani, S. Mani, W. R. Shankle (2001). Acceptance of Rules Generated by Machine Learning among Medical Experts. Methods of Information in Medicine; 40: 380-385. PDF

George Buchanan, Sarah Farrant, Matt Jones, Harold W. Thimbleby, Gary Marsden, Michael J. Pazzani: Improving mobile internet usability. WWW 2001: 673-680.
HTML
PDF

G. Webb, Michael J. Pazzani, Daniel Billsus, (2001).Machine learning for user modeling. 
 User Modeling and User-Adapted Interaction 11: 19-20, 2001. 
PDF

2000
 Bay, S. D. and Pazzani, M. J. (2000). Discovering and Describing Category Differences: What makes a discovered difference insightful?. In  Proceedings of the Twenty Second Annual Meeting of the Cognitive Science Society. PDF.

Keogh, E., Chakrabarti, K., Pazzani, M. &  Mehrotra, S (2000) Dimensionality Reduction for Fast Similarity Search in Large Time Series Databases. Knowledge and Information Systems  3(3): 263-286. PDF

Bay, S. D. and Pazzani, M. J. (2000). Characterizing Model Errors and Differences. In Proceedings of the Seventeenth International Conference on Machine Learning. PDF.

Bay, S. D. and Pazzani, M. J. (2000). Characterizing Model Performance in the Feature Space. In ICML 2000 Workshop on What Works Well Where?. PDF.

Keogh, E. & Pazzani, M. (2000) Scaling up Dynamic Time Warping for Datamining Applications. In 6th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, Boston, 2000. PDF

Keogh, E. & Pazzani, M. (2000) A simple dimensionality reduction technique for fast similarity search in large time series databases.In the Fourth Pacific- Asia Conference on Knowledge Discovery and Data Mining. Kyoto, Japan. PDF.

Michael J. Pazzani: Representation of electronic mail filtering profiles: a user study. Intelligent User Interfaces 2000: 202-206 PDF

Daniel Billsus, Michael J. Pazzani, James Chen: A learning agent for wireless news access. Intelligent User Interfaces 2000: 33-36 PDF


Koji Miyahara, Michael J. Pazzani: Collaborative Filtering with the Simple Bayesian Classifier. PRICAI 2000: 679-689 PDF.


Pazzani, M. (2000).  Learning with Globally Predictive Tests.  New Generation Computing 18(1): 28-38
PDF
Postscript

Pazzani, M. (2000).   Knowledge discovery from data? IEEE Intelligent Systems 15(2): 10-13 (2000)
PDF


Billsus, D., and Pazzani, M. (2000). "User Modeling for Adaptive News Access". 
User Modeling and User-Adapted Interaction. 10:2/3. 147-180 PDF


1999
Lathrop, R. & Pazzani, M. (1999).  Combinatorial Optimization in Rapidly Mutating Drug-Resistant Viruses.  Journal of Combinatorial Optimization. 3, 301-320.
PDF
Postscript



Billsus, D. and Pazzani, M. (1999).  "A Hybrid User Model for News Story Classification",  Proceedings of the Seventh International Conference on User Modeling (UM '99), Banff, Canada.

PDF
Postscript


Billsus, D. and Pazzani, M. (1999).  "A Personal News Agent that Talks, Learns and Explains",  Proceedings of the Third International Conference on Autonomous Agents (Agents '99), Seattle, Washington.
PDF
Postscript

Bay, S. D. and Pazzani, M. J. (1999). Detecting Change in Categorical Data: Mining Contrast Sets.   In Proceedings of the Fifth International Conference on Knowledge Discovery and Data Mining. 
PDF
Postscript


Pazzani, M. J. and Bay, S. D. (1999).  The Independent Sign Bias: Gaining Insight from Multiple Linear Regression.  In Proceedings of the Twenty-First Annual Meeting of the Cognitive Science Society.
PDF
Postscript
Overheads PDF

Pazzani, M. and Billsus, D. (1999).  "Adaptive Web Site Agents".  Proceedings of the Third International Conference on Autonomous Agents (Agents '99), Seattle, Washington.

PDF
Postscript

Keogh, E. & Pazzani, M. (1999).  Relevance Feedback Retrieval of Time Series Data.  The Twenty-Second Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval.
PDF
Postscript



Eamonn J. Keogh, Michael J. Pazzani: (1999).  Scaling up Dynamic Time Warping to Massive Datasets.  Principles and Practice of Knowledge Discovery in Databases, Prague, Czech Republic.
PDF
Postscript

Eamonn J. Keogh, Michael J. Pazzani: (1999).  An indexing scheme for similarity search in large time series databases.  The 11th International Conference on Scientific and Statistical Database Management. Cleveland, Ohio.
PDF
Postscript


S. Mani, M.B. Dick, M.J. Pazzani, E.L. Teng, D. Kempler, I.M. Taussig (1999).  Refinement of Neuro-Psychological Tests for Dementia Screening in a Cross Cultural Population Using Machine Learning.  Joint European Conference on Artificial Intelligence in Medicine and Medical Decision Making Aalborg, Denmark. 
PDF


 Pazzani, M. & Billsus, D. (1999).  Evaluating Adaptive Web site Agents.  Workshop on Recommender Systems Algorithms and Evaluation, 22nd International Conference on Research and Development in Information Retrieval.
PDF
Postscript


Keogh, E. & Pazzani. M.  (1999).  Learning
augmented Bayesian classifiers: A comparison of distribution-based and
classification-based approaches. Uncertainty 99, 7th. Int'l
Workshop on AI and Statistics, Ft.  Lauderdale, Florida, 225-230.
Postscript
PDF


Merz, C. & Pazzani, M. (1999). A Principal Components Approach to Combining Regression Estimates               
Machine Learning. 36, 9-32.
PDF
Postscript

Pazzani, M. (1999).  A Framework for
Collaborative, Content-Based and Demographic Filtering.  
Artificial Intelligence Review.  13(5-6): 393-408 PDF

Mani, S., Shankle, R., Dick, M and Pazzani, M. (1999) Two-Stage
Machine Learning Model for Guideline Development Artificial
Intelligence in Medicine, 16, 51-80. PDF


Lathrop, R.H., Steffen, N.R., Raphael, M., Deeds-Rubin, S., Pazzani,
M.J., Cimoch, P.J., See, D.M., Tilles, J.G.; (1999)  Knowledge-based Avoidance of Drug-Resistant HIV Mutants.  AI Magazine, volume 20, number 1, Spring 1999, pages 13-25.
PDF
Postscript

Ian Soboroff, Charles K. Nicholas, Michael J. Pazzani: Workshop on Recommender Systems: Algorithms and Evaluation. SIGIR Forum 33(1): 36-43 (1999)
HTML


Subramani Mani, Malcolm B. Dick, Michael J. Pazzani, Evelyn L. Teng, Daniel Kempler, I. Maribell Taussig: 
Refinement of Neuro-psychological Tests for Dementia Screening in a Cross Cultural Population Using Machine Learning. 
Lecture Notes in Artificial Intelligence: Artificial Intelligence in Medicine, AIMDM'99, Vol. 1620, p326-335. 
PDF

1998

 Keogh, E., & Pazzani, M. (1998). An enhanced representation of time series which allows fast and accurate classification, clustering and relevance feedback. Proceedings of the Fourth  International Conference of Knowledge Discovery and Data Mining. pp 239-241, AAAI Press.
Postscript
PDF

Lathrop, R., Steffen, N., Raphael, M., Deeds-Rubin,
S., Pazzani, M., Cimoch, P., See, D., Tilles, J. (1998)
Knowledge-based Avoidance of Drug-Resistant HIV Mutants 
Proceedings of the 10th Conference on Innovatiove Applications of
Artificial Intelligence, Madison, Wisc.  Postscript
PDF


Billsus, D. & Pazzani, M. (1998). Learning
Collaborative Information Filters. Proceedings of the International
Conference on Machine Learning.   Morgan Kaufmann
Publishers. Madison, Wisc.  PDF


Webb, G. & Pazzani, M. (1998).  Adjusted
Probability Naive Bayesian Induction.  11th Australian Joint
Conference on Artificial Intelligence. Brisbane, QLD. Australia PDF


Keogh, E. & Pazzani, M. (1998).  An enhanced
representation of time series which allows fast and accurate
classification, clustering and relevance feedback.  AAAI Workshop
on Predicting the Future: AI Approaches to Time-Series Analysis.
 Madison, Wisc.  PDF



Pazzani, M. (1998). Learning with Globally
Predictive Tests. The First International Conference on Discovery
Science Fukuoka, Japan PDF




Mani, S. and Pazzani, M. (1998). Guideline Generation from Data
by Induction of Decision Tables Using a Bayesian Network Framework
JAMIA supplement p518-522, 1998.PDF

Shankle, R., Mani, S., Dick, M and Pazzani, M. (1998) Simple
Models for Estimating Dementia Severity Using Machine Learning
MedInfo'98: 9th World Congress on Medical Informatics, Seoul, Korea,
August 1998, proceedings. PDF



Cimoch, P.J., See, D.M., Pazzani, M.J., Reiter, W.M., Lathrop, R.H.,
Fasone, W.A, Tilles, J.G.; (1998). Application of a genotypic
driven rule-based expert artificial intelligence computer system in
treatment experienced HIV-infected patients.  Immunologic and
virologic response." Proc. of the 12th World AIDS Conf., Geneva,
Switzerland, extended abstract #32297
Postscript.
PDF.

1997

Pazzani, M., (1997) Comprehensible Knowledge Discovery: Gaining Insight from Data.  First Federal Data Mining Conference and Exposition. pg 73-82. Washington, DC.
PDF 
Overheads PDF


Pazzani, M., Iyer, R., See, D., Shroeder, E., & Tilles, J. (1997). CTSHIV: A Knowledge-based System in the Management of HIV-infected patients.  Proceedings of the International Conference on Intelligent Information Systems  
PDF
Postscript


Billsus, Daniel &  Pazzani, M. (1997) Learning Probabilistic User Models.
in Workshop Notes of "Machine Learning for User Modeling", 
Sixth International Conference on User Modeling, Chia Laguna, Sardinia. 
PDF
Postscript

Merz, C., & Pazzani M. (1997).  Combining Neural Network Regression Estimates Using Principal Components. "Preliminary Papers of the 6th International Workshop on Artificial Intelligence and Statistics". 
 PDF
 Postscript


Domingos, P., & Pazzani, M. (1997). Beyond Independence: Conditions for the Optimality of the Simple Bayesian Classifier.  Machine Learning. 29, 103-130.

PDF.
Postscript.
PDF.


Pazzani, M., See, D., Shroeder, E., & Tilles, J. (1997). Application of an Expert System in the Management of HIV-infected patients.  Journal of AIDS and Human Retrovirology. 15:356-362. 
PDF


Pazzani, M. (1997). Searching for dependencies in Bayesian classifiers. Artificial Intelligence and Statistics IV, Lecture Notes in Statistics, Springer-Verlag: New York.
PDF
Postscript
Overheads HTML


Pazzani, M., Mani, S., & Shankle, W. R. (1997). Beyond concise and colorful: learning intelligible rules. Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, Newport Beach, CA. AAAI Press, 235-238. 
PDF


Pazzani, M., Mani, S. & Shankle, W. R. (1997). Comprehensible knowledge-discovery in databases. In M. G. Shafto and P. Langley (Ed.), Proceedings of the Nineteenth Annual Conference of the Cognitive Science Society, pp. 596-601. Lawrence Erlbaum. 
PDF 


Pazzani M., & Billsus, D. (1997). Learning and Revising User Profiles: The identification of interesting web sites. Machine Learning 27, 313-331. 
PDF

Merz, C., & Pazzani, M. (1997).  Combining
Neural Network Regression Estimates Using Principal Components.  The
Sixth International Workshop on Artificial Intelligence and
Statistics. 

PDF
Postscript

Mani, M., McDermott, S., & Pazzani, M. (1997)  Generating Models of Mental Retardation from Data with Machine Learning Proceedings IEEE Knowledge and Data Engineering Exchange Workshop (KDEX-97), p114-119, IEEE Computer Society.

PDF
Postscript

 Mani, M., McDermott, S., & Pazzani, M. (1997). Detecting Mental
Retardation in Newborns and Infants: A Machine Learning Approach.
Pediatrics Supplement Vol. 100, No. 3, part 2, p443 

PDF
Postscript

Merz, C., & Pazzani, M. (1997).  Handling Redundancy in Ensembles of Learned Models Using Principal Components. AAAI Workshop on Integrating Multiple Models. 
 PDF
 Postscript

M. Ackerman, D. Billsus, S. Gaffney, S. Hettich, G. Khoo, D. Kim,
R. Klefstad, C. Lowe, A. Ludeman, J. Muramatsu, K. Omori, M. Pazzani ,
D. Semler, B. Starr, & P. Yap (1997).  Learning Probabilistic User
Profiles: Applications to Finding Interesting Web Sites, Notifying
Users of Relevant Changes to Web Pages, and Locating Grant
Opportunities. AI Magazine 18(2) 47-56. PDF


W.R. Shankle, Subramani Mani, Michael J. Pazzani, and Padhraic
Smyth. (1997) ``Detecting very early stages of Dementia from normal
aging with Machine Learning methods''.  In Keravnou, E., Garbay, C.,
Baud, R., and Wyatt, editors, Lecture Notes in Artificial
Intelligence: Artificial Intelligence in Medicine, AIME97, volume
1211, pages 73-85, Springer 
PDF
Postscript

W.R. Shankle, Subramani Mani Michael J. Pazzani, and Padhraic
Smyth. (1997) ``Dementia Screening with Machine Learning methods.''  In 
Intelligent Data Analysis in Medicine and Pharmacology, Eds. Elpida Keravnou, 
Nada Lavrac and Blaz Zupan, Kluwer Academic Publishers.   

PDF
Postscript

Subramani Mani, W.R. Shankle, Michael J. Pazzani, Padhraic
Smyth, and Malcolm B. Dick.  (1997) ``Differential Diagnosis of Dementia:
A Knowledge Discovery and Data Mining (KDD) Approach''.  American
Medical Informatics Association (AMIA) Annual Fall Symposium, Nashville,
 
HTML
 
PDF



Shankle, W.R., Mani, S., Pazzani, M. J. and Smyth, P. (1997). Use of a Computerized Patient Record Database of Normal Aging and Very Mildly Demented Subjects to Compare Classification Accuracies Obtained with Machine Learning Methods and Logistic Regression. Computing Science and Statistics, 29: 201-209. 

1996
Pazzani, M., Muramatsu J., & Billsus, D. (1996). Syskill & Webert: Identifying interesting web sites. AAAI Spring Symposium.  Stanford, CA. 
HTML
PDF


Starr, B.,  Ackerman, M., &   Pazzani, M. (1996). Do I Care? -- Tell Me What's Changed on the Web.    AAAI Spring Symposium.  Stanford, CA. 
PDF
Postscript

 Merz, C. J., Pazzani, M. J. (1996) Handling Redundancy in
Ensembles of Learned Models Using Principal Components. Presented
at the Workshop on Integrating Multiple Learned Models for Improving
and Scaling Machine Learning Algorithms at AAAI-96. 

 PDF
 Postscript


Shankle, R., Datta, P., & Pazzani, M. (1996).  Applying machine learning to an Alzheimer's database, AAAI-96 Spring Symposium AI in Medicine: Applications of Current Technologies. Stanford, CA. 
PDF
Postscript




Ali, K., & Pazzani M. (1996). Error Reduction through Learning Multiple Descriptions Machine Learning, 24:3. 
Postscript 
PDF


Merz, C., Pazzani, M., & Danyluk, A. (1996). Tuning Numeric Parameters to troubleshoot a telephone network.  IEEE Expert, Feb. 1996, pg. 44-49. 
PDF


Shankle, W.R., Datta,  P., Dillencourt, M., & Pazzani, M.  (1996). Improving Dementia Screening Tests with Machine Learning Methods. Alzheimer's Research. 
PDF
Postscript


Pazzani, M. (1996). Review of "Inductive Logic Programming".  Machine Learning,  23, 103-108. 
PDF


Yamazaki, T., Pazzani, M., & Merz, C. (1996). Acquiring and updating hierarchical knowledge for machine translation based on a clustering technique.  In Wermter, Riloff & Scheler (Eds.) Connectionist, Statistical, and Symbolic Approaches to Learning for Natural Language Processing. 
PDF


Domingos, P., & Pazzani, M. (1996). Beyond Independence: Conditions for the Optimality of the Simple Bayesian Classifier.  Proceedings of the International Conference on Machine Learning. 

PDF.
Postscript.


Pazzani, M., Muramatsu J., & Billsus, D. (1996). Syskill & Webert: Identifying interesting web sites. Proceedings of the National Conference on Artificial Intelligence, Portland, OR. 
Slides HTML
HTML
Postscript
PDF



Billsus, D., & Pazzani, M.  (1996). Revising user profiles: The search for interesting Web sites.  International Multi-Strategy Learning Conference.  Harpers Ferry, VA. 
PDF
Postscript




Pazzani, M. (1996). Constructive Induction of Cartesian Product Attributes. Information, Statistics and Induction in Science. Melbourne, Australia. 
PDF
Postscript



Starr, B., Ackerman, M., & Pazzani, M. (1996). "Do-I-Care: A  Collaborative Web Agent." Proceedings of the ACM Conference on Human Factors in Computing Systems (CHI'96), April, 1996, pp.  273-274. 
PDF
HTML


Merz, C., & Pazzani, M. (1996). Combining neural network regression estimates with regularized linear weights. Advances in Neural Information Processing Systems 9, Proceedings of the 1996 Conference. MIT Press, 564-570. 
PDF
Postscript of Final 1997 Version

1995
Ali, K., Brunk, C., & Pazzani, M. (1995). Learning Multiple Relational Rule-based Models. In "Preliminary Papers of the 5th International Workshop on Artificial Intelligence and Statistics". Fort Lauderdale, FL. 
PDF
Postscript


Pazzani, M. (1995). Searching for dependencies in Bayesian classifiers. In "Preliminary Papers of the 5th International Workshop on Artificial Intelligence and Statistics". Fort Lauderdale, FL. 
PDF
Postscript


Hirschberg, D., Pazzani. M., & Ali, K. (1995). Average case analysis of  k-CNF and k-DNF learning algorithms.  In S. Hanson, M. Kearns,  T. Petsche and R. Rivest Computational Learning Theory and  Natural Learning Systems: Constraints and  Prospects.  Cambridge, MA: MIT Press.  
PDF
Postscript


Ali, K., & Pazzani, M.  (1995). HYDRA-MM: Learning Multiple Descriptions to Improve Classification Accuracy. International Journal on Artificial Intelligence Tools, 4. 
PDF
Postscript


Yamazaki, T., Pazzani, M., & Merz, C. (1995). Learning Hierarchies from Ambiguous Natural Language Data, Proceedings of the 12th International Conference of Machine Learning. 
PDF


Brunk, C., & Pazzani, M. (1995). A Linguistically-Based Semantic Bias for Theory Revision Proceedings of the 12th International Conference of Machine Learning. 
PDF
Postscript



Hume, T., & Pazzani, M. (1995). Learning Sets of Related Concepts: A Shared Task Model. Proceedings of the Sixteen Annual Conference of the Cognitive Science Society. Pittsburgh, PA: Lawrence Erlbaum. 
 
PDF
HTML
 Slides HTML

Pazzani, M. (1995). An iterative-improvement approach for the discretization of numeric attributes in Bayesian classifiers. Proceedings of the First International Conference on Knowledge Discovery and Data Mining.  Montreal: AAAI Press  
PDF



Pazzani, M.,  Nguyen, L.,  &  Mantik,  S. (1995). Learning from hotlists and coldlists: Towards a WWW information filtering and seeking agent. In Proceedings of the Seventh International Conference on Tools with Artificial Intelligence 
HTML.
PDF.


1994
Pazzani, M. (1994).  Learning causal patterns:  Making a transition from data-driven to theory-driven learning.   In  Ryszard Michalski & Georghe Tecuci  (Eds.)  Machine Learning (Vol. IV): A Multi-Strategy Approach.  San Mateo, CA:  Morgan  Kaufmann. 
PDF of 1993 Journal Version.



Murphy, P., & Pazzani, M. (1994). Revision of production system rule-bases. Proceedings of the 11th International Conference of Machine Learning, New Brunswick. Morgan Kaufmann, 199-200. 
PDF
Postscript

Murphy, P. & Pazzani, m. (1994). Automated Revision of CLIPS Rule-Bases
In Proceedings of "Proccedings of the Third Conference on CLIPS", September 12-14, 1994, Tx. PDF

Pazzani, M., Merz, C., Murphy, P., Ali, K., Hume, T., & Brunk, C. (1994). Reducing Misclassification Costs. Proceedings of the 11th International Conference of Machine Learning, New Brunswick. Morgan Kaufmann, 217-225. 
PDF 
Slides HTML 
Postscript



Ali, K., Brunk, C., & Pazzani, M. (1994). On Learning Multiple Descriptions of a Concept. In Proceedings of the Sixth International Conference on Tools with Artificial Intelligence. New Orleans, LA: IEEE Press.  
PDF
Postscript



Merz, C., & Pazzani, M. (1994). Parameter Tuning for the MAX Expert System, In Proceedings of the Sixth International Conference on Tools with Artificial Intelligence. New Orleans, LA: IEEE Press. pp. 632-639.  
PDF



Pazzani, M.,   Murphy, P.,   Ali,  K., &  Schulenburg, D. (1994). Trading off coverage for accuracy in forecasts: Applications to clinical data analysis. AAAI Symposium on AI in Medicine (pp. 106-110).   Stanford, CA. 
Overheads PDF 
PDF



Pazzani, M. (1994). Guest Editorial "Computational models of human learning".  Machine Learning,  12. 
PDF



Murphy, P., & Pazzani, M. (1994). Exploring the decision forest: An empirical investigation of OCCAM's razor in decision tree induction. Journal of Artificial Intelligence, 1, 257-275. 
PDF
Postscript

Giovanni Semeraro, Floriana Esposito, Donato Malerba, Clifford Brunk,
Michael Pazzani: (1994) Avoiding Non-Termination when Learning Logical
Programs: A Case Study with FOIL and FOCL. In Laurent Fribourg, Franco
Turini (Eds.): Logic Programming Synthesis and Transformation -
Meta-Programming in Logic. 4th Internation Workshops, LOPSTR'94 and
META'94,  Pisa, Italy, June 20-21, 1994, Proceedings. Lecture Notes in
Computer Science, Vol. 883, Springer.

1993
Pazzani, M. (1993). Reply to Review of "Creating a memory of causal relationships".  Machine Learning,  11. 
PDF


Yamazaki, Takefumi & Pazzani, Michael (1994). A Cluster Analysis
Approach to Learning a Semantic Hierarchy for Machine
Translation. ML-COLT '94 Workshop on Constructive Induction and
Change of Representation.  
PDF
Postscipt




Pazzani, M., & Brunk, C. (1993). Finding Accurate Frontiers: A Knowledge-Intensive Approach to Relational Learning.  The National Conference on Artificial Intelligence  (pp. 328-334). Washington, D.C: AAAI Press. 
Postscript 
Overheads PDF 
PDF



Ali, K., & Pazzani, M. (1993). HYDRA: A noise-tolerant relational concept learning algorithm. The International Joint Conference on Artificial Intelligence, Chambery, France. 
PDF
Postscript



Wogulis, J., & Pazzani, M. (1993). A methodology for evaluating theory revision systems: Results with AUDREY II. The International Joint Conference on Artificial Intelligence, Chambery, France. 
PDF
Postscript



Murphy, P., & Pazzani, M. (1993). Exploring the decision forest.  Computational Learning and Natural Learning, Provincetown, MA 
PDF
Postscript



Pazzani, M. (1993). Learning causal patterns: Making a transition from data-driven to theory-driven learning.  Machine Learning,  11, 173-194 
PDF.

1992

Ali K. and Pazzani M. (1992). Reducing the small disjuncts problem by learning probabilistic
concept descriptions. In Petsche, T., Hanson, S.J. & Shavlik, J. (Eds), Computational Learning
Theory and Natural Learning Systems, Vol. 3. Cambridge, Massachusetts. MIT Press. 
PDF

Brunk, C. & Pazzani, M. (1992). Knowledge Acquisition with a Knowledge-Intensive Machine Learning System. Proceedings of the Seventh Knowledge Acquisition for Knowledge-Based Systems Workshop. (4.1-4.20) Banff, Alberta: SRDG Publications. 
PDF
Postscript

Pazzani, M. (1992).   When Prior Knowledge Hinders Learning. AAAI Workshop on Constraining learning with Prior Knowledge. San Jose, CA. 
PDF



Pazzani, M., & Kibler, D. (1992). The utility of prior knowledge in inductive learning. Machine Learning, 9 , 54-97.  
PDF



Pazzani, M., & Sarrett, W.  (1992). A framework for average case analysis of conjunctive learning algorithms.  Machine Learning, 9,  349-372.  
PDF



Pazzani, M.,  Brunk, C., & Silverstein, G. (1992).  A information-based  approach to combining empirical and explanation-based learning.   In  S. Muggleton (Ed.). Inductive Logic Programming.  (pp. 373-394). London: Academic Press.



Hirschberg, D., & Pazzani, M. (1992). Average case analysis of k-CNF learning algorithms.  Proceedings of the Tenth International Conference on Machine Learning  (pp. 206-211).  Aberdeen, Scotland: Morgan Kaufmann.  
PDF


1991
Hirschberg, D.,  Pazzani, M., & Ali, K. (1991). Average case analysis of k-CNF and k-DNF learning algorithms.  Second International Workshop on Computational Learning Theory and Natural Learning Systems: Constraints and Prospects.  Berkeley, CA. 
PDF
Postscript of Final 1995 version



Fisher, D., & Pazzani, M. (1991). Computational models of concept learning. In D. Fisher,  M. Pazzani, & P. Langley (Eds.), Concept formation: Knowledge and experience in unsupervised learning.  San Mateo, CA: Morgan Kaufmann.



Fisher, D., Pazzani, M., & Langley, P.  (1991). Concept formation: Knowledge and experience in unsupervised learning. San Mateo, CA: Morgan Kaufmann. 
Order this book from the publisher



Pazzani, M. (1991). A computational theory of learning causal relationships. Cognitive Science, 15,  401-424.
 PDF



Pazzani, M. (1991). Learning to predict and explain: An integration of similarity-based, theory-driven and explanation-based learning. Journal of the Learning Sciences, 1, 2, 153-199.



Pazzani, M. (1991). The influence of prior knowledge on concept acquisition: Experimental and computational results. Journal of Experimental Psychology: Learning, Memory & Cognition, 17, 3,  416-432.  
PDF Preprint 
PDF Final



Pazzani, M., &  Brunk, C. (1991). Detecting and correcting errors in rule-based expert systems: an integration of empirical and explanation-based learning. Knowledge Acquisition, 3, 157-173. 
PDF



Pazzani, M.,  Brunk, C., & Silverstein, G. (1991).  A knowledge-intensive approach to learning  relational concepts.   Proceedings of the Eighth International Workshop on Machine Learning (pp. 432-436). Evanston, IL: Morgan Kaufmann.



Silverstein, G., & Pazzani, M. (1991).  Relational clichés: Constraining constructive induction during relational learning.  Proceedings of the Eighth International Workshop on Machine Learning (pp. 203-207).  Evanston, IL:  Morgan Kaufmann.  
PDF



Cain, T., Pazzani, M., & Silverstein, G. (1991). Using domain knowledge to influence similarity judgments.  Proceedings of the Case-Based Reasoning Workshop. Washington, DC: Morgan Kaufmann. 
Overheads PDF



Brunk, C., & Pazzani, M. (1991).  An investigation of noise tolerant relational learning  algorithms. Proceedings of the Eighth International Workshop on Machine Learning (pp. 389-391). Evanston, IL: Morgan Kaufmann.
Postscript 
PDF



Murphy, P., & Pazzani, M. (1991).  ID2-of-3: Constructive induction of m-of-n discriminators for decision trees.  Proceedings of the Eighth International Workshop on Machine Learning  (pp. 183-187). Evanston, IL: Morgan Kaufmann. 
PDF
Postscript



Fisher, D., & Pazzani, M. (1991). Theory-guided concept formation.  In D. Fisher,  M. Pazzani, & P. Langley (Eds.), Concept formation: Knowledge and experience in unsupervised learning. San Mateo, CA: Morgan Kaufmann.



Fisher, D., & Pazzani, M. (1991). Concept formation in context. In D. Fisher,  M. Pazzani, & P. Langley (Eds.), Concept formation: Knowledge and experience in unsupervised learning. San Mateo, CA: Morgan Kaufmann.

1990

Pazzani, M. J., & Brunk, C. A. (1990).
Detecting and correcting errors in rule-based expert systems: an
integration of empirical and explanation-based learning. Knowledge
Acquisition for Knowledge-Based Systems Workshop.  PDF of
1991 journal version


Pazzani, M., & Silverstein, G. (1990). Feature selection and hypothesis selection:  Models of induction. Proceedings of the Twelfth Annual Conference of the Cognitive Science Society.  (pp. 221-228). Cambridge, MA: Lawrence Erlbaum. 
PDF 


Pazzani, M. (1990). Creating a memory of causal relationships: An integration of empirical and explanation-based learning methods.  Hillsdale, NJ: Lawrence Erlbaum Associates. 
Order this book from the publisher


Pazzani, M. (1990). Learning in order to avoid search in logic programming.  Computers and Mathematics with Applications,  2, 10, 101-110.  


Pazzani M., & Dyer, M. (1990). Memory organization and explanation-based learning. International Journal of Expert Systems, 2, 3,  331-358.


Pazzani, M., & Flowers, M. (1990). Scientific discovery in the layperson. In J. Shrager & P. Langley (Eds.), Computational models of scientific discovery and theory formation.   San Mateo, CA: Morgan Kaufmann.  
PDF


Billman, D., Fisher, D., Gluck, M., Langley, P., & Pazzani, M. (1990).  Computational models of category learning.  Proceedings of the Twelfth Annual Conference of the Cognitive Science Society. (pp. 989-996).  Cambridge, MA:  Lawrence Erlbaum.  

1989
Pazzani, M. (1989).  Indexing strategies for goal specific retrieval of cases. Proceedings of the Case-Based Reasoning Workshop (pp. 31-35). Pensacola Beach, FL: Morgan Kaufmann. 
Overheads PDF 
PDF


Pazzani, M. (1989).  Explanation-based learning with weak domain theories.   Proceedings of the Sixth International Workshop on Machine Learning  (pp. 72-74). Ithaca, NY: Morgan Kaufmann. 
PDF


Pazzani, M. (1989). Learning from historical
precedent. Artificial Intelligence Systems in Government
Conference. (pp. 150-156). Washington, DC. Overheads
PDF


Pazzani, M. (1989).  Explanation-based learning of diagnostic heuristics:  A comparison of learning from success and failure. Artificial Intelligence Systems in Government Conference (pp. 164-169).  Washington DC. 


Pazzani, M., & Schulenburg, D. (1989). The influence of prior theories on the ease of concept acquisition.  Proceedings of the Eleventh Annual Conference of the Cognitive Science Society (pp. 812-819).  Ann Arbor, MI: Lawrence Erlbaum 
PDF


Pazzani, M. (1989).  Detecting and correcting errors of omission after explanation-based learning.  Proceedings of the Eleventh International Joint Conference on Artificial Intelligence (pp. 713-718). Detroit, MI: Morgan Kaufmann.  
PDF 
Overheads PDF


Pazzani, M. (1989). Learning fault diagnosis heuristics from device descriptions. In Y. Kodratoff & R. Michalski (Eds.), Machine Learning: An artificial intelligence approach (Vol. III). San Mateo, CA: Morgan Kaufmann. 


Pazzani, M., & Sarrett, W. (1989). Average case analysis of conjunctive learning algorithms. Proceedings of the Seventh International Conference on Machine Learning  (pp. 339-347).  Austin, TX: Morgan Kaufmann. 
PDF of 1992 Journal Version


Sarrett, W., & Pazzani, M. (1989).  One-sided algorithms for integrating empirical and explanation-based learning.  Proceedings of the Sixth International Workshop on Machine Learning  (pp. 26-28).  Ithaca, NY: Morgan Kaufmann. 
PDF


Schulenburg, D., & Pazzani, M. (1989).  Explanation-based learning of indirect speech act interpretation rules.  Proceedings of the First International Lexical Acquisition Workshop. Detroit, MI. 
PDF


Pazzani, M. (1989). Creating high-level knowledge structures from simple elements.  In K. Morik  (Ed.), Knowledge representation and organization in machine learning,  Lecture notes in Artificial Intelligence, No 347. New York: Springer-Verlag.

1988
Pazzani, M. (1988). Explanation-based learning for knowledge-based systems.  In B. Gaines & J. Boose (Eds.), Knowledge acquisition for knowledge-based systems (pp. 215-238).  London: Academic Press.  


Pazzani, M. (1988). Selecting the best explanation for explanation-based learning. AAAI Symposium on Explanation-Based Learning  (pp. 156-170). Stanford University. 
PDF


Pazzani, M. (1988).   Learning during plan recognition.  AAAI Workshop on Plan Recognition. (pp. 1-5). St. Paul, MN.


Pazzani, M. (1988).  Integrated learning with incorrect and incomplete theories. Proceedings of the Fifth International Conference on Machine Learning   (pp. 291-298). Ann Arbor,  MI: Morgan Kaufmann.   


Pazzani, M. (1988).  Integrating empirical and explanation-based learning methods in OCCAM. Proceedings of the Third European Working Session on Learning  (pp. 147-166). Glasgow, Scotland: Pitman. 

1987
Pazzani, M. (1987). Creating high-level knowledge structures from primitive elements. Knowledge Representation and Knowledge Organization in Machine Learning Workshop. Geseke, Germany.   


Pazzani, M. (1987).  Inducing causal and social theories: a prerequisite for explanation-based learning. Proceedings of the Fourth International Workshop on Machine Learning  (pp. 230-241).   Irvine, CA:  Morgan Kaufmann. 
PDF


Pazzani, M., Dyer, M., & Flowers, M. (1987).  Using prior learning to facilitate the learning of new causal theories.  Proceedings of the Tenth International Joint Conference on Artificial Intelligence.  (pp. 277-279). Milan, Italy: Morgan Kaufmann. 
PDF


Pazzani, M., & Dyer, M.  (1987).  A comparison of concept identification in human learning and network learning with the generalized delta rule. Proceedings of the Tenth International Joint Conference on Artificial Intelligence  (pp. 147-151). Milan, Italy: Morgan Kaufmann. 
PDF


Pazzani, M. (1987). Failure-driven learning of fault diagnosis heuristics. IEEE Transactions on Systems, Man and Cybernetics:  Special issue on Causal and Strategic Aspects of Diagnostic Reasoning, 17, 3, 380-394.


Pazzani, M. (1987). Explanation-based learning for knowledge-based systems. International Journal of Man-Machine Studies, 26,  413-433.  

1986
Pazzani, M., & Brindle. A. (1986).  Automated diagnosis of attitude control anomalies. Proceedings of the Annual AAS Guidance and Control Conference. Keystone, CO: American Astronautical Society.  
PDF


Pazzani, M. (1986).  Refining the knowledge base of a diagnostic expert system:  An application of failure-driven learning. Proceedings of the Fifth National Conference on Artificial Intelligence  (pp. 1029-1035). Philadelphia, PA: Morgan Kaufmann. 
PDF


Pazzani, M., Dyer, M., & Flowers, M. (1986). The role of prior causal theories in generalization. Proceedings of the Fifth National Conference on Artificial Intelligence  (pp. 545-550). Philadelphia, PA: Morgan Kaufmann.  
PDF



1985

Pazzani, M. (1985).  Explanation and generalization-based memory. Proceedings of the Seventh Annual Conference of the Cognitive Society Conference  (pp. 323-328). Irvine, CA: Lawrence Erlbaum. 

1984
Cullingford, R., & Pazzani, M. (1984). Word-meaning selection in multiprocess language understanding programs. IEEE Transactions on Pattern Analysis and Machine Intelligence 6,4,  493-509. 
PDF 


Pazzani, M. (1984).  Conceptual analysis of garden-path sentences. Proceedings of the Tenth International Conference on Computational Linguistics   (pp. 486-490).  Stanford, CA. 
PDF


1983
Pazzani, M. (1983).  Interactive script instantiation. Proceedings of the National Conference on Artificial Intelligence  (pp. 320-326). Washington DC: Morgan Kaufmann. 
PDF




PDF Files require Acrobat Reader  




Michael J. Pazzani

Department of Information and Computer Science,

University of California, Irvine
Irvine, CA 92697-3425 

pazzani@ics.uci.edu
##------------------URL-------------------------##
http://www.ics.uci.edu/~pazzani/Students.html
##-----------------TITLE------------------------##
Michael J. Pazzani: Students and Affiliated Researchers
##------------------TEXT------------------------##
Michael J. Pazzani: Research Group 


Graduate Students


Ph.D. Graduates
Stephen Bay
Daniel Billsus
Eamonn Keogh

James Wogulis   An Approach to Repairing and Evaluating
First-Order Theories Containing Multiple Concepts and Negation. (1.2M)
This dissertation addresses the problem of theory revision in machine
learning.  The task requires the learner to minimally revise an
initial incorrect theory such that the revised theory explains a given
set of training data. A learning system, A3, is presented that solves
this task.  The main contributions of this dissertation include the
learning system A3 that can revise theories containing multiple
concepts expressed as function-free first-order Horn clauses, an
approach to repairing theories containing negation, and the
introduction of a distance metric between theories to evaluate the
degree of revision performed.  Experimental evidence is presented that
demonstrates A3's ability to solve the theory revision task.
Assumptions commonly made by other approaches to theory revision such
as whether a theory needs to be generalized or specialized with
respect to misclassified examples are shown to be incorrect for
theories containing negation.  A3 is able to repair theories
containing negation and demonstrates a simple, general approach to
identifying types of errors in a theory using a single mechanism for
handling positive and negative examples as well as examples of
multiple concepts.  The syntactic distance between two theories is
proposed as an evaluation metric for theory revision systems. This
distance is defined in terms of the minimum number of edit operations
required to transform one theory into another. This allows for a
precise measurement of how much a theory has been revised and allows
for comparison of different systems' abilities to perform minimal
revisions.  This distance metric is also used by A3 in order to bias
it towards finding minimal revisions that accurately explain the data.
The distance metric also leads to insights about the theory revision
task. In particular, it is shown that the theory revision task is
underconstrained if the additional goal of learning a particular
correct theory is to be met. Without additional constraints, there are
potentially many accurate revisions that are far apart syntactically.
It is shown that providing examples of multiple concepts in the theory
can provide some of these constraints.

 David
Schulenburg Learning and Using Context
in a connectionist Model of Language Understanding (2.5M) Natural
languages are ambiguous.  This is especially true for non-literal
figurative constructs such as metaphors and indirect speech acts.
Even literal text suffers from problems of ambiguity as exemplified by
text containing words having multiple meanings.  Understanding such
ambiguous text is a fairly simple task for us humans; it is well
recognized that context is often used by people to aid in the
resolution of these problems of ambiguity.  This dissertation presents
a discussion of a computational model, PIP, which was designed to
address the issue of ambiguity in natural language understanding.  By
incorporating a textual context during the understanding process, PIP
is able to disambiguate text containing ambiguous constructs such as
metaphors and indirect speech acts.  Furthermore, the entire
understanding process is uniform in the sense that the exact same
mechanisms are used to process both literal and non-literal
(ambiguous) text; no special processing ``rules'' are necessary to
deal with the ambiguity.  The underlying computational model of PIP is
the feed-forward artificial neural network.  The incorporation of the
textual context is accomplished by a recurrent relation between the
context that is being constructed and the network input for processing
the words of the text.  In this fashion is PIP able to use the context
directly as it processes text.  PIP has demonstrated its effectiveness
on sets of text which include ambiguous lexemes, metaphors, and
indirect speech acts.  By using the context constructed from earlier
sentences in these texts, PIP is able to derive the intended meaning
of the ambiguous sentences at the end of the texts.  It is shown that
without use of the context, PIP is unable to produce the intended
meaning and in many cases, cannot decide on any meaning to give to the
ambiguous sentences.

  Kamal Ali Learning Probabilistic Relational Concept Descriptions (1.6M) 
This dissertation presents results in the area of multiple models
(multiple classifiers), learning probabilistic relational (first order)
rules from noisy, "real-world" data and reducing  the small disjuncts
problem - the problem whereby learned rules that cover few training examples
have high error rates on test data.

Several results are also presented in the arena of multiple models.  The
multiple models approach in relevant to the problem of making accurate
classifications in ``real-world'' domains since it facilitates evidence
combination which is needed to accurately learn on such domains.
It is also useful when learning from small training data samples in which 
many models appear to be equally "good" w.r.t. the given evaluation metric.
Such models often have quite varying error rates on test data so in such
situations, the single model method has problems. Increasing search only
partly addresses this problem whereas the multiple models approach has the
potential to be much more useful.

The most important result of the multiple models research is that the
*amount* of error reduction afforded by the multiple models approach is
linearly correlated with the degree to which the individual models make
errors in an uncorrelated manner. This work is the first to model the degree
of error reduction due to the use of multiple models.  It is also shown that
it is possible to learn models that make less correlated errors in domains
in which there are many ties in the search evaluation metric during
learning.  The third major result of the research 
on multiple models is the realization that models should be learned that
make errors in a negatively-correlated manner rather than those that make
errors in an uncorrelated (statistically independent) manner.

The thesis also presents results on learning probabilistic first-order rules
from relational data.  It is shown that learning a class description for
each class in the data - the one-per-class approach - and attaching
probabilistic estimates to the learned rules allows accurate classifications
to be made on real-world data sets.  The thesis presents the system HYDRA
which implements this approach.  It is shown that the resulting
classifications are often more accurate than those made by three existing
methods for learning from noisy, relational data.  Furthermore, the learned
rules are relational and so are more expressive than the attribute-value
rules learned by most induction systems.

Finally, results are presented on the small-disjuncts problem in which rules
that apply to rare subclasses have high error rates
The thesis presents the first approach that is simultaneously successful
at reducing the error rates of small disjucnts while also reducing the
overall error rate by a statistically significant margin. The previous
approach which aimed to reduce small disjunct error rates only did so at the
expense of increasing the error rates of large disjuncts.
It is shown that the one-per-class approach reduces error rates for such
rare rules while not sacrificing the error rates of the other rules.

 Cliff Brunk
An Investigation of Knowledge Intensive Approaches to 
Concept Learning and Theory Refinement (1.6M) Concept learning algorithms have been used to solve difficult problems
in fields ranging from medical diagnosis to astronomy.  In spite of
their successful application, most concept learners are only able to
utilize knowledge that is expressed in the form of a set of training
examples.  Relevant knowledge from other sources can not be utilized
even when it is available.  Evidence is presented that using knowledge
from other sources leads to more accurate learned models.
This dissertation is an investigation of techniques for utilizing
knowledge in the form of an approximate theory to facilitate concept
learning.  The techniques explored are divided into two classes:
theory-guided learning algorithms which use the approximate theory to
constrain the search for a new concept description, and theory
revision algorithms which attempt to repair the approximate theory.
While both techniques are more accurate than approaches that ignore
the information contained in the approximate theory, experimental
evidence indicates that theory revision algorithms produce more
accurate models.  Furthermore, these models are structurally more
similar to both the approximate theory and the "ideal" theory, than
those produced by theory-guided learning algorithms.
The main contributions of this dissertation include: a new approach to
theory-guided learning, a conceptual framework for comparing and
evaluating theory revision algorithms, enhanced techniques for
identifying and repairing errors within a theory, and a lexically
enhanced approach to evaluating repairs. Lexically enhanced theory
revision is a novel technique for utilizing a previously unused form
of knowledge contained in the approximate theory.  The technique uses
lexical information contained in the term names of the approximate
theory to prefer repairs that are lexically more coherent.  Evidence
indicates that this further reduces the structural difference between
the revised theory and the "ideal" theory.

 Christopher Merz
Classification and Regression by Combining Models 
Two novel methods for combining predictors are introduced in this 
thesis; one for the task of regression, and the other for the task of 
classification.  The goal of combining the predictions of a set of 
models is to form an improved predictor.  This dissertation 
demonstrates how a combining scheme can rely on the stability of the 
consensus opinion and, at the same time, capitalize on the unique 
contributions of each model.

An empirical evaluation reveals that the new methods 
consistently perform as well or better than existing combining schemes 
for a variety of prediction problems.  The success of these algorithms is 
explained empirically and analytically by demonstrating how they 
adhere to a set of theoretical and heuristic guidelines.

A byproduct of the empirical investigation is the evidence that 
existing combining methods fail to satisfy one or more of the 
guidelines defined.  The new combining approaches satisfy these 
criteria by relying upon Singular Value Decomposition as a tool for 
filtering out the redundancy and noise in the predictions of the learn 
models, and for characterizing the areas of the example space where 
each model is superior.  The SVD-based representation used in the new 
combining methods aids in avoiding sensitivity to correlated 
predictions without discarding any learned models.  Therefore, the 
unique contributions of each model can still be discovered and 
exploited.  An added advantage of the combining algorithms derived in 
this dissertation is that they are not limited to models generated by 
a single algorithm; they may be applied to model sets generated by a 
diverse collection of machine learning and statistical 
modeling methods.

The three main contributions of this dissertation are:
The introduction of two new combining methods capable of 
robustly combining classification and regression estimates, and 
applicable to a broad range of model sets.
 An in-depth analysis revealing how the new methods address the 
specific problems encountered in combining multiple learned models.
 A detailed account of existing combining methods and an 
assessment of where they fall short in the criteria for combining 
approaches.











Michael J. Pazzani
Department of Information and Computer Science,
University of California, Irvine
Irvine, CA 92697-3425 
pazzani@ics.uci.edu
##------------------URL-------------------------##
http://www.ics.uci.edu/~pazzani/Research.html
##-----------------TITLE------------------------##
Michael J. Pazzani: Research
##------------------TEXT------------------------##
Michael J. Pazzani: Research 
  Publications 
   NSF Project:  Cognitive Knowledge Discovery in Databases 

 Research Overview: 

The common theme behind my research is the investigation and analysis
of learning methods that make use of prior knowledge to guide the
learning process.  Typically, these learning methods combine empirical
(i.e., correlational or data-driven) and explanation-based (i.e.,
analytical or knowledge-intensive) learning techniques.  The goal is
to create learning systems that accept as input background knowledge,
although incomplete and incorrect, along with training examples, and
learn to make classifications that are more accurate than that made by
either the background knowledge alone, or by the results of applying
an induction algorithm on the training data.

My early work on OCCAM [1] describes a learning system that has the
capability of acquiring knowledge empirically and later using this
knowledge to facilitate knowledge-intensive learning.  This research
was inspired by psychological findings on the types of information
that people use during learning and how this information affects the
rate of learning.  Part of this research also focused on the
acquisition of causal relationships [2].  In this paper, it is argued
that in addition to specific knowledge of actions and effect, the
process of learning causal relationships is also facilitated by
general knowledge of causality.  That is, causal relationships that
conform to one of a number of common patterns of causal relationships
are easier for human subjects to learn.  This paper also provides
experimental evidence collected from human subjects.  An experiment
shows that human subjects learning a causal relationship that conforms
to one particular causal pattern require fewer trials than subjects
learning a causal relationship that violates this pattern.  In more
recent research in this framework [3], I have addressed issues of
learning when the background knowledge is overly general.  In
addition, in [4] I have addressed the issue of the acquisition of the
common patterns of causal relationships used by OCCAM and show that
they can be formed by looking for commonalities among rules found by
an empirical learner.

[1] Pazzani, M. (1990). Creating a memory of causal relationships-
An integration of empirical and explanation-based learning methods.
Hillsdale, NJ- Lawrence Erlbaum Associates.

[2]  Pazzani, M. (1991).  A computational theory of learning causal
relationships.  Cognitive Science, 15, 401-424.

[3] Pazzani, M. (1989).  Detecting and correcting errors of
omission after explanation-based learning.  Proceedings of the
Eleventh International Joint Conference on Artificial Intelligence
(pp. 713-718). Detroit, MI- Morgan Kaufmann.

[4]  Pazzani, M. (1992). Learning causal patterns: Making a
 transition from data-driven to theory-driven learning.   Machine
Learning, 11, 173-194. Abstract

Information about getting a copy of Occam.
My more recent research has focused on more thoroughly investigating
issues raised during the development of OCCAM.  In particular, I have
explored the use of prior knowledge in learning from mathematical,
psychological, computational and applied points of view.



 Mathematical modeling of learning algorithms 

We have developed an approach to average case analysis of
learning algorithms [5,6].  The average case model is based upon
determining, for a given distribution of examples, the probability
that an algorithm will revise its hypothesis and the effect that
revising the hypothesis will have on the accuracy of the hypothesis.
Models were created for  three different algorithms learning
from a specific distribution (a product distribution).  It was
shown that a particular algorithm combining empirical and
explanation-based learning [7] is more accurate than either its
empirical or explanation-based component alone.  An average
case model was needed because the "standard" mathematical
models of learning algorithms (i.e., Probably Approximately
Correct models) are worst-case models and the worst-case
behavior of all three algorithms is identical.  This paper also
evaluates the assumptions from which the average-case model
was derived by experimentally demonstrating that it  accounts
for a large percentage of the variation in observed accuracy on a
naturally occurring data set and on several artificial data sets
deliberately constructed to violate assumptions of the model.

[5] Pazzani, M., & Sarrett, W. (1989). Average case analysis
of conjunctive learning algorithms. Proceedings of the
Seventh International Conference on Machine Learning
 (pp. 339-347).  Austin, TX- Morgan Kaufmann.

[6] Pazzani, M., & Sarrett, W.  (1992). 
A framework for average
 case analysis of conjunctive learning algorithms.  Machine Learning, 9, 342-372. Abstract

[7] Sarrett, W., & Pazzani, M. (1989).  One-sided algorithms
for integrating empirical and explanation-based learning.
 Proceedings of the Sixth International Workshop on
Machine Learning  (pp. 26-28).  Ithaca, NY- Morgan
Kaufmann.


Investigation of human learning

My interest in machine learning algorithms that combine correlational
and analytical methods arises from the fact that much of human
learning of predictive relationships can be characterized as using a
combination of these methods.  Part of my research has been the
conducting of psychological experiments to assess the impact of
various types of prior knowledge on human learning rates.  The
psychological research is performed to test hypotheses that occur
during the development of computational models of learning. Typically,
the dependent variable measured is the learning rate as determined by
the number of trials. We have described [7] a learning problem in
which the effect of consistency with prior knowledge dominates the
effect of concept complexity in human learners. Further work [8]
expands upon this finding.  In particular, in addition to the learning
rate, this paper shows that prior knowledge influences the attributes
that subjects attend to and the types of hypotheses formed. In
addition, this publication shows that the type of knowledge used by
human subjects cannot easily be encoded into the domain theory used by
explanation-based learning.  A different encoding of knowledge, an
influence theory, is proposed.  In such a theory, the influence of
several factors is known, but a domain theory does not specify a
systematic means of combining the factors. In [9] we extend this work
and evaluate a competing model based upon weighting of features
rather than consistency with prior knowledge.  It is shown that
feature weighting models cannot account for certain complex concepts
in which two individual features individually exert a positive
influence on an outcome but collectively exert a negative influence.

[8] Pazzani, M., & Schulenburg, D. (1989). The influence of
prior theories on the ease of concept acquisition.
Proceedings of the Eleventh Annual Conference of the Cognitive
Science Society (pp. 812-819).  Ann Arbor, MI- Lawrence Erlbaum.

[9] Pazzani, M. (1991). 
The influence of prior knowledge on concept acquisition: Experimental and computational results.  Journal of Experimental Psychology- Learning,
Memory & Cognition, 17, 3,  416-432.
Abstract


[10] Pazzani, M., & Silverstein, G. (1990). Feature selection and
hypothesis selection models of induction. Proceedings of the Twelfth
Annual Conference of the Cognitive Science Society (pp.  221-228).
Cambridge, MA- Lawrence Erlbaum.

 A more recent paper Learning Sets of
Related Concepts: A Shared Task Model by Tim Hume and Michael J.
Pazzani from the 1995 Cognitive Science Conference is available in
HTML format.



 The development of learning algorithms  I have also
been involved with the creation of practical learning algorithms.
Recently [11,12] several of my graduate students (Cliff Brunk, Kamal
Ali and Glenn Silverstein) and I have created a significant extension
to Ross Quinlan's FOIL program.  FOIL is an empirical learning program
that uses an information-based evaluation function to learn Horn
Clause concepts.  I have constructed a compatible explanation-based
learning program that uses the same information-based metric to guide
the proof process.  The resulting combined system (FOCL) has been
shown to take advantage of incomplete and incorrect domain theories.
In addition, the effect of other kinds of background knowledge, such
as typing and commutative relationships, was considered both
empirically and analytically. FOCL is novel in that the integration
between empirical and explanation-based learning is tighter than that
of previous systems.  Both the explanation-based and empirical
learning components serve the same purpose (adding literals to a
clause under construction) and use the same evaluation function.
Furthermore, the domain theory used by the explanation-based program
defines relations that can be used by the empirical program.  We have
also investigated learning in this framework when the training data is
incorrectly classified [13].   [11] Pazzani, M., & Kibler, D.
(1992).  The role of prior knowledge in inductive learning. Machine
Learning, 9, 54-97.  
 [12] Pazzani, M., Brunk, C., & Silverstein,
G. (1991).  A knowledge-intensive approach to learning relational
concepts.  Proceedings of the Eighth International Workshop on Machine
Learning (pp. 432-436). Evanston, IL- Morgan Kaufmann.  
 [13]
Brunk, C., & Pazzani, M. (1991).  An investigation of noise-tolerant relational
concept learning algorithms. Proceedings of the Eighth
International Workshop on Machine Learning (pp. 389-391). Evanston,
IL- Morgan Kaufmann. Abstract 


Information about getting a copy of FOCL.



Applications of learning methods 
A portion of my research has focused on adapting existing
learning methods to problems in areas such as engineering and
political science.   For example, [14] describes an application of
explanation-based learning to a problem  of identifying
conditions that are indicative of a component failure in the
attitude control system of the DSCS-III satellite.  This paper
describes a method for learning diagnosis heuristics (i.e., rules
that encode associations between data values in a telemetry
stream) from information contained in a qualitative model of the
satellite. The application of a learning method to data on foreign
trade negotiations is discussed in [15].

[14] Pazzani, M. (1989). Learning fault diagnosis heuristics from
device descriptions. In Y. Kodratoff & R. Michalski (Eds.), Machine
Learning- An artificial intelligence approach (Volume III). Los Altos,
CA- Morgan Kaufmann.

[15] Cain, T., Pazzani, M., & Silverstein, G. (1991). Using domain
knowledge to influence similarity judgments.  Case-Based Reasoning
Workshop. Washington, DC- Morgan Kaufmann.

Research TalksSyskill & Webert: Identifying interesting web sites AAAI96
 Constructive Induction of Cartesian Product Attributes ISIS96
The Role of Existing Knowledge in Generalization  CogSci94
 Learning Sets of Related Concepts: A Shared Task Model  CogSci95
Learning as hill-climbing search  
 Reducing Misclassification Costs MLC94
   






Michael J. Pazzani
Department of Information and Computer Science,
University of California, Irvine
Irvine, CA 92697-3425 
pazzani@ics.uci.edu
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/280e/hw1.html
##-----------------TITLE------------------------##
Exponential Algorithms: Homework 1
##------------------TEXT------------------------##
ICS 280, Fall 2000:
Exponential Algorithms
Homework Assignment 1


Think of a problem in NP. Describe carefully the input, the possible
solutions, and why it is easy to check whether a solution is correct.
Specific application-type problems preferred to abstract theory-type
ones.  If you're feeling uninspired, try the
compendium of NP optimization problems or some of the puzzles
from my page of
complexity
theory for games and puzzles.

It's ok if your problem does not meet the strict definition of being
in NP, as long as it has the same form: a yes/no problem such that a yes
answer means that there is some kind of solution which can be quickly
checked for correctness, even though it might be difficult to find the
solution.

Describe how to translate instances of your problem into instances
of one of the problems described in class: constraint satisfaction,
maximum independent set, or traveling salesman.

(Note that this is the opposite direction of translation from what you
would use to prove your problem NP-complete.)

What is (are) the natural measure(s) of problem size for your problem?
What size instances does your translation produce, as a function of the
input size?  If the constraint satisfaction (or maximum independent set) problem takes time c^n
to solve, how much time would it take to solve your original problem
using this translation and a CSP (or MIS) algorithm?


Sample answers:

Finding moving patterns in Conway's Game of
Life.

Input: numbers W,L,S,P.
Output: "yes" if there exists a pattern that repeats itself
P generations after the start, shifted over by S steps, and
that fits within a W*L rectangle.

To check a solution, simply compute the evolution of the pattern for
P steps, and compare the result with a shifted copy of the original
pattern.  (This problem is not actually in NP, because the input size is
so small that even writing down a solution is exponential in
the input size.)

We translate to an instance of CSP.

Form a binary variable for each pair (c,t), where c is a cell in the W*L
rectangle and t is a time step from 0 to P-1.  Form a constraint for
each such variable, saying that the variable should match the result of
evolving the nine neighboring cells in time step (t-1), or (if t=0)
that it should match the result of evolving the nine cells
surrounding the point S steps away from its position in step P-1.  Also add
one more constraint, that at least one cell is nonempty.

The natural measures are simply the numbers W, L, and P.
The translated CSP has W*L*P variables, so the time would be
c^{W*L*P}.


Due by email
Monday, Oct. 9, 11:59PM.

Please do not send MS Word or other proprietary formats.
Plain text, TeX, HTML, or PDF are all acceptable.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/280e/hw2.html
##-----------------TITLE------------------------##
Exponential Algorithms: Homework 2
##------------------TEXT------------------------##
ICS 280, Fall 2000:
Exponential Algorithms
Homework Assignment 2


Consider the problem of finding a partition of the vertices of a graph 
into two trees.
I.e., you are given as input an indirected graph.  You must partition the 
vertices of the graph into two subsets, so that each subset is connected 
and contains no cycle.

For planar graphs, this is equivalent to finding a Hamiltonian cycle in 
the dual graph, so it is NP-complete.  But for nonplanar graphs, it might 
have different time bounds than the Hamiltonian cycle problem.

Outline a generate-and-test algorithm for this problem.
I.e., describe a class of potential solutions, such that
a partition into two trees (if it exists) can be found in polynomial time
from one of the potential solutions.  Try to make the size of the set of 
potential solutions as small as possible. 

How many potential solutions are there in your answer to part (a)?
Give your answer as a formula involving n and/or m, the numbers of vertices 
and edges respectively in the input graph. 

Describe a recursive backtracking search for a solution,
using the same space of partial solutions. What opportunities are there to
discover that a potential solution will not work and return early from a 
recursive call? 

Does your backtracking solution have better worst-case complexity than 
the generate-and-test solution?Due by email
Monday, Oct. 23, 11:59PM.

Please do not send MS Word or other proprietary formats.
Plain text, TeX, HTML, or PDF are all acceptable.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/280e/hw4.html
##-----------------TITLE------------------------##
Exponential Algorithms: Homework 4
##------------------TEXT------------------------##
ICS 280, Fall 2000:
Exponential Algorithms
Homework Assignment 4




Projects like distributed.net,
SETI@Home,
Entropia,
and others,
have attempted to apply the large number of computers available via the 
internet to perform massive computational tasks.  The model of computation 
is that a problem is broken up into tasks, and each computer in the project 
requests a task from a central coordinator.  When it finishes computing the 
task, it returns the results to the coordinator and requests a new task 
until the project is completed.  In order to keep network bandwidth to a 
minimum, the description and results of a task should be short, and each 
task should take a moderate amount of time (say an hour or a day).

Which of the exponential-algorithm paradigms we've seen in this course 
(e.g. generate-and-test, backtracking, dynamic programming, random-walk, 
and quantum computing) would be suitable for application in such a 
distributed system?  For each paradigm, explain how it could be partitioned 
into tasks or why it might be difficult to partition it into tasks.

Due by email
Friday, Dec. 8, 10:30AM.

Please do not send MS Word or other proprietary formats.
Plain text, TeX, HTML, or PDF are all acceptable.
##------------------URL-------------------------##
http://www.ics.uci.edu/~eppstein/280e/hw3.html
##-----------------TITLE------------------------##
Exponential Algorithms: Homework 3
##------------------TEXT------------------------##
ICS 280, Fall 2000:
Exponential Algorithms
Homework Assignment 3



Suppose you are given an undirected graph G.
Define a layout of G to be a way of
assigning distinct real-number coordinates to the vertices of G,
so that the edges of G can be represented as (open) intervals of the real 
number line.  Define the bandwidth of a layout
to be the maximum number of such intervals covering any point of the real 
line.  For instance, if G has vertices with coordinates 1,2,3,4, and
edges (1,3) (2,3) (3,4) and (1,4), then the bandwidth of this layout is 
three, since three of the intervals cover the value 2.5.

The bandwidth of G itself is defined to be the minimum bandwidth of any 
layout of G.  For instance, the layout above is not the best possible: the 
same graph has a layout with bandwidth two, so the bandwidth of G in this 
example is two.  Two layouts are equivalent (and have the same bandwidth) 
if they form the same permutation of the vertices,
so one can compute the bandwidth of G by generate and test in time O(n!).

The homework problem is to devise a more efficient dynamic programming 
algorithm for computing the bandwidth of a given graph.

Hint:
if you choose to permute the vertices so that some subset S is placed
with smaller coordinates than everything not in S, then what is the 
optimal layout of S, and what can you say about the overall bandwidth of 
the layout?

Due by email
Monday, Nov. 13, 11:59PM.

Please do not send MS Word or other proprietary formats.
Plain text, TeX, HTML, or PDF are all acceptable.
##------------------URL-------------------------##
http://www.ics.uci.edu/~amrm/slides/os/protection-validation/index.htm
##-----------------TITLE------------------------##
Morph: Supporting Safe Architectural Adaptation
##------------------TEXT------------------------##
Morph: Supporting Safe Architectural Adaptation
11/23/98
 Click here to start
   


 
      Table of Contents
            Morph: Supporting Safe Architectural Adaptation
        Challenges in Integrated Adaptive Computing
        Process Isolation: Motivation
        Process Isolation
        Progress
        Instruction Set Features for Protection
        ISA Features for Protection (cont.)
        Operating System Usage
        Observations/Conclusions
        Observations/Questions (cont.)
        Online Validation: Motivation
        Validating Adaptation
        Approach
        Open Questions
        Summary
        Challenges
        Fault Containment (just beginning)

   
	 Author: Andrew A. Chien 
      Email:  achien@cs.uiuc.edu  
	  Home Page:  http://www.csag.cs.uiuc.edu/individual/achien
##------------------URL-------------------------##
http://www.ics.uci.edu/~amrm/slides/os/protection-validation/sld002.htm
##-----------------TITLE------------------------##
Challenges in Integrated Adaptive Computing
##------------------TEXT------------------------##
Slide 2 of 17
##------------------URL-------------------------##
http://www.ics.uci.edu/~amrm/slides/os/protection-validation/sld017.htm
##-----------------TITLE------------------------##
Fault Containment (just beginning)
##------------------TEXT------------------------##
Slide 17 of 17
##------------------URL-------------------------##
http://www.ics.uci.edu/~amrm/slides/os/protection-validation/tsld001.htm
##-----------------TITLE------------------------##
Morph: Supporting Safe Architectural Adaptation
##------------------TEXT------------------------##
Morph: Supporting Safe Architectural Adaptation 
 Andrew Chien, Jay Byun

AMRM Project Kickoff Meeting

 

 Next slide  Back to first slide  View graphic version
##------------------URL-------------------------##
http://www.ics.uci.edu/~amrm/slides/amrm_structure/pta/index.htm
##-----------------TITLE------------------------##
AMRM:Project Technical Approach
##------------------TEXT------------------------##
AMRM:Project Technical Approach
11/23/98
 Click here to start
   


 
      Table of Contents
            AMRM:Project Technical Approach
        Outline
        Technology Evolution
        Consider Interconnect
        Rethinking Circuits When Interconnect Dominates
        Implications: Circuit Blocks
        Implications: Architectures
        Opportunity: Application-Adaptive Architectures
        Architectural Adaptation
        Adaptation Challenges
        Why Cache Memory?
        4-year technological scaling
        PPT Slide
        Impact of Memory Stalls
        PPT Slide
        Opportunities for Adaptivity in Caches
        Opportunities - Cont’d
        Opportunities - Cont’d
        Opportunities - Cont’d
        Opportunities - Cont’d
        Opportunities - Cont’d
        Opportunities - Cont’d
        Opportunities - Cont’d
        Applying Adaptivity
        Where to Implement Adaptivity?
        Where to Implement?- Cont’d
        Where to Implement - Cont’d
        Current Investigation
        Mechanisms Used  (L1 to L2)
        Mechanisms Used - Cont’d
        Configurations
        PPT Slide
        PPT Slide
        PPT Slide
        PPT Slide
        Observed Behavior 
        Possible Adaptive Mechanisms
        Adaptive Hardware - Cont’d
        Adaptive Hardware - Cont’d
        Adaptivity via compiler
        Further opportunities to adapt
        The AMRM Project= Compiler, Architecture and VLSI Research for AA Architectures
        Summary
        Appendix: Assists Being Explored
        Victim Caching
        Victim Cache
        Stream Buffer
        Stream Cache
        Stride Prefetch
        Miss Stride Buffer
        Advantage over Victim Cache
        Architecture Implementation
        PPT Slide
        PPT Slide
        Prefetch Scheduler
        Pointer Stream Buffer
        Appendix: Prefetching Adaptation Results
        Prefetching for Latency & BW Management
        Adaptation for Latency Tolerance
        Prefetching Experiments
        Adaptation for Bandwidth Reduction
        Simulation Results: Latency
        Simulation Results: Bandwidth

   
	 Author: Rajesh Gupta 
      Email:  rgupta@ics.uci.edu  
	  Home Page:  http://www.ics.uci.edu/~rgupta
##------------------URL-------------------------##
http://www.ics.uci.edu/~amrm/slides/amrm_structure/pta/sld063.htm
##-----------------TITLE------------------------##
Simulation Results: Bandwidth
##------------------TEXT------------------------##
Slide 63 of 63
##------------------URL-------------------------##
http://www.ics.uci.edu/~amrm/slides/amrm_structure/pta/tsld001.htm
##-----------------TITLE------------------------##
AMRM:
##------------------TEXT------------------------##
AMRM:Project Technical Approach 
 Rajesh Gupta



Project Kickoff Meeting

November 5, 1998

Washington DC


A Technology and Architectural View of Adaptation
 

 Next slide  Back to first slide  View graphic version
##------------------URL-------------------------##
http://www.ics.uci.edu/~amrm/slides/amrm_structure/pta/sld002.htm
##-----------------TITLE------------------------##
Outline
##------------------TEXT------------------------##
Slide 2 of 63
##------------------URL-------------------------##
http://www.ics.uci.edu/~amrm/slides/compiler/compiler/index.htm
##-----------------TITLE------------------------##
Compiling for Reconfigurable Memory Machines: The AMRM Approach
##------------------TEXT------------------------##
Compiling for Reconfigurable Memory Machines: The AMRM Approach
11/23/98
 Click here to start
   


 
      Table of Contents
            Compiling for Reconfigurable Memory Machines: The AMRM Approach
        Claim: Compilers are a critical technology for AMRM
        Compiler for Morph Machines Flow
        What can the compiler do for Reconfiguration?
        Compiler Challenges for MORPH AMRM
        Conventional Compiler Organization
        Mutation Scheduling Opens up the Optimization Space and makes it Application Adaptive
        The Visual Interface for QualitativeTransformations and Analysis (VIQT)
         Semantics Loss
        Semantics Retention - Effect
        Semantic Retention in AMRM machines
        Preliminary Semantic Retention Results(speedups due to better mapping/paralleism)
        Memory Footprint Analysis
        Monitoring and Controlling Memory Adaptation
        Reconfigurability Scripts
        Compiler-Directed Aggressive Prefetching
        Other Compiler Reconfiguration help
        Architecture Description Language for MORPH AMRM
        Features of the ADL
        Structural Information
        Instruction Set Information
        ADL Specification Example
        Previous Work
        Previous Work (cont’d)

   
	 Author: neha 
      Email:  nicolau@ics.uci.edu  
	  Home Page:  http://www.ics.uci.edu/~nicolau
##------------------URL-------------------------##
http://www.ics.uci.edu/~amrm/slides/compiler/compiler/tsld001.htm
##-----------------TITLE------------------------##
Compiling for Reconfigurable Memory Machines: The AMRM Approach
##------------------TEXT------------------------##
Compiling for Reconfigurable Memory Machines: The AMRM Approach 
 Alex Nicolau

Department of Information and Computer Science

University of California, Irvine

email: nicolau@ics.uci.edu

 

 Next slide  Back to first slide  View graphic version
##------------------URL-------------------------##
http://www.ics.uci.edu/~amrm/slides/compiler/compiler/sld002.htm
##-----------------TITLE------------------------##
Claim: Compilers are a critical technology for AMRM
##------------------TEXT------------------------##
Slide 2 of 24
##------------------URL-------------------------##
http://www.ics.uci.edu/~amrm/slides/compiler/compiler/sld024.htm
##-----------------TITLE------------------------##
Previous Work (cont’d)
##------------------TEXT------------------------##
Slide 24 of 24
##------------------URL-------------------------##
http://www.ics.uci.edu/~copper/quad.html
##-----------------TITLE------------------------##
COPPER Framework
##------------------TEXT------------------------##
Last modified: Tue Jun 12 02:34:49 PDT 2001
##------------------URL-------------------------##
http://www.ics.uci.edu/~copper/events.html
##-----------------TITLE------------------------##
Events
##------------------TEXT------------------------##
Events 



  
         Upcoming  

      
      
      
  
      
  
        Past  
      
        November 4-8, 2001: ICCAD 2001 (San Jose, CA)   August 6-7, 2001: ISLPED 2001 (Huntington Beach, CA)   June 18-22, 2001: DAC 2001 (Las Vegas)   June 13, 2001 - DARPA Review (JPL - Pasadena,
	    CA)   04/18/01 - Darpa PI Meeting - PAC/C PI Conference (San Diego, CA)
##------------------URL-------------------------##
http://www.ics.uci.edu/~copper/links.html
##-----------------TITLE------------------------##
Links page
##------------------TEXT------------------------##
Links



Sponsors

 DARPA   PACC  

  
Related Projects

 The SimpleScalar-Arm Power Modeling Project   IMPACCT   Microsystems Design Group   Wattch   SimpleScalar  
    Proactive Group (Virginia Tech)   Parapet
    Group (Princeton)  

 SIGDA - Proceedings Archives (CODES, DAC, DATE, ICCAD) 

Conferences on Low Power

 ICCAD:
      Internatonal Conference on Computer Aided Design (2001)  -
      previous years:
       2000
      
   DATE:
      Design Automation and Test in Europe (2002)  - previous
      years:
       2001,
       2000,
       1999,
       1998

   IEEE Design
      and Test of Computers 
      
   MICRO:
      International Symposium on Microarchitecture (2001)  -
      previous years:
      
      2000,
       1999

  
      ISCA: International Symposium on Computer Architecture
      (2001)  - previous years:
      
      2000,
      
      1999,
      
      1998
      
   PACT:
      International Conference on Parallel Architectures and
      Compilation Techniques (2001)  - previous years:
      
      2000,
      
      1999,
       1998
      
  
      ASPLOS: Architectural Support for Programming Languages and
      Operating Systems (2000)  - previous years:
      
      1998

   IWIA: International Workshop on
      Innovative Architecture for Future Generation High Performance
      Processors and Systems 
      

   IWLS: International
      Workshop on Logic Synthesis (2001)  - previous years:
      
      2000,
       1999
      
  
      WVLSI: IEEE Annual Workshop on VLSI (2001)  - previous years:
       2000,
      
      1999,
      
      1998
      
   COLP: Workshop on Compilers and Operating Systems
      for Low Power (2001)  - previous years:
       2000
      
  
      LCTES: Workshop on Languages, Compilers, and Tools for Embedded
      Systems (2001)  - previous years:
      
      2000,
      
      1999,
       1998
      
   RTAS: IEEE
      Real-Time Technology and Applications Symposium (2001)  -
      previous years:
       1999,
       1998
      
  
      IEEE Workshop on Power Management for Real-Time and Embedded
      Systems (2001) 
      
   CASES: International Workshop on Compiler and
      Architecture Support for Embedded Computing Systems (2001) 
      - previous years:
       1999,
      
      1998

   ISLPED -
      International Symposium on Low Power Electronics and Design
      (2001)  - previous years:
       2000,
      
      1999,
      
      1998

   DAC - Design
      Automation Conference (2001) 
	  




Conferences on Binary Translation

 FDDO:
      ACM Workshop on Feedback-Directed and Dynamic Optimization 
   Binary: Workshop on Binary Translation  
   DynAMO: ACM SIGPLAN Workshop on Dynamic and
      Adaptive Mechanisms for Optimizations 




Publications on Low Power

 Collection of power related articles (with abstracts) 


Useful Software

 PowerAnalyzer   MiBench Embedded Benchmark Suite   Wattch   SimpleScalar   Sparc-7 port of Simplescalar-3.0  SimplePower
##------------------URL-------------------------##
http://www.ics.uci.edu/~copper/publications.html
##-----------------TITLE------------------------##
Publications page
##------------------TEXT------------------------##
Selected Publications





Conference Papers



  

"Integrated I-cache Way Predictor and Branch Target Buffer to Reduce Energy Consumption", 
W. Tang, A. Veidenbaum, A.Nicolau, R. Gupta,

International Symposium on High Performance Computing, May 2002.


"Profile-based Dynamic Voltage Scheduling using Program Checkpoints in the COPPER Framework",

Ana Azevedo, Ilya Issenin, Radu Cornea Rajesh Gupta, Nikil Dutt, Alex Veidenbaum, Alex Nicolau,

Design Automation and Test in Europe, March 2002.


"An Efficient Compiler Technique for Code Size Reduction using Reduced Bit-width ISAs",

Ashok Halambi, Aviral Shrivastava, Partha Biswas, Nikil Dutt, Alex Nicolau,

Design Automation and Test in Europe, March 2002.


"Memory System Connectivity Exploration",

Peter Grun, Nikil Dutt, Alex Nicolau,

Design Automation and Test in Europe, March 2002.


"Automatic Verification of In-Order Execution in Microprocessors with Fragmented Pipelines and Multicycle Functional Units",

Prabhat Mishra, Hiroyuki Tomiyama, Nikil Dutt, and Alex Nicolau,

Design Automation and Test in Europe, March 2002.


"Power Savings in Embedded Processors through Decode Filter Cache",

W. Tang, R. Gupta, A. Nicolau,

Design Automation & Test in Europe, March 2002.


"Automatic Modeling and Validation of Pipeline Specifications driven by an Architecture Description Language",

Prabhat Mishra, Hiroyuki Tomiyama, Ashok Halambi, Peter Grun, Nikil Dutt, and Alex Nicolau,

7th Asia and South Pacific Design Automation Conference & 15th International Conference on VLSI Design, January 2002.


"Automatic Validation of Pipeline Specifications",

Prabhat Mishra, Nikil Dutt, and Alex Nicolau,

Sixth IEEE International Workshop on High Level Design Validation and Test, November 2001.


"Architectural Adaptation for Power and Performance", 
Weiyu Tang, Alexander V. Veidenbaum, Rajesh Gupta,

International Conference on ASIC, Oct. 2001.


"Architecture Description Language driven Design Space Exploration in the Presence of CoProcessors",

Prabhat Mishra, Frederic Rousseau, Nikil Dutt, and Alex Nicolau,

Tenth Workshop on Synthesis And System Integration of Mixed Technologies, October 2001.


 "Design of a Predictive Filter Cache for Energy Savings in High Performance Processor Architectures",

Weiyu Tang, Rajesh Gupta, Alexandru Nicolau,

International Conference on Computer Design, Sep. 2001.


"APEX: Access Pattern based Memory Architecture Exploration",

Peter Grun, Nikil Dutt, Alex Nicolau,

14th International Symposium on System Synthesis, September 2001.


"Functional Abstraction driven Design Space Exploration of Heterogeneous Programmable Architectures",

Prabhat Mishra, Nikil Dutt, and Alex Nicolau,

14th International Symposium on System Synthesis, October 2001.


"Low Power Address Encoding using Self-Organizing Lists",

Mahesh Mamidipaka, Dan Hirschberg, Nikil Dutt,

International Symposium on Low Power Electronics and Design, August 2001.


 "Simultaneous Way-footprint Prediction and Branch Prediction for Energy Savings in Set-associative Instruction Caches",

Weiyu Tang, Rajesh Gupta, Alexandru Nicolau, Alexander V. Veidenbaum,

IEEE Workshop on Power Management for Real-Time and Embedded Systems, May 2001.


 "Architectural and Compiler Strategies for Dynamic Power Management in the COPPER Project",

Ana Azevedo, Radu Cornea, Ilya Issenin, Rajesh Gupta, Nikil Dutt, Alex Nicolau, Alex Veidenbaum,

IWIA 2001 International Workshop on Innovative Architecture, Maui, Haiwai, January, 2001.


 "Energy Efficient Instruction Cache for Wide-issue Processors",

A. Badulescu, A. Veidenbaum,

IWIA 2001 International Workshop on Innovative Architecture, Maui, Haiwai, January 2001.






Technical Reports



"Profile-based Dynamic Voltage Scheduling using Program Checkpoints in the COPPER Framework",

Ana Azevedo, Ilya Issenin, Radu Cornea Rajesh Gupta, Nikil Dutt, Alex Veidenbaum, Alex Nicolau.
##------------------URL-------------------------##
http://www.ics.uci.edu/~copper/whatsnew.html
##-----------------TITLE------------------------##
What's New
##------------------TEXT------------------------##
What's New 



     June 13, 2001 - DARPA Review (JPL - Pasadena, CA): 




  
  
     04/18/01 - Darpa PI Meeting - PAC/C PI Conference (San Diego, CA):
##------------------URL-------------------------##
http://www.ics.uci.edu/~copper/presentations.html
##-----------------TITLE------------------------##
Presentations page
##------------------TEXT------------------------##
Selected Presentations 



     June 13, 2001 - DARPA Review (JPL - Pasadena, CA): 




  

  
     04/18/01 - DARPA PI Meeting - PAC/C PI Conference (San Diego, CA):
##------------------URL-------------------------##
http://www.ics.uci.edu/~copper/people.html
##-----------------TITLE------------------------##
COPPER Project
##------------------TEXT------------------------##
Faculty


 Prof. Alex Nicolau
   Prof. Alex Veidenbaum
   Prof. Nikil Dutt
    Prof. Rajesh Gupta






Graduate Students


 Ana Azevedo
   Ilya Issenin 
   Radu Cornea 
   Cristiano Pereira 
   Ravindra Jejurikar 
   Ana-Maria Badulescu 
   Weiyu Tang
##------------------URL-------------------------##
http://www.ics.uci.edu/~pattis/common/online.html
##-----------------TITLE------------------------##
Course Software
##------------------TEXT------------------------##
Course Software






This page has been reached by an out-of-date link.
If you see this page, please email
pattis@ics.uci.edu

telling me what links you clicked to reach this page.
##------------------URL-------------------------##
http://www.ics.uci.edu/~pattis/ICS-21/handouts.html
##-----------------TITLE------------------------##
Handouts
##------------------TEXT------------------------##
Handouts

Introduction to Computer Science I
ICS-21: Lecture A/Labs 1-3
Spring 2012





The following is a list of general-purpose handouts available for this course.
You may also want to look at related materials on the following web pages:
  Lecture Schedule/Notes,
  Sample Programs, and
  Online Resources.










 Java and Eclipse (Download/Installation Instructions)
Instructions for downloading and installing Java and the Eclipse IDE
  (which also contain all the necessary links to download these products).



  Windows Operating System & Eclipse IDE
Instructions for performing a wide variety of tasks with the Windows
  Operating System and the Eclipse Integerated Development Environment(IDE).
You will be performing these tasks repeatedly during the semester.



  Academic Integrity Contract
Discusses the kinds of collaboration allowed and disallowed for the
  various testing instruments in this course.
You must read and sign a copy.



  Academic Dishonesty Reporting Form
In case you are interested, here is the standard form UCI
   supplies instructors for reporting violations.





ASCII Character Set Reference
A table showing how values of the types int and char
  interconvert.


Bugs: An Explanation
A description of bugs in the context of computer programming.



The Eclipse Debugger
A reference and tutorial on using the Eclipsed Debugger.
It includes information about observing method calls and variables, single
  steppting through code in method, and setting/clearing unconditional and
  conditional breakpoints.


Glossary
A glossary defining many important programming (and Java) terms.


Hackers and Painters
The title (and most interesting chapter) in a book written by 
    Paul Graham:
Hackers and Programmers: Big Ideas from the Computer Age.
I highly recommend this book.
All chapters are posted on the author's web pages.


Help Schedule
Days/times for all staff help, including instructor class and office hours,
  CA consulting/help sessions, and regular Wean (5419) cluster hours.


Java Coding Style
A description of one Java coding style (about 400K in adobe pdf) described by
  a well known Java/OOP expert.



Java Conventions for Java (Sun Microsystems)
Code Conventions for the JavaTM Programming Language, developed by Sun.
Note quite as extensive as the document below, but an easy place to start.


Pair Programming
An introduction to Extreme Programming (XP) concentrating on testing and
  pair programming.
Read this before doing pair-programming on a programming assignment.


Regular Expressions
In the context of studying EBNF, we will discuss using regular expressions
  for searching in the Eclipse text editor.
Each regular expression is like the right hand side of an EBNF rule,
  although it uses a different notation and includes more options.
Three other popular (by google) web sites are
  
    Regular Expressions and
  
    Using Regular Expressions and
  
    A Tao of Regular Expressions.





Surveys and Summaries


  Mid2Semester Survey
A survey I'll direct you to fill out about 1/4 the way through
  the semester (for the "Java Review" material).




Computer Survey
Results of computer ownership surveys that I have collected over the past
  few years.
Data for this semester will be added during the first few weeks of school.
##------------------URL-------------------------##
http://www.ics.uci.edu/~pattis/ICS-21/lectures.html
##-----------------TITLE------------------------##
Lectures
##------------------TEXT------------------------##
Lecture Schedule/Notes

Introduction to Computer Science I
ICS-21: Lecture A/Labs 1-3
Spring 2012




Course Expectations

Lectures and Labs
Learning to program is an intensive activity.
We will have class every day of the week: MWF lectures and TuTh labs.
Sometimes we will split our labs between a lecture and a true lab.
This is especially true early in the quarter, where we must first learn
  enough in lecture to apply/practice in lab.


Work Before and During Lecture
I expect students to read the assigned lecture materials before class,
  and (attempt to) work out solutions to the assigned problems (sometimes you
  can test/verify your solutions on the computer).
During class, I will discuss this material, mostly by answering questions
  on the reading(s), asking you questions about the material, and amplifying
  on those topics that need further discussion.
Class mottos: "Those who are ashamed of asking are ashamed of learning."
  and "The only stupid question is the one left unasked."

I will also randomly call on students to present their solutions to selected
  assigned problems, and discuss them as well (please be prepared).
I may also ask students to solve, either individually or in groups, other
  problems relating to the material; we will then compare and discuss these
  solutions.
Thus, I expect most "lectures" to be interactive, with students participating
 fully.

Note that doing the reading and working on the assigned problems before
  class is a critical step in the learning process: students must be familiar
  with the material to get the maximum benefit from the class discussions and
  problem-solving sessions.
Solving the assigned problems is especially important, as it "proves" that a
  student has not only read the material, but "understood" it is as well.
Here understood means "has used the information operationally to solve 
 problems".
If you have difficultly with a problem, it indicates that you should probably
  go back over the related reading -or certainly ask a question about it
  in class.

I will allow students to work together on these problems: to discuss them, to
  analyze how to approach solving them, and to collaborate on their actual
  solution.
Such a discussion must go beyond copying another student's answer: it involves
  completely understanding the answer and the process whereby it was reached,
  which includes acquiring the ability to analyze and solve similar problems.
In fact, students will be required to solve similar problems on (almost) weekly
  take-home quizzes, on which collaboration is NOT allowed.
Don't cheat yourself in this aspect of the course.



Lecture Attendance and Decorum
I expect students to attend class daily, arriving on time.
The announcements made at the start of class are often very important; I
  reserve the right to give small pop-quizzes on the readings.
I expect students to neither carry on private conversations, nor use
  their computers to answer e-mail, surf the web, day trade stocks, or
  perform any other activities unrelated to this course.

Ringing cell phones disrupt my lectures.
Unless you are responsible for someone's life, your cell phone should be
  turned off.
Otherwise, you should set it to operate in some silent mode (as mine will be
  set); if it rings silently, please leave the class, with a minimum of
  disruption to the rest of the students, to answer it.
If your cell phone rings audibly in class, you will be charged points for
  interrupting the class.
Finally, if you know that you must leave early, please sit by a door, so that
  you can exit quietly and without disturbing the class.

Overall, please strive to be a considerate class member, both to me and to
  your fellow students.




Schedule, Topics, Readings, and Problems




Week 
     Activity      DateTopic (read for this date/do problems)Problems#1Lecture4/02
        Course Overview (all)
  1,3,5,9 Lab4/03
       Introduction to Eclipse
    Lecture4/04EBNF 
      Chapter / 
    
      Powerpoint1,2,4,8; Slide #24


 Lab4/05Discuss/Start
        Program #0  Lecture4/06
      Tokens in Java Programs (all)1,2,3,10,11,12#2Lecture4/9
      Variables and Operators (Introduction - The % Operator)2,3,4 Lab4/10Lecture Part:
        
        Variables and Operators (Relational Operators - Experiment!)
      Lab Part     : Work on
         Program #05,6
        Lecture4/11
        Expressions (Expressions - Pragmatics)7,8,10,13,23 Lab4/12Lecture Part:
       
       Simple Statements: Declaration, Expression, and Block
         (Introduction - Boxing Statements)
      Lab Part     : Discuss/Start
         Program #11,2,5,6,7
        Lecture4/13
    Simple Control Structures: Decision
    (if Statement - if Pragmatics)11,12,18,19#3Lecture4/16
    Simple Control Structures: Looping
    (for Statement - More Boxing)26,31 Lab4/17Work on Program #1  Lecture4/18
    Advanced Control Structures: Exceptions (try/catch - File Reading)38,39 Lab4/19Discuss/Start
      Program #2  Lecture4/20
      Program Construction and Debugging (all)none#4Lecture4/23
        More Java (all)
      
        Coding Style (all)
     More Java: 1,3-6
         Coding Style: 1,2 Lab4/24
      Basics of the Eclipse Debugger
      Work on Program #2Page 11 Problems
        Lecture4/25
      Simplification (all)
  1,2,3,4,5 Lab4/26Discuss/Start
      Program #3  Lecture4/27
      Classes and Objects: Fundamentals (Introduction - == vs equals)1,2,3#5Lecture4/30
      Reading/Using Classes (Class Terminology - Field Members)5,6 Lab5/1Work on Program #3  Lecture5/2
      More Useful Classes (OOP Summary - Other Useful Classes)7 Lab5/3
  Programming Exam #1: Control Structures
  
  Discuss/Start
      Program #4  Lecture5/4
      A File I/O Class (Java File I/O - Buffering)9,11,12#6Lecture5/7
        Writing static Methods (Introduction - Method Design)2,3,4,5,6,8


 Lab5/8Work on Program #4  Lecture5/9
      Writing static Methods in Classes
        (Defining Classes: EBNF -Eclipse IDE)
    Lab5/10Midterm Written Exam
        Lecture5/11
      Writing Classes (Classes with Objects - Methods)21-24#7Lecture5/14
      Writing Classes (continued) (Special Methods - Class Summary)none Lab5/15
      Programming Exam #2: static Methods + Using Objects
    Lecture5/16
      The 1-d Array Class (Introduction - Modeling Data)1,2,3,6,8 Lab5/17
    Discuss/Start
      Program #5  Lecture5/18Examples of Array Processing #8Lecture5/21
      The Object Class (Wrapper Classes - Reference Casting)none Lab5/22Work on
      Program #5  Lecture5/23
      Simple Collections via Arrays
      (Collection Classes - Doubling Performance)9-13 Lab5/24Discuss/Start
      Program #6  Lecture5/25
      Interfaces (all)2,3,6,7,8,9#9Lecture5/28Holiday (No Classes): Memorial Day
    Lab5/29Programming Exam #3: Writing Classes
    Lecture5/30
      Model Classes in the MVC Pattern (all)1,2,4,5,7 Lab5/31Work on
      Program #6  Lecture6/1
      List Collections and List processing (all in Text file)None#10Lecture6/4
      Inheritance in Class Hierarchies (all)1,3,4,5,6,7,10,11,12 Lab6/5Work on
      Program #6  Lecture6/6
      Abstract Classes (all)  Lab6/7Programming Exam #4: Writing Classes + Arrays
    Lecture6/8Class Wrapup and Review for Final Exam Final Exams Week6/10We will have a comprehensive 2-hour written
      final exam on Tuesday, June 12th, 1:30pm - 3:30pm in SSPA 1100
      (see the
       
      Final Exam Schedule, Spring 2012).
      I will send email when I have computed/entered final grades, which
        are due to UCI by Thursday, June 21 at 5pm.
   
##------------------URL-------------------------##
http://www.ics.uci.edu/~pattis/ICS-21/programs.html
##-----------------TITLE------------------------##
Sample Programs
##------------------TEXT------------------------##
Sample Programs

Introduction to Computer Science I

ICS-21: Lecture A/Labs 1-3
Spring 2012





The following is a list of zipped Eclipse programming project files (more
  might be added during the semester).
Please feel free to download, unzip, and study these programs (both their code
  and their run-time behavior).
Programmers gain tremendous insight into all facets of programming by studying
  the code of other programmers (especially those with more experience; and I
  am happy to improve my code based on your observations -nothing is perfect).
A good programmer typically makes elegant use of the required language
  features, resulting in smaller, more elegant code.

All downloaded projects are listed alphabetically.
All are zip files, so unzip them first.
Most project files require the standard course library 
 (edu.uci.ics.pattis.introlib;
 if you followed the Eclipse installation instructions, you should be fine with
 this jar file: reread the direction if necessary).






Download: Array Demonstration
This program shows how to declare, initialize, and manipulate simple
  arrays of int/String values using a variety of for 
  loops.


Download: 
          2-D Array Demonstration
This program shows how to declare, initialize, and manipulate simple
  2-d (rectangular) arrays of int values using a variety of
  for loops.


Download: Average
The Average program prompts the user to enter the name of a file containing
  test score date; then it reads that file (starting with the maximum
  possibe score for the test) followed by a sequence of scores ended by the
  sentinel -1.
Finally, it prints some statistics about the scores in this file.


Download: Backtracking
These programs use a generalized backtracking search to search an implicit
  game tree.
See the backTrack package, which contains the Problem interface,
  and the Solver class, which solves any problem expressible by a class
  implementing this interface.
The NQueens package contains a NQueens class and a simple
  application that uses Solver to solve it (how to place N queens on
  a chessboard so that none can attack another).
The Satifiability package contains a Satisfiability class and a 
  simple application that uses Solver to solve it (how to assign T/F
  values to variables in a formula to satisfy it -make it evaluated to true).
The Sudoku package contains a Sudoku class and a simple
  application that reads a Sudoku puzzle and uses Solver to solve it
 (how to assign 1-9 values to cells in a Sudoku puzzle to satisfy its
 constraints).


Download: Bouncing Balls
The program is implemented using the Model-View-Controller pattern.
It simulate balls bouncing in a box.
The user can create new balls by clicking in the box.
The user also can press buttons to start/stop/reset the simulation.


Download: 
  Class Examples
This program illustrates how to construct and use (call methods on) objects
   from a variety of simple classes:
  DiceEnsemble, 
  StringTokenizer, 
  Timer, 
  TypedBufferReader, 
  DecimalFormat, 
  BigInteger, 
  Integer, and 
  String.


Download: Color Calculator
The program is implemented using the Model-View-Controller pattern.
It allows us to see a color (and its hexidecimal value) as we change its red,
  green, and blue components in the range [0..255].
These colors are all represented by ModularCounters, and
  the Model class has a main method so that it can be
  tested independently form the Controller and View.
Note, the hex value can be used in HTML to specify a color.




Download: 
  Collatz Conjecture FOR DEBUGGER HANDOUT
The Collatz conjecture states: starting with any positive number, repeat the
  process "If it is even, halve it; if it is odd, multiply it by three and
  add one" and eventually the remaining value reduces to one.
No one has been able to prove this conjecture, but a short program allows you
  to investigate it.
It is interesting to obseve the number of cycles required to reduce the
  starting number to 1, looking for a pattern.
Unlike the program above, this is a simpler one, using the int
  type, useful for illustrating the debugger.


Download: 
  Controller Demonstrations
Demonstrations of using Controllers in the MVC pattern.
The mouse project illustrates all mouse controllers (each associated 
  with a trivial behavior).
The grabbag project illustrate many other controllers:
  JButton, JTextField, JRadioButton, JTextArea,
  JScrollPane, RadioButtonPanel, and SliderPanel.


Download: 
  Craps Statistics
This program prompts the user for the number of craps games to play (craps
  is a dice game whose rules are explained in the opening comment in the
  Application.java file).
It then simulates that many games of craps, printing the number of wins,
  losses, dice throws, elapsed time, and playing speed.
This program uses the DiceEnsemble and Timer 
  classes.


Download: 
  Craps Statistics FOR DEBUGGER HANDOUT
This program prompts the user for the number of craps games to play (craps
  is a dice game whose rules are explained in the opening comment in the
  Application.java file).
It then simulates that many games of craps, printing the number of wins,
  losses, dice throws, elapsed time, and playing speed.
Unlike the program above, this is a simpler one, not using classes,
  useful for illustrating the debugger.


Download: 
  Date Calculator #1
A small program for for computing some information about dates.
This program illustrates how to use five static methods and twelve
  static fields written directly in the Application class.


Download: 
  Date Calculator #2
A small program for for computing some information about dates.
This program illustrates how to use five static methods and twelve
  static fields written in the DateUtility class (included in
  this project folder).
When learning to write classes (that are just libraries of static
   methods), this is a good place to start.


Download: 
  DiceEnsemble Demonstration
A driver program for testing the DiceEnsemble class
  (from the course library).


Download: 
  Directory Lister
A program that lists the contents of any folder and computes statistics about
  its subfolders and files.
This program uses Java's File class (defined in the java.io
  package), which represents an N-ary tree by using arrays.
These N-ary trees are processed by both iteration and recursion.


Download: 
  Expression Trees
A program that reads an expression in standard Java form (literals only,
  no variables) and then builds an expression tree for it (using parentheses
  and operator precedence to guide it) and then evaluates the tree and
  prints its postfix form.
It uses a SimpleStack as an critical data structure.


Download: 
  Expression Trees (Extended)
A program that reads an expression in standard Java form (BigInteger
  literals and variables) and then builds an expression tree for it (using
  parentheses, operator precedence, and associativity to guide it) and then
  evaluates the tree and prints its postfix form (and shows the variable
  Map).
It uses a SimpleStack as an critical data structure.


Download: 
  File Input
A simple program illustrating the pattern used to read input files (including
  a try-catch statment to terminate the file reading loop when there is
  no more input).
This program actually recovers from errors on a line by line basis, as
  described in the lecture on the
  
  TypedBufferReader class for Java file input.


Download: 
  Testing Hashing on Strings
Two drivers.
One tests chained hashing on Strings in two ways: random Strings
  and all String up to N characters; one tests open hashing on
  random Strings with linear or quadratic probing.
There are lots of ways to run these drivers (or just choose the
  defaults).
If you want, use your own hashing function, testing its speed and
  ability to put distribute the values among the bins.


Download: Interface Demonstration
A simple program illustrating two Java interfaces DecisionInt and
   Univariate and how they are used, as described in the lecture on the
  
   Interfaces.
This is the beginning of real object-oriented programming.
The name of the interface is uses as a parameter type in a method, and many
  classes are defined to implement that interface.


Download: 
  Java 1.5 Examples
Illustrates various features new to Java 1.5: extended for loops,
  autoboxing, var-args, c-style formatting, and using generic collection
  class.


Download: 
  JUnit: Stack Test
Uses JUnit to test a stack class (which is correct).
I recommend that you insert bugs into the stack class and see
  if they are diagnosed (so you will get familiar with
  interpreting errors from JUnit.
See also the Course Software download JUnit Testing Framework
  (reachable via the Online Resources link).


Download: 
  Layout Manager Demonstrations
Demonstrations for four standard Layout Managers: FlowLayout,
  BoxLayout, GridLayout and BorderLayour.
Also includes a demonstration of recursively combining these JPanels
  and their layouts.
Finally, includes a demonstration TwoColumnLayout, showing how to write
 new, simple layout managers.


Download: 
  Minimum Distance between Points: 3 Algorithmis
A driver program for using the three algorithms on arrays of
   randomly generated Point2D.Doubles.
The brute force algorithm is O(N^2), the sorting/recursive algorithm
  is O(NlogN), and the hash algorithm is O(N), although empirically
  it runs more slowly than the sort/recursive algorithm.


Download: 
  ModularCounter Demonstration
A driver program for testing the ModularCounter class
  (from the introlib library).


Download: 
  Object-Oriented List Demo
A driver program for testing Object-Oriented Linked Lists.
Included are interfaces for list algorithms, the declaration
  of the classes needed to implement linked lists, and
  various classes that specify algorithms.
Uses the singleton and strategy pattern.
See also
  
  Patterns for Decoupling Data Structurs and Algorithms


Download: 
  Ordered Collection Demonstration
A driver program for testing all the ordered collection classes:
  ArrayStack, ListStack,
  ArrayQueue, ListQueue,
  ArrayPriorityQueue, and ArrayUnsortedPriorityQueue.
All the relevant interfaces, abstract classes, and classes are included in
  this driver, which can generically test each of these concrete classes.


Download: 
  Positional Shape Inheritance Demonstration
A program using abstract classes and inheritance.
The classes in this program is described in the first design in the
  
    Abstract Classes lecture.


Download: 
  Positional Shape Inheritance Demonstration 2
A program using interfaces, abstract classes, and inheritance.
The classes in this program is described in the second design in the
  
    Abstract Classes lecture.


Download: 
  Rational Demonstration
A driver program for testing the Rational class
  (from the introlib library).


Download: 
  Reflective Test Driver
Using Java's powerful reflection mechanism, this test driver
  allows you to test any Java class!
Just enter its full name (prefixed by its package) and
  then you'll get to choose a constructor (and arguments)
  and repeatedly be able to call methods on it (and supply arguments).
Truly amazing!


Download: 
  SimpleDiceEnsemble Demonstration
A driver program for testing the SimpleDiceEnsemble class
  (a slightly simpler version than the one in the introlib library;
  it doesn't
  use arrays and has no getPips method) which is discussed in the
  
    Writing Classes lecture.


Download: 
  SimpleQueue Demonstration
A driver program for using the SimpleQueue collection class
    described in the lecture on the
  
    1-d Arrays....
It declares an instance variable that is an array that grows to
   acccomodate all the required references stored in the queue.
Queues support first-in/first-out behavior.


Download: 
  SimpleQueue Demonstration with List
A driver program for using the SimpleQueue collection class
    described in the lecture on the
  
    1-d Arrays....
It declares an instance variable that is an array that grows to
   acccomodate all the required references stored in the queue.
Queues support first-in/first-out behavior.
Note, this version is implemented with a List,not an array


Download: 
  SimpleQueue with Iterator Demonstration
A driver program for using the SimpleQueue collection class
    described first in the lecture on the
  
    1-d Arrays... and then modified to include iterators in the lecture
  
    Collection Classes: Basics.
It declares an instance variable that is an array that grows to
   acccomodate all the required references stored in the stack.
Queues support first-in/first-out behavior.
The menu has been enlarged to include testing the iterator inner-class.


Download: 
  SimpleStack Demonstration
A driver program for using the SimpleStack collection class
    described in the lecture on the
  
    1-d Arrays....
It declares an instance variable that is an array that grows to
   acccomodate all the required references stored in the stack.
Stacks support last-in/first-out behavior.


Download: 
  size in BST
A solution to a problem even too simple to put on the programming exam, for
  computing the size of a BST using the classes appearing
  on the second programming exam.


Download: 
  Sorting (with Interfaces) Demonstration
A driver program for using the Arrays.sort method on arrays of
   Points.
It includes classes that implement the Comparator interface,
   for sorting by X coordinate, by Y coordinate, by distance from the
   origin, and by angle from the origin (in all cases, both increasing
   and decreasing through the use of the ReverseAComparator
   decorator.


Download: Sorting Methods Demonstraction
This program is a driver for the sorting methods in the Sort class
  (included in this download).
It allows the testing and timing of all these sort methods, and
  Arrays.sort.
It also contains an executable, that you can run immediately.


Download: State Space Search
These programs use a generalized state-space searching to solve various
  various problems involving applying operators.
See the stateSpace package, which contains the Problem interface,
  and the Solver class, which solves any problem expressible by a class
  implementing this interface.
The puzzleNxN package contains a PuzzleNxN class and a simple
  application that uses Solver to solve it (how to acheive a standard
  puzzle configuration).
The waterJugs package contains a WaterJugs class and a simple
  application that uses Solver to solve it (how to achieve a certain
  configuration).


Download: Supermarket Simulation
This program simulates a supermarket using queues (for the checkout lines)
  and priority queues (for the scheduling events; the event to happen most
  closely in the future has the highest priority).
The simulated supermarket is specified by an array storing the maximum number
  of items that can be checked-out in each line.
The events are "enter the store and start shopping" (at random intervals),
  "enter a checkout line" (based on the number of items bought, the sizes
  of the lines, and how many items are allowable), start checkout process
 (keep track of shopper's wait time: from entering a line to checking out),
  and "exit store".
The unhappiness of a custom is computed (line wait time/shop time) and
  an average over all shoppers is reported.
The program also reports the running time and simulation speed (# of events
  processed/second).


Download: Thread Demonstrations
This folder contains four small programs that demonstrate threads:
Thread/Runnable illustrate two ways to use threads.
Timer illustrates how to use an action listener which is activated
  regularly.
Animation shows how such a time can be used to run a tiny GUI animation.


Download: Tree Heights
This folder contains a program and an executable that builds random trees
  and shows a histogram of their heights.
It illustrates the heights of random trees, which are much closer to
  their minimum than their maximums.


Download: Trip Planner
This program prompts the user for information about the price of gas
  and the length of a trip and computes the number of tanks of gas
  needed, the cost, and the amount of few remaining in the tank on arrival.


Download: 
  View Demonstrations
Demonstrations of using JFrames and JPanels.
The JFrame demonstration shows how to create, position, size,
  and label windows.
The JPanel demonstrations show how to draw figures, put text,
  put icons (and animate them), and put buttons into JPanels.


Download: X (cross) Reference
This program produces a cross-reference list of any text file.
It uses the map and list collection classes to do so: the
  Application class uses non-generic collections (pre Java 1.5)
  and the GenericApplication class uses Java 1.5 Generic
  collections (and one Java 1.5 for loop).
The download includes a complete copy of Mark Twain's "Tom Sawyer"
  and the correct output for this input.



Download: Face Flasher
##------------------URL-------------------------##
http://www.ics.uci.edu/~pattis/ICS-21/assignments.html
##-----------------TITLE------------------------##
Programming Assignments
##------------------TEXT------------------------##
Programming Assignments

Introduction to Computer Science I
ICS-21: Lecture A/Labs 1-3
Spring 2012




Procedures

Programming assignments are typically due one week after they are assigned,
  at 11:30pm, on a Wednesday night.
To turn in programs, and verify the submission, use the
  
  Checkmate Homework Dropoff system: it is also available on the
  standard frame index on the course website: it uses UCInetID Secure Web
  Login.
You receive NO POINTS for late programs, unless you have discussed the
  matter with me and gotten my official permission (typically, granted prior to
  the due date, always via email and not just orally; contact me as soon as
  possible).

IN ALL CASES, you must drop off (on time) whatever part of the program you
  have written, if you are to receive any partial credit for a submission
  (either on time or late with permission); if you drop off no files, I must
  assume that you have done no work on the assignment (which will result in a
  grade of 0).



Pair Programming
We will use pair programming on most assignments (either required
  or optional, although it is sometimes prohibited); it is only
  on these assignments that students can closely collaborate with their
  partners, turning in a single, joint program.
Only ONE STUDENT from the pair should drop off (all parts of) the
  program -which one doesn't matter- but the NAMES of both students
  MUST APPEAR IN A COMMENT inside the code file(s).
See Pair Programming for
  details about pair programming, and the right and wrong ways to do it.
There is a tremendous amount to be gained by both group members, if they
  pair program in the right way.

If you are having problems finding a student to pair with, or believe that
  you your schedule disallows the ability to work in a pair, contact me
  immediately.
Without making prior arrangments with me, individual students submitting a
  program when pairing is mandatory will have their grade reduced by 25%.


Starting Programs
Please read each assignment completely and carefully before starting it.
I suggest that you print and then read it, marking relevant material with a
  highlighter (details that you might forget by the end of an assignment).
We will typically discuss each new assignment in Lab on the Thursday it is
  assigned, and start working on it then.



Extra Points for Submitting Early
If you drop off your program early, you will receive extra points (1 point if
  you submit it 24 hours early, 2 points if you submit it 48 hours early).
Since each program is worth 40 points, you can raise your grade on a program
  by 5% (half a letter grade) by turning it in two days early.
Note that turning in a program more than two days early results in just
  2 extra points; therefore, I encourage students to finish their programs as
  early as possible, but continue to think about them (and ask questions about
  them) until two days before the due date, and submit them early at that time.



Programming Assignments
I will turn text into links below on the assigned date.

ProgramAssignedDueDescriptionPairing?#04/054/11
  Computing Infrastructure

Prohibited#14/124/18
  Simple Program Suite

Required#24/194/25
 Intermediate Programming Suite I

Recommended#34/265/2
  Intermediate Programming Suite II

Recommended#45/35/16
  Programming with Classes

Recommended#55/175/23
  Writing Classes

Recommended#65/246/8
  Writing Classes with Arrays and Interfaces

Optional
##------------------URL-------------------------##
http://www.ics.uci.edu/~pattis/ICS-21/announcements.html
##-----------------TITLE------------------------##
Announcements
##------------------TEXT------------------------##
Announcements

Introduction to Computer Science I
ICS-21: Lecture A/Labs 1-3
Spring 2012






  #24: 6/11/12
  Program #6

I have graded (and recorded the grades for) Program #6.
The class average was about 42 (or about 93%) and the the median was about
  44 (or about 98%).
The last time I taught this course the average was about 37 (or 83%) and the
  median was about 44 (or 98%).
The average over all programming assignments this quarter was 92%; the last
  time I taught this course it was 97%.

After I return your graded work in my special office hours on Monday, please
  download the Grades(zipped .xls file) from the course web and ensure
  that I have computed and entered your grade correctly (I'll be entering
  thousands of grades for students in my course this quarter, so even if I'm
  99% accurate, I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an programming score of 36.5 is recorded as 37).

Generally, very good work by most students.
Students who missed more than 3 methods tended to miss a lot more than 3.
There is still a lot of conufsion about when in loops to use used vs.
  sequence.length: you almost always want to use used so as to
  not process any null values at the end of the array.
Please check my solution methods and learn something before the final
  exam.

There were a few methods that seem to give many students trouble, often the
  advanced ones: countTrue and filterTrue.
Surprisingly, many students missed insertAt and remove.





  #23: 6/9/12
  In-Class Programming Exam #4

I have graded (and recorded the grades for) In-Class Programming Exam #4.
The class average was about 32(or about 64%) and the median was about 34
  (or about 68%).
The last time I taught this calsse the average was about 31 (or about 61%)
  and the median was about the same.
Again, because the average was below 75%, everyone has been automatically
  awarded about 6 extra points (whose result is reflected in the % and grade
  columns on the spreadsheet).
So, if your actual grade was 34 (68%), your normalized grade is about 40 (80%).
After normalization, about 50% of the students scored an A; another 11% scored
  a B (so almost 60% passed at the B or above level).
I have posted a download with everyone's submitted programs, so you can
  download your work and better interpret my gradesheets, which I will return
  during special office hours on Monday.

Note that as I promised, I have updated the grade files so that the column that
  adds up the Programming Exams (Sigma PE) uses the highest score from In-Class
  Programming Exam #3 and #4 for Exam #3.

There were many different mistakes made by students writing this class.
Here were some of the most common problems.
In the declarations: not initializing used to 0 (or instead
        initializing it in the constructor).
  In the constructor: not initalizing the set instannce variable by
        making it refer to a constructed object:
        set = new Object[parameter]; Even
        worse, some students initialized used to the non-zero
        parameter; while still other students declared a local
        variable named set in the constructor and set it (not the
        instance variable) to the allocated array.
      Finally some student did not check/throw the exception (and some left
        the parameter's value out of the message).
  In the lookupIndex method: using set.length as an upper
        loop bound (instead of used), comparing with == instead
        of .equals. A small (but to me surprisingly large) number of
        students did not show int as the return type of this method,
        and returned a reference to the object found.
      This method had uses in the add and contains method, both
        which try to see if a value is in the SimpleSet: this is the
        same as a result returned from lookupIndex that is not
        -1. Many students rewrote looping code in these two methods.
  In the add method: not checking for a value in the
        SimpleSet BEFORE checking whether to doubleLength
        (some students NEVER checked whether the value was there; others
         ALWAY doubled the length or NEVER did), not storing the new value in
         the appropriate index (used) or not incrementing used
         after a new values was added.
      A suprisingly large number of students used an if/else to test
        whether a value was at some index in the array, and if not immediately
        added it: but the result was that it added the value if it wasn't
        stored in the first index.
  In the getSize method: not returning used and instead
        couting non-null values in the array. Students who counted 
        sometimes had the wrong loop indexes or counted the wrong thing.
  In the makeEmpty method: either not putting null in all
        the non-null array indexes (0 to used-1) or not
        resetting used to be 0.
      Note that allocating a new object array is legal, but requires much more
        work (although less code) than just storing null everywhere.
  In the contains method: not using lookupIndex or not
        looping correctly to check: e.g., using set.length as the
        upper loop bound instead of used.
  In the removeRandom method: not checking/throwing the exception,
        not returning a result from the array (some students returned an 
        index), not saving the the result to return before shifting the array,
        not shifting the array or not shifting it correctly (e.g., shifting
        lower to higher indexes, shifting a value beyond the array's upper
        bound), not decrementing used and/or not storing null
        where it belongs after shifting.
  For simple solution: some students declared extra variables that were
        not needed (often in lookupIndex, see my solution) some students
        used an if in contains after calling lookupIndex
        when the if is not needed (see my solution).





  #22: 6/6/12
  Quiz #9

I have graded (and recorded the grades for) Quiz #9.
The class average was about 17 (or about 70%) and the median was about
  19 (or about 76%).
The last time I taught this class the average was about 18 (or about 70%) and
  the median was about 20 (or about 80%).
These were the 3rd highest scores for a quiz the quarter; most students
  seemed to demonstrate an understanding of the major concepts, which
  covered all sorts of material learned during the quarter.
Look at your returned work carefully; if your score was below 20
  you might want to review this quiz with me or a TA.
Material similar to this will be on the final written exam.

After I return your graded work in class on Wednesday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an exam score of 22.5 is recorded as 23).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student exams: it makes my office
  messier, and you don't get the benefit of the feedback I wrote on the quiz.

I would strongly recommend that you review the code in my solution to gain
  a better understanding of the programming involved.

For problem 1, the mistakes mostly related to the type of parameter for the
  constructor (and type of instance variable it was stored into).
LengthLess is too specific (and you cannot generalize the class for
  problem 2)and Object is too general (although you can use casting,
  but to Decision to include problem 2): Decision is just right.
It ensures at compile-time that the object passed to the constructor will have
  an isOK method and requires no casting.

For problem 2, students also did well.
The only reoccuring problem was calling .toString instead of casting
  the parameter to a String.
While calling .toString worked here, generally classes that implement
  Decision require casting, and it is a "more correct" (and faster)
  solution.

For problem 3, there was more variation. 
The whole point of this problem was to construct and use and object from the
  Catenate class (passing its constructor an object constructed from
  the Prefix class).
Working solutions that did not use Catenate were not awarded many
  points.





  #21: 6/4/12
  Upcoming Programming and Final Exams

We will have our last (of four) in-class programming exam on Thursday,
  June 5, in Lab.
The program will require you to write a collection class that has about a half
  dozen methods that manipulate an array of Object in a manner similar
  to the SimpleQueue, SimpleStack, and
  Sequence.
Study these classes and general operations on searching/updating arrays.
It might be also useful to look at the Portfolio class, although that
  uses an array of Stock

We will also have a final written exam on Tuesday, June 12th, 
  1:30pm - 3:30pm in SSPA 1100 (our lecture classroom).
This exam will be comprehensive, but it will heavily focus on the material
  covered near or after the midterm exam; of course, when writing these
  advanced programming features you will also be making use of the simpler
  features covered early in the quarter.
It will cover the lectures up to and including interfaces, but nothing after,
  from Quiz #1 to Quiz #9; from Programming Assignment #1 to Programming
  Assignment #6.
For more information, click the following 
  Topics for Written Final Exam link.
The best way to study for this exam is to review your quizzes (the most
  important, but we had only 3 the second half of the quarter), programming
  assignments, the in-class programming exams, and the daily problems from the
  readings.
Obviously we have covered a large amount of material in the quarter, and with
  with only a dozen or so questions on the exams, I'll have to be selective;
  but the coverage will be broad.





  #20: 6/4/12
  Quiz #8

I have graded (and recorded the grades for) Quiz #8.
The class average was about 16 (or about 64%) and the median was about 16
  (or about 66%); the last time I taught this class the average was about 16
  (or about 65%) and the median was about 18 (or about 70%).
Look at your returned work carefully; if your score was below 20
  you might want to review this quiz with me or a TA.
Material similar to this will be on the final written exam.

After I return your graded work in class on Thursday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an exam score of 22.5 is recorded as 23).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student exams: it makes my office
  messier, and you don't get the benefit of the feedback I wrote on the quiz.

On the first page, students mostly either got a full credit or none.
On the second page the distribution was much wider.
Common general mistakes included
Using stocks.length as the upper bound of an array instead of
       used.
  Not calling indexOfSymbol when appropriate; and if calling it,
        not checking for -1 as the returned value before using its
        value to access the stocks array.
      Often it was used more than once in a method, so its value should be
        saved.

For specific methods
In sharesOwned, not using the parameter's value, and instead
        returning the number of stocks or 0 (if the symbol wasn't in the
        array) or 1 (if the symbol was in the array).
  In worth, calculating .getPrice times .getShares of
        a stock, instead  of calling its .getWorth method.
  In active, not calling .isActive on a stock, or not
        catenating values (with spaces between).
  In withdraw, not checking for a bad parameter or not reducing
        the cash instance variable.
  In sell, there were many errors (few students received close to
        full credit for this part).
      See my solution and try to understand why each part was there.
  In updatePrice, not calling the stock's updateMethod.
  
Again, see my code for what I consider a correct solution.





  #19: 6/2/12
  In-Lab Programming Exam #3

I have graded (and recorded the grades for) In-Lab Programming Exam #3.
The class average was about 37 (or about 73%); the median was higher, about 39
  (or about 78%); the last time I taught this class the class average was about
  36 (or about 72%) and the median was about 40 (or about 79%).
Because the average was below 75%, everyone has been automatically awarded
  about 1 extra point (whose result is reflected in the % and grade columns
  on the spreadsheet).
So, if your actual grade was 38 (76%), your normalized grade is about 39 (78%).
After normalization, about 34% of the students scored an A; another 20% scored
  a B (so 54% passed at the B or above level).
I have posted a download with everyone's submitted programs, so you can
  download your work and better interpret my gradesheets, which I will return
  in class on Monday.

Note that as I promised, I have updated the grade files so that the column that
  adds up the Programming Exams (Sigma PE) uses the highest score from In-Lab
  Programming Exam #2 and #3 for Exam #2.

There were many different mistakes made by students writing this class.
Here were some of the most common problems.
In the declarations: not declaring all instance variables private; not
        initializing some instance variables in their declarations; not
        initializing the status of the lock to "locked" (true).
  In the constructor: not copying parameters to instance variables;
        re-initializing instance variables that should be/were initialized in
        their declarations.
  In the lock method: checking some condition (this method can
        always just change  the state to "locked"); some student wrote code
        that returned a value instead of being void.
  In the unlock method: comparing the wrong variables. Calling
        .equals between a ModularCounter and something that
        is not from the ModularCounter class (which unfortunately
        is syntactically correct but alwasy false); some student wrote code
        that returned a value instead of being void.
  In the changeDial method: not using the correct dial numbers;
        not comparing the String to "Up"/"Down" with
        the .equals method (students used many "close" variants that
        did not work); updating local state, not instance variables.
  In the getDialStatus method: not returning a String with
        just a number 0-9: some students executed .toString on the
        ModularCounter which returned a longer String like
        1 (mod 9).
  In the getLockStatus method: not returning the exact String
        values required.
  For using the ModularCounter using a modulus of 9 instead
        of 10; many students used the ModularCounter class in
        their solution and most did so correctly.
  For simple solution, not writing if/else in getDialStatus
        and getLockStatus (in fact, these methods are ideal places to
        use conditional expressions); testing the lock status in unlock;
        writing something like locked == true or locked == false
        instead of just locked or !locked (the instance variable
        should be something like locked, not lockStatus so
        true and false values are easier to understand).





  #18: 5/29/12
  Program #5

I have graded (and recorded the grades for) Program #5.
The class average was about 37 (or about 83%) and the the median was about
  39 (or about 84%).
The last time I taught this class the average was about 39 (or about 87%) and
  the median was about 42 (or about 93%).

After I return your graded work in class on Tuesday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an programming score of 36.5 is recorded as 37).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student programs: it makes my
  office messier, and you don't get the benefit of the feedback I wrote.

Generally, very good work by most students.
There were a few static methods that performed poorly on boundary
  cases (e.g., constrain when the value to constrain was equal to the
  minimum or maximum); a few compareTo/equals methods in
  BigRational that did not compute correct results (compareTo
  should return an int and neither should use ==); a few
   update methods in Ball that did not perform the simulation
  correctly (mostly having to do with forgetting to multiply the average
  velocity by dT) or using static fields: they created jerky
  simulations, not at all like my executable.





  #17: 5/23/11
  Quiz #7

I have graded (and recorded the grades for) Quiz #7.
The class average was about 16 (or about 64%) and the median was about 18 (or
  about 72%); the last time I taught this class the average was about 16 (or
  about 65%) and the median was about 19 (or about 76%).
Look at your returned work carefully; if your score was below 20
  you might want to review this quiz with me or a TA.
Material similar to this will be on the final written exam.

After I return your graded work in class on Wednesday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an exam score of 22.5 is recorded as 23).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student exams: it makes my office
  messier, and you don't get the benefit of the feedback I wrote on the quiz.

Generally students made lots of small mistakes that one makes when writing
  classes for the first time.
I hope between seeing my comments on your quizzes and reading my solutions
  that you get a solid understanding of all the parts of a simple class.
Here were some common mistakes for Question #1. Problems with Question #2 were
  similar.
In fact, there is a strong correlation between student scores on problems #1
  and #2
Not writing the whole class, starting with public class ...
  Using static fields and methods.
      Yes, you can get this to work in Eclipse if you always construct just
        one object; but if you construct more than one, then the different
        objects would not have their own state, and therefore not work
        correctly.
  Not checking for illegal arguments/parameters in the constructor and
        throwing an exception (with some useful String that included
        the "bad" values).
  Not copying the parameters to the instance variables in the constructor
        (once they are found to be OK).
      Some students are confused about using parameters and instance variables
        together in constructors.
  Not writing the header or body correct for getCatenation and
        getCount; both are parameterless, returning a String
        and int instance variables respectively.
  Not writing the header or body correct for seeIt: a void
        method that often (but not always) changes the state of some instance
        variables (some students didn't change the state correctly).
  Not declaring instance variables.
  Not declaring instance variables to be private.
  Not specifying correct initializations for the instance variables.
      Those variables receiving values in the constructor should use
         default intialization;
      the other variables should be initialized explicitly.
  
Again, see my code for what I consider a correct solution.

For Question #3, most answers had something reasonably generic to say, but
  few expressed things as I wanted them.
This shows that students are either a bit confused about what is
  happening during object construction or just don't quite know how
  to use the technical terms necessary to describe this process (or both).
It isn't enough to say "The new operator constructs the object and
  the constructor finishes the construction."
While "correct", this answer doesn't explain in detail what happens during
  construction (instance variables are declared, initialized by new,
  and sometimes reinitialized from parameters storing values supplied by 
  arguments to the constructor, after the constructor checks their values for
  "reasonableness").
Again, see my complete answer.





  #17: 5/21/12
  Program #4

I have graded (and recorded the grades for) Program #4.
The class average was about 36 (or about 75%) and median grade was about
  38 (or about 79%).

After I return your graded work in class on Monday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an programming score of 36.5 is recorded as 37).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student programs: it makes my
  office messier, and you don't get the benefit of the feedback I wrote.

Collatz: Almost everyone got the program working correctly.
      If there were problems, they mostly related to not using a correct
        constructor for BigInteger; a few students prompted only
        for an int not a BigInteger (there were a few
        different ways to do this correctly).
      FYI, there is a static method named valueOf that
        also constructs and returns a BigInteger.
      It takes a bit longer to run, but ensures no duplication of objects
        from this immutable class: so, BigInteger.valueOf(3) can be used
        in place of new BigInteger("3") and vice-versa.
      I would stil recommend using the contructor.
  
  DiceWar: Most students got most parts correct, but there were
        very many small erors.
      Beside correctness issues, I did take a point off for each of the
        following:
        (a) not constructing a DiceEnsemble for each player,
        (b) not calling getRollCount to help compute some
              statistic (using an extra counter for that job), and
        (c) declaring no variables in local blocks inside the main
              method: you should work on declaring variables in the
              most restricted scope that you can..
  
  PhoneDatabase: This program caused the most problems.
      Some students did not use case-insenstive comparisons: e.g., 
        equalsIgnoreCase.
      Many students did not call nextToken in pairs; the result
        was that if you looked up a "telephone" number, the program
        would print the name of the next person in the String
        (not the previous person, who actually had that phone number).
  
  ICD: Many students didn't finish this code in  this long
        assignment: long in both in what you had to do and in how long you
        were given.
      Possibly I should have made the first two parts due in one week and
        the second two due the second week to keep students on schedule.
      Many students did not know how to terminate the program if a bad
        configuration file was encountered (a big try/catch around
        all the code, including a nested try/catch for reading the
        input file if the configuration succeeded).
      Some students hard-wired in various pieces of information instead
        of reading them from the configuration file.
      Finally, some students did not compute the zero-crossing count
        correctly: two ways to do this appeared in the simplification
        lecture.

Please always run my executable and compare it to your program's
  behavior and output for various inputs.





  #16: 5/21/12
  In-Lab Programming Exam #2

I have graded (and recorded the grades for) In-Lab Programming Exam #2.
The class average was about 36 (or about 71%) and the median was higher, about
  38 (or about 76%); the last time I taught thisl class the average was about
  32 (or about 63%) and the median about 34 (or about 68%).
Because the average was below 75%, everyone has been automatically awarded
  about 2 extra points (whose result is reflected in the % and grade columns
  on the spreadsheet).
So, if your actual grade was 35 (70%), your normalized grade is about 41 (82%).
After normalization, about 35% of the students scored an A; another 15% scored
  a B (so 50% passed at the B or above level).
I have posted a download with everyone's submitted programs, so you can
  download your work and better interpret my gradesheets, which I will return
  in class on Monday.

A good metric for your midterm performance is the average of the midterm 
  written exam and your first two in-class programming exams (with
  normalization points added).
The average for all students in the class on these in-class testing instruments
  is about 76% and the median is about 79%.
If we switch to discussing midterm grades (including these instruments as well
  as quizzes and programming assignments), the average for all students in the
  class is 81% (and the median is 84%).
Your overall grade at this time is the best estimator of your final grade.

Finally, recall that I said that typically final grade distribution in this
  class is 25% As, 25% Bs, 25% Cs, and   25% Ds and Fs.
At present, students are doing a bit better than that, with 30% As, 24% Bs,
  26% Cs, and 20% Ds and Fs.

Note that as I promised, I have updated the grade files so that the column that
  adds up the Programming Exams (Sigma PE) uses the highest score from In-Lab
  Programming Exam #1 and #2 for Exam #1.

In the DiceEnsemble problem students needed to (a) check for and throw
  the exception with a good message, (b) declare/initialize some variables,
  including the dice ensembles and counters, (c) loop through the number
  of rolls indicated by toRoll, (c) change the state of the dice 
  variables by rolling them once in the loop and then, (d) check the pip 
  sums to decide which counter to increment (if any), and finally (e) return
  the win/lose ratio as a double via casting.

In the StringTokenizer problem students needed to (a) construct the
  string tokenizer from the words parameter, (b) include a special check
  for no tokens, (c) get and store the first token (if there were any)
  and initialize the answer string, (d) loop through all the other tokens by
  (e) storing each new token into a variable local to the loop, (f) checking
  how it compared with the first token,(g) catenating it to the answer if it
  was greater, (h) maintining correct spacing in the answer, and (i) returning
  the catenated answer.





  #15: 5/16/12
  Quiz #6

I have graded (and recorded the grades for) Quiz #6.
The class average was about 16 (or about 63%); the median was about 17
  (or about 68%).
I'll remind everyone that because the average was below 75%, students will
  receive about 3 normalization points to bring the class average to 75%
  (these points are not given to students individually -your score is still
  your score- but are added to the totals of every student when computing their
  grade); it is effectively as if you scored about 4 more points on this quiz.
Look at your returned work carefully; if your score was below 20 (most were)
  you might want to review this quiz with me or a TA.
Material similar to this will be on the first written exam.

After I return your graded work in class on Wednesday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an exam score of 22.5 is recorded as 23).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student exams: it makes my office
  messier, and you don't get the benefit of the feedback I wrote on the quiz.

Here were some common mistakes:
Problem 1: Most students got full or close to full credit here.
      I was looking for a correctly written header and body.
      Some students called Math.min others used multiple
        if statements.
      I took for for solutions that seemed overly complex (declaring
        extra/unneeded variables).

  
  Problem 2: Scores here were a bit more spread out.
      Students needed to write a loop that counted the primes,
        calling the Utility.isPrime method using the correct
        syntax; a suprising number of students omitted Utility.

  
  Problem 3: Most students had the right idea here, but there was some
        confusion on what were parameters and local variables.
      Also, some students didn't put the initial values for variables in
        boxes.
      Many students write a loop bounds check like i but did
        not show i going to 6 to make this continuation test
        false.

  
  Problem 4: There was a big split among students on this problem: many
        received very many and others received very few points; there were not
        many students in the middle.
      Many students wrote code only, and didn't indicate parameter and local
        variables, or arguments.
      I did not grade the part about which variables could be declared
       final; in my solution all the parameters could be final
       (none was assigned a new value, although the DiceEnsemble
       parameters had the state of their objects changed) but none of the
       local variables could (since they were all incremented various times).
  
  
  Problem 5: A lot like Problem #4, with a big split among students.
      I graded this problem "lightly" relating to construction two
        StringTokenizers, checking/throwing the exception correctly
        based on .countTokens, declaring a variable to contain the
        result, iterating though the StringTokenizers, updating the
        variable (including spaced between tokens) and returning th result.
      I did not take off points for incorrect placement of spaces, but see
        my solution for one way to do this correctly; there are many others.  
   





  #14: 5/14/12
  In-Lab Written Exam #1

I have graded (and recorded the grades for) In-Lab Written Exam #1.
The class average was about 65% (the median was 65%); the last time I taught
  this class the average was about 68% (the median was 69%).
Becuase the average was below 75%, everyone has been automatically awarded
  about 10 extra points (whose result is reflected in the % and grade columns
  on the spreadsheet).
So, if your actual grade was 75, your normalized grade is about 85.
Look at your returned work carefully; if your score was below 60 (after
  normalization, a C), you might want to review this exam with me or the TA.

Recall that the exam was 105 points out of 100, so you could have skipped
  any small question (or lost partial credit on any large one) and still
  scored 100% on the exam.
The highest score was in fact 100.
See the Exams tab in the spreadsheet for a histogram of the scores 
  (before normalization).
After normalization, about 26% of the students scored 90% or above; about
   41% score 80% or above.
Generally, students scored well on problems 1-6, but performance dropped
  off after that: the code synthesis problems were at the end of the exam.

Please look at this instrument's grade as part of the entire grade in the
  course; especially look at your percentage on the midterm exam and
  first two in-class programming exam (when we have the second).

After I return your graded work on Monday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering about 2,000
  grades for students in my course this semester, so even if I'm 99% accurate,
  I'll incorrectly compute/record 20 grades).
Note that all grades are recorded as integral values: I always round up
  (e.g., an exam score of 68.5 is recorded as 69).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student exams: it makes my office
  messier, and you don't get the benefit of the feedback I wrote on the exam.

Here were some common mistakes:
Problem 1: Twelved students (11%) solved this problem perfectly; the
        average was 70%.
      The most common mistakes were:
      int as a literal instead of a keyword (it is just an identifier
         that is a keyword); not treating things like "Prompt.forInt"
         as identifiers and seperators; not recognizing comments correctly
         (the first comment stops at */) or String literals as
         one token, not recognizing -1 as an operator followed by a
         literal.

  
  Problem 2: No students solved this problem perfectly; the
        average was 60%.
      Most students made a small number of mistakes here:
        specifying a wrong return type (or no return type) or parameter type
        (or having the wrong number of types in the parentheses).
      A few students had no idea what I was asking for and tried writing code
        for these operations.

  
  Problem 3: Eighteen students (16%) solved this problem perfectly;
        the average was 66%.
      Most students still had a few mistakes here. Common ones
        include: writing double for methods (that occurs only in the
        prototype); redundant parentheses or omitted (necessary) parentheses
        (especial in the product for denominator); writing 2/5 (integer
        division truncates); forgetting * operators.
      A good number of students solved part 3 correctly.

  
  Problem 4: Forty-two students (37%) solved this problem perfectly; the
        average was 82%.
      
      Most students scored highly on this problem.
      Too many students still did not indicate that all literals and variables
        are considered Java expressions.
      Some students did not show all subexpressions (especially the unary
        - operator) or the method calls.
      Some students evaluated the the + before the * (others
        put one oval around this subexpression which contains two operators. 
      Other students did not oval the first && (and its operands),
        which becomes the left operand of the second &&.

  
  Problem 5: Forty-four students (39%) solved this problem perfectly;
        the average was 71%.
      A big improvment over the quizzes, but a few students still do not
        seem to understand the interaction between looping, the
        try/catch statement, and exceptions thrown by the file I/O
        class methods.

  
  Problem 6: Only two students (2%) solved this problem perfectly
        (Kevin Pham and Samantha Helstrom); the average was 70%.
      Problem 6a: Mediocre scores here.
      Most students are still having problems doing this correctly, especially
        regarding if statements.
      This task should be straightforward if you understand statements (and
        is analogous to oval diagrams for expressions, which students did much
        better on).
      
      Problem 6b: Generally students did better on this part (and better
        than on the quiz), both in form and content.
      This problem with long, with lots of input, but most students
        seemed to make good progress even if they did not finish it correctly:
        some students terminate the loop too soon, but even more students
        did not terminate the loop at the right time, reading the data all the
        way until the sentinel.

  
  Problem 7: Only four students (4%) solved this problem perfectly
        (Andrew Angeles, Yun Chen, Gevorg Hovakimyan, and Eric Whitescarver);
        the average was 62%.
      Generally students still did poorly on this part (not much better
        than on the quiz).
      There are still too many students who don't know the material: they
        indicated constructors at the top (as in the quiz), but not in this
        form of the class.
      Here I wrote the fields first - another common way of writing classes.
      
      Most students still did poorly on part b, although the problems were very
        similar to those on the quiz.
      Too many student did not correctly write all parts of the constructor,
        and in later parts they did not use this variable when referring to
        the constructed object.
      I was surprised that many students did not know how to declare and
        initialize this reference variable, which typically follow the form
        class-name variable = new class-name(initializations); this
        confusion got wors in problems 9 and 10, which also required
        constructors.
      And, there is still lots of confusion about what to write, especially the
        use of variables refering to objects for non-static methods
        and the use of the class name in static methods.

  
  Problem 8: Seveenteen students (15%) solved this problem perfectly; the
        average was 68%.
      This problem used no classes.
      The first loop was optimally a do loop although many students
        are still using for(;;) loops and if/break: note that
        the variable used after the loop CANNOT be declared
        inside the loop.
      The biggest mistake in the second loop was not updating the state of
        the variable storing the number: the code needed to include something
        like number = number/10; or just number /= 10;;
        it also needed an counter variable that was incremented the correct
        number of times (some students incremented one too few or too many
        times.

  
  Problem 9: Six students (5%) solved this problem perfectly; the
        average was 47%.
      Many students got a close answer (missing a variety of small things),
        while other had major conceptual problems.
      To get full credit you needed to construct a DiceEnsemble (which
        very many students did not do), have a simple (counting) and correctly
        terminating loop -ensuring that you rolled the dice the correct number
        of times, correctly calling the .roll and .getPipSum
        methods (using the constructed object), and computed and printed the
        right value.

  
  Problem 10: Seven students (6%) solved this problem perfectly; the
        average was 45% (the lowest on the exam).
      Many students got a close answer (missing a variety of small things),
        while others had major conceptual problems.
      To get full credit you needed to construct a StringTokenizer,
        have a simple (while (...hasMoreTokens())) correctly terminating
        loop, get/store the next token and perform the right test on it
        (.compareTo with maxSoFar), and update maxSoFar
        when indicated with the stored token, and print it after the loop.

  
  Problem 11: Ten students (9%) solved this problem perfectly; the
        average was 46%.
      Of those students who answered the first part, most did not know what
        DeMorgan's law was (but I awarded 1 point for filling in the left-hand
        side of the table correctly according to what boolean expressions you 
        would write).
      There was some confusion about what I wanted on the second part,
        which involved writing a for(;;) loop with an if/break
        whose test was the negated version of the continuation test given
        in the loop.
  





  #13: 5/9/12
  Quiz #5

I have graded (and recorded the grades for) Quiz #5.
The class average was about 14 (or about 58%); the median was about 14
  (or about 56%); the last time I taught this class the average was about
  14 (or about 57%); the median was about 13 (or about 52%).
I'll remind everyone that because the average was below 75%, students will
  receive about 4 normalization points to bring the class average to 75%
  (these points are not given to students individually -your score is still
  your score- but are added to the totals of every student when computing their
  grade); it is effectively as if you scored about 4 more points on this quiz.
Look at your returned work carefully; if your score was below 20 (most were)
  you might want to review this quiz with me or a TA.
Material similar to this will be on the first written exam.

After I return your graded work in class on Wednesday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an exam score of 22.5 is recorded as 23).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student exams: it makes my office
  messier, and you don't get the benefit of the feedback I wrote on the quiz.

Here were some common mistakes:
Problem 1: Most students got full or close to full credit here.
      Some pictures did not show correct references; others showed two
        declared variables with the same name; a few had arrows whose
        tails were not INSIDE the center of the box, or arrows that had
        no heads.
      Remember, arrows point at ovals, NOT at other variable boxes
        (e.g., what does s2 = s1 do?).
      Note that the compareTo method returns an int not a 
        boolean: I wasn't looking for an exact number, but just
        and indication of whether the values was <0, =0, or >0.

  
  Problem 2: There were some totally correct or close to correct
        solutions, but the ones that were not were often very wrong.
      The semantics of the methods in the StringTokenizer class
        take some getting used to (which I hope you will, in this quiz
        and in Programming Assignment #4).
      Points were given for the construction a StringTokenizer,
        writing a loop, terminating the loop when there were no more tokens,
        getting a token and checking to see if it was .equals(word),
        printing the previous value and breaking, and updating
        the previous value if the loop continues.

  
  Problem 3a: Very poor performance.
      There are simple rules that you can use to answer these questions,
        but most students seemed very confused and did not know which rules
        to apply.
      I discussed these in class. You can look at my solutions online.
      If you have questions, please ask them in class, or post information
        on the appropriate forum.

  
  Problem 3b: Much like 3a only worse.
      These questions were harder because they
        asked you to synthesize, not just analyze code (but really you were
        analyzing access modifiers).
      You need to understand the rules for understanding access modifiers
        to effective use classes that are in libraries (like mine and Java's).
      Again, I suggest that you look at my solutions online.
  





  #12: 5/7/12
  Program #3

I have graded (and recorded the grades for) Program #3.
The class average was about 40 (or about 89%) and median grade was about
  43 (or about 96%); the last time I taught this class the average was about
  40 (or about 90%) and median grade was about 42 (or about 93%).

After I return your graded work in class on Monday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an programming score of 36.5 is recorded as 37).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student programs: it makes my
  office messier, and you don't get the benefit of the feedback I wrote.

Besides a few students submitting programs that weren't immediately
  runnable (because the class name did not match the file name or because
  they put their code in a package, each a 1 point deduction), the typical
  mistakes were
In Part 1, some students did not get the outer loop working
        correctly; some students forgot to reset t, x,
        and y back to 0 when retrying the next angle.
      It is important to be able to treat what used to be the entire
        program (computing the trajectory) as a part of a bigger program.
      We will learn another way to do this by writing methods soon.
  
  In Part 2, many students got everything completely correct.
      Some students had small differences in the answers, other
        students had larger differences (some just in the height).
      Some students had infinite loops.
  
  Part 3, caused more problem than the other parts.
      I got the impression some students didn't fully understand
        the form of the input files (nor run my executable on them).
      I used two other test files when grading.
      The first contained.
     1000 -100 250 500 1001 750 100 -1
      and the second
     100 90 -10 -10 -10 -10 90  -1
      Both follow the exact form of the other test files.
  
  In the style part, I took off 1 point for sometimes and 2 points
        for rarely.
  
Please always run my executable and compare it to your program's
  behavior and output for various inputs.

Finally, a few students forgot to use the form of Prompt.forDouble
  and Prompt.forBoolean that specified a default value.
Please check the Javadoc for this version is you did not use it correctly.





  #11: 5/7/12
  Programming Exam #1

I have graded (and recorded the grades for) In-Lab Programming Exam #1.
The class average was about 41 (or about 81%) and  the class median
  was about 46 (or about 92%).
The big difference in these numbers results from many students
  scoring high (half got 92% or above) and some students scoring
  very low (below 50%), dragging down the average but not the median.
The last time I taught this class the average was about 40 (or about 80%) and 
  the class median was about 45 (or about 90%).

After I return your graded work in class on Monday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an programming score of 36.5 is recorded as 37).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student programs: it makes my
  office messier, and you don't get the benefit of the feedback I wrote.

Generally, many students wrote correct programs (over half the class) but there
  wre lots deductions for Java use (again, at most 5 points/10% per student).
Common mistakes were not using the correct Prompt methods (or prompting
  inside the loop), not computing whether Player A won or not correctly with a
  random number, not always tracing points when appropriate, not using the
  "rules of tennis" criteria to correctly terminate loop/print winner:
  ignoring/misinterpretting the must have 4 points rule or the
  must be at least two points more than your opponent rule.

I took off up to 5 points at most for Java use.
There were about a dozen items in this category, typically 1-2 point per item.
The most frequent deductions were for ...
...not declaring/initializing prompted-for variables in one statement
  ...not declaring/initializing variables in the loop, if they were used
           only in the loop
  ...declaring extra/duplicate/unneeded variables
  ...not using if/else when appropriate (often duplicating tests)
  ...using else after if with a break when true
  ...using nested ifs instead of the && operator in one
           if
  ...using == true or != false, etc.
  ...poor use of locality: few blank lines separating grouped code

Important: I will mentioned in class, students who score better on the
  second In-Lab Exam will have that score count for both In-Lab #1 and #2.
So if you scored poorly because you didn't know what to expect, paniced, were
  sick, or for any other reason, you can wipe out that score by performing
  better on the next exam.





  #10: 5/3/12
  Quiz #4

I have graded (and recorded the grades for) Quiz #4.
The class average was about 16 (or about 63%) and the median was about 16
  (or 64%); the last time I taught this class the average was about 16
  (or about 65%); the median was about 17 (or 68%).
Look at your returned work carefully; if your score was below 20 (most were)
  you might want to review this quiz with me or a TA.
Material similar to this will be on the first written exam.

After I return your graded work in class on Wednesday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an exam score of 22.5 is recorded as 23).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student exams: it makes my office
  messier, and you don't get the benefit of the feedback I wrote on the quiz.

Here were some common mistakes:
Problem 1: Many students did much better on this problem than the
        equivalent one on the previoius quiz (although some did just as
        poorly and are still confused on exception handling, or just
        understanding Java code).
      Note that the value after one that raises the
        NumberFormatException is read and ignored.

  
  Problem 2: Student scores spanned a wide range.
      In part (a) I was looking for do/while loop (the body must be
        executed at least once) that negated the termination condition in its
        continuation condition.
      This was the most natural translation.
      Some students wrote loops that were not equivalent in execution
        to the loop shown, or were more complicated, not less complicated.
      For part (b) I wanted comments about the if/break being first in the
         loop, last in the loop, and in-between other statements in the loop.
  
  Problem 3: Many students received full credit on this.
      Remember, the online notes are easily searchable; some students
        just guessed at the second/third part of this question instead
        of searching the notes.
      I wouldn't expect you to remember these terms just from reading the
        notes, but if you didn't read the notes there are other things you
        missed.
      Oh, and if you are going to directly quote the notes, instead of reading
        them and putting things in your own words (which I would prefer), then
        put quotes around what you wrote and cite the source.
  
  Problem 4: Most students received 1.5-2 points.
      Some didn't know what I meant by conditional expression and
        rewrote if statements (or a while loop!).
      Many did not put currentValue =  in front of the conditional
        expression (and instead put these tokens twice into the conditional
        expression, twice).
      If you didn't use the right test (some used = instead of
        ==) I deducted points.

  
  Problem 5: Students did well on this open question, but few received
        full credit.
      I wanted some discussion of observing variables and executing
        code with the single statement stepper or conditional/unconditional
        breakpoints.
      I wanted all four of these terms mentioned for full credit.
         
  
  Problem 6: Most students had a good idea of what I wanted here.
      The first column represents the possible values for traceInDetail
        while the second and third column were the expressions to be proven
        identical (that confused some students, because the first and second
        columns were identical).
      Because these expressions are equivalent, the last two columns should
        list the same values.
      In the final part, I just wanted you to negate traceInDetail,
        not using the literals true or false
        
  
  Problem 7: Few student got this problem completely correct; I admit it is
         a strange problem.
      It is possible to use the initialization, testing, and increment part of
        the general for loop.
      Mainly I wanted a general for loop with an initialization, 
         test, and update; and I wanted a negated/simplified version of the
         test in the if/break.
      Note that we cannot declare int c = 0 in the parentheses because
        then that variable can be used only in the loop body (see the next
        problem) and therefore not printed after the loop terminates.
      Also, the termination condition in the if needed to be negated to
        a continuation condition, and I wanted you to use DeMorgan's laws
        to change || to && as well as correctly negate the
        relational operators: some students negated x > 0 to 
        x < 0 when it should have been negated to x <= 0.

  
  Problem 8: This problem caused lots of grading issues because students
        seemed not to have a good idea of what I was looking for.
      In (a) I wanted you to talk about an empty expression statement and an
        infinite loop.
      In (b) I wanted you to talk about an empty expression statement and
        a variable (i) not existing (not declard) in the block
        following the for loop (the scope of the variable declaration
        was ended after the loop ended).
      In (c) I wanted you to talk about how using the "right" control structure
        (the for loop is the right one) might allow the Java compiler to
        help you debug strange problems by detecting and reporting a compiler
        error instead of a runtime error.
      You had to be very explicit in your answer to get over full credit.
      Many students lost 2 points here.
  





  #9: 4/30/12
  Program #2

I have graded (and recorded the grades for) Program #2.
The class average was about 40 (or about 90%) and the median was about 43 (or
   96%); the last time I taught this class the average was about 42 (or about
   93%); the median was about 43 (or 96%).

After I return your graded work in class on Monday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an programming score of 36.5 is recorded as 37).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student programs: it makes my
  office messier, and you don't get the benefit of the feedback I wrote.

Besides a few students submitting programs that weren't immediately
  runnable (because the class name did not match the file name or because
  they put their code in a package, or incorrectly commented-out some line,
  each a 1 point deduction), the common mistakes were
In Part 1, some students generated random numbers in an incorrect
        range; others forgot to multiply the ratio by 4; some students did
        not cast the ints to doubles or hand other calculation
        errors, others did not repreated prompt for a positive number; many
        students did not follow directions and left in statements that printed
        information.
  
  In Part 2, some students wrote code incorrectly for the case where
        the sentinel was the first value (or didn't comment-out the
        print statements, but instead removed them); many
        students did not follow directions and left in statements that printed.
      Some students computed statistics wrong or neglected to compute them.
  
  In Part 3, some students did not trace outputs in the form of
        my executable; while it is possible to compute the door to expose
        without using a loop with random numbers, I wanted you to get more
        experience writing loops. 
      Other students computed a 50%/50% win ratio, instead of the 66%/33%
        switch vs. stay ratio, so their logic was somehow wrong.
  
Please always run my executable and compare it to your program's
  behavior and output for various inputs.

Finally, some students declared "counter" variables to be double
  instead of int and some required two Prompt.forInt calls in
  their loops (for getting a positive value) when one sufficed with the "right"
  kind of loop.

Note the back page: we did not deduct points for style, but we indicated where
  you need help.
We will grade on style (deducting points) for Programming Assignment #3.





  #8: 4/30/12
  Upcoming Programming Exam

We will have our first (of four) in-class programming exam on Thursday,
  May 3, in Lab.
You will be asked to login on and use one of the lab computers (not your own!),
  start Eclipse (setting up the introlib.jar file), and work on a
  project folder that you will download.
I will supply a written description of what your program should do, along
  with a few examples of input and output, and some iterative enhancements.
The program will involve declaration statements, expressions statements
  (including input and output), and if and looping statements (but
   not try/catch and not classes).

The program is worth 50 points and you will have approximately 90 minutes to
  work on it.
The program will require about a two dozen lines of code.
Some students will finish, some will not.
I will award partial credit for partially working programs.
This is a closed notes/book/internet exam; you will have access
  to Javadoc for the Introlib and Java classes.






  #7: 4/25/12
  Quiz #3

I have graded (and recorded the grades for) Quiz #3.
The class average was about 18 (or about 70%); the median was about 18 (or
  about 72%); the last time I taught this class the class average was about 17
  (or about 68%); the median was about 19 (or about 72%).
Look at your returned work carefully; if your score was below 20 (most were)
  you might want to review this quiz with me or a TA.
Material similar to this will be on the first written exam.

After I return your graded work in class on Wednesday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an exam score of 22.5 is recorded as 23).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student exams: it makes my office
  messier, and you don't get the benefit of the feedback I wrote on the quiz.

Here were some common mistakes:
Problem 1: Most students did well on this problem.
      The most "missed" statement was the declaration statement.
      Other students listed two or three different kinds of if
        statements separately (there is just one EBNF rule for ifs).
      Some students put * after every statement or after no statements;
        other students did not put a * after blocks (which are the
        simplest form of control structure) or breaks (which technically
        are a control structure -they affect what statement is executed
        next, but different than the other control structures because
        we don't see statement mentioned in their EBNF).

  
  Problem 2: Few students got full credit on this problem.
      Part 1 had no state-change operator evaluated last (or at all).
      Part 2 incremented y to 4, and then stored that value into
        x as well.
      Part 3 had an illegal operand for a state change operator.
      Part 4 incremented x, but then the = operator took
        x's oldvalue (it is a postfix ++) and stored it
        back into x; so, the expression statement x++; or
        ++x; increments x; for that matter even
        x = ++x; works (although it is overly complex), but NOT
        x = x++;.
      In Part 5, many students got full credit, although this expression
        statement is complicated, it is syntactically correct.

  
  Problem 3: Most students missed at least one part of this problem.
      Most got part (a) correct.
      Many got tricked by part (b): any method call is a legal expression
        statement, even if it returns a value that is not stored or printed
        somewhere (unlike operators, where the last operator must be a
        state-change operator).
      This is certainly strange, but this is what Java allows, and can be
        useful: by putting a
        Prompt.forString("Press enter to continue"); statement in a
        program, Java executes it by displaying the message, waiting for
        the user to press enter and it discards whatever text the
        user entered before pressing enter: so its net effect is
        pausing the program until the user says "go ahead and execute the
        rest".
      Part (c) is the standard story about void methods; to get
        full credit on this part you should have used the word void.

  
  Problem 4: Many students got 4-5 points for writing this code.
      There were VERY VERY many different ways to write this code correctly.
      Common problems were failure to print the extreme values (1 and 100);
        failure to put spaces between values; failure to increment (in any
        form) the counting variable; failure to go to the next line after
        printing multiples of 10s (some students don't know the semantics of
        the System.out.println method); printing some values twice.

  
  Problem 5: Generally syntax errors are considered better to have,
        as the Java compiler points them out to us for fixing; for execution
        errors, we get no such help.
         
  
  Problem 6: On part a, very few students got full credit: there were lots
        of different errors so compare your solution to mine if you did not
        get this one perfect.
      On part b, more students got full credit, but still not a lot: some did 
        not write compact trace tables; others forgot to show the prompt
        or the input that followed it -in the Console column; others
        just performed the hand simulation incorrectly.
      The algorithm implemented called "Russian Peasants Multiplication":
        for any two values for x and y, the result is the
        product of these two numbers (using doubling, halving, and adding:
        you don't need to know any "multiplication tables").
  
  Problem 7: Mostly a disaster. Some students got it completely correct,
        but most had no idea what to do: a loop with a try/catch that
        printed lots of interesting things.
      If you didn't get this correct, figure out exactly why, to the point
        that you could solve other similar problems that might appear on
        later testing instruments (hint hint).
  





  #6: 4/23/12
  Program #1

I have graded (and recorded the grades for) Program #1.
The class average was about 43 (or about 96%) and the median was about 44 (or
  about 98%); the last time I taught this class the average and median were
  both about 44 (or about 98%).

After I return your graded work in class on Monday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an programming score of 36.5 is recorded as 37).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student programs: it makes my
  office messier, and you don't get the benefit of the feedback I wrote.

First, a few students submitted programs that weren't immediately runnable.
In a few cases, the class name did not match the file name; in others it looked
  like students changed something at the last minute (like a comment or brace)
 and didn't check that the program was still runable.
This was just a 1 point deduction this time, but it will increase in later
  programs.
In EscapeVelocity a few students prompting for the mass and
        gravity in the wrong order (or prompted for the gravitational constant,
        which should be a variable that is intialized by that value without
        prompting the user: it is always the same); please make sure your
        program's behavior matches my executable.
  
  In ExpressionTest, while some students had incorrect expressions
        (each was a 1 point deduction), many students had expressions
        with redundant parentheses (each pair was a .5 deduction).
      A few students wrote .../2*a which is incorrect, but because the
        test had a = 1, students did not detected this as an error.
  
  In ChangeMaker, some programs computed wrong results: either the
        coins did not add up to the required amount, or the change was not the
        minimum amount of coins (e.g., returning 15 cents as 3 nickels instead
        of a dime and nickel). 
  
  In PizzaPricer
  Some students did not declare the right types for the different
        variables (int vs. double), or did not prompt using
        the correct method (relying on Java to implicitly convert the value).
  
  A few students computed the cost/person incorrectly; some printed the
        the price as $ per sequare inch instead of cents per square inch.
  
  Many students declared the diameter as an int, as they 
        should have, but then wrote diameter/2 which truncates the
        result for an odd size diameter.
      See the bottom of the required grade sheet for ways to have avoided
        this problem: my favorite is explicit casting.
  
  

Please remember to run my executable, on various inputs, and compare its
   results to your program's behavior and output.
Many students would have been alerted to errors in their programs by doing so,
  and most of the errors would have been fairly easy to fix, once they were
  identified as errors.
The input/output (prompting and printing) of the executable's behavior and your
  program's behavior should match.




  #5: 4/18/12
  Quiz #2

I have graded (and recorded the grades for) Quiz #2.
The class average was about 17 (or about 67%); the mean was also about
  17 (or about 68%); the last time I taught this class the average and
  mean were exactly the same.
Because the average was below 75%, students will receive about 2 normalization
  points to bring the class average to 75% (these points are not given to 
  students individually -your entered score is still what is on your returned
  quiz- but all the normalization points are added to the totals of every
  student when computing their grade); it is effectively as if you scored about
  2 more points on this quiz (about 8% points).
Look at your returned work carefully; if your score was below 20 (most were)
  you might want to review this quiz with me or a TA.
Material similar to this will be on the first written exam.

After I return your graded work in class on Wednesday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an exam score of 22.5 is recorded as 23).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student exams: it makes my office
  messier, and you don't get the benefit of the feedback I wrote on the quiz.

Here were some common mistakes:

  Problem 1: Part 1's syntax was legal, but initializes only one variable;
        in real code, the other might be set later in an expression statement.
      Many students said it was illegal because it didn't initialize
        x; fewer showed x being initialzed by 3.
      Both are wrong.
      Please note the correct terminology (which many students did not get
        correct): this declaration declares the variables x and
        x but initializes only y.
      Part 2 was illegal because it tried to use a double to initialize
        an int variable (there is no implicit conversion this way).
      Part 3, both declarations are legal; the second stored 3 into
        y (declared in first declaration) and then it was implicitly
        converted into 3. and stored into the newly declared
        double variable x.
      The declarator for x included the expression y=3.

  
  Problem 2: Some students didn't know the form in which to write
        prototypes; some did not correctly determine the return type or the 
        type of (one or more of its) operands; many wrote too few operands;
        a few students tried writing code to perform the calculations, which is
        unnecessary in a prototype.
      Students generally did badly on this synthesis task: you need to be able
        to determine the prototype of a function from its description.

  
  Problem 3: 
        Part 1: Many student got this part completely correct: you needed to
          refer to the word prototype and actually write two operators, one
          overloaded and one not (some students just said something like
          "logical operators" but I wanted you to show the symbol for one).
        Part 2: I really wanted an answer that was general for all state-change
          operators (saying that some operand must be the name of a variable)
          but I gave full credit even if you just wrote about the =
          state change operator and referred to the "first operand": note that
          the ++ operator has just one operand.
        Part 3: Here too I wanted a general answer.
          But here, if you wrote about just the = operator (specifying
            how the state of the variable changed and what the result of the
            expression was) I deducted .5 points.
   
  
  Problem 4: Lots of small problems here (especially related to implicit
        conversion and casting, and writing values of the correct type).
      Probably the most missed parts were e, g, i,
         and j (including writing 611 vs. the right answer
         "611".
      Ensure you know the difference between e and f.
      See my solutions; if you still don't understand them, see me.
         
  
  Problem 5: Many students didn't fully circle or label literals; some
        didn't fully circle or label variables.
      Many students didn't correctly circle the negate unary operator
        and its literal subexpression.
      Some students applied the + operator before the *
        operator (ignoring operator precedence).
      Some students didn't circle the y - 2 expression or circled it
        but not its subexpressions: y and 2.
      In a few cases, types/values were missing or mislabelled/miscalculated.
         
  
  Problem 6: A huge number of students wrote 5/9*... which results in
        0 (then converted to the double 0.; same for 3/2 in a later part:
        write it as 3./2. or more simply as just 1.5).
      Many students forget to parenthesize denominators that involved
        multiplication: .../(2*(A+B))
      Many students used redundant parentheses: when removed, the expression's
        operators were still evaluated in the same order.
      Many students either left part e blank or used = (instead
        of ==) operators or wrote just x+y+z==10, not stating
        the condition for these values being in increasing order, or wrote it
        as x < y < z which uses incorrect Java syntax to express this
        condition (as we discssed in class).
  





  #4: 4/15/12
  Program #0

I have graded (and recorded the grades for) Program #0.
The class average was a bit below 21 (or about 103%); the median was about 21
  (or about 105%); the class average the last time I taught this class was a
  bit above 20 (or about 102%); the median was about 21 (or about 105%)
There were a few students who scored much lower because of forgetting to turn 
 in or completely fill out their questionnaire, or one of the programs; if you
  lost a large number of points you should contact me an explain what happened.

After I return your graded work in class on Monday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an programming score of 18.5 is recorded as 19).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student programs: it makes my
  office messier, and you don't get the benefit of the feedback I wrote.

The purpose of this assignment, besides the obvious -to get you acquainted
  with the tools we will use while programming in this course- is to also
  give you some opportunity to read and follow instructions (and ask questions
  if things seem confusing).
Here were some common mistakes (although I arranged the grading rubric so that
  most students could get close to 100%, especially if they turned in their
  work early):
Some students did not fill in the second page of the questionnaire.
  
  Some students did not remove all the italicized comments from the
        questionnaire.
  
  Some students, in answer to the question "...how many scheduled office
        hours do I have each week" cut and paste my office hours, but did not
        supply the answer: 4.5 hours (or 3.5 if you discount the times I might
        not be there).
      Answer questions explicitly: if I asked a question about the history of
        the Suez Canal, supplying me a URL to Wikipedia doesn't really answer
        the question.
  
  Some students did not have a class name compatible with their file
        name, and so a project created from the file did not run immediately.
      Ensure any file name you submit, when put in a project file and loaded
        into Eclipse, compiles and runs.
  
  Some students corrected the spelling of "scceeded" to "succeeded".
      Please, if you think you see any mistakes in the assignment, ask me
        what to do.
      A few students did in this case, and I told them to keep the incorrect
        spelling.
      Programmers are often supplied what might appear to be weird
        specifications for the programs they are to write; it is up to them
        to understand these specifications, and question the specifier as to
        their intended and actual meanings.
      Please don't make assumptions about what you are suppose to do; this is
        a Mr. Lil moment.
      As a class member and part of the ICS-21 community, if you think you have
        spotted an error in an assignment, or something is just confusing,
        please contact me, perferably via the forum, so that I can correct or
        clarify the problem for everyone in the class.
  





  #3: 4/11/12
  Quiz #1

I have graded (and recorded the grades for) Quiz #1.
The class average was about 20 (or about 80%); the median was 21 (or about
  84%); the last time I taught this class the average was about 18 (or about
  74%); the median was 19 (or about 76%).
Look at your returned work carefully; if your score was below 20 (many were)
  you might want to review this quiz with me or the TA.
Material similar to this will be on the first written exam.

After I return your graded work in class on Wednesday, please download the 
  Grades(zipped .xls file) from the course web and ensure that I have
  computed and entered your grade correctly (I'll be entering thousands of
  grades for students in my course this quarter, so even if I'm 99% accurate,
  I'm likely to record some incorrect grades.
Note that all grades are recorded as integral values: I always round up
  (e.g., an exam score of 22.5 is recorded as 23).

If you do not pick up your returned work in class, you should pick it up during
  my office hours ASAP; I don't like keeping student exams: it makes my office
  messier, and you don't get the benefit of the feedback I wrote on the quiz.

Here were some common mistakes:
Problem 1: Most students did will on this problem.
      Most students just copied this out of my notes, or paraphrased them:
          if you cut/pasted, you should have cited the notes.
      There will be few (if any) problems that allow this kind of "copying"
         later in the quarter.
      A few answer were a bit short, or addressed either computers or software
        but not both.
   
  Problem 2: Again, most students did well.
      I think almost everyone got the percentages correct, but some
        students did not compute the coorect lifetime cost.
    
  Problem 2: Again, most students did well.
      Some students didn't multiply 50 million by the right $/line of code from
        the table; others computed an incorrect answer from correct number.
      Note that the $21/line of code is what the build cost was.
  
  Problem 3: Many students either left out one or two lines needed in the
        syntax chart (some omitted it altogether) or incorrectly computed
        whether a few words were Legal or Illegal according the
        EBNF.
      
  Problem 4: Some students got this completely correct while others had
        close sol;utions.
      Some had "useless rules" (e.g., comma name-sequence  was
        common, but that  doesn't allow just one name
      Some students wrote only the Right Hand Side of the rule, not the
        Left Hand Side nor "is defined as" arrow.
      There were a few students who specified a Right Hand Side without using
        name, some didn't include commas nor the word "and"; these
        students appear lost.
      
  Problem 5: Some students did get this completely correct, while others
        had lots of small mistakes; most are covered in the "Common Errors"
        section in the Tokens lecture.
      Quite a few students specified forInt as two keywords or as
        a keyword followed by an identifier (it is one long identifier).
      A few others didn't tokenize int, x, or =
        (the first three tokens), tokenized ++ as two tokens (it is
        one big operator token), tokenized the white space appearing between
        tokens (white space isn't a token; it comes between tokens), tokenized
        }; as one separator token (it is two), or finally, tokenized
        things "inside" comments (they are all part of one big comment token).
      Some students did not write the types of the literals.
  
  Problem 6: Few students got this completely correct.
        In part (a) some student didn't tokenize "ans=" as one
          String literal, or didn't tokenize +++ as the
          ++ token followed by the +token.
        In part (b) some student used their intuition (I think) instead of
          following the EBNF rules to determine their answer.
        In part (c) most students had the right idea about comments, but
          technicall they aren't "ignored" but are treated as white space. 





  #2: 4/2/12
  Install Course Software

  All students with computers should download and install Java (latest version
      is JDK 6 Update 31) and
    Eclipse (latest version is Eclipse 3.7.2 - named Indigo).
  Both these products are available for free.
  Students can download and install this software (and other useful material)
    from the web by exploring the
    Online Resources
    link (see Course Software, near the top of that page).
  
  Specifically, read the handout on
    
    Java and Eclipse (Download/Installation Instructions) for details.
  Please contact me if you are having trouble, as I will assume every has
    successfully downloaded and installed this software by the end of the
    first week of classes.
  If you have a portable machine, bring it to lab if you need help
    downloading or installing this software.





  #1: 4/2/12
  First Message

  Welcome to ICS-21
  I am going to post and archive important messages about the class in this
    announcements web page: each entry will be numbered, dated, and labeled.
  The entries will appear in reverse chronological order.
  Whenever you follow the link to this page (and you should do so daily), scan
    its top for new announcements; scan downward for older announcements.
  This message will always appear at the bottom of this file. 
  
  I will never remove a message from this page, although a subsequent message
    may "cancel" a previous one; in such a case, I'll refer to the number of a 
    canceled message in the message that cancels it.
  
  Expect a few new messages to be posted here each week.
  
  Check this page, along with the the course email discussions, daily.
##------------------URL-------------------------##
http://www.ics.uci.edu/~pattis/ICS-21/index.html
##-----------------TITLE------------------------##
ICS-21
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~pattis/ICS-21/weeklyschedule.html
##-----------------TITLE------------------------##
Weekly Schedule
##------------------TEXT------------------------##
Lecture Schedule/Notes

Introduction to Computer Science I
ICS-21: Lecture A/Labs 1-3
Spring 2012






For an alternative presentation of the listing of course materials, see the 
  Lectures page.













Week 1


Monday (4/2): Lecture

        Course Overview
      Student presentation of solutions: 1, 3, 5, 9
  
    Distribute Academic Integrity Contract (please read for lab)



Tuesday (4/3): Lab
Discuss Academic Integrity Contract


       Introduction to Eclipse
  
    Individual Pictures




Wednesday (4/4): Lecture
EBNF 
      Chapter
  
      Powerpoint
  Student presentaton of solutions: 1,2,4,8;
      Slide #24
  Collect signed Academic Integrity Contract




Thursday (4/5): Lab
Discuss/Start
    
      Computing Infrastructure
      (due on Wednesday, 4/11, at 11:30pm)




Friday (4/6): Lecture

      Tokens in Java Programs (all)
  Student presentatiion of solutions: 1,2,3,10,11,12
  Quiz #1: Handed out in class
     (you can also download 
     it on Friday after class)
     (due on Monday, 4/9, at the start of Lecture)













Week 2
Monday (4/9): Lecture
Quiz #1 due at the start of lecture
  
      Variables and Operators (Introduction - The % Operator)
      Student presentation of solutions: 2, 3, 4





Tuesday (4/10): Lab (Lecture + Lab)
Lecture Part:
        
        Variables and Operators (Relational Operators - Experiment!)
      Student presentation of solutions: 5, 6
  Lab Part : Work on
         
         Computing Infrastructure




Wednesday (4/11): Lecture

      Expressions (Expressions - Pragmatics)
      Student presentation of solutions: 7, 8, 10, 13, 23




Thursday (4/12): Lab (Lecture + Lab)
Lecture Part:
       
       Simple Statements: Declaration, Expression, and Block
         (Introduction - Boxing Statements)
      Student presentation of solutions: 1, 2, 5, 6, 7
  Lab Part: Discuss/Start Program #1
      
      Simple Program Suite
      (due on Wednesday, 4/18, at 11:30pm)




Friday (4/13): Lecture

       Simple Control Structures: Decision
         (if Statement - if Pragmatics)
       Student presentation of solutions: 11, 12, 18, 19
  Quiz #2: Handed out in class
     (you can also download 
     it on Friday after class)
     (due on Monday, 4/16, at the start of Lecture)












Week 3
Monday (4/16): Lecture
Quiz #2 due at the start of lecture
  
       Simple Control Structures: Looping
         (for Statement - More Boxing)
       Student presentation of solutions: 26, 31




Tuesday (4/17): Lab
Work on Program #1
      
      Simple Program Suite
      (due on Wednesday, 4/18, at 11:30pm)




Wednesday (4/18): Lecture

       Advanced Control Structures: Exceptions
        (try/catch - File Reading)
       Student presentation of solutions: 38, 39




Thursday (4/19): Lab
Discuss/Start Program #2
       
       Intermediate Programming Suite I
      (due on Wednesday, 4/25, at 11:30pm)




Friday (4/20): Lecture

        Program Construction and Debugging (all)
      Student presentation of solutions: None
  Quiz #3: Handed out in class
     (you can also download 
     it on Friday after class)
     (due on Monday, 4/23, at the start of Lecture)












 Week 4
Monday (4/23): Lecture
Quiz #3 due at the start of lecture
  
         More Java (all)
       Student presentation of solutions: 1,3-6
   
         Coding Style (all)
       Student presentation of solutions: 1,2
  Distribute printed copy of
      
        Basics of the Eclipse Debugger




Tuesday (4/24): Lab

       Basics of the Eclipse Debugger
       
   Work on Program #2
       
       Intermediate Program Suite I
       (due on Wednesday, 4/25, at 11:30pm)



Wednesday (4/25): Lecture

        Simplification (all)
       Student presentation of solutions: 1,2,3,4,5




Thursday (4/26): Lab
Discuss/Start Program #3
       
       Intermediate Programming Suite II
      (due on Wednesday, 5/2, at 11:30pm)



Friday (4/27): Lecture

      Classes and Objects: Fundamentals (Introduction - == vs equals)
      Student presentation of solutions: 1, 2, 3
  Quiz #4: Handed out in class
     (you can also download 
     it on Friday after class)
     (due on Monday, 4/30, at the start of Lecture)













Week 5
Monday (4/30): Lecture
Quiz #4 due at the start of lecture
  
      Reading/Using Classes (Class Terminology - Field Members)
      Student presentation of solutions: 5, 6




Tuesday (5/1): Lab
Discuss upcoming In-Class Programming Exam
  Work on Program #3
      
      Intermediate Program Suite II
      (due on Wednesday, 5/2, at 11:30pm)




Wednesday (5/2): Lecture

       More Useful Classes (OOP Summary - Other Useful Classes)
       Student presentation of solutions: 7




Thursday (5/3): Lab

  Programming Exam #1: Control Structures
  
  Discuss/Start
      Program #4
      Programming with Classes
      (due on Wednesday, 5/16, at 11:30pm)




Friday (5/4): Lecture

      A File I/O Class (Java File I/O - Buffering)
      Student presentation of solutions: 9, 11, 12
  Quiz #5: Handed out in class
     (you can also download 
     it on Friday after class)
     (
       Eclipse Helper project for Quiz)
     (due on Monday, 5/7, at the start of Lecture)












Week 6
Monday (5/7): Lecture
Quiz #5 due at the start of lecture
  
      Writing static Methods (Introduction - Method Design)
      Student presentation of solutions: 2-6, 8




Tuesday (5/8): Lab
 Work on Program #4
       
       Programming with Classes
       (due on Wednesday, 5/16, at 11:30pm)




Wednesday (5/9): Lecture

      Writing static Methods in Classes
      (Defining Classes: EBNF -Eclipse IDE)
       Student presentation of solutions: none



Thursday (5/10): Lab
Midterm Written Exam



Friday (5/11): Lecture

       Writing Classes (Classes with Objects - Methods)
       Student presentation of solutions: 21-24
  Quiz #6: Handed out in class
      (you can also download 
        it on Friday after class)
     (
       Eclipse Helper project for Quiz)

     (due on Monday, 5/14 at the start of Lecture)














Week 7
Monday (5/14): Lecture
Quiz #6 due at the start of lecture
  
      Writing Classes (continued) (Special Methods - Class Summary)




Tuesday (5/15): Lab

      Programming Exam #2: static Methods + Using Objects




Wednesday (5/16): Lecture

      The 1-d Array Class (Introduction - Modeling Data)
    Student presentation of solutions: 1, 2, 3, 6, 8




Thursday (5/17): Lab
Discuss/Start
      Program #5
      Writing Classes
      (due on Wednesday, 5/23, at 11:30pm)




Friday (5/18): Lecture
Examples of Array Processing
  Quiz #7: Handed out in class
     (you can also download 
     it on Friday after class)
     (
       Eclipse Helper project for Quiz)
     (due on Monday, 5/21, at the start of Lecture)












Week 8
Monday (5/21): Lecture
Quiz #7 due at the start of lecture
  
      The Object Class (Wrapper Classes - Reference Casting)




Tuesday (5/22): Lab
Work on
      Program #5
      Writing Classes
      (due on Wednesday, 5/23, at 11:30pm)




Wednesday (5/23): Lecture

      Simple Collections via Arrays
      (Collection Classes - Doubling Performance)
    Student presentation of solutions: 9, 10, 11, 12, 13




Thursday (5/24): Lab
Discuss/Start Program #6
       
      Writing Classes with Arrays and Interfaces
      (due on Friday, 6/8 at 11:30pm)




Friday (5/25): Lecture

      Interfaces (all)
      Student presentation of solutions: 2, 3, 6, 7, 8, 9
      Material from this lecture will be included on
           Quiz #9, the final programming assignment, and the final exam
  Quiz #8: Handed out in class
      (you can also download 
        it on Friday after class)
     (
       Eclipse Helper project for Quiz mandatory for this Quiz)
     (due on Tuesday 5/29 (note special day): at the start of Lab














Week 9
Monday (5/28): Lecture
Holiday (No Classes): Memorial Day 




Tuesday (5/29): Lab
Quiz #8 due:
      submit code via Checkmate by 11am; submit
        paper in your lab (with you name/lab # on it)
  
  Programming Exam #3: Writing Classes (no Arrays)
  




Wednesday (5/30): Lecture

     Model Classes in the MVC Pattern (all)
    Student presentation of solutions: 1, 2, 4, 5, 7




Thursday (5/31): Lab
Work on Program #6
       
      Writing Classes with Arrays and Interfaces
      (due on Friday, 6/8 at 11:30pm)




Friday (6/1): Lecture

        List Collections and List processing:
        The List interface and implementation (contrasted to/implemented
          by arrays)
  Quiz #9: Handed out in class
      (you can also download 
        it on Friday after class)
     (
       Eclipse Helper project for Quiz for this Quiz
     (due on Monday 6/4: at the start of Lecture)












 Week 10
Monday (6/4): Lecture
Quiz #9 due at the start of lecture
  
      Inheritance in Class Hierarchies (all)
      Student presentation of solutions: 1, 3, 4, 5, 6, 7, 10, 11, 12




Tuesday (6/5): Lab
Work on Program #6
       
      Writing Classes with Arrays and Interfaces
      (due on Friday, 6/8 at 11:30pm)




Wednesday (6/6): Lecture

      Abstract Classes (all)
      Student presentation of solutions: 1, 2, 3




Thursday (6/7): Lab

  Programming Exam #4: Writing Classes + Arrays
  



Friday (6/8): Lecture
Class Wrapup and Review for Final Exam












 Final Exams Week
Tuesday (6/12): Final Exam
1:30pm - 3:30pm
  SSPA 1100 (our regular classroom)
##------------------URL-------------------------##
http://www.ics.uci.edu/~pattis/ICS-21/handouts/syllabus/index.html
##-----------------TITLE------------------------##
ICS -21 Syllabus
##------------------TEXT------------------------##

##------------------URL-------------------------##
http://www.ics.uci.edu/~alexv/154/Labs/index.htm
##-----------------TITLE------------------------##
CS154 Lab Assignments
##------------------TEXT------------------------##
CS 154 Lab








  Lab assistant/grader
  
  : Apoorva
  Gupta  (apoorvag@uci.edu)
  
   
  
   
  
  Lab1 Hours:
  
  Fri 2:00 - 3:50
  pm @ ICS 192
  
         Lab2
  Hour:
  
  Fri 4:30 - 5:50
  pm @ ICS 192
  







For announcements, please check the class website and the EEE message
board.  Post your questions to the
message board.

 

Here is a memory module with test program for lab 6.
To use it, replace your mem.vhd with this mem file. You also need to change RAM_ADDR in Global_dcls.vhd from range 0 to 31 to range 0 to 63 because
the memory is bigger now. After running the simulation for about 240000ns, your
memory content from address 31 to 63 should look like this.

 

Lab Schedule


  Lab
  
  Specification Deadline
  
  Program Deadline
  
  Weight
  
  Lab 0: an
  example
  
  N/A
  
  N/A
  
  0%
  
  Lab 1:
  Combinational Design
  
  April 10 at 11:45am
  
  April 14 17 at 11:45pm
  
  5%
  
  Lab 2:
  Sequential Circuit
  
  April 21 at 11:45am
  
  April 24 at 11:45pm
  
  5%
  
  Lab 3:
  Register File
  
  April 27 at 11:45pm
  
  April 29 at 11:45pm
  
  10%
  
  Lab 4: ALU
  and Basic Datapath
  
  May 4 at 11:45pm
  
  May 8 at 11:45pm
  
  10%
  
  Lab 5:
  Complete Datapath
  
  May 13 at 11:45pm
  
  May 20 at 11:45pm
  
  20%
  
  Lab 6:
  Complete MIPS Processor
  
  May 27 at 11:45pm
  
  June 3 5 at 11:45pm
  
  30%
  
  Lab 7:
  Synthesis
  
  TBD
  
  TBD
  
  10%
  

 

 

SUBMISSION GUIDELINES

For each lab assignment, you are required to submit your work in THREE
steps. 



1.     submit the specification ("paper design") to EEE.
This may be a truth table, FSM diagram, schematics, etc., as necessary to
specify each lab assignment. You can turn in scanned image of your paper, or
electronic documents (excel spreadsheets, Visio diagrams, etc). 

 

2.     submit the vhdl files, both the design and the test bench,
to EEE (zipped into a single file).



3.     demo to the TA what you have submitted (there will be demo
sign up sheets). Demo must be done within one week after project deadline.

 

 

Submission format for EEE:


name a file with
     your student idwhen submitting
     multiple files create a single zip file first.Upload your
     (zip) file into your EEE lab folder.

 

Make sure to submit all required files
- otherwise we will not be able to grade your assignment 

 

GRADING

Your final grade for the course CS 154 will depend on class participation
(attendance of class and lab) and lab assignment grades. A lab will have a
score of  100pts.
Each lab will have a different weight in the final grade computation based on
its complexity. 

 

Lab scoring

Specification
     20%Clearly specify your design, you may use truth table, logic
      function, and/or block diagrams in your specification. 
 VHDL design -
     40%Make sure what you submit is the final working code.
 Test bench - 20%
     Make sure to have enough test cases to cover
     different situations. 

Comments - 5%Demo       
     - 15%

The demo is required. You will lose 50% of
your total lab score if you don't demo your work. 

 

Late Submission 

The later labs depend on earlier ones, so the deadlines of each lab will be
strictly enforced. If you are not able to finish a lab, submit the latest
version you have BEFORE the deadline, and you will be given partial credit. 

 

Back
to the course web page

 

 
##------------------URL-------------------------##
http://cert.ics.uci.edu/SAFIRE/meetings/2009-July-DHS/Site%20Visit%20-%20Videos-%2015%20JUL%2009.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Satware presentation videos:

http://rescue-ibm.calit2.uci.edu/CAMASVM/videos/satware-map.avi

 

http://www.ics.uci.edu/~ronen/resources/SafireVirtSensorWifiLocDemo.mov

 

 

 

 

 

 
##------------------URL-------------------------##
http://cert.ics.uci.edu/SAFIRE/meetings/2009-May-DHS/SATWARE_Videos.htm
##-----------------TITLE------------------------##
null
##------------------TEXT------------------------##
Satware presentation videos:

http://rescue-ibm.calit2.uci.edu/CAMASVM/videos/satware-map.avi

 

http://www.ics.uci.edu/~ronen/resources/SafireVirtSensorWifiLocDemo.mov

 

 

 

 

 

 
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/arcadia_papers/interop/interop_papers.html
##-----------------TITLE------------------------##
Arcadia Interoperability Papers
##------------------TEXT------------------------##
Interoperability Papers




"Q: A Multi-lingual Interprocess Communications System for Software
Environment Implementation", by Mark J. Maybee, Dennis H.
Heimbigner, David L. Levine, and Leon J. Osterweil, University of
Colorado, Boulder.
 Abstract 





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Mon Feb 27 11:26:33 1995
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/arcadia_papers/hypermedia/hypermedia_papers.html
##-----------------TITLE------------------------##
Arcadia Hypermedia Papers
##------------------TEXT------------------------##
Hypermedia Papers



 Chimera papers: 

 
"Chimera: Hypertext for Heterogeneous Software Environments",  
by Kenneth M. Anderson, Richard N. Taylor and James E. Whitehead, Jr. in
 Proceedings of the ACM Conference on Hypertext, 
Edinburgh, September 1994. Association for Computing Machinery.
 Abstract 




 Hypertext Navigation and Software Visualization papers: 

 
"Software Visualization and Yosemite National Park",  
by Dani Steinberg and Hadar Ziv in
 Proceedings of the Twenty-Fifth Annual Hawaii International Conference 
on System Sciences, January 1992. 
 Abstract 




 WWW papers: 

 
"Maintaining Distributed Hypertext Infostructures: Welcome to 
MOMspider's Web",  
by Roy Fielding in
 Proceedings of the First International World-Wide Web Conference 
(WWW94), Geneva, May 25-27, 1994. 
(subsequent version of this paper published in Computer Networks and 
ISDN Systems, 27(2), November 1994.)
 Abstract 






The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Tue Feb 28 11:28:38 1995
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/arcadia_papers/analysis/analysis_papers.html
##-----------------TITLE------------------------##
Arcadia Analysis and Testing Papers
##------------------TEXT------------------------##
Analysis and Testing Papers


 Specification-based Testing papers: 


"Specification-based Test Oracles for Reactive Systems",
by Debra J. Richardson, Stephanie Lief Aha and T. Owen O'Malley in 
Proceedings of the Fourteenth International Conference on
Software Engineering,
pages 105-118, Melbourne, Australia, May 1992.
 Abstract 




"Approaches to Specification-Based Testing",
by Debra J. Richardson, Owen O'Malley and Cindy Tittle in 
Proceedings of the Third ACM SIGSOFT Symposium on Software Testing,
Analysis and Verification,
pages 86-96, Keywest, December 1989.
 Abstract 




 Data flow papers: 


"A Formal Evaluation of Data Flow Path Selection Criteria,''
by Lori A. Clarke, Andy Podgurski, Debra J. Richardson, and Steven J. Zeil in
IEEE Transactions on Software Engineering,
SE-15(11), November 1989.
 Abstract 




"A Flexible Architecture for Building Data Flow Analyzers",
by Matthew B. Dwyer and Lori A. Clarke in Technical Report 94-082,
Department of Computer Science, University of Massachusetts at Amherst, 1994.
 Abstract 





 ProDAG/TAOS papers: 


``TAOS: Testing with Analysis and Oracle Support,''
by D. J. Richardson in
Proceeding of the International Symposium on Software Testing and Analysis (ISSTA) , ACM Press, Seattle, August 1994. 
 Abstract 




"Developing and Integrating ProDAG in the Arcadia Environment",
by Debra J. Richardson, T. Owen O'Malley, Cindy Tittle Moore and 
Stephanie Lief Aha in 
Proceedings of ACM SIGSOFT Fifth Symposium on Software
Development Environments,
pages 109-119, Tyson's Corner, VA, December 1992.
 Abstract 




 Relay papers: 


"An Information Flow Model of Fault Detection," 
by Margaret C. Thompson, Debra J. Richardson, and Lori A. Clarke in
Proceeding of the 1993 International Symposium on Software Testing and Analysis,
pages 182-192, Cambridge, MA, June 1993.
 Abstract 




"An Analysis of Test Data Selection Criteria Using the RELAY Model of
Fault Detection,"
by Debra J. Richardson and Margaret C. Thompson in
IEEE Transactions on Software Engineering,
SE-19(5):327-344, May 1993.
 Abstract 




"The RELAY Model of Error Detection and its Application,"
by Debra J. Richardson and Margaret. C. Thompson in
Proceeding of the Second Workshop on Testing, Verification and Analysis,
Banff Canada, July 1986.
 Abstract 




 Interface control papers: 


"The AdaPIC Tool Set: Supporting Interface Control and Analysis
Throughout the Software Development Process",
by Alexander L. Wolf, Lori A. Clarke, and Jack C. Wileden
in IEEE Transactions on Software Engineering, 14(3), pages
250-263, March 1989. 
 Abstract 
 (cross reference Configuration Management)




 Concurrency analysis tool suite (CATS) papers  


"Compositional Reachability Analysis of Ada Programs Using Process
Algebra", by Wei Jen Yeh and Michal Young in
Proceedings of the Fourth ACM SIGSOFT Symposium on Software Testing,
Analysis, and Verification,
Victoria, British Columbia, October 1991, ACM Press.
 Abstract 




"Re-designing Tasking Structures of Ada Programs for Analysis: A Case
Study", by Wei Jen Yeh and Michal Young in
Technical Report TR-148-P, Software Engineering Research Center,
1398 Computer Sciences, Purdue University, West Lafayette, IN
47907-1398, December 1993.
(To appear in Journal of Software Testing, Verification, and Reliability,
December 1994)
 Abstract 




"Controlling State Explosion in Reachability Analysis",
by Wei Jen Yeh in PhD thesis, Purdue University, Department of
Computer Sciences, West Lafayette, IN 47907-1398, December 1993.
 Abstract 




"Graph Models for Reachability Analysis of Concurrent Programs",
by Mauro Pezz`e, Richard N. Taylor, and Michal Young in
Technical Report TR-92-27, Department of Information and Computer Science,
University of California, Irvine, CA 92171-3425, January 1992.
 Abstract 




"A Concurrency Analysis Tool Suite for Ada Programs: Design, Rationale,
and Preliminary Experience ",
by Michal Young, Richard N. Taylor, David L. Levine, Kari A. Nies,
and Debra Brodbeck in
Technical Report TR-128-P, Software Engineering Research Center,
1398 Computer Sciences, Purdue University, West Lafayette, IN
47907-1398, November 1994.
(To appear in ACM Transactions on Software Engineering and Methodology)
 Abstract 




"Data Flow Analysis for Verifying Properties of Concurrent Programs",
by Matthew B. Dwyer and Lori A. Clarke in
Proceedings of the Second ACM SIGSOFT Symposium on Foundations of
Software Engineering,
New Orleans, LA, December 1994, pp. 62-75.
 Abstract 




"A Compact Petri Net Representation for Concurrent Programs",
by Matthew B. Dwyer, Lori A. Clarke and Kari A. Nies in Technical Report 94-046,
Department of Computer Science, University of Massachusetts at Amherst, 1994.
(To appear in Proceedings of the Seventeenth International Conference
on Software Engineering, April 24-28, 1995, Seattle WA)
 Abstract 




 Constrained expressions papers: 


"Sharpening the Bounds on Time Between Events in Maximally Parallel
Systems",
by George S. Avrunin in Technical Report 92-069,
Department of Computer Science, University of Massachusetts at Amherst, 1992.
 Abstract 




"Automated Analysis of Concurrent and Real-time Software",
by George S. Avrunin and Jack C. Wileden in Technical Report 90-118,
Department of Computer Science, University of Massachusetts at Amherst, 1990.
 Abstract 




"Automatic Generation of Inequality Systems for Constrained Expression
Analysis",
by George S. Avrunin Ugo Buy and James Corbett in Technical Report 90-032,
Department of Computer Science, University of Massachusetts at Amherst, 1990.
 Abstract 



 Other papers: 

 
"Static and Dynamic Specification Slicing,"
by Juei Chang and Debra J. Richardson in
Proceedings of the Fourth Irvine Symposium on Software,
pages 25-37, April 1994.
 Abstract 



 
"Integrating Testing Techniques with Process Programming,"
by Debra J. Richardson, Stephanie Leif Aha, and Leon J. Osterweil in
Proceedings of the ACM SIGSoft 89: Third Symposium on Software Testing, 
Analysis and Verification, 
pages 219-228, Keywest, December 1989.
 Abstract 




"TEAM: A Support Environment for Testing, Evaluation, and Analysis,"
by Lori A. Clarke, Debra J. Richardson, and Steven J. Zeil in
Proceeding of the ACM SIGSOFT '88: Third Symposium on Practical
Software Development Environments,
pages 153-162, Boston, November 1988.
 Abstract 




"Rethinking the Taxonomy of Software Fault Detection Techniques",
by Michal Young and Richard N. Taylor in
Proceedings of the Eleventh International Conference on
Software Engineering,
pages 53-62, Pittsburgh, PA, May 1989.
 Abstract 




"Automated Construction of Testing and Analysis Tools",
by Premkumar T. Devanbu, David S. Rosenblum, and Alexander L. Wolf
in Proceedings of the 16th International Conference on Software
Engineering (ICSE16), pages 241-250, Sorrento, Italy, May 1994.
 Abstract 






The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Tue Apr 11 16:09:42 1995
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/arcadia_papers/overview/overview_papers.html
##-----------------TITLE------------------------##
Arcadia Overview Papers
##------------------TEXT------------------------##
Overview Papers




"Issues Encountered in Building a Flexible Software Development
Environment : Lessons from the Arcadia Project",
by R. Kadia in 
Proceedings of ACM SIGSOFT Fifth Symposium on Software
Development Environments,
pages 169-180, Tyson's Corner, VA, December 1992.
 Abstract 





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Mon Feb 27 11:33:35 1995
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/arcadia_papers/lp/lp_papers.html
##-----------------TITLE------------------------##
Arcadia Language Processing Papers
##------------------TEXT------------------------##
Language Processing Papers




"Contrasting Approaches of Two Environment Generators: The
Synthesizer Generator and Pan",
by Barbara Staudt Lerner in Technical Report 93-032,
Department of Computer Science, University of Massachusetts at Amherst, 1993.
 Abstract 




"Representing Semantically Analyzed C++ Code with Reprise",
by David S. Rosenblum and Alexander L. Wolf,
in Proceedings Third C++ Technical Conference, pages 119-134,
Washington, DC, April 1991.
 Abstract 






The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Mon Feb 27 11:27:15 1995
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/arcadia_papers/ui/ui_papers.html
##-----------------TITLE------------------------##
Arcadia User Interface Papers
##------------------TEXT------------------------##
User Interface Papers


 C2 papers: 

"A Component- and Message-Based Architectural Style for GUI
Software", by Richard N. Taylor, Nenad Medvidovic, Kenneth M. Anderson,
E. James Whitehead Jr., Jason E. Robbins, Kari A. Nies, Peyman Oreizy, 
and Deborah L. Dubrow, IEEE Transactions on Software Engineering, 
vol. 22, no. 6, pages 390-406, June 1996.  
 Abstract 
 (cross reference  
Software Architecture)




 Chiron papers: 

 
"Chiron-1: A Software Architecture for User Interface Development,
Maintenance, and Run-time Support",  
by Richard N. Taylor, Kari A. Nies, Gregory Alan Bolcer, Craig A. MacFarlane,
Gregory F. Johnson, and Kenneth M. Anderson in
 ACM Transactions on Computer-Human Interaction. 
vol.2, no. 2, pages 105-144, June 1995.
 Abstract 



 
"Supporting Separations of Concerns and Concurrency in the Chiron-1
User Interface System",  
by Richard N. Taylor and Gregory F. Johnson in
 Proceedings of the Conference on Human Factors in Computing Sytems, 
pages 367-374, Amsterdam, April 1993. Association for Computing Machinery.
 Abstract 




"Chiron-1 User Manual, v1.4",
by Kari A. Nies, Craig MacFarlane, Mary Cameron, and Gregory Bolcer in
 Arcadia Document UCI-93-07.
 Abstract 




"Chiron 1.4 Client Design",
by Kari A. Nies in
 Arcadia Document UCI-93-02.
 Abstract 




 UIDA papers: 

 
"User Interface Design Assistance for Large-Scale Software Development",  
by Gregory Alan Bolcer in
 Proceedings of the Knowledge Based Software Engineering Conference, 
pages 142-149, Monterey, CA, September 1994. 
 Abstract 






The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Tue May 23 13:40:13 1995
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/arcadia_papers/process/process_papers.html
##-----------------TITLE------------------------##
Arcadia Process Papers
##------------------TEXT------------------------##
Process Papers


 Process modeling and execution: 


"Engineering Software Design Processes to Guide Process Execution",
by Xiping Song and Leon J. Osterweil in Technical Report 94-023, 
Department of Computer Science, University of Massachusetts at Amherst, 1994.
 Abstract 




"Programming a Software Requirements-Specification Process",
by Stanley M. Sutton, Jr., Hadar Ziv, Dennis Heimbigner, 
Harry E. Yessayan, Mark Maybee and Leon J. Osterweil in
 Proceedings of the First International Confernce on the Software 
Process,
pages 68-91, Redondo Beach, CA, October 1991. IEEE Computer Society Press.





 Endeavors papers:


"Endeavors: A Process System Integration Infrastructure",
by Gregory Alan Bolcer and Richard N. Taylor to appear in
 Proceedings of the Fourth International Confernce on the Software
Process, Brighton, England, December 1996.
 Abstract 





 Teamware papers:


"Human-Executed Operations in the Teamware Process Programming 
System",
by Patrick S. Young and  Richard N. Taylor in
Proceedings of the Ninth International Software Process Workshop,
Arlie, VA, October 1994. IEEE Computer Society Press.
 Abstract 




"Process Model Customization for Technical and Non-Technical Users",
by Patrick S. Young and  Richard N. Taylor in
Technical Report TR-94-60, Department of Information and Computer Science,
University of California, Irvine, CA 92171-3425, 1994.
 Abstract 




"Team-Oriented Process Programming",
by Patrick S. Young and  Richard N. Taylor in
Technical Report TR-91-68, Department of Information and Computer Science,
University of California, Irvine, CA 92171-3425, August 1991.
 Abstract 




Process Discovery and Validation papers:


"Automating Process Discovery through Event-Data Analysis",
by Jonathan E. Cook and Alexander L. Wolf
in Proceedings of the 17th International Conference on Software
Engineering (ICSE17), pages 73-82, Seattle, WA, April 1995.
 Abstract 
(cross reference Metrics and Evaluation)




"Toward Metrics for Process Validation",
by Jonathan E. Cook and Alexander L. Wolf
in Proceedings of the Third International Conference on the Software Process
(ICSP3), pages 33-44, Reston, VA, October 1994.
 Abstract 
(cross reference Metrics and Evaluation)




Data Capture and Analysis papers:


"A Study in Software Process Capture and Analysis",
by Alexander L. Wolf and David S. Rosenblum in Proceedings of the
Second International Conference on the Software Process (ICSP2),
pages 115-124, Berlin, Germany, February 1993.
 Abstract 
(cross reference Metrics and Evaluation)




Process Programming papers:


"The ProcessWall: A Process State Server Approach to Process
Programming", by Dennis Heimbigner, in 
Proceedings of ACM SIGSOFT Fifth Symposium on Software
Development Environments,
pages 159-168, Tyson's Corner, VA, December 1992.
 Abstract 




Object Management papers:


"Experiences with an Object Manager for a Process-Centered
Environment", by Dennis Heimbigner, in Proceedings of the
18th VLDB Conference, Vancouver, British Columbia, Canada, August
23-27, 1992.
 Abstract 
 (cross reference Object Management)




General software process papers:


"Process-Centered Environments (Only) Support Environment-Centered
Processes", by Alexander L. Wolf and David S. Rosenblum
in Proceedings of the Eighth International Software Process Workshop
(ISPW8), pages 148-149, Wadern, Germany, March 1993.
 Abstract 






The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Mon May 22 17:47:45 1995
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/arcadia_papers/om/om_papers.html
##-----------------TITLE------------------------##
Arcadia Object Management Papers
##------------------TEXT------------------------##
Object Management Papers



Persistence papers:


"PLEIADES: An Object Management System for Software Engineering 
Environments",
by Peri L. Tarr and Lori A. Clarke in 
ACM SIGSOFT '93 Symposium on Foundations of Software Engineering, 
Los Angeles, December 1993, pp. 56-70.
 Abstract 




"PGraphite: An Experiment in Persistent Typed Object
Management", by Jack C. Wileden, Alexander L. Wolf, Charles D.
Fisher, and Peri L. Tarr, in Proceedings SIGSOFT 88: Third
Symposium on Software Development Environments (SDE3)
 Abstract 




"Extending and Limiting PGRAPHITE-style Persistence",
by Peri L. Tarr, Jack C. Wileden and  Lori A. Clarke in 
Proceedings of the Fourth International Workshop on Persistent Object 
Systems, 
Martha's Vineyard, MA, August, 1990, pp. 74-86. 
 Abstract 




Type evolution papers:


"Type Evolution Support for Complex Type Changes",
by Barbara Staudt Lerner in Technical Report 94-071, 
Department of Computer Science, University of Massachusetts at Amherst, 1994.
 Abstract 




Process-centered papers:


"Experiences with an Object Manager for a Process-Centered
Environment", by Dennis Heimbigner, in Proceedings of the
18th VLDB Conference, Vancouver, British Columbia, Canada, August
23-27, 1992.
 Abstract 
 (cross reference Process)





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Tue Apr 11 16:12:45 1995
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/arcadia_papers/arch/arch_papers.html
##-----------------TITLE------------------------##
Arcadia Software Architecture Papers
##------------------TEXT------------------------##
Software Architecture Papers




"An Event-Based Software Integration Framework",
by Daniel J. Barrett, Lori A. Clarke, Peri L. Tarr, and Alexander E. Wise 
in Technical Report 94-047,
Department of Computer Science, University of Massachusetts at Amherst, 1994.
 Abstract 




"Foundations for the Study of Software Architecture",
by Dewayne E. Perry and Alexander L. Wolf
in ACM SIGSOFT Software Engineering Notes, vol. 17, no. 4,
pages 40-52, October 1992.
 Abstract 




"Formal Specification and Analysis of Software Architectures Using
the Chemical Abstract Machine Model",
by Paola Inverardi and Alexander L. Wolf
in IEEE Transactions on Software Engineering, vol. 21, no. 4,
pages 373-386, April 1995.
 Abstract 




 C2 papers: 


"A Component- and Message-Based Architectural Style for GUI
Software", by Richard N. Taylor, Nenad Medvidovic, Kenneth M. Anderson,
E. James Whitehead Jr., Jason E. Robbins, Kari A. Nies, Peyman Oreizy,
and Deborah L. Dubrow, IEEE Transactions on Software Engineering,
vol. 22, no. 6, pages 390-406, June 1996.
 Abstract 
 (cross reference 
User Interface)





"Software Architecture: Foundation of a Software Component 
Marketplace",
by E. James Whitehead Jr, and Jason E. Robbins, Nenad Medvidovic,
and  Richard N. Taylor,
to appear in Proceedings of the ICSE17 Workshop on Architectures 
for Software Systems, Seattle WA, April 24-25, 1995.
 Abstract 




"Using Object-Oriented Typing to Support Architectural Design in the C2 Style",
by Nenad Medvidovic, Peyman Oreizy, Jason E. Robbins, and Richard N. Taylor.
To appear in Proceedings of SIGSOFT'96: The Fourth Symposium on the Foundations of Software Engineering (FSE4),
San Francisco, CA, October 16-18, 1996.
 Abstract 




"Formal Modeling of Software Architectures at Multiple Levels of Abstraction", 
by Nenad Medvidovic, Richard N. Taylor, and E. James Whitehead, Jr.  in
Proceedings of the  
California Software Symposium 1996, 
pages 28-40, Los Angeles, CA, April 17, 1996.
 Abstract 





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Tue May 23 13:39:57 1995
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/arcadia_papers/cm/cm_papers.html
##-----------------TITLE------------------------##
Arcadia Configuration Management Papers
##------------------TEXT------------------------##
Configuration Management Papers


Interface Control papers:


"The AdaPIC Tool Set: Supporting Interface Control and Analysis
Throughout the Software Development Process",
by Alexander L. Wolf, Lori A. Clarke, and Jack C. Wileden
in IEEE Transactions on Software Engineering, 14(3), pages
250-263, March 1989. 
 Abstract 
(cross reference Analyis and Testing)




Other papers:


"Does Configuration Management Research Have a Future?",
by Andre van der Hoek, Dennis Heimbigner, and Alexander L. Wolf, to
appear in Proceedings of the 5th International Workshop on Software
Configuration Management, Seattle, Washington, April 24-25,
1995.
 Abstract 




The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Tue Apr 11 16:09:48 1995
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/arcadia_papers/metrics/metrics_papers.html
##-----------------TITLE------------------------##
Arcadia Metrics and Evaluation Papers
##------------------TEXT------------------------##
Metrics and Evaluation Papers



Process Discovery and Validation papers:


"Automating Process Discovery through Event-Data Analysis",
by Jonathan E. Cook and Alexander L. Wolf
in Proceedings of the 17th International Conference on Software
Engineering (ICSE17), pages 73-82, Seattle, WA, April 1995.
 Abstract 
(cross reference Process)




"Toward Metrics for Process Validation",
by Jonathan E. Cook and Alexander L. Wolf
in Proceedings of the Third International Conference on the Software Process
(ICSP3), pages 33-44, Reston, VA, October 1994.
 Abstract 
(cross reference Process)




"A Study in Software Process Capture and Analysis",
by Alexander L. Wolf and David S. Rosenblum in Proceedings of the
Second International Conference on the Software Process (ICSP2),
pages 115-124, Berlin, Germany, February 1993.
 Abstract 
(cross reference Process)





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Mon May 22 17:50:59 1995
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/system_pages/rebus.html
##-----------------TITLE------------------------##
Rebus
##------------------TEXT------------------------##
Rebus


 Name: 
ReBuS (Requirements Building System)

 Source:
University of Colorado Arcadia Project.

 Brief description:
Rebus is a requirements building process
	combining functional requirements with SREM
	style requirements specifications.  Rebus provides
	support for the construction of requirements as a
	hierarchical decomposition of functional requirements.

 Evaluation against applicable general dimensions:

 Availability: commercial/licensed/public domain
Public domain.

 Cost:
None; it can be made available via anonymous FTP.

 Degree of support/maturity/testing/usage:
Bugs will be fixed.
	It is generally stable, but enhancement requests will be considered.
	Rebus is research software currently undergoing continued
	development.  No attempt has been made to make it more robust than
	necessary for an experimental platform.

 Speed:
Unmeasured.

 Computing platforms:
It is known to work on Sun 3s and Sparcs.
	No others have been attempted.
	Rebus has the following known dependencies:
	 Q. 
	 Chiron.
	 Triton.
	 TARGet.
	 Apt.
	

 Language compatibilities:
It is written in APPL/A.

 Footprint:
Unknown.

 Openness/integrability/source availability:
Source is freely available.

 Extensibility:
Easily extended.

 Pedigree: ARPA developed?
Developed by the ARPA sponsored Arcadia project.


 Contact person(s)
 Mark Maybee
Computer Science Dept.
University of Colorado
Boulder, CO 80309-0430
markm@cs.colorado.edu
(303) 492-2844 - fax


 Pointers to literature, demos, etc.:
S. M. Sutton, Jr., H. Ziv, D. Heimbigner, M. Maybee,
	L. J. Osterweil, X. Song and H. E. Yessayan.
	Programming a Software Requirements Specification Process.
	In Proceedings of the First International 
	Conference on the Software Process, Redondo Beach, CA, October 1991.





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Wed Nov 30 14:40:38 1994
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/system_pages/apt.html
##-----------------TITLE------------------------##
APT
##------------------TEXT------------------------##
APT


 Name:
APT (APPL/A translator)

 Source:
University of Colorado Arcadia Project.

 Brief description:
Apt translates programs written in a subset of the APPL/A
	software-process programming language into an equivalent Ada 
	program that may be compiled and executed.  Available in two
	versions:
	 APPLA_to_Ada:  translates APPL/A directly to Ada
	    A combination of two tools, APPLA_to_IRISand IRIS_to_Ada,
	         where the IRIS intermediate form is saved in persistent
                 repositories. 
	

 Evaluation against applicable general dimensions:

 Availability: commercial/licensed/public domain
Public domain.

 Cost:
None; it can be made available via anonymous FTP.

 Degree of support/maturity/testing/usage:
The support provided for Apt is very limited.
	Only major bugs will be fixed.
	Apt is currently considered stable and no enhancements are planned.
	It is reasonably robust and has been in daily use in Arcadia
	for several years to support Rebus, Debus, and a management process
	program.

 Speed:
For the APPL/A-to-Ada version:  50 lines/second.
	With persistent intermediate IRIS:  approximately 10 lines/minute.

 Computing platforms:
It is known to work on Sun 3s and Sparcs.
	No others have been attempted.

	Required Support Systems:  None to simply run the translators.

	Required libraries/tools for rebuilding the translators:
	In addition to the Ada source code:
	 The original versions of Alex and Ayacc
	 The Napa-IRIS version of the IRIS development tools
	 Standard Ada compiler (Verdix or Sunada preferred)
	
	With the exception of the Ada compiler, these are all available
	through the Arcadia Consortium.

	Required libraries and support systems for the compilation and use
	of translated programs (i.e., the Ada source programs resulting from
	the translation of APPL/A source by APT):  An additional runtime
	support package, event server, and Q RPC/XDR libraries.  All are
	available through the Arcadia Consortium.

 Language compatibilities:
Apt is written in standard Ada and
	Apt translates into standard Ada.

 Footprint:
Unknown.

 Openness/integrability/source availability:
Source is freely available.

 Extensibility:
It is reasonably understandable for someone knowledgeable
	about Ada and the Arcadia IRIS toolset.

 Pedigree: ARPA developed?
Developed by the ARPA-sponsored Arcadia project.


 Contact person(s)
 Stanley M. Sutton, Jr.
Computer Science Dept.
University of Colorado
Boulder, CO 80309-0430
sutton@cs.colorado.edu
(303) 492-6003
(303) 492-2844 - fax


 Pointers to literature, demos, etc.:
The Apt reference manual is available as the file
/pub/cs/techreports/arcadia/appla/apt.ps
	via anonymous FTP from the machine
ftp.cs.colorado.edu (128.138.243.151).





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Wed Nov 30 14:40:38 1994
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/system_pages/pic_ada.html
##-----------------TITLE------------------------##
PIC-Ada Toolset
##------------------TEXT------------------------##
PIC-Ada Toolset


 Name:
PIC-Ada Toolset

 Source:
University of Massachusetts Arcadia Project

 Brief description:
PIC, Precise Interface Control, extends the visibility constructs 
        of most block-structured languages to support fine-grained access 
        control for modules and types. The PIC-Ada Toolset implements the 
        PIC access control model for Ada.

	The toolset contains:

	PICAda_to_IRIS- Translates a PIC-Ada submodule to an IRIS
        representation of that submodule.

	Generate_Stub- Given a collection of submodules, generates
	a specification stub that is used by those submodules.

	Do_Analysis- Performs one of the PIC analyses on a
	submodule or pair of submodules.

	View_Analysis- View the results of a PIC analysis.

	PIC_Analysis- Drives the entire suite of PIC analyses.

 Evaluation against applicable general dimensions:

 Availability: commercial/licensed/public domain  
Not currently available to the public.

 Cost:
N/A

 Degree of support/maturity/testing/usage: 
N/A

 Speed: 
N/A

 Computing platforms:
SunAda 1.1 for Sun/SPARC

 Language compatibilities:
Tools are written in Ada using the object management toolset.
        PICAda_to_IRISuses Alex and AEYACC, slightly modified versions of the
        UNIX tools LeX and YACC developed by the University of California,
        Irvine, Arcadia project.

 Footprint:
49,111 SLOC

 Openness/integrability/source availability:
License includes source. Integration restricted to
        non-commercial usage.

 Extensibility:
N/A

 Pedigree: ARPA developed? 
N/A


 Contact person(s)
 arcadia-software@cs.umass.edu

or

Dr. Lori A. Clarke (clarke@cs.umass.edu)
Department of Computer Science
University of Massachusetts
Amherst, MA 01003
(413) 545-1328 	      
(413) 545-1249 - fax


 Pointers to literature, demos, etc.:
 A. Wolf, L.A. Clarke, and J.C. Wileden, ``The AdaPIC Toolset:  
         Supporting Interface Control and Analysis Throughout the 
         Software Development Process,'' IEEE Transactions on Software 
         Engineering, Vol.15,3, March 1989, pp. 250-263.

    Demonstration available upon request.






The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Wed Nov 30 14:40:38 1994
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/system_pages/polylithq.html
##-----------------TITLE------------------------##
PolylithQ
##------------------TEXT------------------------##
PolylithQ


 Name: 
PolylithQ

 Source:
University of Colorado Arcadia Project.

 Brief description:
PolylithQ is a re-implementation of the University of Maryland
	Polylith 2.1 system but using Q for its underlying IPC.
    	It provides essentially the same functionality as Polylith 2.1
	but adds the following capabilities.
	 Compatibility with other Q based distributed programs.
        	 All connections direct but with no loss of functionality.
        	 Richer type system.
        	 Better Ada support.
	

 Evaluation against applicable general dimensions:

 Availability: commercial/licensed/public domain
Public domain.

 Cost:
None; it is available via anonymous FTP.

 Degree of support/maturity/testing/usage:
This was constructed as an experiment to compare
	Q and Polylith.  No support will be provided except that
    	bugs will be fixed.

 Speed:
Speed is comparable with Polylith 2.1.

 Computing platforms:
It is known to work on Sparcs running Solaris 1.
    	Required Support Systems: Q.

 Language compatibilities:
It is written in C; an Ada interface is also available.

 Footprint:
	 Source and binary: 2 MB (not including Q)
	

 Openness/integrability/source availability:
Source is freely available.

 Extensibility:
Unknown.

 Pedigree:
Developed by the ARPA sponsored Prototech project.


 Contact person(s)
 Dennis Heimbigner
Computer Science Dept.
University of Colorado
Boulder, CO 80309-0430
dennis@cs.colorado.edu
(303) 492-6643
(303) 492-2844 - fax


 Pointers to literature, demos, etc.:
Via anonymous ftp to ftp.cs.colorado.edu (128.138.243.151)
File: /pub/cs/techreports/distribs/arcadia/PolylithQ.tar.Z (source)





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Wed Nov 30 14:46:00 1994
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/system_pages/ozone.html
##-----------------TITLE------------------------##
Ozone
##------------------TEXT------------------------##
Ozone


 Name: 
Ozone (Object Zones)

 Source:
University of Colorado Arcadia Project.

 Brief description:
Ozone is a scalable, heterogeneous monicker system for
	Unix.  
	It is a scheme and mechanism
	for representing references to any exported object
	in a distributed environment.
	The term ``Monicker'' comes from Microsoft's OLE2 specification
	and Ozone monickers are compatible with the OLE2 Monicker
	API.

	Ozone provides:
	 Location transparency.
	     Scalability vis-a-vis large numbers of objects.
	     Multi-language heterogeneity.
	     (Limited) support for dynamic reconfiguration.
	

 Evaluation against applicable general dimensions:

 Availability: commercial/licensed/public domain
Public domain.

 Cost:
None; it can be made available via anonymous FTP.

 Degree of support/maturity/testing/usage:
An alpha version using ONC RPC is available on request.
	An OSF DCE version is under development.

 Speed:
Speed is comparable with Sun's ONC RPC/XDR.

 Computing platforms:
It is known to work on Sparcs running Solaris 1.
    	Required Support Systems: Sun's ONC RPC/XDR.

 Language compatibilities:
It is written in C++.

 Footprint:
	 Source and binary: 15 MB
	

 Openness/integrability/source availability:
Source is freely available.

 Extensibility:
Unknown.

 Pedigree:
Developed by the ARPA sponsored Arcadia project.


 Contact person(s)
 Dennis Heimbigner
Computer Science Dept.
University of Colorado
Boulder, CO 80309-0430
dennis@cs.colorado.edu
(303) 492-6643
(303) 492-2844 - fax


 Pointers to literature, demos, etc.:
N/A





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Wed Nov 30 14:45:10 1994
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/system_pages/tess.html
##-----------------TITLE------------------------##
Type Evolution Software System
##------------------TEXT------------------------##
Type Evolution Software System


 Name:
TESS (Type Evolution Software System)

 Source:
University of Massachusetts Arcadia Project

 Brief description:
TESS supports the evolution of persistent types by
	semi-automatically generating a transformer that can translate
	between two versions of a set of types.  More specifically,
	the input to TESS is two source files representing two
	versions of a set of type definitions.  TESS compares these
	files and produces a transformer describing how to translate
	instances of the old versions of the types into the new
	versions of the types.  Ultimately, the user will be able to
	edit these descriptions if they are incorrect, but this is not
	yet implemented.  Also, a runtime environment to interpret
	these descriptions and actually update the instances (either
	permanently via converting the instances or virtually via
	screening the instances) is planned, but does not yet exist.

 Evaluation against applicable general dimensions:

 Availability: commercial/licensed/public domain  
Not currently available to the public.

 Cost:
N/A

 Degree of support/maturity/testing/usage: 
N/A

 Speed:
In the worst case, the type comparison algorithm is
	NP-complete.  However, there are several features of the
	system that make type comparison feasible.  First, there are a
	several heuristics to reduce the number of types that must
	be compared.  For example, types with the same names are
	compared first.  Given the nature of type changes in evolving
	systems, this will typically offer good results and make it
	unnecessary to compare these types to other types.  Other
	heuristics are also used to limit the number of comparisons.
	Furthermore, the user has the ability to limit the kinds of
	comparisons that are done to prevent an exhaustive search
	comparison of the types, and also can focus the system on the
	comparison of a pair of old and new types rather than entire
	sets of types if necessary.

 Computing platforms:
SunAda 1.1 for Sun/SPARC
	C
	X windows
	Pleiades
	RepoManGen
	BMS
	SUIT 2.3  (The Simple User Interface Toolkit from the
		   University of Virginia)

 Language compatibilities:
TESS is currently able to accept input written either in
	Pleiades.

 Footprint:
	 Kernel:                     23381 SLOC
	     Pleiades front-end:           529 SLOC
	     User interface (C code):     1808 SLOC
	     Total for Pleiades version: 25718 SLOC
	

 Openness/integrability/source availability:
The license includes source.  Integration is restricted to
	non-commercial use.

 Extensibility:
The kernel type comparison algorithms use a language
	independent type model.  A new version of Tess can be created
	to compare types in a different language by creating a new
	front-end for that language and a back-end capable of reading
	and writing persistent objects of that language.

 Pedigree: ARPA developed? 
N/A


 Contact person(s)
 arcadia-software@cs.umass.edu

or

Dr. Lori A. Clarke (clarke@cs.umass.edu) 
Department of Computer Science
University of Massachusetts
Amherst, MA 01003
(413) 545-1328       
(413) 545-1249 - fax  


 Pointers to literature, demos, etc.:
	David Garlan, Charles W. Krueger, Barbara Staudt Lerner.
	TransformGen:  Automating the Maintenance of
	Structure-Oriented Environments. ACM Transactions on
	Programming Languages and Systems, To appear.

	Adrian Koren, Identifying Type Changes in a Collection of
	Evolving Types. Masters project report, Computer Science
	Department, University of Massachusetts, Amherst, May 1992

 	Barbara Staudt Lerner. Extending the Notion of Type
	Conformance to Interfaces and Type Systems. OOPSLA '93
	Workshop on Supporting the Evolution of Class Definitions,
	September 1993, Washington, DC.

   Demonstration available upon request.






The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Wed Nov 30 14:44:52 1994
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/system_pages/cats_pal.html
##-----------------TITLE------------------------##
CATS/Pal
##------------------TEXT------------------------##
CATS/Pal


 Name:
CATS/Pal. (The tool is called CATS, its input language is called
	PAL.)

 Source:
Purdue University

 Brief description:
CATS/Pal is a tool for statically analyzing concurrent programs.
	It is a prototype of task parcelling and composition techniques
	based on process algebra that will later be incorporated into
	the CATS tool suite. It includes: 
 An Ada-like design language (PAL) 
 An analysis tool (Pal) that
 translates specifications written in PAL into process graphs,
	   and constructs a hierarchical analysis plan based on scope
	   structure and task communication structures.
 performs reachability analysis and verifies correct implementations
           based on various notions of ``implements'' relations 
	   (bisimulations and preorders). 
 applies abstraction and reductions automatically or 
	   under user direction during hierarchical composition of
	   analysis results to control growth of the state-space.
 uses user-supplied context  assumptions to further prune the
 	   state-space, as well as verifying the validity of those
           assumptions. 
 can be configured as a single client/server pair (the default
	   configuration) or as multiple servers analyzing
	   sub-problems in parallel on a network of workstations.



 Evaluation against applicable general dimensions:
 Availability: commercial/licensed/public domain
Cost-free license.  Full sources are available by anonymous
	ftp to
phosphor.cs.purdue.edu, directory pub/arcadia/PAL.

 Cost:
Free if obtained over the internet.

 Degree of support/maturity/testing/usage:
Limited support.  CATS/Pal was developed by a single graduate
	student, Wei Jen Yeh. The PAL language, translator, and 
	back-end analysis engine are now fairly stable, but
	Pal is not a commercial-quality tool.  
	Documentation is sparse, and the user
	interface is primitive.
	It has been successfully tested on many examples, including
	standard 
	``white rat'' problems from the literature (100 dining
	philosophers, Milner's scheduler, gas station, etc.) and
	a smaller number of more realistic problems including
	a model of PAL itself (in a multiple-server configuration) 
	and portions of the Chiron user interface development system.

 Speed:
An individual process composition operation is at least one
	order of magnitude slower in Pal than in simpler brute-force 
	reachability analysis tools, and its capacity is similarly 
	limited.  However, analysis of much larger systems is possible
	when the reductions are successfully applied to limit growth
	of the state space. For instance, Pal requires more time to 
	analyze 3 dining philosophers than CATS (the Ada implementation) 
	requires for 7; but Pal analyzes 
	100 dining philosophers in less time (and less memory) than
	CATS takes to analyze 9 dining 	philosophers. Pal is
	competitive with non-enumerative analysis tools  like 
	constrained expression analysis for highly structured
	problems (faster on some, slower on others).

	Analysis of more realistic system designs
	is typically achievable if the 	system has a cleanly layered
	design; otherwise reorganization of the design (introduction
	of layering in the design, even if it is absent in the
	implementation) is necessary to achieve satisfactory results.
	Experience so far suggests that the structure required to make
	analysis feasible is also useful for understandability.

 Computing platforms:
Developed and maintained on Sun Sparcstations under Sun OS 4.x
	with Austin/Kyoto Common Lisp version 615. Pal has been ported to
	System V R4 and SVR3 environments running on 80486 PC's, as
	well as Lucid Common Lisp version 4.0  under Sun OS. 
	Should port to other Unix systems with Common Lisp and
	sockets; porting to a new operating system or Lisp compiler
	requires modification of a small number of interface modules
	for inter-process communication and invocation of system
	services. Performance is best with at least 24M of 
	main memory; more is desirable.

 Language compatibilities:
PAL language is based on Ada and supports most tasking constructs
	of Ada.  Also supports modeling of data values through 
	limited symbolic evaluation (also known as ``value flattening''). 
	Does not support many Ada features unrelated to tasking; in
	particular, the 'package' construct is not supported.

 Footprint:
	 Source distribution 400 kB (compressed)
	     Full sources, binaries, and examples 48 MB
	

	Sources are exclusive of the Lisp compiler.

 Openness/integrability/source availability:
Source code (Common Lisp and C) is provided.

 Extensibility:
This experimental prototype is not designed for
	extension by end users, although there are reasonably clean
	interfaces for extension or integration by developers.

 Pedigree: ARPA developed?
Developed under NSF and ARPA sponsorship, including 
	a subcontract to the ARPA Arcadia program.


 Contact person(s)
 Michal Young
Department of Computer Sciences
Purdue University
West Lafayette, IN  47907
young@cs.purdue.edu
yeh@cs.purdue.edu
(317) 494-6023
(317) 494-0739 - fax


 Pointers to literature, demos, etc.:
All papers are available by anonymous ftp to phosphor.cs.purdue.edu,
directory pub/arcadia/papers.  See manifest for contents.
   Wei Jen Yeh and Michal Young.  Compositional reachability
	analysis of Ada programs using process algebra.  Preliminary
	version appeared in Proceedings of 
	the Fourth ACM Symposium on Software Testing, Analysis,
	and Verification (TAV4), Victoria, BC, October 1991;
	the ftp-able version is greatly revised and expanded
	(July 1993) and has been submitted for journal publication.

   Wei Jen Yeh and Michal Young, Redesigning Ada tasking programs
	for analysis, SERC technical report TR-148-P, December 1993, 
	submitted for publication.

   Wei Jen Yeh, Controlling State Explosion in Reachability
	Analysis, SERC technical report TR-147-P, August 1993
	(Ph.D. Dissertation).

   Demonstrations on request.






The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Wed Nov 30 14:40:38 1994
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/system_pages/target.html
##-----------------TITLE------------------------##
TARGeT
##------------------TEXT------------------------##
TARGeT


 Name: 
TARGeT (Triton-APPL/A Relation Generation Tool)

 Source:
University of Colorado Arcadia Project.

 Brief description:
Given APPL/A relation interface specifications, TARGeT
	produces as output Ada programs and E programs (for Triton)
	that allow an APPL/A relation to be implemented as a Triton
	relation object stored in the Triton Object Manager.

 Evaluation against applicable general dimensions:

 Availability: commercial/licensed/public domain
Public domain.

 Cost:
None; it can be made available via anonymous FTP.

 Degree of support/maturity/testing/usage:
Bugs will be fixed.
	It is generally stable, but enhancement requests will be considered.
	It is reasonably robust and has been in use in Arcadia
	for approximately 1 year.
	It is currently used to support Rebus and Debus.

 Speed:
Unmeasured, but generally, it may be considered to be ``fast.''

 Computing platforms:
It is known to work on Sun 3s and Sparcs.
	No others have been attempted.
	TARGet has the following known dependencies:
	 Yacc and Lex
	

 Language compatibilities:
It is written in C.

 Footprint:
Unknown.

 Openness/integrability/source availability:
Source is freely available.

 Extensibility:
Easily extended.

 Pedigree: ARPA developed?
Developed by the ARPA sponsored Arcadia project.


 Contact person(s)
 Mark Maybee
Computer Science Dept.
University of Colorado
Boulder, CO 80309-0430
markm@cs.colorado.edu
(303) 492-2844 - fax


 Pointers to literature, demos, etc.:
Documentation is currently by examples.





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Wed Nov 30 14:51:21 1994
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/system_pages/qgen.html
##-----------------TITLE------------------------##
Qgen
##------------------TEXT------------------------##
Qgen


 Name: 
Qgen

 Source:
University of Colorado Arcadia Project.

 Brief description:
Qgen is much like the Sun rpcgen program
	but it takes Ada specifications as input
	and produces Q client and server stubs as output.

 Evaluation against applicable general dimensions:

 Availability: commercial/licensed/public domain
Public domain.

 Cost:
None; it can be made available via anonymous FTP.

 Degree of support/maturity/testing/usage:
Bugs will be fixed.
	It is generally stable, but enhancement requests will be considered.
	It is reasonably robust and has been in use in Arcadia
	for approximately six months.
	It is currently used to support Rebus and Debus.

 Speed:
Unmeasured, but generally, it is comparable in speed to rpcgen.

 Computing platforms:
It is known to work on Sun 3s and Sparcs.
	No others have been attempted.
	Qgen has the following known dependencies:
	 Yacc and Lex.
	

 Language compatibilities:
It is written in C.

 Footprint:
Unknown.

 Openness/integrability/source availability:
Source is freely available.

 Extensibility:
Easily extended.

 Pedigree: ARPA developed?
Developed by the ARPA sponsored Arcadia project.


 Contact person(s)
 Mark Maybee
Computer Science Dept.
University of Colorado
Boulder, CO 80309-0430
markm@cs.colorado.edu
(303) 492-2844 - fax


 Pointers to literature, demos, etc.:
Documentation is currently by examples.





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Wed Nov 30 14:46:49 1994
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/system_pages/cats.html
##-----------------TITLE------------------------##
Concurrency Analysis Tool Suite (CATS)
##------------------TEXT------------------------##
Concurrency Analysis Tool Suite (CATS)


 Name:
Concurrency Analysis Tool Suite (CATS)

 Source:
University of California, Irvine (UCI) Arcadia project

 Brief description:
CATS is a set of tools for statically analyzing concurrent programs.
        The analyses are performed on the task interaction concurrency graph
        (TICG), an enhanced reachability graph.  CATS includes a TICG builder,
        deadlock checker, model checker for verifying temporal logic
        assertions, and support tools such as a task interaction graph viewer.

 Evaluation against applicable general dimensions:

 Availability: commercial/licensed/public domain
Cost-free license from UCI Arcadia project.

 Cost:
Free if obtained over the Internet, media charge for magnetic tape.

 Degree of support/maturity/testing/usage:
Limited support; used within the project to analyze some large
        concurrent programs, including the Chiron UIMS.

 Speed:
Execution time for the dining philosophers problem:

Problem   TICG     TICG     SPARC2 CPU
 size     States   Edges     seconds
-------  -------  -------   ----------
   2          8       11         6
   8       6560    34985        28
   9      19682   118090       339
  10      59048   393651      9124

 Computing platforms:
Sun 4

 Language compatibilities:
Suitable for programs using Ada-style rendezvous; tasking structure
        is expressed using task interaction graphs (TIGs) which are now
        constructed manually, though a TIG extractor for Ada code is under
        development.

 Footprint:
	 Entire distribution: 40 MB
	
	Includes sources, Verdix/SunAda libraries, executables,
        examples, and documentation

 Openness/integrability/source availability:
Source code (Ada) provided.

 Extensibility:
Standalone tool suite designed for extensibility, source code provided.

 Pedigree: ARPA developed?
Developed under ARPA Arcadia program.


 Contact person(s)
 Professor Richard N. Taylor
Department of Information and Computer Science (ICS)
University of California
Irvine, CA 92717-3425
taylor@ics.uci.edu
(714) 824-6429
(714) 824-4056 - fax


 Pointers to literature, demos, etc.:
Michal Young, Richard N. Taylor, Kari Forester, and Debra Brodbeck.
        Integrated concurrency analysis in a software development
        environment. In Proceedings of the ACM SIGSOFT '89 Third 
	Symposium on Software Testing, Analysis, and Verification (TAV3), pages
        200-209, Key West, Florida, December 1989.  Published as ACM
        SIGSOFT Software Engineering Notes 14 (8).





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Wed Nov 30 14:40:38 1994
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/system_pages/process_wall.html
##-----------------TITLE------------------------##
ProcessWall
##------------------TEXT------------------------##
ProcessWall


 Name: 
ProcessWall

 Source:
University of Colorado Arcadia Project.

 Brief description:
The ProcessWall is a process state server 
	providing storage for process states plus operations
	for defining and manipulating the structure of those states.
	It separates the state of a software process
	from any program for constructing that state.
	Instead, client programs implement the processes for operating
	on the process state.

 Evaluation against applicable general dimensions:

 Availability: commercial/licensed/public domain
Public domain.

 Cost:
None; it can be made available via anonymous FTP.

 Degree of support/maturity/testing/usage:
It is currently under development.
	An alpha version may be made available in selected cases.

 Speed:
Unknown.

 Computing platforms:
Most variants of BSD Unix with Berkeley sockets.
Required Support Systems:
The ProcessWall has the following known dependencies:
	 Ozone.
	     Tcl version 7.3.
	     Tk version 3.6.
	     Gnu G++ version 2.3.3 or later.
	

 Language compatibilities:
It is written in C++.

 Footprint:
Approximately 10 megabytes for source and binary,
	not including support systems.

 Openness/integrability/source availability:
Source is freely available.

 Extensibility:
Via Tcl and dynamic loading.

 Pedigree:
Developed by the ARPA sponsored Arcadia project.


 Contact person(s)
 Dennis Heimbigner
Computer Science Dept.
University of Colorado
Boulder, CO 80309-0430
dennis@cs.colorado.edu
(303) 492-6643
(303) 492-2844 - fax


 Pointers to literature, demos, etc.:
Via anonymous ftp to ftp.cs.colorado.edu (128.138.243.151)
File: /pub/cs/techreports/arcadia/wall/wall.ps.Z (paper)





The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Wed Nov 30 14:40:38 1994
##------------------URL-------------------------##
http://www.ics.uci.edu/~arcadia/philosophy.html
##-----------------TITLE------------------------##
The Arcadia Philosophy
##------------------TEXT------------------------##
Note: The Arcadia project ended in 1997. This web site is for archival purposes;
 we can no longer guarantee liveness of links.

The Arcadia Philosophy


The primary goal of the Arcadia project is to carry out validated
research in the area of software engineering environments.  In the
course of this research, the Arcadia project has discovered a wide
range of concepts and capabilities we believe to be key to success in
building an effective environment.  This research has focused on
developing advanced prototypes to demonstrate feasibility of our
concepts, and on demonstrating that these key capabilities can be
successfully integrated into an operational whole.  Our insistence on
integrating the various Arcadia constituent components has served as a
crucially important forcing function, compelling all of us to consider
overall environment architecture issues and usage contexts in
designing and developing individual components.  Our experiences in
building these components and in assembling them have confirmed and
validated many of our research ideas.  These experiences have also
pointed up some unexpected problems, which has often led to new
research and implementation insights.

The Arcadia project believes that an effective software engineering
environment (SEE) is a collection of capabilities effectively
integrated to support software developers and managers in their work.
For an SEE to be effective it must be:
Interoperable:
 The tools and capabilities of an environment cannot stand in parallel
isolation and ignorance of each other.  Rather, they must be able to
readily share data and results with each other.  Their progress must
affect, and be affected by, each other's activities.

Extensible:
 The capabilities of an environment must constantly grow and expand.
As software engineering matures as a discipline, and as the commercial
marketplace of software tools expands, an effective SEE must be
capable of absorbing new tools and ideas.  It is a mistake to attempt
to specify the functional requirements for an SEE in advance and then
design it to meet only these prescribed requirements.

Incrementally Improvable:
 The growth and maturation of the discipline and commercial marketplace
also assures the steady improvement in the quality and capabilities of
available tools.  Thus an SEE must be capable of absorbing steadily
improving technology.

Flexible:
 The needs of software developers and managers are diverse, varying
from project to project and from time to time, with differing and
changing roles.  An SEE must continue to support these individuals
effectively throughout these changes.  Thus, the SEE and its
capabilities must be extremely flexible and adaptable.

Fast:
 As with all computer systems, performance is of great importance in an
SEE.  Users will expect rapid response to requests for services that
they regard as straightforward, and can be expected to be impatient
for response, even to requests for services that they know to entail
considerable processing.

Efficient:
 An SEE can be expected to be a voracious consumer of computer
resources -- including processing time and storage space.  Demands
for resources to support the development and maintenance of large
software strain the limits of contemporary hardware systems. 
Thus, an effective SEE must take care to utilize hardware resources
efficiently, lest the cost of the SEE's support become unaffordable.

Able to Support Multiple Users and User Classes:
 The engineering of large software systems requires the collaboration
of many diverse users.  An SEE must support effective interaction and
communication among those users.  As the raw number of users grows,
the problems of effective coordination grow.  The diversity of users
poses the additional problem of assuring that the SEE provides a
corresponding diversity of support.

Easy to Use:
 If an SEE is to support users, then it must not itself become an
obstacle.  Users must find it easy to understand what capabilities the
SEE offers, and how to use them effectively.

Able to support effective product and process visibility:
 The essence of what makes software engineering difficult is that the
software product being built is unexpectedly large and complex.  This
makes it hard for developers and managers to maintain complete and
accurate models of the product in their minds.  An effective SEE must
help users to form and analyze accurate product models.  Further, the
way in which the product is developed is also unexpectedly complex,
challenging developers and managers to maintain accurate product and
project status models.  The SEE must facilitate process visibility as
well.

Able to support effective management control:
 Managers must use visibility and insight into a project as the basis
for making decisions that control project progress.  An SEE must,
therefore, provide support for more than just visibility.  The SEE
must also support managers in making changes and controlling the
project.  The SEE must help in controlling access to data, assigning
people to tasks, forcing and halting progress from phase to phase, and
establishing and terminating communications streams.


Over a period of years, the Arcadia project has evolved an environment
architecture designed to effectively address all of the above goals
simultaneously.  One of the important lessons from the Arcadia project
is that various of these design goals are not orthogonal, and in fact
are often in conflict with each other.  Many of the primary lessons of
Arcadia have dealt with understanding the various tensions between these
diverse desiderata.  Much of the most challenging work of the Arcadia
project has been concerned with devising strategies for supporting
adjustable compromises between conflicting SEE goals.



The Arcadia Project
<arcadia-www@ics.uci.edu>
Last modified: Wed Nov 30 14:24:44 1994
##------------------URL-------------------------##
http://www.ics.uci.edu/~irus/activities_events/tech_interchange_networking_roundtable.html
##-----------------TITLE------------------------##
Technical Interchange, Roundtable, and Networking Meetings
##------------------TEXT------------------------##
Technical Interchange, Roundtable, and Networking Meetings
 
The success of the 

Southern California SPIN and 

Bay Area Roundtable 
have substantiated the need for, and benefits of, regular networking and 
roundtable meetings. An interesting aspect of these meetings is the 
significant value added by holding them on neutral grounds. This fosters 
the unrestrained sharing of ideas and experiences important to community 
development. IRUS will continue to initiate new technical interchange, 
roundtable, and networking meetings modeled after SPIN and BART as their 
need is identified by the IRUS 

Executive Committee. 
Potential topics of interest may be prototyped with 

Focused Technology Symposia
to 
substantiate their relevance.


Back to the IRUS home page



Irvine Research Unit in Software

Information and Computer Science

University of California, Irvine
Irvine, CA 92697-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~irus/activities_events/special_events.html
##-----------------TITLE------------------------##
Special Events and Activities
##------------------TEXT------------------------##
Special Events and Activities
 
IRUS sponsors periodic special events based on emerging trends in the
field.   These typically one-time events enable the IRUS community to 
stay abreast of current trends, collectively explore relevant issues, and 
maintain a competitive edge.   This sampling of special events addresses 
a variety of topics.   



Java Testing Workshop and Tutorial

This three-day workshop, held at UC Irvine, was co-sponsored by IRUS and
SunTest, the Java Testing business unit of Sun Microsystems Laboratories.   
It was instructed by SunTest and augmented with presentations by IRUS faculty.
Attendees received a free license for the tools used in the workshop, 
including free upgrades for one year. 



 W3C Symposium and WebDAV Working Group Meeting


The goal of the 

World Wide Web Consortium (W3C) 
is to develop common standards for the world wide web.  The 

Internet Engineering Task Force (ITEF)
 
World Wide Web Distributed Authoring and Versioning (WEBDAV) Working Group
is developing interoperability specifications for how to perform remote 
authoring and versioning of web content. IRUS was pleased to co-sponsor a 
two-day W3C symposium, enabling IRUS sponsors to participate in this 
limited-attendance event. IRUS also sponsored a two-day WebDAV working group 
meeting, held at UC Irvine.



International Conference on Software Engineering (ICSE)


IRUS was pleased to have provided support for ICSE, the premier
international conference on the topic of software engineering. ICSE is 
a week long event sponsored by 
 ACM
 SIGSOFT
and 
 IEEE
 Computer Society
 TCSE, 
featuring prestigious keynotes, a technical program, a
doctoral symposium, research demonstrations, commercial exhibitions, 
workshops, and tutorials.  IRUS has supported ICSE 16, the ICSE 16 
Software Engineering/Human Computer Interaction Workshop, and 

ICSE 97 (ICSE 19).



Human Computer Interaction (HCI) Consortium


This ten year old consortium, centered at the University of Colorado,
Boulder, sponsors an annual basic research meeting. Member organizations, 
which are drawn from universities and commercial and government research 
labs, include Apple, Bellcore, NYNEX, SunSoft, Tektronix, US West, 
Xerox PARC, Carnegie Mellon University, University of Colorado, Georgia Tech, 
MIT, Virginia Tech, and UC Irvine. 

IRUS, 
the UCI 

Information and Computer Science Department, 
and the UCI 

Center for Research on Information Technology and Organizations (CRITO) 
share the UCI membership. 



Software Engineering Tools and Technology (SETT) Tools Fair


This one day IRUS event featured offerings from popular vendors and
avant garde solutions from research labs. Attendees experienced leading 
products and state-of-the-art technologies, received valuable advice 
from exhibitors, learned about key products and solutions, evaluate 
software based on hands on tool demonstrations, and gained educational 
advantages by seeing new technologies in action.



 COCOMO 2.0

IRUS is also involved with the
COCOMO 2.0
project,
a joint effort with the

University of Southern California's

Center for Software Engineering (USC/CSE).


Back to the IRUS home page



Irvine Research Unit in Software

Information and Computer Science

University of California, Irvine
Irvine, CA 92697-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~irus/activities_events/focused_tech_symp.html
##-----------------TITLE------------------------##
Focused Technology Symposia
##------------------TEXT------------------------##
Focused Technology Symposia
 
The purpose of our periodic focused technology symposia is to bring
together researchers and practitioners for a day of information sharing 
on a particular topic. Participation from the local community in the form 
of presentations on new approaches, positive and negative experience reports, 
and panel discussions is highlighted. Abstracts may be solicited and 
reviewed by IRUS faculty. A typical program consists of presentations, 
panels, and invited speakers.

Focused technology symposia have been held on the topics of the World
Wide Web and Internet, Reuse-based Software Engineering, Software Process, 
Software Safety, and Ada issues. Topics under consideration for future 
symposia include computer-supported cooperative work (CSCW), software 
architecture, analysis and testing, and formal methods. 


Back to the IRUS home page



Irvine Research Unit in Software

Information and Computer Science

University of California, Irvine
Irvine, CA 92697-3425
##------------------URL-------------------------##
http://www.ics.uci.edu/~wscacchi/Software-Process/Software-Life-Cycle-Models/Software-Life-Cycle-Activities.htm
##-----------------TITLE------------------------##
System Initiation/Planning: where do systems come from
##------------------TEXT------------------------##
System Initiation/Planning: where do systems 
come from? In most situations, new feasible systems replace or supplement 
existing information processing mechanisms whether they were previously automated, 
manual, or informal. 
  
Requirement Analysis and Specification: identifies 
the problems a new software system is suppose to solve, its operational capabilities, 
its desired performance characteristics, and the resource infrastructure needed
to support system operation and maintenance. 
  
Functional Specification or Prototyping: identifies and potentially formalizes the objects of computation, 
their attributes and relationships, the operations that transform these objects, 
the constraints that restrict system behavior, and so forth. 
  
Partition and Selection (Build vs. Buy vs. 
Reuse): given requirements and functional specifications, divide the system 
into manageable pieces that denote logical subsystems, then determine whether 
new, existing, or reusable software systems correspond to the needed pieces. 

  
Architectural Design and Configuration Specification: 
defines the interconnection and resource interfaces between system subsystems, 
components, and modules in ways suitable for their detailed design and overall 
configuration management. 
  
Detailed Component Design Specification: defines the procedural methods through which the data resources
within the modules of a component are transformed from required inputs into
provided outputs. 
  
Component Implementation and Debugging: codifies the preceding specifications into operational 
source code implementations and validates their basic operation. 
  
Software Integration and Testing: affirms and sustains the overall integrity of the software 
system architectural configuration through verifying the consistency and completeness
of implemented modules, verifying the resource interfaces and interconnections
against their specifications, and validating the performance of the system
and subsystems against their requirements. 
  
Documentation Revision and System Delivery: packaging and rationalizing recorded system development 
descriptions into systematic documents and user guides, all in a form suitable 
for dissemination and system support. 
  
Deployment and Installation: providing directions for installing the delivered software 
into the local computing 
 
 
environment, configuring operating systems parameters and user access privileges,
and running diagnostic test cases to assure the viability of basic system
operation. 
  
Training and Use: providing 
system users with instructional aids and guidance for understanding the system's 
capabilities and limits in order to effectively use the system. 
  
Software Maintenance: 
sustaining the useful operation of a system in its host/target environment 
by providing requested functional enhancements, repairs, performance improvements, 
and conversions.
##------------------URL-------------------------##
http://www.ics.uci.edu/~wscacchi/Software-Process/Readings/Java-Community-Process.htm
##-----------------TITLE------------------------##
The Java Community Process(SM) Program - JCP Procedures - JCP 2: Process Document
##------------------TEXT------------------------##
Quick Links:  
						What's New  
						JCP 2  
						Membership  
						Spec Lead Guide  
						Expert Group Log in  
						java.sun.com
	  			
			
							
      			



         
		
		
	

	  			
			 
				


		
		

      			
							







		JCP Procedures
JCP 2: Process Document




The formal procedures for using the Java Specification development process





Version 2.1 (July 10, 2001)

Comments to: pmo@jcp.org

Copyright (c) 1996 - 2001 Sun Microsystems, Inc.



CONTENTS


EXECUTIVE SUMMARY
FUNDAMENTAL DEFINITIONS
1. INITIATE A NEW OR REVISED SPECIFICATION
2. CREATE THE COMMUNITY DRAFT
3. COMPLETE THE SPECIFICATION
4. MAINTENANCE
A. EXECUTIVE COMMITTEE POLICIES AND PROCEDURES
B. REVISING THE JCP, JSPA, AND IEPA






EXECUTIVE SUMMARY


The international Java community
develops and evolves Java™ technology specifications using the Java Community
Process (JCP). The JCP produces high-quality specifications in "Internet
time" using an inclusive, consensus building approach that produces a specification,
a reference implementation (to prove the specification can be implemented),
and a technology compatibility kit (a suite of tests, tools, and documentation
that is used to test implementations for compliance with the specification). 



Experience has shown that the best
way to produce a technology specification is to gather a group of industry
experts who have a deep understanding of the technology in question and then
have a strong technical lead work with that group to create a first draft.
Consensus around the form and content of the draft is then built using an
iterative review process that allows an ever-widening audience to review
and comment on the document. 


This version of the JCP was developed
by Sun based on input from leading Java partners. In this version, an Executive
Committee (EC) representing a cross-section of both major stakeholders and
other members of the Java community is responsible for approving the passage
of specifications through key points of the JCP and for reconciling discrepancies
between specifications and their associated test suites. There are two ECs:
one to oversee the Java technologies for the desktop/server space (with responsibility
for the J2SE™ and J2EE™ specifications) and the other to oversee the Java
technologies for the consumer/embedded space (with responsibility for the
J2ME™ specification). 


There are four major steps in this version of the JCP:


	INITIATION: A specification
targeted at the desktop/server or consumer/embedded space is initiated by
community member(s) and approved for development by the responsible EC.

	COMMUNITY DRAFT
: A group of experts is formed to develop a first draft of the specification
that both the community and the responsible EC will then review. The expert
group uses feedback from the review to revise and refine the draft. At the
end of the review, the responsible EC decides if the draft should proceed
to the next step.

	PUBLIC DRAFT: The draft goes
out for review by the public where anyone with an Internet connection can
read and comment on the draft. The expert group uses the public feedback
to further revise the document. Finally, the leader of the expert group sees
that the reference implementation and its associated technology compatibility
kit are completed before sending the specification to the responsible EC
for final approval.

	MAINTENANCE: The completed
specification, reference implementation, and technology compatibility kit
are updated in response to ongoing requests for clarification, interpretation,
enhancements, and revisions. The responsible EC can review all proposed changes
to the specification and indicate which ones can be carried out immediately
and which will require the specification to be revised by an expert group.
Challenges to one or more tests in a specification's technology compatibility
kit are ultimately decided by the responsible EC if they cannot be otherwise
resolved. 

FUNDAMENTAL DEFINITIONS



Java Community Process (JCP): The formal process described in this document for developing or revising Java technology specifications.



Java Community Process Member (Member): A company, organization, or individual that has signed the JSPA and is abiding by its terms. 



Java Specification Participation Agreement (JSPA)
: A one-year renewable agreement between Sun Microsystems and a company,
organization or individual that allows the latter entities to participate
in the Java Community Process. 


Individual Expert Participation Agreement (IEPA)
: An agreement between Sun Microsystems and an individual that allows that
individual to serve on an Expert Group at the invitation of the Specification
Lead. There is no fee associated with the IEPA and it is valid until the
Expert Group disbands. The IEPA allows individual technical experts who do
not represent companies or organizations to participate on Expert Groups. 



Executive Committee (EC):
The Members who guide the evolution of the Java technologies. The EC represents
a cross-section of both major stakeholders and other Members of the Java
Community. Members must have signed the EC acceptance letter in order to
serve on the EC. The EC Policies and Procedures are in Appendix A. 


Program Management Office (PMO): The group within Sun Microsystems that is responsible for administering the JCP and chairing the EC.



Java Specification (Specification)
: A written specification for some aspect of the Java technology. This includes
the language, virtual machine, Platform Editions, Profiles, and application
programming interfaces. 


Platform Edition Specification (Platform Edition)
: A Specification that defines a baseline API set that provides a foundation
upon which applications, other APIs, and Profiles can be built. There are
currently three Platform Edition Specifications: J2SE, J2EE, and J2ME. 


Profile Specification (Profile)
: A Specification that references one of the Platform Edition Specifications
and zero or more other JCP Specifications (that are not already a part of
a Platform Edition Specification). APIs from the referenced Platform Edition
must be included according to the referencing rules set out in that Platform
Edition Specification. Other referenced specifications must be referenced
in their entirety. 


Reference Implementation (RI): The prototype or "proof of concept" implementation of a Specification.



Technology Compatibility Kit (TCK)
: The suite of tests, tools, and documentation that allows an implementor
of a Specification to determine if their implementation is compliant with
that Specification. 


JCP Web Site: The web site
where anyone with an Internet connection can stay informed about JCP activities,
download draft and final Specifications, and follow the progress of Specifications
through the JCP. 


JCP Specification Page (Spec Page)
: Each Specification approved for development or revision will have a dedicated
public web page established on the JCP Web Site to contain a history of the
passage of the Specification through the JCP, including a record of the decisions,
actions, and votes taken by the EC with respect to the draft Specification. 



THE JAVA COMMUNITY PROCESSSM PROGRAM





1. INITIATE A NEW OR REVISED SPECIFICATION


1.1 INITIATE A JAVA SPECIFICATION REQUEST



definition - Java Specification Request (JSR)
: The document submitted to the PMO by one or more Members to propose the
development of a new Specification or significant revision to an existing
Specification. 


definition - Umbrella Java Specification Request (UJSR): A JSR that defines or revises a Platform Edition or Profile Specification. A UJSR proceeds through the JCP like any other JSR.



definition - Expert: A Member
representative (or an individual who has signed the IEPA) who has expert
knowledge and is an active practitioner in the technology covered by the
JSR. 


definition - Expert Group: The group of Experts who develop or make significant revisions to a Specification.



definition - Specification Lead (Spec Lead)
: The Expert responsible for leading the effort to develop or make significant
revisions to a Specification and for completing the associated Reference
Implementation and Technology Compatibility Kit. A Spec Lead (or their host
company or organization) must be a Java Community Process Member. 



One or more Members can initiate
a request to develop a new Specification, or carry out a significant revision
to an existing one, by sending a JSR to the PMO. The JSR should follow the
template available at the JCP Web Site. The JSR serves to identify the Members
making the request (the sponsors), a Specification Lead, and the initial
members of the Expert Group. It will also describe the proposed Specification,
the reason(s) for developing or revising it, the primary target Java Platform
Edition, an estimated development schedule, and any preexisting documents,
technology descriptions, or implementations that might be used as a starting
point. Any JSR under consideration can be withdrawn by its sponsors without
explanation at any time prior to the completion of the JSR approval vote
(see section 1.3) upon request by the initiator(s) to the PMO. 

1.1.1 REVISE EXISTING SPECIFICATIONS


Existing Specifications, along with
their associated RIs and TCKs, are maintained by a designated Maintenance
Lead using the processes described in section 4 of this document. Maintenance
Leads (and their host company or organization) are expected to assume long
term ownership of their Specification, RI, and TCK with due respect of the
will of the Java Community Members with regard to evolution. This means that
a Maintenance Lead will automatically be the Spec Lead for all significant
revisions to their Specification going forward but he or she will not have
the exclusive right to decide when a significant revision will take place.
That will be decided by the EC in response to a revision JSR that can be
initiated by any Java Community Member (or Members). The only provision is
that the initiator(s) should make a reasonable effort to get some of the
members of the previous Expert Group to join the revision effort. 

1.1.2 PROTECT THE INSTALLED BASE AND GUARD AGAINST FRAGMENTATION


Changes to the Java programming language,
the Java virtual machine (JVM), the Java Native Interface (JNI), packages
in the "java.*" space, or other packages delivered as part of J2SE, have
the potential to seriously disrupt the installed base if carried out inconsistently
across the Platform Editions. In order to protect the installed base, any
such changes can only be accepted and carried out within a UJSR for J2SE. 



In order to guard against fragmentation,
new Platform Edition Specifications will not substantially duplicate existing
Platform Editions or Profiles. 

1.1.3 PROFILES AND API SPECIFICATIONS TARGET CURRENT PLATFORM EDITIONS


All new or revised Specifications
must be compatible with the most recent versions of the targeted Platform
Edition Specifications. In order to achieve this, all UJSRs to define new
Profile Specifications, or revise existing Profile Specifications, must reference
the latest version of the Platform Edition Specification they are based upon. 


1.1.4 J2ME PROFILES AND J2ME BUILDING BLOCKS 

definition - J2ME Building Block (Building Block)
: A subset of one or more APIs defined in the J2SE or J2EE Platform Edition
Specifications. The J2ME Platform Edition Specification is a collection of
Building Blocks. J2ME Profile Specifications can build up desired functionality
by combining new API sets with existing Building Blocks. 


J2ME Profiles will normally be based
upon the existing Java virtual machine and language Specifications. When
such profiles also need to include subsets of J2SE and/or J2EE functionality,
they will reference J2ME Building Blocks. 


Building Blocks are created and revised
within the UJSR for the J2ME Platform Specification. It is likely that different
J2ME Profiles will require different J2SE/J2EE subsets. For example, different
categories of devices may need different subsets of the "java.net" package.
In order to accommodate this, no fundamental restrictions are placed upon
the number of times or ways in which J2SE/J2EE functionality can be packaged
into J2ME Building Blocks. 


Building Blocks can be proposed in
a UJSR for the J2ME Specification. However, it is recognized that the consumer
and device marketplaces can change very rapidly in comparison to the desktop
and server marketplaces. The definition of new Building Blocks (as well as
the revision of existing blocks) may need to be carried out very quickly
in order for some J2ME Profiles to keep up with changing market needs. In
the interest of speed, J2ME Building Blocks may also be defined and revised
within the JCP Maintenance Cycle (see section 4.2) for the J2ME Specification.
 


Expert Groups that need to quickly
create or update a J2ME Building Block should approach the Maintenance Lead
for the J2ME Platform Edition Specification with their requests. The J2ME
Maintenance Lead, after consultation with both the J2ME Expert Group and
the Maintenance Lead(s) of the Platform Edition(s) the block is to be derived
from, may propose the new Building Block as part of a maintenance update
to the J2ME specification. Note that the EC can require any Building Block
proposed as part of the Maintenance Cycle to be defined in a major revision
to the J2ME Specification (see section 4.2.2). 


If the Maintenance Lead declines
a Building Block request, the requesting Expert Group has the options of
initiating a UJSR for J2ME (which may be time consuming) or creating the
needed APIs in any namespace not reserved for use by existing Platform Edition
Specifications.  


In exceptional circumstances, the
J2ME Specification may define J2ME Building Blocks for use with special classes
of devices that can only implement subsets of the Java virtual machine or
language Specifications. Such Building Blocks can be defined and approved
only within a UJSR for J2ME. They cannot be defined using the Maintenance
Cycle because proposals for Building Blocks for these special classes of
devices must be subject to the widest possible review. 


1.2 JSR REVIEW



definition - JSR Review: A 14 day period when anyone with an Internet connection can review and comment on a new JSR.



definition - JSR Page: Each initiated JSR will be published on a public area of the JCP Web Site.




When a JSR is received, the PMO will
give it a tracking number, assign the JSR to the appropriate EC, create its
JSR Page, announce the proposed JSR to the public, and begin JSR Review.
Comments on the JSR should be sent to the e-mail address listed on the JSR
Page. All comments received will be made available from the JSR Page and
forwarded to the EC for their consideration. Members who are interested in
joining the Expert Group (should the JSR be approved) should identify themselves
by submitting a nomination form to the PMO. 


1.3 JSR APPROVAL BALLOT



definition - JSR Approval Ballot: The 14-day EC ballot running concurrently with JSR Review to determine if the JSR should be approved.




During JSR Review, EC members should
review the JSR (with its proposed Spec Lead and initial Expert Group), any
comments and nominations received, and cast their ballot to decide if the
JSR should be approved. 



definition - JSR Reconsideration Ballot: The EC ballot to determine if a revised JSR should be approved.




If the JSR Approval Ballot fails,
the PMO will send all EC comments to the JSR initiators who will have the
option of revising the JSR and resubmitting it to the PMO within 14 days.
If a revised JSR is not received in that time, the original EC decision will
stand and the JSR will be closed. If a revised JSR is received, the PMO will
post it to the JSR Page, announce the revised JSR to the public, and send
it to all EC members for a JSR Reconsideration Ballot. If that ballot fails,
the JSR will be closed. 




2. CREATE THE COMMUNITY DRAFT



2.1 FORM THE EXPERT GROUP


When a JSR is approved, the PMO will
notify the identified Spec Lead to form the Expert Group. If the Member contributing
the Spec Lead withdraws from the Community before the JSR is approved, the
PMO will request the initial Expert Group to choose a replacement from among
themselves who is willing to take on the duties defined in this document
(including taking responsibility for the RI and TCK, working towards the
estimated schedule given in the JSR, and assuming the position of Maintenance
Lead as described in section 4). 


There is no size limit on the Expert
Group. The Spec Lead may add additional Experts at any time provided the
existing Expert Group is consulted first. New members may be added, for example,
to increase diversity of opinion. A Spec Lead recruits new Experts by approaching
other Members directly and working with them to identify an expert and bring
him or her into the Expert Group. Individual experts can be brought into
the Expert Group if they sign an IEPA. 

2.1.1 FREEDOM OF WORKING STYLE


Each Expert Group is free to define
and follow whatever working style it finds most productive and appropriate
as long as it is compatible with the JCP. Use of the Internet is encouraged.
E-mail exchanges on mailing lists established for the use by the Expert Group,
along with conference calls and group meetings, have been used by past Expert
Groups to discuss and resolve issues raised as the draft evolves. In-person
group meetings are useful but they tend to slow down work considerably due
to the need to coordinate schedules. 

2.1.2 WITHDRAWAL OF AN EXPERT FROM THE EXPERT GROUP


An Expert may withdraw from the Expert
Group at any time. When this happens, the Spec Lead may approach the Member
who originally contributed the Expert and work with them to find a replacement.
If no replacement is offered, the Spec Lead may recruit a replacement from
another Member if desired. If the departing Expert is the Spec Lead, the
Expert Group should choose one of their members as the new Spec Lead provided
he or she is willing to take on all of the responsibilities defined in this
document. 

2.1.3 UNCOOPERATIVE OR UNRESPONSIVE EXPERT GROUP MEMBERS


There may be rare instances when
members of the Expert Group feel that one of their fellow Experts is not
acting in ways that advance the work of the Expert Group. These concerns
should be brought to the attention of the Spec Lead and/or the EC as quickly
as possible so they may be proactively addressed and resolved. The Expert
Group is expected to make a reasonable effort to resolve any such issues
among themselves. If a 2/3 majority of the members of the Expert Group find
that a Spec Lead is being unresponsive, and the Spec Lead does not work to
resolve the situation in a timely manner, the EC may direct the PMO to ask
the Member who provided the Spec Lead to provide a replacement. 


2.2 WRITE THE FIRST DRAFT OF THE SPECIFICATION


The Expert Group should begin work
by considering the requirements set forth in the JSR, any contributed documents
or technology descriptions, comments received during JSR Review and, if this
is a revision of an existing Specification, the Change Log kept by the Maintenance
Lead (see section 4). Additional input can be obtained from discussions with
other Members, industry groups, software developers, end-users, and academics.
The goal is to define requirements and then write a draft suitable for review
by the Community. 
 

When the Expert Group decides that
the first draft is ready for review, the Specification Lead will send the
draft, along with any additional files required for review, to the PMO. The
Specification Lead should also suggest the length of the Community Review
period if the Expert Group feels it should go beyond the minimum 30 days. 


2.2.1 EARLY WARNING AND FEEDBACK ON LICENSING TERMS FOR THE RI AND TCK


The Spec Lead's company or organization
is responsible for the Reference Implementation (RI) and Technology Compatibility
Kit (TCK) and its licensing under terms compatible with the licensing guidelines
established for use within the JCP. The Spec Lead will provide the EC with
the terms under which the RI and TCK will be licensed no later than the start
of Community Review. EC members will provide feedback on the terms as an
indication of how the Community might react as a whole to the terms. 


2.3 COMMUNITY REVIEW



definition - Community Review: A 30 to 90 day period when Members review and comment on the draft Specification.




Refinement of the draft Specification
begins when the PMO posts it to JCP Web Site and announces the start of Community
Review to all of the Members. The goal of Community Review is to get the
draft Specification into a form suitable for Public Review as quickly as
possible by uncovering and correcting major problems with the draft. 


All comments from Members should
be sent to the e-mail feedback address listed in the draft. The Spec Lead
is responsible for ensuring that all Member comments are considered and responded
to. For simplicity, similar comments may be combined and responded to as
one. 

2.3.1 UPDATING THE DRAFT DURING COMMUNITY REVIEW


If the Expert Group makes major revisions
to the draft during Community Review, the Spec Lead should send the revised
draft, along with a synopsis of the changes, to the PMO at any time up until
the last 7 days of the review period (the draft is frozen during the last
7 days of Community Review in order for the EC to complete their Draft Specification
Approval Ballot). The PMO will notify Members of any updated drafts and change
synopses received and make them available to them for download. 


During Community Review, EC members
are strongly encouraged to have one or more technical members of their organization
carry out a review of the draft in order to uncover possible overlap between
the draft and other Specification(s) or duplication of features or services
already provided by other Specifications. EC members should inform the Expert
Group of any such discoveries using the Member e-mail feedback address listed
in the draft so they can be considered and responded to like all Member comments. 


2.4 DRAFT SPECIFICATION APPROVAL BALLOT



definition - Draft Specification Approval Ballot: The EC ballot to determine if a draft should proceed to Public Review.




The Draft Specification Approval
Ballot is carried out during the last 7 days of Community Review. At the
close of balloting, all comments submitted by EC members with their ballots
will be circulated to the Expert Group by the PMO. 



definition - Draft Specification Reconsideration Ballot: The EC ballot to determine if a revised draft should proceed to Public Review.




If the Draft Specification Ballot
fails, the Expert Group will have 30 days to update the draft in response
to the concerns raised by the EC and submit a revised version to the PMO.
If a revised draft is not received by the end of the 30 days, the original
decision by the EC will stand and the JSR will be closed. If a revision is
received, the PMO will forward it to the EC and initiate a Draft Specification
Reconsideration Ballot. At the close of balloting, all comments submitted
by EC members with their ballots will be circulated to the Expert Group by
the PMO. If this ballot fails, the JSR will be closed and the Expert Group
will disband. If the JSR was a revision to an existing Specification, the
Spec Lead will resume the role of Maintenance Lead of the current Specification
(see section 4). 


If the Draft Specification Approval
Ballot (or reconsideration ballot) is successful, the Expert Group can make
any additional changes to the draft they deem necessary in response to EC
ballot comments before submitting the draft to the PMO for Public Review. 




3. COMPLETE THE SPECIFICATION



3.1 PUBLIC REVIEW



definition - Public Review: A 30 to 90 day period when the public can review and comment on the draft Specification.




Public Review begins when the PMO
posts the draft Specification that was approved by the EC during Community
Review on the JCP Web Site and announces it to both Members and the public.
Anyone with access to the Internet can download and comment on the draft.
Public Review is an important part of the JCP. In the past, comments from
the public have raised fundamental architectural and technological issues
that have considerably improved some Specifications. 


The Spec Lead is responsible for
ensuring that all public comments are read and considered. If those comments
result in revisions to the draft, and those revisions result in major changes
(in the opinion of the Expert Group), then the Specification Lead will send
an updated draft (with synopsis of the changes) to the PMO who will post
both items to the JCP Web Site and notify both Members and the public. 


3.2 PROPOSED FINAL DRAFT



definition - Proposed Final Draft: The version of the draft Specification that will be used as the basis for the RI and TCK.




After the close of Public Review,
the Expert Group will prepare the Proposed Final Draft of the Specification
by completing any revisions they deem necessary in response to comments received.
The Spec Lead will then send the Proposed Final Draft to the PMO who will
announce it to both Members and the public and post it on the JCP Web Site
for public download. 

3.2.1 COMPLETE THE RI AND TCK


The Spec Lead is responsible for
the completion of both the Reference Implementation (RI) and Technology Compatibility
Kit (TCK). If the RI and TCK uncover areas of the Specification that were
under-defined, incomplete, or ambiguous, the Spec Lead will work with the
Expert Group to correct those deficiencies and then send a revised Specification
(with synopsis of the changes) to the PMO. All such revisions and change
synopses received will be posted to the JCP Web Site and announced to both
Members and the public. The Expert Group will continue to consider any further
comments received during this time. 

3.2.2 ESTABLISH A FIRST-LEVEL TCK APPEALS PROCESS



definition - First-Level TCK Appeals Process
: The process defined by the Spec Lead that allows implementors of the Specification
to appeal one or more tests defined by the Specification's TCK. 



The Spec Lead is also responsible
for establishing a clearly defined First Level TCK Appeals Process to address
challenges to the tests contained in the TCK. This process must be described
in the documentation included in the TCK (see Section 4.3 for information
on the full TCK Appeals Process). Examples of First Level TCK Appeals Process
applicable to situations ranging from simple API Specifications all the way
up to Platform Edition Specifications can be found in the TCK section of
the JCP Web Site.  


3.3 FINAL APPROVAL BALLOT



definition - Final Draft: The final draft of the Specification that will be put forward for EC approval.



definition - Final Approval Ballot: The 14-day EC ballot to approve the Final Draft along with its associated RI and TCK.




When the Expert Group is satisfied
that the TCK provides adequate test coverage, the RI adequately implements
the Specification, and the RI passes the TCK, the Spec Lead will send the
Final Draft of the Specification to the PMO along with instructions on how
EC members can obtain the RI and TCK for evaluation. The PMO will circulate
the materials to the EC and initiate the Final Approval Ballot. At the close
of balloting, all EC comments will be sent to the Expert Group by the PMO. 

 


definition - Final Approval Reconsideration Ballot: The 14-day EC ballot to reconsider an initial rejection of a Final Draft, RI, and TCK.




If the Final Approval Ballot fails,
the Spec Lead will have 30 days to revise the RI and/or TCK in response to
any EC concerns. At the same time, the Expert Group will have 30 days to
revise the Final Draft in response to any EC concerns and send it to the
PMO. 


If no responses are received by the
end of the 30 days, the original decision of the EC will stand, the PMO will
close the JSR, and the Expert Group will disband. If the JSR was a revision
to an existing Specification, the Spec Lead will resume the role of Maintenance
Lead of the current Specification (see section 4). 


If a response is received, the PMO
will circulate it to all EC members for a Final Approval Reconsideration
Ballot. At the close of balloting, all ballot comments submitted by EC members
will be circulated to the Expert Group by the PMO. If the reconsideration
ballot fails, the JSR will be closed and the Expert Group will disband. If
the JSR was a revision to an existing Specification, the Spec Lead will resume
the role of Maintenance Lead of the current Specification. 


3.4 FINAL RELEASE


Specifications that are approved
by the EC during the Final Approval Ballot (or the reconsideration ballot)
will be posted by the PMO on the JCP Web Site and an announcement made to
both Members and the public. Upon Final Release, the Expert Group will have
completed its work and disbands. 



4. MAINTENANCE


4.1 KEEP THE SPECIFICATION UP TO DATE



definition - Maintenance Lead (ML): The Expert responsible for maintaining the Specification.




The Maintenance Lead is responsible
for carrying out maintenance on the Specification and dealing with errata
by fielding requests for clarification, interpretation, and enhancements
to the Specification from both Members and the public via an e-mail address
listed in the Specification. The ML will consider all requests and will decide
how and if the Specification should be updated in response. The ML will typically
be the Spec Lead from the Expert Group that developed the Specification.
The ML is not required to do all these tasks by himself or herself. The ML
may find it very helpful to recruit members of the Expert Group that helped
to develop the Specification to assist with the Maintenance duties. 

4.1.1 THE MAINTENANCE LEAD MAKES A LONG TERM COMMITMENT 


The Maintenance Lead (and his or
her host company or organization) is expected to assume long term ownership
of the Specification, RI, and TCK with due respect of the will of the Java
Community Members with regard to evolution. This means that a Maintenance
Lead will automatically be the Spec Lead for all significant revisions to
their Specification going forward but he or she will not have the exclusive
right to decide when a significant revision will take place (see section
1.1.1). 

4.1.2 RELINQUISHING OWNERSHIP 



definition - Dormant Specification (Dormant)
: A Specification that does not have an identified Maintenance Lead. All
Specifications become Dormant at the end of their life cycle. 


definition - Transfer Ballot: The EC ballot to approve transfer of ownership of a Specification, RI, and TCK from one Member to another Member.




If the ML decides to discontinue
his or her work for whatever reason (including discontinuing maintenance
activities or declining to take on the role of Spec Lead during a significant
revision initiated by a JSR) the ML should make a reasonable effort to locate
another Member who is willing to take on the task. If the ML fails to find
a replacement, the PMO will declare the Specification to be Dormant. No further
maintenance will be carried out on it until a new ML is identified and ownership
of the Specification, RI, and TCK is transferred to the new ML's organization
(subject to a successful Transfer ballot by the EC). 

4.2 THE MAINTENANCE CYCLE


The ML will review all comments,
identify common themes, and arrange with the PMO to make a list of frequently
raised issues available from the document's Spec Page. The ML is free to
consult with the former members of the Expert Group, or any other sources,
for advice on how to revise the Specification. All change items proposed
by the ML will make their way into the Specification by either the Minor
Revision process (described in section 4.2.1) or by a JSR. 

4.2.1 MINOR REVISION PROCESS 



definition - Minor Revision: Minor changes made to a Specification by the ML.



definition - Change Log: An
area accessible from the Spec Page that lists all changes made to the Specification
after Final Release. There are three sections: PROPOSED (changes not yet
made to the Specification), ACCEPTED (changes made), and DEFERRED (change
items to be considered in a new JSR). 


definition - Maintenance Review
: A period of at least 30 days prior to finalization of a Minor Revision
when Members and the public consider and comment on the change items listed
in the PROPOSED section of the Change Log. 



The ML will arrange to have all change
items placed into the PROPOSED section of the Change Log and then send a
request to the PMO to initiate a Maintenance Review. The PMO will make a
public announcement and begin the review. 


The ML may choose to modify one or
more of the proposed changes based on comments received during review. All
comments will be available from the Spec Page. At the end of Maintenance
Review, the ML will update the Specification, document all revisions in the
ACCEPTED section of the Change Log, and delete the corresponding entries
in the PROPOSED section. All changes not incorporated into the Specification
may be either left in the PROPOSED section or moved to the DEFERRED section. 


4.2.2 THE EC MAY DEFER MINOR REVISION ITEMS 



definition - Item Exception Ballot: The EC ballot to determine whether or not to include specific change items in a Minor Revision.




During Maintenance Review an EC member
may request that specific proposed change items be deferred to the next JSR.
Any such request must be made to the PMO no later than 7 days before the
close of Maintenance Review. If requests are received, the PMO will circulate
the requests to all EC members and initiate an Item Exception Ballot during
the last 7 days of the review. At the close of Maintenance Review, the PMO
will post the ballot results to the Change Log. The ML will place all proposed
changes that were disapproved into the DEFERRED section. The ML will need
to initiate a JSR to carry out any of those changes. 

4.2.3 KEEPING THE RI AND TCK SYNCHRONIZED WITH THE SPECIFICATION 


Whenever the Specification is updated,
the ML is responsible for reviewing the current RI and TCK to determine what
revisions (if any) are needed to keep the RI and TCK synchronized with the
Specification. The maintenance changes will be considered final when the
RI and TCK are synchronized with the Specification. 

4.3 THE TCK APPEALS PROCESS


As noted in section 3.2.2, the TCK
documentation must identify and specify a First-Level TCK Appeals Process
by which challenges to the TCK will be addressed. An implementor of a Specification
can challenge a TCK test using the First-Level TCK Appeals Process. Implementors
who are not satisfied with a first level decision can appeal it to the EC. 


4.3.1 APPEALING A FIRST-LEVEL DECISION TO THE EC 



definition - Appeal Ballot: The EC ballot to override a first-level decision on a TCK test challenge.




Implementors appeal a first-level
decision to the EC by filing a written request with the PMO using the online
form available at the TCK section of the JCP Web Site. The PMO will circulate
the request to the EC, along with any information received from the ML concerning
the rationale for the first-level decision, and initiate an Appeal Ballot. 


4.3.2 UPDATE THE RI TO MATCH THE TCK AND THE SPECIFICATION 


If the Appeal Ballot is successful,
the ML will update the TCK and/or the Specification in accordance with the
EC decision and update the RI if necessary. 




APPENDIX A: EXECUTIVE COMMITTEE POLICIES AND PROCEDURES


A.1 SCOPE


The Executive Committee (EC) oversees the development and evolution of the Java technologies within the JCP.


A.2 MEMBERSHIP


The Executive Committee is composed
of 16 Java Community Process Members plus a non-voting Chair. The Chair of
the EC will be a member of the Process Management Office. The 16-voting members
will be selected from Java Community Process Members. Sun Microsystems, Inc.
will have a permanent voting seat on the EC. That Sun representative will
not be a member of the PMO. 


No Member may hold more than one
voting seat on the EC at any given time. For example, if a Member has majority-ownership
of one or more other Members, then that group of Members can have only one
seat on the EC at any given time. 

A.3 DUTIES AND RESPONSIBILITIES

	Select JSRs for development within the JCP.
	Approve draft Specifications for Public Review.
	Give final approval to completed Specifications and their associated RIs and TCKs.
	Decide appeals of first-level TCK test challenges.
	Review maintenance revisions and possibly require some to be carried out in a new JSR.
	Approve transfer of maintenance duties between Members.
	Provide guidance to the PMO.

A.4 EC SELECTION PROCESS AND LENGTH OF TERM




definition - Ratified Seat: An EC seat filled by the ratification process described in section A.4.2.



definition - Elected Seat: An EC seat filled by the election process described in section A.4.3.




Voting Members on the EC serve 3-year
terms. There are 10 Ratified Seats, 5 Elected Seats, and the permanent seat
held by Sun Microsystems, Inc. The 3-year terms are staggered so that 5 of
the 15 seats are normally up for ratification/election each year as follows: 


Ratified Seats ReplacedElected Seats ReplacedYear 132Year 232Year 341



The cycle repeats every 3 years.
Ratified or Elected Seats that are vacated prior to completion of the term
will be filled as described sections A.4.2 and A.4.3. 

A.4.1 RESIGNATION OF EC SEATS


Voting Members on the EC may resign their seats at any time during their term.



Should one voting Member on the EC
acquire a majority ownership of another voting EC member, one of those members
must resign his or her seat by the effective date of the acquisition. 


EC members who fail to remain Java Community Members forfeit their EC seat.


A.4.2 SELECTION PROCESS FOR RATIFIED SEATS


Members are selected for the 10 Ratified
Seats using a ratification ballot that is carried out starting the first
week of October of each year. The table given at the end of section A.4 determines
the number of Ratified Seats up for ratification each year of the 3-year
cycle. 


A Ratified Seat that was vacated
by resignation will be filled for the remainder of its term by a ratification
ballot that will be held no later than two months after the resignation (unless
the resignation is less than three months before the next scheduled ratification
ballot). 


The ratification ballot is carried out as follows:


	The PMO nominates Members to fill the vacant Ratified Seats with due regard for balanced community and regional representation.
	Eligible Members will vote to ratify each nominee over a 14-day voting period.
	A nominee is ratified by a simple majority of those who cast a vote.
	
If one or more of the nominees are not ratified by the vote, the PMO will
nominate additional Members as needed and hold additional ratification ballots
until the vacant seats are filled. 


All Members are eligible to vote
in a ratification ballot subject to the provision that if a Member has majority-ownership
of one or more other Members, then that group of Members will collectively
have 1 vote. 

A.4.3 SELECTION PROCESS FOR ELECTED SEATS


Members are selected for the 5 Elected
Seats using an election process that is carried out starting the third week
of October of each year. The table given at the end of section A.4 determines
the number of Elected Seats up for election each year of the 3-year cycle. 



An Elected Seat that was vacated
by resignation will be filled for the remainder of its term by an election
ballot that will be held no later than two months after the resignation (unless
the resignation is less than three months before the next yearly election). 



The election ballot is carried out as follows:


	Any Member may be nominated.
	The PMO will accept nominations from the Community for a period of 14 days.
	Eligible Members may vote for as many nominees as there are vacant Elected Seats over a 14-day voting period.
	The nominees who receive the most votes will fill the vacant Elected Seats.
	Ties will be decided by drawing lots.



All Members are eligible to vote
in an election ballot subject to the provision that if a Member has majority-ownership
of one or more other Members, then that group of Members will collectively
have 1 vote. 


A.5 EC VOTING RULES



The voting rules in this version of the JCP are as follows:


	All EC votes will be conducted electronically and the results made public.
	EC balloting periods last 7 days except where noted in this document.
	
EC Members may cast two types of votes: "yes" and "no". Alternatively, a
Member may explicitly abstain or, in the extreme and undesirable case, not
vote at all. 	Only "yes" and "no" votes count in determining the result of an EC ballot.
	
Except where noted otherwise in this document, EC ballots are approved if
(a) a majority of the votes cast are "yes" votes, and (b) a minimum of 5
"yes" votes are cast. Ballots are otherwise rejected. 	"No" votes must be accompanied by an explanation along with changes (if any) that are necessary to change the vote to "yes".
	It is highly recommended that abstentions be accompanied by comments.
	When a failed EC ballot results in the closing of a JSR, at least 1 month must pass before the JSR can be reinitiated.
	
EC ballots to approve UJSRs for new Platform Edition Specifications or UJSRs
for J2SE that propose changes to the Java language, are approved if (a) at
least a two-thirds majority of the votes cast are "yes" votes, (b) a minimum
of 5 "yes" votes are cast, and (c) Sun casts one of the "yes" votes. Ballots
are otherwise rejected. 	EC ballots to override a first-level decision on a TCK challenge
are approved if (a) at least a two-thirds majority of the votes cast are
"yes" votes, and (b) a minimum of 5 "yes" votes are cast. 	An item listed in an Item Exception Ballot will be deferred to
the next JSR if at least one-third of the EC Members cast "no" votes for
that item. A.6 MEETINGS

	Attendance at meetings is mandatory.
	In-person meetings must be scheduled at least 21 days in advance (EC Members can teleconference into in-person meetings).
	Teleconference-only meetings must be scheduled at least 7 days in advance.
	The Chair will publish the agenda at least 7 days in advance.
	Minutes will be recorded and distributed within 14 days after the meeting.
A.7 FORMATION OF THE INTERIM EXECUTIVE COMMITTEE

	Sun Microsystems will appoint interim ECs in June 2000.
	The first ECs with Ratified/Elected Seats will be formed by December 2000.
	Random lottery will determine which of the seats come up for ratification/election in Years 1, 2, and 3.


APPENDIX B: REVISING THE JCP, JSPA, AND IEPA



Revisions to the Java Community Process
(this document), the Java Specification Participation Agreement, and the
Individual Expert Participation Agreement will be carried out using the Java
Community Process with the following changes: 

	Only EC members can initiate a JSR to revise one of these documents.
	Each EC must approve the JSR.
	The Expert Group consists of both ECs with a member of the PMO as Specification Lead.
	There is no Reference Implementation or Technology Compatibility Kit to be delivered and no TCK appeals process to be defined.

 

		   
  
		 
			
	
			 
					
				 
					
				
			
			
			
			
	
  	Introduction | 
  	JSRs | 
  	What's New | 
  	Participation
  	JCP Procedures | 
  	Press & Success | 
  	Community Resources
	 
		 
			
			Site sponsored and powered by Sun MicrosystemsCopyright © 1995-2002. All Rights Reserved.
			Terms of Use. Privacy Policy.
##------------------URL-------------------------##
http://www.ics.uci.edu/~wscacchi/Software-Process/Software-Life-Cycle-Models/Why-Model-Software-Life-Cycle.htm
##-----------------TITLE------------------------##
Guideline to organize, plan, staff, budget, schedule and manage software project work over organizational time, space, and computing environments
##------------------TEXT------------------------##
Guideline to organize, plan, staff, budget, schedule and manage software project work over organizational time, space, and computing environments. 

Prescriptive outline for what documents to produce for delivery to client. 

Basis for determining what software engineering tools and methodologies will be most appropriate to support different life cycle activities. 

Framework for analyzing or estimating patterns of resource allocation and consumption during the software life cycle.

Basis for conducting empirical studies to determine what affects software productivity, cost, and overall quality.
##------------------URL-------------------------##
http://www.ics.uci.edu/~wscacchi/Software-Process/Software-Life-Cycle-Models/Process-Model-Definitions.htm
##-----------------TITLE------------------------##
Software process models often represent a networked sequence of activities, objects, transformations, and events that embody strategies for accomplishing software evolution
##------------------TEXT------------------------##
Software process models often represent a networked sequence of activities, objects, transformations, and events that embody strategies for accomplishing software evolution. 

Such models can be used to develop more precise and formalized descriptions of software life cycle activities. 

Their power emerges from their utilization of a sufficiently rich notation, syntax, or semantics, often suitable for computational processing.
##------------------URL-------------------------##
http://www.ics.uci.edu/~wscacchi/Software-Process/Software-Life-Cycle-Models/Software-Life-Cycle-Model-Definitions.htm
##-----------------TITLE------------------------##
A software life cycle model is either a descriptive or prescriptive characterization of how software is or should be developed
##------------------TEXT------------------------##
A software life cycle model is either a descriptive or prescriptive characterization of how software is or should be developed. 

A descriptive model describes the history of how a particular software system was developed. 

A prescriptive model prescribes how a new software system should be developed. 

A proscriptive model prescribes how a new software system might be developed.
##------------------URL-------------------------##
http://www.ics.uci.edu/~goodrich/teach/ics23/LabManual/SubmittingProjects.html
##-----------------TITLE------------------------##
ICS 23 / CSE 23 - How to Submit Projects
##------------------TEXT------------------------##
ICS 23 / CSE 23 - How to Submit Projects







The procedure

This quarter, we're using a system we built called Checkmate, which allows you to submit your projects via the Web.  In order to use it, you first have to activate your UCInetID if you haven't already.  UCI provides all its students with basic computing, including electronic mail and other Internet services, via a "UCInetID" computer account.  Instructions for activating this account are available from several sources, but perhaps the easiest way is to activate your account on-line at activate.uci.edu.  All ICS 23 students need this account, both for using Checkmate, and also so that the course staff can email you when necessary.  If you have not activated your UCInetID, do so immediately.

To use Checkmate once you've activated your UCInetID, all you need to do is go to checkmate.ics.uci.edu, log in using your UCInetID, and follow the instructions there.  (If you get a message about security certificates, just click "Continue.")

If you have any reason to believe that the system isn't working as
you believe it should, read the instructions carefully, try it a
second time, and if you're still having difficulty, send Alex Thornton an email describing the problem as precisely as possible.  If you keep us informed about problems in a timely way, we will make sure that any problems with Checkmate won't affect your grade.







Adapted from the ICS 22 Summer 2002 version of this document by Alex Thornton to reflect the exclusive use of Checkmate, Fall 2002.
##------------------URL-------------------------##
http://www.ics.uci.edu/~goodrich/teach/ics23/LabManual/final.html
##-----------------TITLE------------------------##
ICS 23/ CSE 23 - Final Exam Study Questions
##------------------TEXT------------------------##
ICS 23/ CSE 23 - Final Exam Study Questions





Since the final exam is cummulative,
doing the assigned readings from the book and reviewing the study
questions for Midterm 1 and Miderm 2 are a good start to studying for
the final.
Moreover, solving the following questions will provide additional preparation
for the final exam.

 Problem R-11.1 from Goodrich-Tamassia.  Problem R-11.7 from Goodrich-Tamassia.  Problem R-11.16 from Goodrich-Tamassia.  Problem R-11.18 from Goodrich-Tamassia.  Problem C-11.2 from Goodrich-Tamassia.  Problem C-11.5 from Goodrich-Tamassia.  Problem C-11.12 from Goodrich-Tamassia.  Problem C-11.15 from Goodrich-Tamassia.  Problem C-11.16 from Goodrich-Tamassia.  Problem C-11.17 from Goodrich-Tamassia.  Problem R-13.1 from Goodrich-Tamassia.  Problem R-13.2 from Goodrich-Tamassia.  Problem R-13.8 from Goodrich-Tamassia.  Problem R-13.10 from Goodrich-Tamassia.  Problem R-13.14 from Goodrich-Tamassia.  Problem R-13.28 from Goodrich-Tamassia.  Problem R-13.29 from Goodrich-Tamassia.  Problem C-13.13 from Goodrich-Tamassia.  Problem C-13.16 from Goodrich-Tamassia.  Problem R-14.9 from Goodrich-Tamassia. 


Additionally, for an extra challenge, you can consider
the following problems:
 Problem C-13.11 from Goodrich-Tamassia.  Problem C-13.12 from Goodrich-Tamassia.  Problem C-13.20 from Goodrich-Tamassia.
##------------------URL-------------------------##
http://www.ics.uci.edu/~goodrich/teach/ics23/LabManual/SettingUpJava.html
##-----------------TITLE------------------------##
ICS 23 / CSE 23 - Setting Up Java At Home
##------------------TEXT------------------------##
ICS 23 / CSE 23 - Setting Up Java At Home







A word of warning

One of the advantages of programming in Java is that it's possible to set up your own computer as a Java development environment easily and cheaply.  On the other hand, working in the lab has some genuine benefits, particularly for those of you who are fairly new to programming.  In the lab, you'll find that help is more readily available when you get stuck, that your machine setup will generally be stable and designed well for the task of working on your assignments, and that you're free of the distractions of your home.

Nevertheless, I'm aware that many of you, either out of want or need, will choose to do some percentage of your work at home.  What follows is enough information to turn your Windows-based machine into a Java development environment at little or no cost.







Getting started

Before you get started, be aware that this document only describes how to set up Java on a Windows machine.  If you're using a Macintosh or running Linux, I'm sorry to say that you're on your own -- though you may find that many of the concepts here will translate fairly well to your system.

First and foremost, you need a Java compiler and Java virtual machine.  There are several packages that include these tools, but a great option is to download the Java 2 Standard Edition (J2SE) SDK from java.sun.com.  J2SE is absolutely free!  
Remember, you will need a version that is at least as recent as 
1.5 (which is also called 5.0).  J2SE includes a Java compiler (javac), a Java virtual machine (java), and all of the standard Java library components -- in other words, everything you need to write Java programs in a wide variety of problem domains, and more than enough firepower for the assignments we'll be giving you.  Make sure that you download the SDK, not the JRE.  The JRE is the Java Runtime Environment, which includes the necessary code to allow you to run Java programs, but not to write and compile them!

Secondly, you'll need a text editor, which you'll use to write and edit your program code.  There are many inexpensive and/or free options available.  In the lab, we provide TextPad, which you can download from www.textpad.com.  TextPad requires a modest registration fee, which you should pay if you plan to use it on a continuous basis.  You may be able to find free text editors, particularly those written in Java, at shareware/freeware download sites such as www.download.com.







Installation: the easy part

Presumably, your text editor will include an installation program to set it up and make it completely ready for your use.

J2SE also includes an installation program, which places all of the files into the appropriate places and sets up some desktop shortcuts for you.  However, after running the installation program, you still won't be able to execute javac or java, without making a couple of modifications "under the hood" of your system.







The (not all that) hard part: PATH and CLASSPATH

You can execute programs from a Command Prompt (or, as Windows 95/98 call it, an "MS-DOS prompt") by simply typing their names, such as javac or java.  But there's a catch: Windows has to know where it can find these programs.  This is the job of the PATH environment variable.  PATH is a list of folders, separated by semicolons, in which Windows will look for a program whenever you try to execute one.

Similarly, whenever the Java compiler or Java virtual machine need to be able to use a Java class (such as when you import a class from the Java library), the compiler or virtual machine needs to be able to know where to find it.  This is the job of the CLASSPATH environment variable.  CLASSPATH is a list of folders, separated by semicolons, in which the Java compiler or virtual machine will look for a Java class whenever it's trying to find one.

So, to make J2SE work, you have to modify the PATH and CLASSPATH environment variables on your system, so that Windows will be able to find javac and java, and so that javac and java will be able to find all of the necessary Java classes.

How you modify these variables depends on which version of Windows
you're using.  In either case, I'll assume that you've installed J2SE
into the default directory during installation, which, for the sake
of this document, let us assume is
C:\jdk1.5.0_01.  If you installed it somewhere else, you'll
need to use your installation directory instead of the one above.

On Windows 95, 98, and probably ME.  (I say "probably" because I don't have a version of ME handy to test this with.)  On these versions of Windows, you can set the PATH and CLASSPATH by modifying the file C:\AUTOEXEC.BAT.  Add the following two lines to the end of this file:


set PATH=%PATH%;C:\jdk1.5.0_01\bin
set CLASSPATH=%CLASSPATH%;.;C:\jdk1.5.0_01\lib


You'll probably need to restart your system for these changes to take effect.

On Windows 2000 and XP.  Right-click the My Computer icon on your desktop and select Properties.  Select the Advanced tab.  Click the Environment Variables... button.  Under "System variables," find the PATH variable and add this to the end of it:


;C:\jdk1.5.0_01\bin


Then find the CLASSPATH variable.  If it doesn't exist (and it probably won't, if you've never used your system to develop Java code), click the New... button, specifying CLASSPATH as its name, and the following value:


.;C:\jdk1.5.0_01\lib


You may need to restart your system, or at least start up a new Command Prompt window, in order for these changes to take effect.







That's it!

At this point, you should be good to go.  Happy coding!







A few minor changes by Alex Thornton, Fall 2002.Originally written by Alex Thornton for ICS 21 and ICS 22, Summer 2002.
##------------------URL-------------------------##
http://www.ics.uci.edu/~goodrich/teach/ics23/LabManual/midterm1.html
##-----------------TITLE------------------------##
ICS 23/ CSE 23 - Midterm 1 Study Questions
##------------------TEXT------------------------##
ICS 23/ CSE 23 - Midterm 1 Study Questions





Doing the assigned readings from Chapters 1-7 and
solving the following questions will provide a good preparation
for the first midterm exam.

 Problem R-4.12 from Goodrich-Tamassia.  Problem R-4.17 from Goodrich-Tamassia.  Problem R-4.22 from Goodrich-Tamassia.  Problem R-4.23 from Goodrich-Tamassia.  Problem R-4.28 from Goodrich-Tamassia.  Problem R-5.1 from Goodrich-Tamassia.  Problem R-5.7 from Goodrich-Tamassia.  Problem C-5.5 from Goodrich-Tamassia.  Problem C-5.8 from Goodrich-Tamassia.  Problem C-5.9 from Goodrich-Tamassia.  Problem R-6.5 from Goodrich-Tamassia.  Problem R-6.9 from Goodrich-Tamassia.  Problem C-6.14 from Goodrich-Tamassia.  Problem R-7.4 from Goodrich-Tamassia.  Problem R-7.5 from Goodrich-Tamassia.  Problem R-7.11 from Goodrich-Tamassia.  Problem R-7.14 from Goodrich-Tamassia.  Problem C-7.2 from Goodrich-Tamassia.  Problem C-7.4 from Goodrich-Tamassia.  Problem C-7.21 from Goodrich-Tamassia. 

Additionally, for an extra challenge, you can think about the
following problems:

 Problem C-5.8 from Goodrich-Tamassia.  Problem C-5.12 from Goodrich-Tamassia. (Just for fun--this is a
Microsoft interview question.) Problem C-6.19 from Goodrich-Tamassia.  Problem C-6.20 from Goodrich-Tamassia.  Problem C-7.13 from Goodrich-Tamassia.
##------------------URL-------------------------##
http://www.ics.uci.edu/~goodrich/teach/ics23/LabManual/midterm2.html
##-----------------TITLE------------------------##
ICS 23/ CSE 23 - Midterm 2 Study Questions
##------------------TEXT------------------------##
ICS 23/ CSE 23 - Midterm 2 Study Questions





Doing the assigned readings from Chapters 8-11 and
solving the following questions will provide a good preparation
for the second midterm exam.

 Problem R-8.5 from Goodrich-Tamassia.  Problem R-8.6 from Goodrich-Tamassia.  Problem R-8.8 from Goodrich-Tamassia.  Problem R-8.10 from Goodrich-Tamassia.  Problem R-8.18 from Goodrich-Tamassia.  Problem R-8.19 from Goodrich-Tamassia.  Problem C-8.17 from Goodrich-Tamassia.  Problem R-9.5 from Goodrich-Tamassia.  Problem R-9.11 from Goodrich-Tamassia.  Problem R-9.15 from Goodrich-Tamassia.  Problem C-9.10 from Goodrich-Tamassia.  Problem C-9.16 from Goodrich-Tamassia.  Problem R-10.9 from Goodrich-Tamassia.  Problem R-10.10 from Goodrich-Tamassia.  Problem C-10.3 from Goodrich-Tamassia.  Problem R-11.10 from Goodrich-Tamassia.  Problem R-11.11 from Goodrich-Tamassia.  Problem C-11.1 from Goodrich-Tamassia.  Problem C-11.2 from Goodrich-Tamassia.  Problem C-11.4 from Goodrich-Tamassia.
##------------------URL-------------------------##
http://www.ics.uci.edu/~goodrich/teach/ics23/LabManual/CodingStandards.html
##-----------------TITLE------------------------##
ICS 23 / CSE 23 - Style and Documentation Standards
##------------------TEXT------------------------##
ICS 23 / CSE 23 - Style and Documentation Standards







Using a good coding style is important, for many reasons.  Professional programmers need not only to be able to read and understand their own code, months or even years after originally writing it, but also to be able to read and understand code written by others, oftentimes in the absence of the original programmer.  Programmers who write code in a clear style with adequate documentation benefit not only themselves, but all other member of their team, as well as future members of the team.  There is nothing more frustrating as a programmer than inheriting responsibility for someone else's code, only to find that the code is designed poorly, written cryptically, and documented shabbily (or not at all!).  Yet much of the code that I've inherited during my career has exhibited one or more of these shortcomings!

The Java code that you write for this course should follow the style and documentation conventions described in the list below.

Matching opening and closing curly braces should be aligned in the same column.  This means that the opening curly brace which follows an if statement should appear directly below the letter i in if, and not on the same line as the conditional expression.All statements within curly braces should be indented four spaces (or one TAB character) relative to the brace.  A statement should not appear on the same line as the opening curly brace.The names that you use for variables, parameters, methods, and classes should be meaningful.  Exception: Counters or other loop control variables may have simple names such as i or p.All constants in your program should be defined and named meaningfully.  For example, if you were writing an array implementation of a stack with a hard-coded maximum size of 256 elements, define a static final field such as MAXIMUM_ELEMENTS, and use that field in your code, rather than the literal integer 256.Naming conventions for classes, members, and constants:
    Class names should be capitalized.  Class names with multiple words should have each subsequent word capitalized, with no underscore separating the words.  (e.g. Song, ReggaeSong)Names of class members (methods and fields) should begin with a lowercase letter.  Subsequent words should be capitalized, with no underscore separating the words.  (e.g. playSong(), songTitle)Named constants should be named using all capital letters, with underscores separating the words.  (e.g. EULER, MAXIMUM_ELEMENTS)
  Every member should be declared using an access-control modifier (e.g. public, private, or protected).Whitespace should appear between each method argument and around each binary operator.  For example, createFile("alex.out", WRITE) instead of createFile("alex.out",WRITE), or a + b instead of a+b.One single line of code should not be inordinately long.  What constitutes "inordinately long" is largely a matter of taste, but a good rule of thumb is not to write lines of code that are longer than 80 characters.  Don't be afraid to break up long lines into multiple lines.  For example, if you have a method call with fifteen parameters, put some on one line, some on the next, etc., such that each line is no longer than 80 characters.Every class, method, and field should have a comment which briefly explains its purpose.  In the case of methods, some explanation of the meaning of the method's parameters is expected.Within the body of your methods, code whose purpose is not readily obvious should be commented.  It is not necessary to include a comment on every line.  It is appropriate, instead, to have one comment which explains the purpose of a chunk of several lines of code.

A good example of many of these coding practices can be found by looking
at the various starting points provided for each project.  Some of these files do not follow all of the rules above, particularly the rule regarding a comment on every method (since we expect you to write these comments yourself, in most cases), but they are still a useful way to see these rules in action.







Tweaked for the "new" ICS 22 by Alex Thornton, Winter 2002.Modified to fit CHEM Consulting model for ICS 22 by Alex Thornton, Winter 2001.Adapted from Ray Klefstad's coding standards by Alex Thornton for ICS 23, Summer 2000.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/class/267/datasets/
##-----------------TITLE------------------------##
Datasets
##------------------TEXT------------------------##
Datasets 

These files (other than the Calgary corpus) are from Sayood's book.

 Calgary Corpus - zipped
     or individual files
 Special text files
 Images
 Audio
 Speech


A raw image viewer.
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/class/267/rfc2301/contents.html
##-----------------TITLE------------------------##
Zvon - RFC 2301 - Contents
##------------------TEXT------------------------##
ZVON > RFC Repository > RFC 2301
       Frontpage  /  Contents 
      RFC index | RFC searchDownload as zip/tar.gz
      
               
                RFC2301  Repository
            
               Full Contents
            0. Frontpage1. Introduction1.1. Scope1.2. Approach1.3. Overview of this draft2. TIFF and Fax2.1. TIFF Overview2.2. TIFF Fields for All Fax Applications3. Minimal Black-and-White Fax Mode3.1. Overview3.2. Required TIFF Fields3.3. Recommended TIFF Fields3.4. End of Line (EOL) and Return to Control (RTC)3.5. File Structure3.6. Minimal Black-and-white Mode Summary4. Extended Black-and-White fax mode4.1. TIFF-F Overview4.2. Required TIFF Fields4.3. Recommended TIFF fields4.4. Technical Implementation Issues4.5. Implementation Warnings4.6. Example Use of TIFF-F4.7. Extended Black-and-white Fax Mode Summary5. Lossless JBIG Black-and-White Fax Mode5.1. Overview5.2. Required TIFF Fields5.3. Recommended TIFF Fields5.4. Lossless JBIG Black-and-white Fax Mode Summary6. Base Color Fax Mode6.1. Overview6.2. Required TIFF Fields6.3. Recommended TIFF Fields6.4. Base Color Fax Mode Summary7. Lossless Color Mode7.1. Overview7.2. Required TIFF Fields7.3. Recommended TIFF Fields7.4. Lossless Color Fax Mode Summary8. Mixed Raster Content Mode8.1. Overview8.2. Required TIFF Fields8.3. Recommended TIFF Fields8.4. Rules and Requirements for Images8.5. MRC Fax Mode Summary9. MIME content-type image/tiff9.1. Refinement of MIME content-type image/tiff for Facsimile
                     Applications10. Security Considerations11. References12. Authors' Addresses13. Annex A:  Summary of TIFF Fields for Internet Fax13.1. Table A.1  TIFF Baseline Fields13.2. Table A.2  TIFF Extension Fields13.3. Table A.3   New Fields14. Annex B.  IANA Registration for image/tiff Application Parameter
                  Values used for facsimile15. Full Copyright Statement
##------------------URL-------------------------##
http://www.ics.uci.edu/~dan/class/267/rfc2301/frontpage.html
##-----------------TITLE------------------------##
Zvon - RFC 2301 - frontpage
##------------------TEXT------------------------##
ZVON > RFC Repository > RFC 2301
       Frontpage  /  Contents 
      Prev | Next | RFC index | RFC search
      RFC - 2301This local copy has been generated on the 14 January 2003. The original version may contain updated data and dependencies. 
      File Format for Internet Fax
      Original:ftp://ftp.isi.edu/in-notes/rfc2301.txtAuthors:L. McIntyre [Xerox Corporation], S. Zilles [Adobe Systems, Inc.], R. Buckley [Xerox Corporation], D. Venable [Xerox Corporation], G. Parsons [Northern Telecom], J. Rafferty [Human Communications]
            Date:March 1998Category:Proposed StandardReferred by: 19 RFCRefers to: 3 RFC
      
      Status
      
             This document specifies an Internet standards track protocol for the
            Internet community, and requests discussion and suggestions for
            improvements.  Please refer to the current edition of the "Internet
            Official Protocol Standards" (STD 1) for the standardization state
            and status of this protocol.  Distribution of this memo is unlimited.
                 
      
      Copyright Notice
      
         Copyright (C) The Internet Society (1998).  All Rights Reserved.
                 
      
      Abstract
      
              This document describes the TIFF (Tag Image File Format)
            representation of image data specified by the ITU-T Recommendations
            for black-and-white and color facsimile. This file format
            specification is commonly known as TIFF-FX. It formally defines
            minimal, extended and lossless JBIG modes (Profiles S, F, J) for
            black-and-white fax, and base JPEG, lossless JBIG and Mixed Raster
            Content modes (Profiles C, L, M) for color and grayscale fax. These
            modes or profiles correspond to the content of the applicable ITU-T
            Recommendations. Files formatted according to this specification use
            the image/tiff MIME Content Type.
         
                 
      
      
      ZVON > RFC Repository > RFC 2301
       Frontpage  /  Contents 
      Prev | Next | RFC index | RFC searchDownload as zip/tar.gz
##------------------URL-------------------------##
http://www.ics.uci.edu/~cplee/classes.html
##-----------------TITLE------------------------##
Charlotte P. Lee, Classes
##------------------TEXT------------------------##
CPL home > Classes





     



      

      
      
      

		

 


Papers

 

Projects

 







Classes

 



      
Affiliations

 





    Biography

 





    About Me
    
    




	     
     
	Syllabus for Informatics 161: Social 
	Analysis of Computerization Spring 2008
	This course will introduce you to the social 
	analysis of computerization. You will learn how to think about 
	computerization as a social phenomenon. This course will familiarize you 
	with various social analytical approaches to the study of computerization. 
	You will become acquainted with social analysis at various levels: from 
	small groups to society.
	Meeting Information
	Location: Engineering Tower 204
	Lecture Time: Tuesday and Thursday, 12:30pm - 1:50pm
	There will be no discussion sections.
	Instructor Information
	Charlotte P. Lee
	cplee@ics.uci.edu
	Office: Donald Bren Hall 5074
	Office Hours: Thursday 2:30pm to 4:30pm
	
	Satyajit Das, Reader
	satyajid@uci.edu
	Office Hours: Thursday 10:30am to 12noon, DBH 5099
	Yong Ming Kow, Reader
	mail@kowym.com
	Office Hours: Tuesday 2pm to 3:30pm, DBH 5099
	 
	Schedule
	
			Date
			Lecture Topic
			Reading(s) Due
			Deliverables: Assignment Due 
			April 1
			
			Course Introduction 
			None
			 
			April 3
			Utopian and Dystopian Visions
			
			Kling, What is Social Informatics and Why Does It Matter. Sections 1, 4,  5.3.1, 5.4.1, and 6.0
			 
			April 8
			 
			Video: Hacking Democracy
			
			Howcraft and Fitzgerald,
			
			From Utopia to Dystopia 
			
			April 10
			Computer Supported Cooperative Work (CSCW)
			
			Ackerman,
			
			Challenge of CSCW
			Assignment 1 (Now Due Monday April 14 @5pm) 
			April 15
			 
			 Computer Supported Cooperative WorkGrudin, J.
			
			Why Groupware Applications Fail
			
			April 17
			 Organizations as CultureGuest Speaker:Marcel Blonk Orlikowski, Learning from Notes
			
			April 22
			 CyberinfrastructureLee et al., Human Infrastructure of Cyberinfrastructure
			
			 
			April 24
			 
			Online or Networked CommunitiesGuest Speaker: Steve Abrams Malhotra et al.,
			
			Evolution of a Virtual Community
			
			  Assignment 2
			April 29
			 
			Displacement and Disasters
			Guest Lecture: Irina ShklovskiNone
			
			May 1
			 Instant Messaging and Blogging
			Nardi et al.
			
			Why we blog.
			Grinter and Palen,
			
			Instant Messaging in Teen Life
			
			 
			 
			May 6
			MIDTERM EXAMLecture Slides - Powerpoint (optional reading):Slides 1Slides 2Slides 3Slides 4Slides 5
			 
			May 8
			Computer Games and GamingGuest Speaker: Silvia LindtnerDucheneaut et al.
			
			Alone together?
			Huff,
			
			Gender, Software Design, and Occupational Equity
			
			 May 13
			Method/Interviewing and Ethnography
			None.
			
			
			May 15
			Understanding Research in Social Analysis of Computerization
			Choosing Qualitative Research
			 Assignment 3
			May 20
			 Participatory DesignGuest Speaker: Matt Bietz
			
			Bannon, From Human Factors to Human Actors
			Kensing and Blomberg,
			
			Participatory Design 
			
			
			May 22
			 
			 Quiz on Readingsand meet in Assignment 4 GroupsVoida et. al, Personal TechnologiesElectronic Frontier Foundation, RIAA vs. The People
			 
			May 27
			 Ubiquitous Computing and Privacy
			Palen and Dourish, Unpacking Privacy for a Networked World
			 
			May 29
			
			Team Presentations
			None
			Assignment 4
			June 3
			Team Presentations
			
			None
			Assignment 4June 5DesignClosing RemarksJohnson and Miller,
			
			Dialogue on Responsiblity, Moral Agency, and IT 
			Systems
			Hughes et al. 
			
			From Ethnographic Record to System Design.Final Papers Now Due on June 6 @5pm.
	
	
 
	
	Assignments
	Assignment 1: Analyzing Images (2 to 3 pages)
	The purpose of this assignment is to get you to 
	look closely at some ways in which technology is portrayed.
	Find two images of computer/information 
	technology.  One should be utopian, one dystopian.  These images can be from 
	advertising, magazines, newspapers, articles, billboards, TV, movies, or 
	even music.  For each of these images:
	1) Indicate EXACTLY where you found it (in 
	other words, which source, the date it was published, the name of the TV 
	show or movie, channel, date, you get the idea).
	2) Describe the technology presented and 
	indicate if it is current, future, science fictional.
	3) How is the technology presented?  What kind 
	of people are affected by it and are presented as using it?  Who is the 
	target audience (children, computer professionals, individuals, families, 
	etc?).  What is the technology supposed to do to or for them?
	4) What is the "real message" being presented?  
	Is it to get you to buy something, believe something, protest something, 
	fear something?
	5) How did you react to this image and did you 
	believe what is being presented?  Why or why not?
	Your write-up should NOT be in the Question and 
	Answer format presented here, but should be written as a narrative.  Use 
	these questions as a guide.Email your assignment by Monday, April 14, 5pm to: 161spring2008@gmail.com
	Assignment 2: Organizational Culture (2 pages)The purpose of this assignment is to get give you experience in selecting and analyzing academic research articles.Using Google Scholar, find an academic paper on organizational culture that you personally finding interesting or provocative.1) Summarize the article, emphasizing the main points.2)
What is your reaction to the message of the article? Examples of things
to write about include: How reading this article would change your
behavior as an employee or manager; Three reasons why you don't believe
the article and why; Three questions that this articles raises and how
you might go about answering them. 3)
Pick two organizations (student, professional, academic, hobby) to
which you currently belong or to which you previously belonged and
compare their organizational cultures in terms of: a) how are new
members recruited, b) how do new members learn how to participate and
what the rules are, c) how is the organization managed, d) what
behaviors are acceptable or unacceptable, e) how are members corrected
if they engage in unacceptable behavior, f) who sits with whom during
breaks and does organizational status (e.g. rank or function) play a
role in the groupings?Your write-up should NOT be in the Question and 
	Answer format presented here, but should be written as a narrative.  Use 
	these questions as a guide.Email your assignment by 5pm to: 161spring2008@gmail.com
	Assignment 3: Prospectus for Final Paper (2 to 3 pages)
	The purpose of this assignment is to get you 
	started on your final paper.
	Write a 2 to 3 page prospectus that provides 
	answers to the following:
	Choose a contemporary topic on the social aspects of computerization that interests youFind at least 3 academic journal articles or 
		books on your chosen topic.Based
on what you have read, write a thesis statement and an introductory
paragraph stating what your topic is and why it is of interest to
society.Summarize each article or book in your own words and describe how the articles relate to your thesis statement.Conclude with a discussion of 3 questions that you are interested in answering more fully in your final paper after reading 
	these articles.At the end of your prospectus provide full citations. Choose a citation format in which to list all 
	your papers. Common citation formats include MLA or APA or Chicago Style.Email your assignment by 5pm to: 161spring2008@gmail.comAssignment 4: Dramatize and Inform Forming
teams of 4 to 5 students, choose one topic on the social aspects of
computerization about which to create a skit. Skits are usually comedic
but you may also go with tragedy or drama. In order to save yourself
time, you should choose a topic that you have already begun
researching, such as for your final paper.Create an 8 to 10
minute skit or dramatization illustrating different points of view
about a topic. Examples of what you can do include courtroom drama,
thriller, sitcom. The most important goal for your skit is to educate
your audience about the complexities of your topic. Your skit should
also be entertaining enough to keep your classmates awake. Every member
of the team must have a speaking part.After each class where
skits are performed, the class will vote as to which team provided the
most informative skit and all members of that team will receive 2 pts
extra credit on top of regular credit for completing the assignment.
	Final Paper
	You will write a final paper in this class. The 
	topic is open for either paper, but they should cover issues which clearly 
	relate to the readings or lectures in the course. You should have already chosen your topic when you did Assignment 3. You
are expected to relate your papers to the course readings and to
include a reference list. A good tactic would be to compare and
contrast the arguments or themes found in your readings. What is
similar and what is different? Can you explain why there are
differences? Conclude with a paragraph stating what you think is the
future of your topic based on what you have read. 
	Excellent papers will cite at least 4 sources.
	The paper will be at least 2600 words.Email your assignment byJune 6 at 5pm to: 161spring2008@gmail.com
	Grading
	Class Participation: 5%Assignment 1: 10%
	Assignment 2: 10%
	Assignment 3: 10%Assignment 4: 10%Quiz: 10%
	Midterm Exam: 20%
	Final Paper: 25%
	Late assignments will be downgraded 1/3 of a 
	letter grade per day.
	Grades that fall on or near the border (e.g. 
	A-/B+) will be decided at the instructor's discretion.
	 
	Bibliography
	Ackerman, M. (2000). The intellectual 
	challenge of CSCW: The gap between social requirements and technical 
	feasibility. Human-Computer Interaction, 15(2/3), 179. 
	
	[PDF]
	Carroll, J. M. & Rosson, M. B. (2003). A 
	trajectory for community networks. The Information Society, 19(5), 381.
	
	
	[PDF]
	Dourish, P. (2004). Where the action is: 
	The foundations of embodied interaction 
	
	[PDF]
	Dourish, P. In press. collective 
	information practice: Exploring privacy and security as social and cultural 
	phenomena Springer Berlin / Heidelberg. 
	
	[PDF]
	Ducheneaut, N., Yee, N., Nickell, E., & Moore, 
	R. J. (2006). "Alone Together?": Exploring the Social Dynamics of 
	Massively Multiplayer Online Games. Montreal, Quebec, Canada: ACM Press.
	
	
	[PDF]
	Electronic Frontier 
	Foundation. 
	
	RIAA vs. the people: Two years later.
	
	Grinter, R. E., & Palen, L. (2002). Instant 
	messaging in teen life. CSCW '02: Proceedings of the 2002 ACM Conference on 
	Computer Supported Cooperative Work, New Orleans, Louisiana, USA. 21-30.
	
	
	[PDF]
	Grudin, J. (1989). Why groupware applications 
	fail: Problems in design and evaluation. Information Technology People, 4(3), 
	245. 
	
	[PDF]
	Grudin, J., & Palen, L. Why groupware 
	succeeds: Discretion or mandate? ACM Conf. Computer-Supported Cooperative 
	Work ECSCW'95, Stockholm, Sweden. 
	
	[PDF]
	Howcroft, D., & Fitzgerald, B. "from Utopia 
	to Dystopia: The Twin Faces of the Internet" 
	
	[PDF]
	Huff, C. (2002). Gender, software design, and 
	occupational equity. SIGCSE Bulletin, 34(2), 112. 
	
	[PDF]
	Hughes, J., Randall, D., & Shapiro, D. (1993). 
	From ethnographic record to system design: Some experiences from the field. 
	Computer Supported Cooperative Work, 1(3), 123. 
	
	[PDF]
	Johnson, D. G., & Miller, K. W. (2006). A 
	dialogue on responsibility, moral agency, and IT systems. SAC '06: 
	Proceedings of the 2006 ACM Symposium on Applied Computing, Dijon, 
	France. 272-276. 
	
	[PDF]
	Kensing, F., & Bloomberg, J. (1998). 
	Participatory design: Issues and concerns. Computer Supported Cooperative 
	Work, 7(3/4), 167. 
	
	[PDF]
	Kling, R. (1999).
	
	What is social informatics and why does it matter. 
	D-Lib Magazine, 5(1), 1.
	Lievrouw. (2003). Information and equity. 
	Annual Review of Information Science and Technology, 37(1), 499. 
	
	[PDF]
	Mackay, & et al. (2000). Reconfiguring the 
	user: Using rapid application development. Social Studies of Science, 30(5), 
	737. 
	
	[PDF]
	Malhotra, A., Gosain, S., & Hars, A. (1997). 
	Evolution of a virtual community: Understanding design issues through a 
	longitudinal study. ICIS '97: Proceedings of the Eighteenth International 
	Conference on Information Systems, Atlanta, Georgia, United States. 
	59-74. 
	
	[PDF]
	Nardi, B. A., Schiano, D. J., Gumbrecht, 
	Michelle, Swartz, & Luke. (2004). Why we blog. Communications of the ACM, 
	47(12), 41. 
	[PDF]
	
	Resnick, P., Bikson, T., Mynatt, E., Puttnam, 
	R., Sproull, L., & Wellman, B. (2000). Beyond bowling together: 
	SocioTechnical capital. CSCW '00: Proceedings of the 2000 ACM Conference 
	on Computer Supported Cooperative Work, Philadelphia, Pennsylvania, 
	United States. 363. 
	
	[PDF]
	Voida, A., Grinter, R. E., Ducheneaut, N., 
	Edwards, W. K., & Newman, M. W. (2005). Listening in: Practices surrounding 
	iTunes music sharing. CHI '05: Proceedings of the SIGCHI Conference on 
	Human Factors in Computing Systems, Portland, Oregon, USA. 191-200.
	
	
	[PDF]Optional Readings
	Agre, P. E. (1997). Toward a critical 
	technical practice: Lessons learned in trying to reform AI. In G. Bowker, L. 
	Gasser, L. Star & B. Turner (Eds.), Bridging the great divide: Social 
	science, technical systems, and cooperative work ()Erlbaum.
	Asaro, P. M. (2000). Transforming society by 
	transforming technology: The science and politics of participatory design. 
	Accounting, Management, and Information Technologies, 10(4), 257.
	Button, G., & Dourish, P. (1996). 
	Technomethodology: Paradoxes and possibilities. CHI '96: Proceedings of 
	the SIGCHI Conference on Human Factors in Computing Systems, Vancouver, 
	British Columbia, Canada. 19-26. from 
	
	http://doi.acm.org/10.1145/238386.238394
	Fisher, D. R., & Wright, L. M. (2001). On 
	utopias and dystopias: Toward an understanding of the discourse surrounding 
	the internet. Journal of Computer-Mediated Communication, 6(2)
	Mackay, H., & Gillespie, G. 
	Extending the social shaping of technology approach: Ideology 
	and appropriationWellman, B., & Hogan, B. (2004). The internet 
	in everyday life. In W. S. Bainbridge (Ed.), Berkshire encyclopedia of 
	human-computer interaction (pp. 389-389-397). Great Barrington, MA: 
	Berkshire Publishing.
	
	
	 
	Policies
	
	The instructor reserves the right to change the syllabus at any time.
	
	Add/drop: The last day to drop this course is the end of the second 
	week of classes.  
	
	Respect: This class involves significant in-class discussion of 
	topics on which you and your classmates may have differences in opinion. 
	Please be respectful of others at all times.
	
	Academic honesty: Please familiarize yourself with the latest UCI 
	academic honesty policy:
	
	http://www.editor.uci.edu/catalogue/appx/appx.2.htm. 
	The consequences of academic dishonesty are not worth the risks.
	
	
	Technology in class: Please turn off all cell phones/pagers/etc. 
	before the beginning of each class. 
	
	Correspondence: We will send course announcements by email to the 
	official course mailing list, so you should check your email regularly. Note 
	that this mailing list goes to the email address that the registrar has for 
	you (your UCInet ID). If you prefer to read your Email on another account, 
	you should set your UCInet account to forward your Email to your preferred 
	account (you can do this on the web at
	
	http://phwww.cwis.uci.edu/cgi-bin/phupdate).
	
	Assignments: All written assignments should use standard formatting – 
	Times style font size 12 or Arial/Tahoma style font size 10, 8.5x11in paper, 
	1" margins, double spaced. Paper copies of each assignment should be turned 
	in at the end of class on the day listed on the course outline below.
	
	back to cpl home
##------------------URL-------------------------##
http://www.ics.uci.edu/~cplee/projects.html
##-----------------TITLE------------------------##
Charlotte P. Lee - Projects
##------------------TEXT------------------------##
CPL home > Projects





     

 

 



      


Papers

      

 



      


Projects

 
      
      
      	
      
      







Classes

 



      
Affiliations

 





    Biography

 





    About Me
    
    

    






	     
    

	
			Collaboration in the Development of 
			Cyberinfrastructure
			Keywords: ethnographic 
			research, collaborative design of information systems, 
			cyberinfrastructure, innovation, CSCW
			 
			
			
			NSF Award IIS-0712994 “Collaboration in the Development of 
			Cyberinfrastructure”, 9/2007-9/2010.
			 
			 
			 
			 
			Recent years have seen the rise of new 
			forms of large-scale distributed scientific enterprises supported 
			primarily through advanced technological infrastructures such as 
			supercomputers and high speed networks. We refer to these as 
			cyberinfrastructure. Cyberinfrastructure is transforming and 
			accelerating scientific and engineering practice.
			Although one of the primary aims of 
			cyberinfrastructure is to transform practice, relatively little 
			research has focused on systematically studying the actual practices 
			of cyberinfrastructure development and use or on studying the 
			transformations that cyberinfrastructure is created to engender.
			
			
			
			Given that cyberinfrastructure is comprised not only 
			of advanced computational technologies, but also of scientists and 
			engineers who are both developers and end users, I am:
			
				
				Investigating existing scientific and engineering 
			practices; 
				
				Investigating how scientific and engineering 
			practices are collaboratively transformed in the creation of 
			cyberinfrastructure;
				
				Identifying patterns of collaboration (e.g. social 
			networks, communication strategies, management strategies) and 
			relate those patterns to organizational and scientific outcomes. 
				
			
			Ethnographic methods are being used including 
			participant-observation and semi-structured interviews. Qualitative 
			social science methods are useful for understanding practice and how 
			work processes change and develop over time. A nascent metagenomic 
			cyberinfrastructure project is serving as a field site.

			Technology Garden: Encouraging Sustainable Activities


Keywords:
			


design research, CSCW, user studies, sensors, plants, 
			sustainability, experience design
			Visit the
			Technology 
			Garden Development Blog
			 
			 
			 
			 
			 
			 
			 
			 The 
			Technology Garden is a community maintained garden located in 
			an office that will be equipped with sensors and ubiquitous displays 
			mounted throughout the workplace.
			
			The Technology Garden will support dialog and thinking about how 
			humans and plants relate to each other. By involving our institution 
			in the care and observation of a community garden located in an 
			office, we will also explore what role institutions may play in 
			supporting sustainable activities and thinking. We wish to 
			facilitate new forms of awareness and interaction among humans and 
			nature through and with technology. Our goal is not only to bring 
			nature into a working space, but also to establish new forms of 
			understanding of nature/organic planting, of what it means to take 
			care of a plant and how that can be explored in a collaborative 
			manner. We will explore how to transform a working environment into 
			a hybrid living space that values not only group collaboration and 
			efficient technology, but also provides an enjoyable place that 
			invites relaxation and promotes health.
				
					
					GoalsEncourage interaction between humans 
						and nature.Promote awareness of the interaction 
						of natural and human processes.Explore how technology can encourage 
						relationship building through common activities.Encourage dialog on sustainability 
						and sustainable practices.Provide a “place with a purpose to 
						meet and relax” for both visitors and residents.Create a form of sociality that 
						extends beyond the immediate space of an office or a 
						hallway through visualizations that support garden 
						awareness.
				
			
			Information Practices of Hobbyist CollectorsKeywords:
			


ethnography, social informatics, leisure studies, library 
			and information science, hobbyist collectors
			 
			
			Recently the study 
			of leisure has become an area of interest in Information Science. 
			Despite the extreme popularity of hobbyist collecting, few studies 
			have been undertaken of the social informatics and information 
			behavior of hobbyist collectors.  We conducted an ethnographic study 
			of rubber duck collectors including 13 interviews and 
			participant-observation both in-person and in an online collecting 
			community. Our data yielded a model for comparing rubber duck 
			collectors and a typology of three types of hobbyist collectors. We 
			describe the specifics of the information needs of  the collectors 
			as well as methods for identifying expertise in domains of activity 
			that lack experts vetted by publishers or institutions of higher 
			learning. Our research breaks new theoretical ground by designating: types of 
			hobbyist collectors, their activities relative to existing theories 
			of leisure, and how these activities relate to their information 
			behavior.


	
	back to cpl home
##------------------URL-------------------------##
http://www.ics.uci.edu/~cplee/biography.html
##-----------------TITLE------------------------##
Charlotte P. Lee - Biography
##------------------TEXT------------------------##
CPL home > Biography





     



		

 



      



Papers

      

 



      


Projects

 



      
      
      
      
      









Classes

 





      
Affiliations

 







    
Biography

 







    About Me

 

 

 
    




	

    






	     
    

	

     
	
	Charlotte P. Lee is a Research Scientist in the Donald Bren School of 
	Information and Computer Sciences at the University of California, Irvine. 
	She has a B.A. in Sociology from the
	
	University of California, Berkeley, an M.A. in Sociology from
	
	San Jose State University and a Ph.D in Information Studies from the
	
	University of California, Los Angeles. Her professional experience is in 
	system administration, database administration, interaction design, and 
	project management. Dr. Lee’s research is in the fields of Social 
	Informatics, Computer Supported Cooperative Work (CSCW), Design Studies, and 
	Science and Technology Studies. Her work focuses on empirically describing 
	and theorizing the informational practices, artifacts, and collaborative 
	structures of communities of practice working towards a shared goal: 
	collaborative design. Her paper entitled the “Human Infrastructure of 
	Cyberinfrastructure” was nominated for the Best Paper Award at the ACM's 
	Conference on Computer Supported Cooperative Work.  Dr. Lee is the principle 
	investigator of an NSF-funded project studying collaboration in the 
	development of cyberinfrastructure using the Community Cyberinfrastructure 
	for Advanced Marine Microbial Ecology Research and Analysis (CAMERA) as a 
	case study.
	

     

	
	back to cpl home
##------------------URL-------------------------##
http://www.ics.uci.edu/~cplee/aboutme.html
##-----------------TITLE------------------------##
Charlotte P. Lee, Home Page at Cal(IT)^2
##------------------TEXT------------------------##
CPL home > About Me





     





	

 



      



Papers



      

 



      


Projects

 
      
      







Classes

 



      
Affiliations

 





    Biography

 





    About Me
    




	

    






	     




    
	
	 
	
	I hold the Guinness World Record for World's Largest Rubber Duck Collection. 
	I've been collecting rubber ducks since 1996. I am the first person to hold 
	this record and have held it since 2003. A photo of my rubber 
	ducks and I in a bath tub were featured in the 2007 edition of the Guinness Book. 
	Guinness has too many records to print in each book so being selected for 
	inclusion was a wonderful surprise.
	
	
	
	back to cpl home
##------------------URL-------------------------##
http://www.ics.uci.edu/~cplee/publications.html
##-----------------TITLE------------------------##
Charlotte P. Lee, Papers
##------------------TEXT------------------------##
CPL home > Papers





     



      

      
      
      

		

 


Papers

 

Projects

 







Classes

 



      
Affiliations

 





    Biography

 





    About Me
    
    




	     
    

    
    Publications  




	
	Bietz,
Matthew, Eric Baumer, and Charlotte P. Lee. (In Process) "Synergistic
Cyberinfrastructure Development." Cohn,
Marisa, Susan Sim, and Charlotte P. Lee. (Under Review) “Artifacts in
Collaborative Software Development: Documentation as Performative,
Participatory and Negotiated.” Special Issue on Software Engineering.
Journal of Computer Supported Cooperative Work (JCSCW).Lee, Charlotte P. and Ciaran Trace. (Forthcoming). 
	“Information Needs and the Social Worlds of Hobbyist Collectors.” Journal of 
	the American Society for Information Science and Technology (JASIST).
	
	Troshynski, Emily and Charlotte P. Lee, Paul Dourish. 2008. 
	“Accountabilities of Presence: Reframing Location-Based Systems.”
	ACM Conference on Human Factors and Usability 
	(CHI), Florence, Italy. Nominated for Best Paper Award.
	Lee, Charlotte P. 2007. “Reconsidering Conflict 
	in Exhibition Development Teams.”. Journal of Museum Management and 
	Curatorship (MMC), 22(3). 
	Lee, Charlotte P. 2007. “Boundary Negotiating 
	Artifacts: Unbinding the Routine of Boundary Objects and Embracing Chaos in 
	Collaborative Work.”   Journal of Computer Supported Cooperative Work (JCSCW), 
	18(3):307-339.
	Lee, Charlotte P., Paul Dourish, 
	Gloria Mark. 2006. “The Human Infrastructure of Cyberinfrastructure.”  Computer 
	Supported Cooperative Work Conference (CSCW), Banff, Canada. Nominated 
	for Best Paper Award. 
	Lee, Charlotte P. 2005. “Between Chaos 
	and Routine: Boundary Negotiating Artifacts in Collaboration.”  Proceedings 
	of the 9th European Conference on Computer-Supported Cooperative Work (ECSCW), 
	Paris, France, September.
	Lee, Charlotte P. 2004. "Collaborative 
	Design:  A Taxonomy of Artifacts and Practices Used to Design a Museum 
	Exhibition.”  Proceedings of the International Engineering and Product 
	Design Education (IE&PDE) Conference, 2nd Annual Meeting, Delft, The 
	Netherlands.
	


	

    Refereed Conference Papers
	
	
	
	Lee,
Charlotte P., Matthew Bietz, and David Ribes. 2008. "Designing
Cyberinfrastructure to Support Science." Workshop Proposal for ACM
Conference on Computer Supported Cooperative Work (CSCW).
	Lee, Charlotte P. 2008.  “Researching Cyberinfrastructure.”  Society for the Social 
	Studies of Science (4S) Conference, Rotterdam, the Netherlands.Lee, Charlotte P. and Steve Abrams. “Group 
	Sensemaking.” 2008. Position paper for workshop on Sensemaking. 
	ACM Conference on Human 
	Factors and Usability (CHI), Florence, Italy.Dourish,
P., Hayes, G. R., Irani, L., Lee, C. P., Lindtner, S., Nardi, B.,
Patterson, D. J., and Tomlinson, B. 2008. "Informatics at UC Irvine."
ACM Conference on Human Factors and Usability (CHI). Extended Abstracts
on Human Factors in Computing Systems (CHI), Florence, Italy.
	
	Lee, Charlotte P. and Ciaran Trace. 
	2008. “Serious, Casual, Social: A Typology of Hobbyist Collectors.” (Forthcoming) 
	2008 National Popular Culture & American Culture Associations, Session on 
	Collecting & Collectibles, San Francisco, CA.
	Lee, Charlotte P. 2007. "Collaborative Design and a 
	Science of Design." Position paper for workshop on Converging on a 'Science 
	of Design Through a Synthesis of Methodologies, ACM Conference on Human 
	Factors and Usability (CHI), San Jose, California, USA, 2007.
	
	Lee, Charlotte P. and Ciaran Trace. 2006.  “Rubber Duck Collectors: Of Hobbyists, 
	Experts, and the Serious Side of Silly Business.”  Society for the Social 
	Studies of Science (4S) Conference, Panel on Amateurs, Hobbyists, and 
	Rethinking the Nature of Expertise, Vancouver, Canada.
	Lee, Charlotte P., Paul Dourish, 
	Gloria Mark. 2006. “The First Usability Challenge for Cyberinfrastructure.”  
	Position paper for workshop on Usability Research 
	Challenges for Cyberinfrastructure and Tools, ACM Conference on Human 
	Factors and Usability (CHI), Montréal, Canada.
	Lee, Charlotte P. 2006. “Learning from 
	Museums: Revisiting “Old” Methods to Design for User Experience.”  Position 
	paper for workshop on Usability Research Challenges 
	for Cyberinfrastructure and Tools, ACM Conference on Human Factors 
	and Usability (CHI), Montréal, Canada.
	Dourish, Paul, Rogerio dePaula, 
	Charlotte P. Lee. 2005. "Activities and Two Forms of Social Legibility." Position 
	paper for workshop on Activity - From a Theoretical to a Computational 
	Construct, Proceedings of the 9th European Conference on 
	Computer-Supported Cooperative Work (ECSCW), Paris, France.
	Lee, Charlotte P. 2003. “Using 
	Documents to Design: The Role of Documents in the Design of a Museum 
	Exhibition.” Society of American Archivists (SAA) Annual Meeting 2003, 
	Panel, Los Angeles, CA.
	Lee, Charlotte P. 2002. “Designing for 
	Designers: An Ethnography of Museum Work and Documents.” Computer Supported 
	Cooperative Work (CSCW) 2002 Doctoral Colloquium, New Orleans, LA.
	Lee, Charlotte P. 1998. “The Utility of 
	Eye-Contact in Video Conferencing: Implications for Digital Libraries.”  
	Western States Graduate Student Communication Conference, University of 
	Southern California, Los Angeles.


	



	Lee, Charlotte P. 
	1994. “Househusbands: Theories of Ideology, Exchange, and Conflict.”  Pacific 
	Sociological Association (PSA) Conference, San Diego.
	Other Presentations






	“Human Infrastructure: Teams, 
	Organizational Structures, and the Building of Cyberinfrastructure.”  
	Invited Talk. School of Information, University of Michigan, Ann Arbor, 
	March 2007.
	“Transdisciplinary Science and 
	the Building of Cyberinfrastructure.”  Poster Presentation for the Science 
	of Team Science: Assessing the Value of Transdiciplinary Research 
	Conference, National Cancer Institute, Bethesda, MD, October 2006.
	“Material Artifacts and the 
	Negotiation of Boundaries in the Design of a Museum Exhibition.”  Invited 
	Talk. School of Informatics, University of Indiana, Bloomington, September 
	2006."Space
In-Formation: Interpreting/Forming Space." Panel Discussion for Calit2
Graduate Student Conference on the Social and Cultureal Aspects of
Science and Technology, University of California, Irvine, CA, April
2005.






	“Design, Artifacts, and 
	Social Context: An Ethnographic Study of Museum Work and Documents.”  Poster 
	Presentation for the Association for Library and Information Science 
	Education (ALISE), Annual Meeting, San Diego, CA, January 2004.
	
	back to cpl home
##------------------URL-------------------------##
http://www.ics.uci.edu/~cplee/affiliations.html
##-----------------TITLE------------------------##
Charlotte P. Lee, Affiliations
##------------------TEXT------------------------##
CPL home > Affiliations





     



		

 



      




Papers

      

 



      


Projects

 



      
      
      
      
      









Classes

 





      
Affiliations

 







    Biography

 







    About Me
    




	

    






	     



	

     


    
	Laboratory for Ubiquitous Computing and 
	Interaction (LUCI)

	In an era of ubiquitous computing, we will each have tens 
	or hundreds of computers -- not just on our desktop, but computers that we 
	carry with us, computers that we wear, and computers that are embedded in 
	our world. These computers gracefully leave the offices and research labs 
	and move into the larger, uncontrolled, everyday world of people. LUCI, the 
	Laboratory for Ubiquitous Computing and Interaction, serves as a focal point 
	for research that follows from this vision.



    
	Association for 
	Computing Machinery (ACM)

	ACM is widely recognized as the premier membership 
	organization for computing professionals, delivering resources that advance 
	computing as a science and a profession; enable professional development; 
	and promote policies and research that benefit society. 

	

    
	Society for the Social 
	Studies of Science (4S)






	
		Society for Social Studies of Science is the oldest 
		and largest scholarly association devoted to understanding science and 
		technology. The main purpose of 4S is to bring together those interested 
		in understanding science, technology, and medicine, including the way 
		they develop and interact with their social contexts. 





	

    
	
	Design 
	Research Society

	The Design Research Society is the 
	multi-disciplinary learned society for the design research community 
	worldwide. Members are drawn from diverse backgrounds, not only from the 
	traditional areas of design, ranging from expressive arts to engineering, 
	but also from subjects like psychology and computer science.

	
	
	Community Cyberinfrastructure 
	for Advanced Marine Microbial Ecology Research and Analysis

	CAMERA stands for Community 
	Cyberinfrastructure for Advanced Marine Microbial Ecology Research and 
	Analysis. The aim of this project is to serve the needs of the microbial 
	ecology research community by creating a rich, distinctive data repository 
	and a bioinformatics tools resource that will address many of the unique 
	challenges of metagenomic analysis.

	 
	
	back to cpl home
##------------------URL-------------------------##
http://flamingo.ics.uci.edu/toolkit/src/udf/
##-----------------TITLE------------------------##
Index of /toolkit/src/udf
##------------------TEXT------------------------##
FLAMINGO Toolkit
Department of Computer Science, UC Irvine




Contributors
Chen Li (Faculty)
Rares Vernica (Ph.D. Student)





NameLast modifiedSizeDescriptionParent Directory   -  mysql/16-Apr-2013 18:54    -  
Apache/2.2.15 (CentOS) Server at flamingo.ics.uci.edu Port 80
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/Matlab
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / Matlab
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          Matlab


A brief introduction to Matlab programming
See this cheat-sheet, or this one, for a list of many useful Matlab commands.
Matlab also has a number of toolboxes that can have many useful commands; see here.

Basics of Matlab
Defining scalars, vectors, and matrices

  % Vectors and matrices  % Row-vectors are defined as:  a=[1 2 3 4 5 6 7],  % For sequences of values, you can use a colon form:  a=1:7,  b=1:2:7,  c=7:-1:1,  % Column-vectors are:  ac=[1;2;3;4;5;6;7],  % Transpose and complex-conjugate transpose are .' and ', respectively:  ac=[1;2;3;4;5;6;7].',  % Matrices are defined similarly:  A = [1 2 3 4;5 6 7 8;9 10 11 12];   % Several useful constructors for matrices:  A0 = zeros(3,4);           % create a 3x4 matrix of all zeros
  A1 = ones(3,4);            % create a 3x4 matrix of all ones
  Ru = rand(2,2);            % create a 2x2 matrix of uniform random numbers, in [0,1)
  Rn = randn(3,2);           % create a 3x2 matrix of Gaussian random numbers, mean 0 variance 1
  B = repmat(b,[3,2]);       % create a matrix by "tiling" copies of b (3 copies down and 2 across)

Arithmetic operations 

  % Arithmetic operations are defined for vectors and matrices, i.e.,  a=a+2,  % adds the scalar value 2 to every entry of a; similarly for *,-,/, etc.   % You can add two vectors if they are the same size:  a+2*c,  % but you cannot add two vectors that are not the same size (unless one is a scalar):  a+b,   % To access an entry in a vector, use parentheses:  c(2),  c(2)=20,  % For matrices, use two arguments  A(3,1),  A(3,1)=20,  % These basic operations also generalize to n-dimensional arrays   % Arithemetic operations are defined for vectors and matrices, so that  a*c.'    % The dot product between vectors a and c  A*b.'    % The matrix-vector product of A and  c   % Element-wise versions of times and divide are specified by .* and ./ :  a.*c,    % The vector given by the elementwise product
   % Matrix powers are ^ while elementwise powers are .^
  R=A^2,    % The matrix product R=A*A:    R(i,j)=\sum_k A(i,k)*A(k,j)
  R=A.^2,   % The elementwise square of A: R(i,j)=A(i,j)^2

Arithmetic for scalars, vectors, and matrices
Logical relations

  a = [0 1 2]; b = [0 0 2];   a==b,     % test a(i)=b(i): returns logical vector [ 1 0 1 ]   a~=b,     % test a(i)!=b(i): logical vector [ 0 1 0 ]   a<2,      % test a(i)<2: logical vector [ 1 1 0 ]   any( a~=b ),   % true if any a(i)!=b(i) for some i   all( a==b ),   % true if all a(i)=b(i) for every i   M=[0 1 ; 0 0];   any( M ),      % acts on individual columns of M; returns a logical row vector 

Flow control

  if (any(a)),   %Best to be sure that test condition is a scalar!     fprintf('Some elements of a are true\n');   end;   %While-loops behave normally; again best if test condition is a scalar   while (i<15),     fprintf('While iter %d \n',i); i=i+1;   end;   %For-loops: step through the code with each value in a series  for i=1:10,             fprintf('Iteration %d \n',i);     i=i+2;                        %Note: changing i will not affect the next iteration!   end;   for i=[7 2 9 13], fprintf('%d\n',i); end;  % can step through any arbitrary series

Plotting

  %For line plots, use vectors of the x-values and y-values:  x=[1 1.5 2 3 3.5 4]; y=[0 2 0 4 4 3];           plot(x,y,'b-o');      % b=blue, -=solid line, o=circles at points   hold on;              % plot over the current plot   plot(x,log(x),'r--'); % r=red, --=dashed line 
  %Data are plotted and connected in the order they are given:
  x=[1 3 1.5 2 3.5 4]; y=[0 4 2 0 4 3];           plot(x,y,'g-.');      % plot the same points but in a different order   %Matlab has some useful pre-defined plotting & drawing functions, such as
  %  hist : compute and plot histograms
  %  bar  : bar graphs  (bar3 = 3D bar graph)
  %  surf, mesh: surface and mesh-frame surfaces
  %  contour: contour plot (contour3 = 3D contour)
  %  quiver : "quiver" or vector flow plot
  %  image: display an image (imagesc: with scaling)
  %Finally, "colormap" sets the value-to-color interpretation in plots

Intermediate Subjects
Find

  You can access the internals of vectors with indices, or with logical vectors of the same size   a = [0 -1 2 -1];   idx=find( a < 0 ),    % returns a list of indices where condition is true: idx=[2 4]   b = a( find(a>=0) ),  % extracts subseries where condition is true: b=[0 2]   a( find(a<0) )=0,     % replace negative entries with zero   a = [0 -1 2 -1];      % Here's an equivalent way to do the same thing using logical indexing:   b=a; b(b<0)=[];       % remove (replace with empty) positions where b < 0   a( a < 0 ) = 0,       % replace negative entries with zero 

Random numbers

  %Basics   u = rand(1,10);             % 10 uniformly distributed random numbers in [0,1)   x = randn(2,10);           % 2x10 "standard Gaussian" (independent, variance 1) draws   pi = randperm(10);        % random permutation (reordering) of 1:10   s = ceil(10*rand(1,10));  % random re-sampling (bootstrap) from 1:10   % Seeds: often it is useful to have reproducible random numbers   rand('state',seed);   % use "state" random # generator, with initial seed "seed"   randn('state',seed);  % same idea, for the Gaussian random # generator

Toolboxes
stats, optimization,

Structures and cell arrays

  % Cell arrays store collections of mismatched objects (different in type or in size)   c{1} = rand(1,5); c{2} = rand(1,10); c{3} = uint32(1:5);     % Structs can also hold collections, but use names rather than vector/matrix indexing   s.myRandom = rand(1,5); s.myZeros = zeros(3,3); 

Miscellaneous

  % Command history   diary on;             % record input & output to file diary  diary myFile.txt;     % record input & output to file myFile.txt  diary off;            % stop recording   % Saving and Loading   save file.mat;      % save all variables to file.mat   load file.mat;      % restore variables from file.mat   save file.txt var -ASCII;   % save variable "var" to "file.txt" in ascii format   var = load('file.txt');    % load a single variable from a text file 

Advanced Material
Classes
See Matlab Classes page.

Mex-files
Matlab is interpreted, and this can make it very slow at some things, including many for-loops or other repeated computations.  Sometimes compiled code can be faster.  Mex functions are compiled code, usually C or C++, that are called from Matlab.  By definition, this makes them platform specific and must be recompiled on each architecture, but the performance boost can be worth it.




      

  
     Last modified January 05, 2015, at 12:07 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/Matlab-Classes
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / Matlab-Classes
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          Matlab-Classes


Matlab Object-Oriented Programming and Classes
Matlab object-oriented programming is a bit awkward and unlike most other
OO languages, but still has some of the elements that make OO programming
useful.  Here I will describe some aspects of Matlab objects, using a class
to construct a k-nearest neighbor classifier as a working example.

Getting started
First, download the course code into a directory, say,
~ihler/Code/cs178/.
You should see a number of files and directories created there;
for the purposes of this handout, the relevant directory to have is the
@knnClassify directory, which contains the files for the
classifier.

You should make sure you are either in the directory you downloaded the
files to, or add it to your Matlab path.  For example, use

 >> addpath ~ihler/Code/cs178

to add that directory to Matlab's path.  Note that you should not
be in the @knnClassify directory, nor should you add
it to the path -- only its parent directory.

We will use "old style" Matlab objects, which consist of a directory
(@-something), which uses one file per member function (private functions
go in a further subdirectory called private).  While there are
some drawbacks to this type of object (and Matlab has since updated
their object representations to be more flexible and give them
more capabilities), this is the type
that is also compatible with Octave, which is useful also.

Using the class
To create an object of the class type, you can simply call the constructor.
To find out its usage, use help:

 >> help knnClassify
  knnClassify(X,Y,...) : create k-nearest-neighbors classifier
  takes no arguments, or training data to be used in constructing the classifier
  alpha: weighted average coefficient (Gaussian weighting); alpha=0 => simple average

and we can then use it:

 >> Xtr = rand(5,3),      % Create feature matrix of 5 data points with 3 features each 
 Xtr =                    %  (just in case you want to use the same numbers I do...) 
    0.4898    0.2760    0.4984 
    0.4456    0.6797    0.9597 
    0.6463    0.6551    0.3404
    0.7094    0.1626    0.5853
    0.7547    0.1190    0.2238
 >> Ytr = [0 0 0 1 1]';   % and a corresponding Ytrain of target classes 
 >> knn = knnClassify(Xtr,Ytr,3),    % Create 3-nearest-nbr classifier with those data
 KNN Classifier, 2 classes, K=3

Now, to find out what methods are available for a given class,
we can use the methods command to list them:

 >> methods knnClassify
 Methods for class knnClassify:

 auc          err          predict      setClasses   
 confusion    getClasses   predictSoft  setK         
 display      knnClassify  roc          train        

Our most typical operations will be train and predict, which
train a model on training data, and predict the current model on new data, respectively.
Typically, when constructor functions accept training data, they simply call the
train function.
To see what parameters train takes, we need to differentiate which
train we mean:

 >> help knnClassify/train
   knn=train(knn,Xtrain,Ytrain) : Batch training for knn; just memorize data

Using this calling pattern, we can re-train the model with e.g.,

 >> knn = train(knn, Xtr,Ytr);

and predict with

 >> Xte = rand(2,3),                % Make two test data points (same # of features!)
 Xte =
    0.7513    0.5060    0.8909
    0.2551    0.6991    0.9593
 >> Yte = [0 1]';                   %   and some test target values for goot measure
 >> Yhat= predict(knn,Xte),         % Make prediction for those points:
 Yhat =
     0
     0

Two points are worth noting: First, member functions are typically called by
passing the object as the first argument of the function.  They can also be
called in a more typical format, knn.train(Xtr,Ytr), but both are
implemented in exactly the same way.

Second, functions that modify the class in some way (such as train)
should actually return (and set) the object variable.  Matlab cannot generally
update variables by reference (recent object changes relax this point), and
so the object must be returned in order to modify it.

We can also use accessor functions to get or set object properties, such as:

 >> knn = setK(knn, 1),             % Change to a 1-nearest nbr classifier
 KNN Classifier, 2 classes, K=1

Again, we actually return the modified object variable, and set kdd
to be equal to the returned value.

The object constructor
Let's take a closer look at how the constructor function
knnClassify.m works.  First, here is the file header:

 function obj = knnClassify(Xtr,Ytr,K)
  % knnClassify([X,Y,K]) : create k-nearest-neighbors classifier
  % takes no arguments, or training data to be used in constructing the classifier

The first line declares the function itself, and any returned variables.
The first set of comments in the file are output for the help
command (help knnClassify), and should contain basic usage information.

Default values are a bit awkward; typically, you can check how many variables
were passed in and fill in any missing ones (positional defaults):

   if (nargin < 3) K = 1; end;

Another typical approach is to require that the caller pass an empty matrix,
which can be tested for and filled in with a default value.

The basic form of an object is simply a Matlab structure with a bit of extra
gloss on top; we declare the member variables as if it were a structure, and
then call a function to define it as a class:

   obj.K=K; obj.Xtrain=[]; obj.Ytrain=[]; obj.classes=[];
   obj=class(obj,'knnClassify');

I usually do this immediately with empty values, since the variable fields
must always be declared in the same order.  Note also that return values are
specified by name, so if obj is listed as the return variable, whatever
variable is called obj when the function ends is returned.

I typically also allow train to be called automatically by just passing
the data into the constructor:

   if (nargin > 0)
     obj = train(obj,Xtr,Ytr);
     obj = setK(obj,K);
   end;

Or, these can be called manually after.

As an aside, Matlab objects can be converted into structures, allowing their
internal data to be accessed by anyone:

 >> s = struct(knn),
 s = 
          K: 1
     Xtrain: [5x3 double]
     Ytrain: [5x1 double]
    classes: [2x1 double]

This can be useful if you're trying to access something in an object while debugging,
but is usually non-reversible, i.e., it is difficult to modify s and transform it
back to an object afterwards.

The train function
Training for a k-nearest neighbor classifier is trivial; we simply memorize the data:

 function obj=train(obj, Xtr,Ytr)
  % knn=train(knn,Xtrain,Ytrain) : Batch training for knn; just memorize data
   obj.Xtrain = Xtr;
   obj.Ytrain = Ytr;
   obj.classes= unique(Ytr);

One minor point -- I always keep a column vector obj.classes in each classifier.
The internal implementation of the classifier predicts a positive integer ,
and then returns obj.classes(c).  This way, the class values can be
non-consecutive, non-standard, and even of different Matlab types (characters or whatever)
without any difficulty.  Some classifiers are implemented specifically for binary
classification problems, in which case we can simply check that the number of classes is only
two.

The predict function
In order to predict with a k-nearest neighbor classifier, we simply search the stored
training data for the nearest points, in terms of their sum of squared differences.
The file header,

 function Yte = predict(obj,Xte)
  % Yhat = predict(knn, Xtest) : make a nearest-neighbor prediction on test data  

   [Ntr,Mtr] = size(obj.Xtrain);           % get size of training, test data
   [Nte,Mte] = size(Xte);
   K = min(obj.K, Ntr);                    % can't have more than Ntrain neighbors
   Yte = repmat(obj.Ytrain(1), [Nte,1]);   % make Ytest the same data type as Ytrain

gets the number of training and test data, and their dimensions ($M$, which should be the
same for both), and makes sure $K$ is valid.  We pre-initialize Yte by
copying (repmat = repeat matrix) one of the training data to the correct size;
pre-allocating the correct vector size helps Matlab avoid constantly re-allocating
memory for Yte,
and using repmat ensures it has the right variable type.

Next, for each test data point, we compute the distance from all training data,
for example:

   for i=1:Nte,                 % For each test example:
     dist=zeros(Ntr,1);         % pre-allocate a distance vector
     for j=1:Ntr,               % and compute distance from all Ntr training data
       dist(j)=sum( (obj.Xtrain(j,:)-Xte(i,:)).^2 ); 
     end;
   end;

However, this turns out to be awfully slow; Matlab is interpreted, and often has
trouble performing for-loops quickly.  For better performance, you may
learn to ``vectorize'' your calculations, performing them all in one step:

   dist = sum( (obj.Xtrain - repmat(Xte(i,:),[Ntr,1]) ).^2 , 2);

This copies the Xte data point to be the same size as Xtrain,
then subtracts the two matrices, squares the entries (element-wise), and sums
them over their 2nd dimension (the features), leaving a column-vector of distances
exactly like the for-loop above.  Even harder to read but slightly faster still
is to use the bsxfun function, which performs operators on differently-sized
matrices (so that you don't need to use repmat to copy the data point):

   dist = sum( bsxfun( @minus, obj.Xtrain, Xte(i,:) ).^2 , 2);

All this is useful if you are finding Matlab very slow, but takes a while to get used to.

Finally, we find the $K$ nearest data examples, and find the majority vote among them:

   [dst,idx] = sort(dist);        % find nearest neighbors over Xtrain
   idx=idx(1:K);                  % keep nearest K data points
   nClasses=length(obj.classes);
   count = zeros(1,nClasses);     % count up how many in each class
   for c=1:nClasses, count(c)=sum( obj.Ytrain(idx)==obj.classes(c) ); end;
   [nil cMax] = max(count);       % find the (position of the) largest #
   Yte(i) = obj.classes(cMax);    % and save the prediction

A useful trick here -- both sort and max can return both the
sorted / maximum value (first return value) and the position of those values
(as the second return value).  So idx is a list of the training data points
in order from nearest to farthest, and cMax is the index of the class with
the largest count value.

Also, obj.Ytrain(idx)==obj.classes(c) is a binary vector, with "1"
when the equality condition is satisified and "0" if not.  Then, sum
counts up the number of "1" entries.

Measuring errors
A few functions are common to almost all predictors; for example,
frequently, we want to evalute the error rate, measuring how often our model makes
incorrect predictions on a data set (e.g., the training or validation error).
Functions like err do this easily:

 >> J = err(knn, Xte, Yte),        % evalute the empirical error rate on these data
 J = 
     0.5000

To get more information, we may want to look at the confusion matrix:

 >> C = confusion(knn, Xte, Yte),  % evalute the confusion matrix:
 C =                             
      1     0                     % one true class zero (column), predicted 0 (row)
      1     0                     % one true class zero (column), predicted 1 (row)

Similar functions (mse, etc.) are found in regression classes.

Many classifiers also support soft predictions, which express some level
of confidence in the possible outcomes.  For example, in kNN, we might return
the fraction of the $K$ neighbors in each class (rather than just the decision);
predictSoft returns a length-nClasses vector of such confidences
for each data point:

 >> knn = setK(knn, 3);            % poinless for k=1...
 >> ySoft = predictSoft(knn,Xte),  % make soft predictions:
 ySoft =
     0.6667    0.3333             % test point 1 has 66% confidence in class 0
     1.0000         0             % test point 2 has 100% confidence in class 0

These soft scores are useful in computing, for example, ROC curves
(note that this only works for binary classifications):

  [fpr,tpr,tnr] = roc(knn,Xte,Yte);   % find info for ROC curve:
  plot(fpr,tpr,'-');             % (not very interesting for these data, though...)

and the area under the curve can be computed with auc.m.




      

  
     Last modified January 05, 2015, at 12:06 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/Regression
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / Regression
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          Regression


Regression problems
Regression is a type of supervised learning task in which the target variable is real-valued.
For example, we may wish to predict the sale price of a house, , given some of its observable characteristics, e.g.,
: house size, in square footage
: location, distance from the coast

We are likely to base our prediction of the sale price , and its relationship to the observable features , on some set of training data, for example historical sales data.  For simplicity of our plots, we will initially assume a single feature (e.g., size), allowing us to plot our historical data as points  in a scatter plot, and to plot a predictor, or function  from the observed features to the predicted value of .


Scatter plot of training dataLinear function f(x)Nonlinear function f(x)
We will initially focus on linear regression, in which our prediction about y is in the form of a linear function of the observed features , for example:

It is helpful to define all of our variables in a matrix form; this will allow us to write very compact equations, and will also translate well into Matlab syntax. For example, defining the "zeroth feature" , we can write

where ,  are vectors formed by concatenating the features (respectively parameters) together.

The data that we will use for training consist of a number of examples (for example, houses that have been recently sold, or recent stock behavior); we will index each example by a parenthesized super-script: .  (The parentheses differentiate the indexing from, for example, taking a number to a power, such as  for the square of x.
We again can vectorize an entire collection of data to be used for training into a matrix shorthand:

We have chosen to represent each row of X as a training example (the values of each feature observed for a particular datum, such as a single house in the historical set), while each column indicates a particular feature.  The first column (of all ones) indicates "feature zero", a constant value that we prepend to our features to manage the offset term; each subsequent column represents the values of a particular feature (size, distance, etc.) that are observed across examples in the training data.

Note that the most potentially confusing difference in syntax for most presentations is a result of transposition of one or more of these quantities.  It is helpful to keep in mind what the correct dimensionality of each vector is:  has  elements, the number of training data;  has  elements, one more than there are observed features; and  is .


 %Matlab syntax for predicting y  yhat = X * theta';      %dot product of each example datum, in a column vector


Error measures and optimization
For a given observation (x,y), we can compute the error in our prediction (also called the residual) as :


Residuals, constant Residuals, linear 
In general, we would like to minimize the overall size of these errors.  A common, and as we shall see computationally convenient choice is the Euclidean norm of the vector of residuals, or the sum of squared errors (SSE) cost:

The cost function J(.) tells us the accuracy of a given parameter vector  at predicting our training data.  This is a function defined over the space of parameters ; for a two-dimensional parameter vector, we can visualize it as a surface, or use colors or contours to suggest the three-dimensional height (cost) on a 2D plot.

Color Map3D surfaceSurface + contoursContours only
Gradient descent
One option is to follow the local slope of  downward towards a local minimum.  We can evaluate the gradient direction, i.e., the direction in which our cost function  has the greatest increase; going in the opposite direction gives us the direction of greatest decrease of our cost J.  This gradient will be a vector of the same dimension as :


In gradient descent, we simply initialize to some starting value of  and repeatedly update by choosing a new  by moving in the direction of steepest descent, e.g.,

Here,  indicates that we are updating the value of  using the quantity on the right.  The value  is a step-size parameter that tells us how far to move in the direction of the gradient.  The choice of step size can be very important in gradient descent methods, as it often controls how fast we converge to a local minimum.  Values that are too small move very slowly; values that are too large can skip over or even oscillate around local minima.  

A common heuristic approach to setting the step size is to let  decrease with each iteration (step), for example choosing  to be inversely proportional to the iteration number.

We can see the behavior of gradient descent on the cost function J defined over parameter space (top; each point corresponds to a vector ), and the induced predictors  (bottom; each value of  corresponds to a different linear predictor for y):


InitializationIteration 1Iteration 10Iteration 30Iteration 90
Closed form optimum for squared error
We can solve the quadratic equation defined by the stationary point

Rearranging gives a quadratic equation, the solution of which is the minimum squared error (MSE) estimator

The term  is called the (Moore-Penrose) pseudo-inverse, and compensates for the fact that X
is typically over-constrained: there is no value of theta that will exactly predict every value of y from x.


Increasing the number of features
So far we have considered linear functions of several observed features , .  Suppose that we have only one feature, , but would like our predictor to be a nonlinear function of x, for example 

We can simply define new features , , and so on (just as we defined ), and this predictor becomes simply

In other words, it still fits the linear regression model, but in a new feature space with additional features that are deterministic functions of our observations.  Applying our least-squares estimator gives polynomial fits, :


P=0P=1P=3P=7P=10
If we think that our target variable y is likely to be linearly related to some complex function of several observed variables, that combination can also be added as a new, observed feature. 

There are two ways to view this process.  First, we are creating a "more complex" functional predictor ; the set of functions we can represent is now larger (e.g., from the set of all lines to the set of all cubic polynomials).  An alternative is to forget that the features are now deterministically related to one another, and to imagine that we are adding extra measurements (features) with which to predict y.  In this view, we are learning a linear predictor from data, but those data lie in a higher dimensional space.  (We will return to these views later, in classification.)

Overfitting
As we saw in our polynomial fits, for 11 data points and a degree-10 polynomial (with 11 coefficients), we can predict all of our training data exactly!  And yet, something about that predictor is not satisfying -- it does not "look" like a good predictor.  In fact, we have overfit to the data -- we have chosen such a complex predictor that, although it is able to reconstruct the training data, we have no faith that it will accurately predict new data. 

We can see the "generalization" or test error of a predictor simply by gathering more data, and evaluating our cost function (e.g. mean squared error) on those new points (green).  What we find is that, for very simple predictors (P=0,1), the performance on new test data is much like the performance on the training data.  However, as the function gets more complex, the training error continues to decrease -- but the test error does not.  By P=10, training error is zero, but test error is extremely high.


P=0P=1P=3P=7P=10
We can see this directly by plotting training and test error as a function of polynomial degree P.  For very simple predictors, we are unable to capture the complexity of the dependence between x and y; but for overly complex predictors, we memorize the values of y at the expense of generalization.  


Notionally, the "P" axis can be thought of as "complexity", and we find a similar curve whenever the complexity of our learner increases.  We will see that much of the practical aspects of machine learning come down to choosing and controlling our position on this curve, increasing the complexity when under-fitting and decreasing it when overfitting.




      

  
     Last modified January 11, 2011, at 12:59 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/Boosting
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / Boosting
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          Boosting


Boosting is another, very popular style of ensemble classifier.  Boosted ensembles of learners are trained in a sequential way, with each new learner focusing on the data that are not yet well classified.

The basic outline of a boosted learner is as follows.  Take any type of base classifier, but make sure that it can train on weighted data.  In other words, rather than attempting to minimize the classification error with our base learner, we will need to minimize a weighted classification error,

Note that if  for all i, this is exactly the standard empirical classification error.

Now, beginning with uniform weights , train a base classifier .  Predict  for each training example.  For any training examples we get right, reduce the weight; for training examples we get wrong, increase it.  Then train the next learner and repeat. This focuses our next learner on those data that we have consistently gotten wrong most often: the "hard" data points.

Finally, we combine the learners by evaluating them, but rather than a simple average we take a weighted average, multiplying each learner j's decision by a linear coefficient .

The precise details of this process are typically what distinguishes different boosting algorithms.

AdaBoost
A very popular algorithm is AdaBoost, which was also the boosting algorithm that first popularized the framework.  It is easiest to describe AdaBoost using classes .  

In AdaBoost, we compute the coefficient for each learner j based on its weighted error rate,

We then use this quantity to update the weights as well:

and re-normalize the weights to sum to one.  Note that, since , the quantity  is either +1 or -1 -- it equals +1 if the prediction agrees with the true class, and -1 if it does not.  This up-weights incorrect predictions, and down-weights correct ones.

The final classifier is given by summing the weighted individual learners and applying a threshold:


Boosting and Surrogate Cost Functions
Boosting algorithms can be shown to correspond to a particular surrogate loss function (replacement for the classification error rate).  In particular, AdaBoost corresponds to the exponential loss function

Note again that, if y and F(x) share the same sign (the prediction is correct), this value will be small (and smaller the more confident F(x) is).  At the decision boundary, the cost is 1, and continues to increase the more F(x) is confident in its incorrect prediction.  The exponential loss function is nice in part because it is both convex and upper bounds the 0/1 loss (classification error).  The first property makes it easy to optimize, while the second means that as we optimize we are at least trying to push downward on the classification loss below us.




      

  
     Last modified February 25, 2012, at 01:44 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/PCA
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / PCA
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          PCA


asdf



      

  
     Last modified February 25, 2012, at 03:06 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/DecisionTrees
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / DecisionTrees
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          DecisionTrees


Decision Tree Classifiers
Decision trees are a well-known classifier type for both discrete and continuous-valued features.  One advantage of decision trees is that they produce very interpretable decision rules; they are easy to evaluate "by hand", so that the factors that went into the class decision can be easily stated.

A decision tree classifier consists of a sequence of "comparison nodes", at which a single feature of the data point is examined.  For a continuous-valued feature, the decision node compares the feature value to a threshold, and depending on whether the value is above or below the threshold, recurses down the decision tree to the left or right.  At some point, this process reaches a "decision node", at which one of the possible class categories is output.

For discrete-valued features, it does not really make sense to "threshold" a value.  Instead, there are a number of possible options.  The most straightforward is to have one child node per possible feature value.  However, this results in a non-binary tree, possibly with a high branching factor, and can complicate the score function used in learning (see discussion in Duda and Hart).  Another possibility is to keep the binary tree shape, in which case some discrete values are assigned to the "left" and all others to the "right" child.


DataFirst level2nd level
Learning Decision Trees
Each comparison node of a decision tree consists of the selected feature index, and a threshold for comparison.  Typically, we determine the values of these parameters by a simple exhaustive search, looping over all possible features and all possible thresholds and evaluating some score function, then picking the parameters that result in the best score.  Note that, although the threshold is a continuous value, there are only a finite number of possible decisions to make on a given training set.  In particular, when the training data are sorted along the feature being considered, any threshold falling between two given data points results in exactly the same rule on the training data, and thus are typically indistinguishable.  We can thus enumerate the number of unique thresholds, and typically pick the mean of the two nearest data points as the value.

Score functions
The purpose of a score function is to decide how good any particular split is.  You might think that the classification accuracy would make a good score function, since minimizing it is our true goal.  However, as usual, classification accuracy is not particularly well behaved.  It will often focus on selecting "very specialized" rules that try to get one more data point correct, rather than trying to split groups of data in a more holistic way.  Also, among rules that do not get any additional data points correct, it provides no guidance whatsoever.

One useful score function is based on the entropy of the class values within each subtree.  The empirical entropy, measured in bits, for a data set  is given by

where  is the empirical distribution of the class value , i.e., the fraction of data in set  that have class .

How does entropy help us decide on a partitioning?  We can use entropy to calculate the so-called expected information gain, which is the average reduction in entropy we see when we adopt some data split.  In particular, suppose that we split a data set  into  with .  We compute the expected information gain as


A common alternative to entropy is the so-called Gini index, which measures the variance of the class variable, rather than its entropy.  The Gini index equivalents of the above equations are:

Again, H is at its minimum (zero) when the variable y is deterministic (a single class) within the subset S, and IG measures the gain, or increase in determinism, caused by conditioning on the split into subsets S1, S2.

Complexity Control and Pruning
The complexity of a decision tree is essentially determined by its depth.  (How many parameters can a binary decision tree of depth d have?)  We may therefore want to control this complexity by reducing the depth.  Common stopping rules include not proceeding past some maximum depth d, or not continuing to split nodes of the tree that have fewer than K training data points associated with them (since we may not trust our ability to learn a general rule based on so few data).

Reducing complexity may be particularly desirable if we feel that the extra depth did not significantly improve our performance.  It is often hard to tell whether a split will significantly improve performance when the tree is initially being constructed.  For example, it is easy to make examples where one split provides no measurable gain in accuracy or score, but allows the next level's split to have significant gains.  For this reason, one usually constructs the entire tree and then prunes.  Given the full decision tree, we start at the leaves and walk upward, checking whether each parent had an accuracy nearly equal to that given by its children.  If the gain is below some threshold, we prune the children and continue upward; if not, we cease recursing for this node or its ancestors.

Decision Stumps
A decision stump is a single-layer decision tree, i.e., a threshold value applied to a single feature.  Although an extremely weak learner (it can only represent extremely simple decision boundaries), it is commonly used in techniques that leverage many weak learners to create a single more powerful learner, such as ensemble methods.

Related links and more information
Learning Decision Trees on wikipedia
ID3 algorithm on wikipedia



      

  
     Last modified February 23, 2012, at 12:44 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/KMeans
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / KMeans
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          KMeans


The k-means algorithm is a simple and well-known technique for finding k clusters in a set of data.  

Suppose that we have N data points , each made up of d features.
In k-means, we describe each cluster c by a "center"  in the d-dimensional feature space, and define the similarity of a data point x to center  by their Euclidean distance.

Notationally, suppose that we identify each data point  with a single cluster center c, and indicate this association with a variable .  Obviously, we do not know this association; the "true" values of z are hidden from us.

This defines a two-part problem -- if we knew the cluster centers , it would be relatively easy to figure out which data points went with each cluster; alternatively, if we knew the association variables, it would be straightforward to determine cluster centers that most accurately described them.  K-means will alternate between these two steps, assuming  known and estimating z, then assuming z known and estimating .

Formally, we can think of K-means as minimizing the following cost function:

the total Euclidean distance of each data point from its assigned cluster center.

K-means updates in two steps:


Consider minimizing over .  The only term in C(.) that depends on  is the distance of data point i itself: .  Clearly, this will be minimized by selecting the closest cluster center .


Now consider minimizing over some cluster center  given z.  The only terms in C(.) that depend on  are those for which , i.e., the distances of the data points that are currently assigned to cluster c.  It is straightforward to show that the minimum sum of squared distances is achieved by setting  equal to the mean of the data assigned to that cluster:


This process is then repeated until convergence.  To see that it converges, note that each step is decreasing the cost function (no update will ever increase the cost function) and that the cost function is bounded below (it is greater than zero).  In practice, at some point the nearest cluster center to each data point will be the one already assigned to it, meaning that the z variables do not change; then, the cluster centers will not change either, since they are already equal to the mean of those data.  Then, obviously, the z's will not change at the next iteration either, and the system is converged.


Data (black) and initial centers (blue)z: identify closest cluster: means given z
Initialization
K-means greedily optimizes the cost function C(.), but is easily stuck in local minima.  This makes initialization important; often K-means will be run many times from different initializations, and the best run selected.

A few common means of initializing the cluster centers include:
Random: choose K points uniformly at random from the data to be the initial cluster centers 
Farthest: choose the first cluster center at random.  Then, for each subsequent cluster center, find the distance from each data point to its nearest cluster center so far.  Find the data point that is farthest from a cluster center, and select it as the next center in the list.
Often it is helpful to inject a bit of randomness into procedures like "Farthest", in part so that they can be re-run several times and the best selected.  For example, having found the distance  of each point  to  its nearest cluster center so far, one can select data point i to be the next cluster center with probability 


Example code

 % INPUTS
 % Data X : n-by-d
 % # of clusters K
 pi = randperm(n);  % initialize cluster centers, in this case
 C = X(pi(1:K),:);  %  to a random set of K data points
 z = zeros(n,1);    % allocate memory for cluster assignments
 while (~converged) 
   for i=1:n,
     dists = sum( (C - repmat(X(i,:),[K,1])).^2 , 2);  % compute distances from each cluster center
     [tmp,z(i)] = min(dists);                          % and assign datum i to the nearest cluster
   end
   for j=1:K,                      % now update each cluster center j
     C(j,:) = mean(X(z==j,:),1);   % to be the mean of the assigned data
   end
   converged = ... % compute convergence condition based on change in C, or change in sum of squared error
 end;



      

  
     Last modified June 27, 2012, at 10:07 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/BayesClassify
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / BayesClassify
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          BayesClassify


Probability, Classifiers, and Bayes Error
Bayes Rule and Classifiers
Bayes rule is used to compute the posterior probability of a variable, say a class c, having value C given that we have observed another variable x having value X.

Here,  is the probability of our observations X under class C, and  is the prior probability of seeing class C.

The Bayes-optimal strategy (i.e., the strategy with lowest probability of error) is then given by simply choosing to predict the value of C that has the largest posterior probability.  To see this, note that we are trying to minimize the cost 

where C is the "true" value and  is our prediction based on X.

To visualize this process, we can plot the probability density function associated with each class C separately, i.e.,  as a function of x.  Since , this function will have the same shape as the class-conditional distribution , but will be scaled by the probability of class C.  Given any decision rule, the total probability of error will be the total mass of these densities that lie in the "wrong" region.  The figure shows three decision regions: one corresponding to low error rate within class c=0, one with low error rate in class c=1, and one (the Bayes optimal decision) with lowest total error. In each, the decision boundary is shown by a vertical black line, and for each class, the probability mass of data that will be classified incorrectly by that decision rule is shaded.

 for C=0,1Low class 0 errorLow class 1 errorLowest total error
Choose the most likely class given the data
Bayes Error rate
Probability of error
Variants: minimum risk for binary classifiers
Bayes classifiers and class-conditional distributions
MLE probability density estimation and classification
Our typical MLE estimate of a discrete joint probability is, for example,

For a conditional probability of some event (pattern of variables) A given another observed pattern B it is,


Overfitting in joint distribution estimates
Number of parameters in the joint probability
What happens when we observe zero counts of something?
Naive Bayes models
The Naive Bayes model assumes conditional independence among the features "x" given the class "c".  This means that, in the Bayes rule equation before, we assume that

and we can learn each feature distribution  individually.  Plugging into Bayes rule we have


Form and implications
Estimating independent feature distributions



      

  
     Last modified February 26, 2012, at 08:01 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/HierarchAC
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / HierarchAC
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          HierarchAC


Hierarchical agglomerative clustering is another popular approach for grouping data together.



      

  
     Last modified February 25, 2012, at 02:08 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/GmmEM
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / GmmEM
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          GmmEM


Gaussian mixture models are perhaps the most common model used for explaining (or modeling) data using clustering ideas.

Although standard Gaussian models are common in many situations, they are not appropriate for many problems.  For example, it is common to suppose that grades in a course should be Gaussian distributed (given enough students, of course).  However, suppose that our data consist of grades for two courses, lumped together.  If the courses have very different level of difficulty, the resulting distribution of grades will certainly not look Gaussian -- for example, the histogram might show two modes, centered at the averages within each course.  How might we model such data, that consist of a mixture of two (or more) different populations?

Mixture models address this task.  Instead of using a single Gaussian distribution, we can define a weighted sum of Gaussian components (for example, one per course).  In this case, we have a set of Gaussian parameters (mean  and covariance ) for each component, and a "mixture weight" $\pi_c$ that describes the relative proportion of data from group c in the full data.  Then, the overall distribution is a weighted average of these components:
 
where  is the standard Gaussian distribution,
 

The log-likelihood of the data under this model is given by
 
As is typical in probabilistic models, we would like to optimize the log-likelihood over the model parameters , so that the data are explained as well as possible by the model.  However, this optimization cannot be solved in closed form, in part due to the "log sum exp" form taken on by the log of a mixture of Gaussians.  One possibility, of course, is to optimize it directly via gradient ascent.  However, an augmented form will give us other possibilities, and make the connection to other clustering algorithms more clear.

GMM as Clustering
As in the above example, we typically do not know which data come from each component.  In fact, if we knew which data were which, we could more easily model the groups individually.  Alternatively, if we knew the component models, we might be able to determine which component each datum came from.  Thus identifying both the assignment of data to each component, and the "description" of the component () can be seen to be a variant of the classic formulation of clustering.

As in K-means, let us associate a variable  with each data point  to indicate which component gave rise to this particular observation.  If we were told this association, the data within each component would simply be Gaussian, and the association variables z would tell us 'which Gaussian component to evaluate.  We can use this to write down the so-called "complete" log-likelihood of the data:
 

Expect cll

,

Optim  and variat interp
Lower bound with q



      

  
     Last modified February 26, 2012, at 05:59 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/Probability
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / Probability
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          Probability


Review of probability concepts
Events
In probability, an event describes something that may or may not happen; for example, whether it will rain tomorrow, whether I will get the flu, or whether a coin will come up heads.  A probability measure tells us the "size" of these events, measured in terms of how likely they are to occur.  Denoting S the space of all possible events, and A, B individual events (subsets of S), the axioms of probability are



Random variables
Mostly we will be thinking about probability in terms of variables.  A random variable  may take on values , each of which constitutes an "event", for example .  The values of random variables are exhaustive and mutually exclusive, meaning that  cannot equal anything outside of this set (and must take on one of its values), and also cannot equal more than one value in the set (for example, x cannot be simultaneously equal to 1 and 2).  We'll use either  or  to indicate generic values for random variable .

This view allows us to specify probabilities involving  in terms of a probability mass function, the probability associated with each of its atomic events , , etc.  By the axioms of probability, and since the outcomes of x are disjoint events, we have that


Continuous-valued random variables are a bit more subtle, and involve probability density functions rather than mass functions.  In essence, a probability density function is the amount of probability "per unit area" ().  An event is defined as the variable  falling into some subset or interval, for example , and its probability mass is defined as the integral of the density over that set:

A probability density function can be greater than 1, as long as it is only over a small area; the axioms of probability dictate that the probability mass, or integral of the density, must be less than 1.


Common Distributions
Bernoulli and Multinomial Distributions
The most common types of discrete random variable distributions are Bernoulli and multinomial distributions.  The Bernoulli distribution is defined for binary-valued random variables, i.e., , and parameterized by a single parameter .  Multinomial random variables generalize Bernoulli RVs, taking on one of  values and parameterized by a vector of probabilities representing the probability of each outcome.

Gaussian Distributions
The Gaussian distribution is perhaps the most common distribution for continuous-valued random variables.  The Gaussian probability density function is given by

Univariate (one-dimensional) Gaussian distributions are parameterized by two scalar numbers, a mean  and variance  (sometimes characterized by its square root , the standard deviation).  The mean indicates the center of the Gaussian's characteristic bell-curve shape, and equals the average or expected value of the variable , while the variance or standard deviation indicates its spread, or uncertainty around the mean.

The multivariate Gaussian is a Gaussian distribution defined for a  dimensional, vector-valued random variable , or equivalently a collection of  univariate random variables.  The probability density function is given by

characterized by a mean vector , representing a point in the  dimensional space, and a  covariance matrix  representing the shape and spread of the data.  The dependence on  (in the exponential) is a quadratic form, and the shape of the equally-probable contour lines are ellipses.

Just as the square root of the variance was helpful in representing the spread in one dimension, the matrix square root can help us understand the shape and size of the uncertainty in  dimensions.  We can represent  using its eigenvector decomposition, so that  is a diagonal matrix of eigenvalues and  is a unitary matrix.  Then, the generalization of the standard deviation is , where  represents a scaling and  a rotation.

This helps us see two special cases of the Gaussian distribution.  A fully general covariance matrix has ellipsoidal uncertainty shapes; a diagonal covariance looks like an axis-aligned ellipse (no rotation), and a spherical Gaussian has a "scalar" covariance (a scalar times an identity matrix, or diagonal with all the same value).

We can draw samples from a multivariate Gaussian easily using this construction, by first sampling from a unit-variance

Understanding and generating multivariate Gaussian data
Shape, in terms of eigenvectors of Sigma
Full, diagonal, or spherical Gaussian distributions
Generating Gaussian samples
Spherical samples
Scaling
Rotation 

Density estimation
Since machine learning is primarily concerned with adapting to observed data, most of our probability models are likely to be estimated from data.

Histograms
A histogram is a simple method of estimating and visualizing a probability density function.  We bin the observed data and report the fraction of data falling into each bin.  This can be interpreted as a piecewise-constant estimator of the probability density function.

Maximum likelihood methods
Overfitting in density estimation
As in regression, it is possible to overfit to the observed data
Typically an effect of a complex density estimate given limited data


Independence and Conditional Independence
When two random events are independent, it greatly simplifies their probabilities.  Independent events do not influence each others' outcome, e.g., if two events A,B are independent, then knowing that A occurred has no influence on the probability of B occurring: .  In general, this means that the joint probabilities factor into a product:

However, in practice the variables we are interested in are related to one another somehow, and so are not completely independent.  A more useful type of independence relationship is conditional independence, in which two or more variables influence one another only through some intermediary variable.  For example, our two events A,B may be independent of one another once we control for some cause C: .  (This is an assumption about the structure of the joint distribution.)




      

  
     Last modified October 07, 2015, at 04:04 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/Bagging
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / Bagging
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          Bagging


Ensemble methods are learning algorithms that create a collection, or "ensemble" of other learning algorithms and then combine the outputs of this collection to make an overall decision.  Bagging, or bootstrap aggregation is a very simple but powerful type of ensemble method.

The basic procedure behind bagging is to create a collection of  learners, each of which was trained on only a subset of the original  training data points.  We use "bootstrap sampling", which draws a set of  data points from our data set with replacement.  Each learner draws a subset of the data and trains itself on only this subset.  To make a prediction, we evaluate each learner on the new test data point, and simply take the majority prediction.

The code for bagging is extremely simple.  Let "base" be some other type of learner (often a decision tree, but it can be anything).  Then, if Ntr and Nsub represent the full training data size and the bootstrap size respectively:

  bag = cell(1,Nl);                      % make empty collection of learners
  for i=1:Nl,
    subset = ceil(Ntr*rand(1,Nsub));     % choose a random sample with replacement
    Xs = Xtr(subset,:); Ys=Ytr(subset);  %  
    obj.bag{i} = train(base, Xs,Ys);        % and train learner #i with those data
  end;

In one sense, this can help with the overfitting phenomenon.  Since none of the individual learners is able to see the entire training data set, they cannot simply memorize it (although the overall learner still potentially can).  

In another sense, it can help move beyond limited types of decision boundaries.  For example, if our individual learners are perceptrons, they are each limited to a linear decision boundary.  However, the average of a collection of linear decisions is not itself a linear decision.  




      

  
     Last modified February 25, 2012, at 01:46 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/KNearestNeighbors
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / KNearestNeighbors
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          KNearestNeighbors


Nearest Neighbor classifiers
Nearest-neighbor rules for classification are some of the most intuitive types of classifiers to consider.
A nearest neighbor rule simply memorizes (stores) all of the training data, and when a new test point is given, compares the new point to all of the training examples, finds the nearest one, and predicts that the new point
has the same class as that one.

A k-nearest neighbor rule is a simple extension -- instead of finding the single nearest training example, find the nearest k of them, and predict the majority class value, i.e., the class to which the most of those k examples belong.

The following figures show several classifiers as a function of k, the number of neighbors used.


k=1k=3k=5
Decision boundary
An alternative representation to any classifier is its decision boundary, the places at which it changes from one decision to another.

Since the decision of a kNN classifier is defined by the nearest training examples, the decision boundary of a kNN classifier consists of those locations at which the set of the nearest training data change by (at least) one example.  A location on the boundary is one balanced between those two sets -- in other words, it must be equidistant between two training data, and since it must change the balance of the set, they must be two points in different classes.  For any two points, the set of equidistant locations is a line, perpendicular to the line joining the two points.

This means the decision boundary is locally linear (piecewise linear); this appearance can be easily seen in a small enough set of training data.  By a similar argument, the transitions between linear segments must be equidistant from at least three points.

Complexity and K
The complexity of a k-nearest neighbor rule is a bit difficult to describe precisely.  Nearest neighbor methods store all of the training examples, and don't have a simple notion of complexity like we saw in linear regression.  However, consider how the training error of a k-nearest neighbor changes with k.  At k=1, evaluating the prediction at any training data point finds a data point of distance zero (itself), and is guaranteed to predict the correct class.  As k increases, this may no longer be true -- points of class 0 that are completely surrounded by points of class 1 are unlikely to predict their class correctly.  As the following images suggest, as k is increased further the classifier is less able to memorize the data, reducing the complexity of the learner.


k=1k=3k=5k=11k=21
Example code
Here is some example k nearest neighbor code in Matlab.


 classdef knnClassify < supLearn
 % Class implementing K-nearest-neighbors classifier    properties (SetAccess=private, GetAccess=private)
     K=1;
     Xtrain=[];  % Training features, Ndata x Nfeatures      Ytrain=[];  % Training classes, Ndata x 1    end;
   methods
     % Constructor (takes zero arguments or 3)      function obj = knnClassify(K,Xtr,Ytr)
       if (nargin > 0)
         obj.K = K;
         obj.Xtrain = Xtr;
         obj.Ytrain = Ytr;
       end;
     end

     % set parameter K if desired      function obj=setK(obj, K)
       obj.K = K;
     end  

     % Batch training: just memorize data      function obj=train(obj, Xtr,Ytr)
       obj.Xtrain = Xtr;
       obj.Ytrain = Ytr;
     end

     % Test function: predict on Xtest      function Yte = predict(obj,Xte)
       [Ntr,Mtr] = size(obj.Xtrain);         % get size of training, test data        [Nte,Mte] = size(Xte);
       classes = unique(obj.Ytrain);         % figure out how many classes & their labels        Yte = repmat(obj.Ytrain(1), [Nte,1]); % make Ytest the same data type as Ytrain        K = min(obj.K, Ntr);                  % can't have more than Ntrain neighbors        for i=1:Nte,                          % For each test example:          dist = sum( bsxfun( @minus, obj.Xtrain, Xte(i,:) ).^2 , 2); % compute sum of squared differences          [tmp,idx] = sort(dist);             % find nearest neighbors over Xtrain (dimension 2)          cMax=1; NcMax=0;                    % then find the majority class within that set of neighbors          for c=1:length(classes),
           Nc = sum(obj.Ytrain(idx(1:K))==classes(c)); % count up how many instances of that class we have            if (Nc>NcMax), cMax=c; NcMax=Nc; end;       % save the largest count and its class id          end;
         Yte(i)=classes(cMax);               % save results        end;
     end

 end % end methods  end % end class 



      

  
     Last modified January 25, 2011, at 06:28 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/Classification
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / Classification
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          Classification


Classifiers
When the signal we wish to predict is discrete-valued, we call the problem of supervised learning classification.
A classifier is, at heart, a recipe for making a decision, since it must select (predict) one of the discrete outcomes.

Classification boundaries
One natural way to describe a classifier is through its boundary, the set of points at which it transitions from making one decision to another.  (For a binary classifier, this almost completely describes the classifier.)  By understanding what types of classification boundaries can be obtained by a type of learner, we can understand when it is likely to work well, and when poorly.  

Classification accuracy
The most common way of measuring the performance of a classifier is to simply measure the accuracy of the classifier (fraction of the time we expect it to output the correct answer), or conversely, the error rate (fraction of the time we expect it to be incorrect).  We can measure the empirical error rate by simply counting the fraction of data points on which our prediction is wrong:

where the Kroneker  function is 1 if the condition is satisfied, and zero otherwise.
We can compute the empirical error rate on the training data (training error) or on validation or test data (test error).

Separability
A data set is said to be separable by a particular learner if there is some instance of that learner (i.e., a setting of the parameters) that will perfectly predict the training data.  In this case, the learned function is able to exactly reproduce the target values on those data points, "separating" the classes.



      

  
     Last modified January 16, 2014, at 03:23 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/LinearClassify
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / LinearClassify
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          LinearClassify


Linear classifiers
A linear classifier is one whose decision function is a linear function of the input features, e.g., for a binary classifier between classes , a decision of the form

where  is our usual vector of feature values, and  is a vector of weights.
Note here that we have used classes , rather than our usual  binary classes, to highlight that our decision rule is choosing the "sign" of the linear response .

Linear classifiers are sometimes called "perceptrons", their historical name when proposed by Rosenblatt and studied in the early days of artificial intelligence; they are a very simple type of neural network.

The decision boundary for a linear classifier is also linear.  The decision boundary are the points at which we transition from decision +1 to decision -1; in our example, this occurs at precisely the solution to the linear equation .  For example, for two features  we can solve to find the decision boundary, which is a line in the two-dimensional feature space:


Linearly separable data
It is useful to differentiate between data sets that can be linearly separated, i.e., there exists a linear classifier that achieves zero training error, and those that cannot.  A few examples are shown here, for both real-valued features and binary-valued features:


Linearly separableNot linearly separable"AND" (Linearly separable)"XOR" (Not lin. sep.)
As can be seen, a perceptron / linear classifier cannot correctly learn an exclusive or (XOR) function, a result famously discussed by Minsky and Papert in 1969.

Training linear classifiers
What makes a good classifier?  The usual measure of error for classification is the classification error, or misclassification rate -- the number of mistakes (misclassifications) made on the data.  Typically, we would like to minimize the misclassification rate over the training data, by finding a set of parameters (weights) that make few errors.  As with linear regression, we can notionally think about exploring the space of parameters, assigning each point a cost, and searching for the point with minimum cost.

However, the misclassification rate is often difficult to optimize directly.  First, it is not smooth -- it changes value only when the decision boundary passes a data point, so it is constant until it changes abruptly one way or the other.  There is thus very little "signal" about which direction we should modify the parameters, in order to reduce the error.  Another consequence of such "flat" values can be seen when the data are linearly separable -- there may be a large set of linear classifiers that achieve zero error, but intuitively we can guess that some are likely to be better than others.  Classification accuracy alone, however, judges these classifiers exactly the same way.


Two linear classifiers with zero training error
Such difficulties motivate the use of "surrogate" loss functions -- error functions that we can use to replace the classification error that will be easier for us to optimize.  The typical training approach is to learn parameters to optimize the surrogate loss, and hope (sometimes with good reason) that this also produces good classification accuracy.

Linear classification as a regression problem
The linear classifier has the form of thresholding a linear function of the features.  How can we learn a good linear function?  One simple way we could consider is just to learn a linear predictor of the class in the regression sense, and then threshold that value.  So, for example, we define a variable , equal to the class value c, to predict using regression.  We then regress the data  to find parameters , and finally, we define our (real-valued) regression prediction as  and our discrete class prediction as .

This is an example of a surrogate loss.  We are normally interested in our misclassification rate, i.e., the fraction of data on which , or:

But, our training of the model parameters  using linear regression actually minimizes a different cost, the MSE of a linear predictor:

So the model we find will have a good , but will it also have a good ?

In some cases it will, and in some it will not.




      

  
     Last modified January 06, 2015, at 01:05 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://sli.ics.uci.edu/Classes-CS178-Notes/LogisticReg
##-----------------TITLE------------------------##
SLI | Classes-CS178-Notes / LogisticReg
##------------------TEXT------------------------##
(?)
  

  
        Classes
Group
Research
Publications
Code




        login



        
          Classes-CS178-Notes /
          LogisticReg


Logistic regression is used for predicting values between zero and one -- for example, probabilities.  For this reason it is commonly used as a binary classification method, where the two class values are taken to be zero or one.

The logistic function has a "sigmoid" shaped response, i.e., it looks like a flattened-out "S".  Its functional form, and its derivative, are given by


We use the logistic function as a soft thresholding operation, to replace the perceptron's hard threshold T().  We maintain the linear "internal" form, i.e., given a feature vector x and parameters , often called the "weights" of the learner, our regression prediction is:

This gives a real-valued prediction between zero and one.

 function value = logistic(theta, X)
 % Evaluate a logistic regression function with parameters theta    [n,d] = size(X);
   X = [ones(n,1), X];  % Add a constant feature    z = ( wts * X' )';   % Compute linear response    value = 1./(1+exp(-z));

In classification, of course, we need to predict a discrete class value; just as with the perceptron, we can simply threshold our real-valued predictor:


Because the logistic is smooth, we will be able to train it using gradient descent.

In your homework, you are asked to perform online gradient descent.  In online gradient descent, we define a cost function relative to a single data point i, for example the squared error of that data point alone: .  As in standard gradient descent, we calculate the derivative of :

and use this gradient to make an update to the parameter vector , using a step-size parameter :


In Matlab, this is:

  [n,d] = size(Xtrain);
  Xtrain1 = [ones(n,1), Xtrain];            % Add a constant feature
  for i=1:n,
    sigmaxi = logistic(theta,Xtrain(i,:));  % compute the ith prediction
    grad = (sigmaxi - Ytrain(i)) * (sigmaxi)*(1-sigmaxi) * Xtrain1(i,:);
    theta = theta - stepsize * grad;        % take a step down the gradient
  end;
  Yhat = logistic(wts, Xtrain);             % compute all outputs
  mse(iter) = mean( (Ytrain-Yhat).^2 );     % and the overall MSE




      

  
     Last modified March 21, 2012, at 06:31 PM
    
    Bren School of Information and Computer Science
    University of California, Irvine
##------------------URL-------------------------##
http://www.ics.uci.edu/~gabe/projects.html
##-----------------TITLE------------------------##
Gabor Madl
##------------------TEXT------------------------##
AboutPublicationsProjectsContact

      
        Gabor Madl
      

    

  

  

    

      The open-source Distributed Real-time Embedded Analysis Method (DREAM) project

	
		Key challenges in the design, development and analysis of distributed real-time embedded (DRE) systems include safe composition of system components, formal analysis of real-time properties,  the systematic measurement of coverage by simulations, and the automated generation of directed test vectors. Model-based technologies help address these issues by enabling design-time analysis and providing the means for the rapid evaluation of design alternatives with respect to end-to-end QoS properties, predictability and performance measures before committing to a specific platform. The Distributed Real-time Embedded Analysis Method (DREAM) is an open-source tool and method for the real-time verification and performance estimation of DRE systems. The project focuses on the practical application of formal analysis methods to real-time middleware to automate the verification, development, configuration, and integration of middleware-based DRE systems. DREAM was recently integrated in the Scenery project by Fujitsu Laboratories of America to analyze real-time properties in multi-processor system-on-chip (MPSoC) designs.

	
		Project website: http://dre.sourceforge.net
	

      Performance Estimation of Multi-processor System-on-Chip (MPSoC) Designs

	
		As more and more functionality is provided by modern embedded systems, designers need to address a growing number of QoS constraints that have traditionally been relevant to hardware design, such as real-time properties, throughput, and energy consumption. Existing design methodologies focus on software structure and syntax, and cannot guarantee QoS properties. Component-based software development is an emerging paradigm to enable software reuse by composition. Components are high-level abstractions of software, that allow designers to focus on the essential characteristics of embedded software. Component-based software development provides the means to build reliable software from reliable building blocks. The analysis of component-based software, however, is still in its infancy. Software engineers are often unfamiliar with formal methods, and the required costs for analysis can often be justified only in the context of mission-critical systems. We are currently investigating the application of formal methods for the performance estimation of embedded HW/SW designs.
	

      Alderis@UCI

	
		The Alderis project focuses on the application of Domain Specific Modeling Languages (DSMLs) and meta-modeling to specify a common semantic domain for the analysis of distributed real-time embedded (DRE) systems. The Alderis language has both a visual and textual syntax with formally defined semantics. Alderis models can be verified directly by the open-source DREAM tool.
	

	
		Project website: http://alderis.ics.uci.edu
	

    

    
      Valid XHTML & CSS
##------------------URL-------------------------##
http://www.ics.uci.edu/~gabe/contact.html
##-----------------TITLE------------------------##
Gabor Madl
##------------------TEXT------------------------##
AboutPublicationsProjectsContact

      
        Gabor Madl
      

    

  

  

    

      E-mail

	
		Please contact me with any questions or suggestions by e-mail at the gabe at ics dot uci dot edu address.
	    

    
      Valid XHTML & CSS
##------------------URL-------------------------##
http://www.ics.uci.edu/~gabe/index.html
##-----------------TITLE------------------------##
Gabor Madl
##------------------TEXT------------------------##
AboutPublicationsProjectsContact

      
        Gabor Madl
      

    

  

  

    

    

      About me

	
		My name is Gabor Madl (Resume, LinkedIn profile). I am a Senior Software Engineer at IBM Almaden Research Center. My research background is in model-based design, formal verification, safety-critical systems, and cloud system analytics. For a summary of my work at UC Irvine, please see my Ph.D. dissertation and final defense.
	
		Gabor Madl: Model-based Analysis of Event-driven Distributed Real-time Embedded Systems, Ph.D. Dissertation, University of California, Irvine, June 2009.
	

	
		Gabor Madl: Model-based Analysis of Event-driven Distributed Real-time Embedded Systems, Final Defense Presentation, University of California, Irvine, May 2009.
	

    

    
      Valid XHTML & CSS
##------------------URL-------------------------##
http://www.ics.uci.edu/~gabe/publications.html
##-----------------TITLE------------------------##
Gabor Madl
##------------------TEXT------------------------##
AboutPublicationsProjectsContact

      
        Gabor Madl
      

    

  

  

    

      Copyright information

	
		The papers below are covered by copyright. They are provided for personal use only and may not be distributed.
	

      Award

	
		2007: The ACM SIGBED/SIGSOFT Frank Anger Memorial Award for promoting the crossover of ideas between the embedded software and software engineering communities.
	

      Ph.D. Dissertation

	
		Gabor Madl: Model-based Analysis of Event-driven Distributed Real-time Embedded Systems, Ph.D. Dissertation, University of California, Irvine, June 2009.
	

	
		Gabor Madl: Model-based Analysis of Event-driven Distributed Real-time Embedded Systems, Final Defense Presentation, University of California, Irvine, May 2009.
	

      Journal Publications

	
		David Oglesby, Gabor Madl, Rachana Labh, Ted Schlossmacher, Paria Moazzemi: Automated Verification of Model-Based Design and Code Synthesis, The Exponent - Honeywell Technology Journal, Volume 5, Issue 1, May 2013.
	

	
		Gabor Madl, Sudeep Pasricha, Nikil Dutt, Sherif Abdelwahed: Cross-abstraction Functional Verification and Performance Analysis of Chip Multiprocessor Designs, IEEE Transactions on Industrial Informatics, Special Section on Real-time and (Networked) Embedded Systems (accepted for publication), 2009.
	

	
		Gabor Madl, Sherif Abdelwahed, Douglas C. Schmidt: Verifying Distributed Real-time Properties of Embedded Systems via Graph Transformations and Model Checking (unformatted draft), Real-Time Systems, Special Issue: Invited Papers from the 25th IEEE International Real-Time Systems Symposium, Volume 33, Numbers 1-3, Pages 77-100, July 2006. Bibtex.
	

	
		Chulho Shin, Peter Grun, Nizar Romdhane, Christopher Lennard, Gabor Madl, Sudeep Pasricha, Nikil Dutt, Mark Noll: Enabling heterogeneous cycle-based and event-driven simulation in a design flow integrated using the SPIRIT consortium specifications, Design Automation for Embedded Systems, Volume 11, Numbers 2-3, September 2007. Bibtex.
	

	
		Dror G. Feitelson, Tokunbo O. S. Adeshiyan, Daniel Balasubramanian, Yoav Etsion, Gabor Madl, Esteban P. Osses, Sameer Singh, Karlkim Suwanmongkol, Charlie Xie, and Stephen R. Schach: Fine-Grain Analysis of Common Coupling and its Application to a Linux Case Study, Journal of Systems and Software, Volume 80, Issue 8, Pages 1239-1255, August 2007.  Bibtex.
	

	
		Stephen R. Schach, Tokunbo O. S. Adeshiyan, Daniel Balasubramanian, Gabor Madl, Esteban P. Osses, Sameer Singh, Karlkim Suwanmongkol, Minhui Xie, and Dror G. Feitelson: Common Coupling and Pointer Variables, with Application to a Linux Case Study, Software Quality Journal, Volume 15, Number 1, Pages 99-113, March 2007. Bibtex.
	

      Conference Publications

	
		Devesh Bhatt, Kirk Schloegel, Gabor Madl, David Oglesby: Quantifying Error Propagation in Data Flow Models, Proceedings of ECBS, 2013.
	

	
		Devesh Bhatt, Gabor Madl, David Oglesby, Kirk Schloegel: Towards Scalable Verification of Commercial Avionics Software, Proceedings of the AIAA Infotech@Aerospace Conference, April 2010. Bibtex.
	

	
		Gabor Madl, Nikil Dutt, Sherif Abdelwahed: A Conservative Approximation Method for the Verification of Preemptive Scheduling using Timed Automata, Proceedings of the 15th IEEE Real-time and Embedded Technology and Applications Symposium (RTAS), Pages 255-264, April 2009. Presentation. Bibtex.
	

	
		Gabor Madl, Nikil Dutt: Real-time Analysis of Resource-Constrained Distributed Systems by Simulation-Guided Model Checking, Ph.D. Forum, the 28th IEEE International Real-Time Systems Symposium, December 2007. Presentation. Bibtex.
	

	
		Gabor Madl, Nikil Dutt, Sherif Abdelwahed: Performance Estimation of Distributed Real-time Embedded Systems by Discrete Event Simulations, Proceedings of EMSOFT, Pages 183-192, October 2007. Presentation. Bibtex.
	

	
		Gabor Madl, Sudeep Pasricha, Qiang Zhu, Luis Angel D. Bathen, Nikil Dutt: Formal Performance Evaluation of AMBA-based System-on-Chip Designs, Proceedings of EMSOFT, Pages 311-320, October 2006. Presentation. Bibtex.
	

	
		Gabor Madl, Sherif Abdelwahed: Model-based Analysis of Distributed Real-time Embedded System Composition, Proceedings of EMSOFT, Pages 371-374, September 2005. Presentation. Bibtex.
	

	
		Gabor Madl, Sherif Abdelwahed, Gabor Karsai: Automatic Verification of Component-Based Real-Time CORBA Applications, Proceedings of the 25th IEEE International Real-Time Systems Symposium (RTSS), Pages 231-240, December 2004. Presentation. Bibtex.
	

	
		Peter Grun, Chulho Shin, Chris Baxter, Christopher Lennard, Mark Noll, Gabor Madl: Integrating a multi-vendor ESL-to-silicon design flow using SPIRIT, IP-SoC, December 2005. Presentation. Bibtex.
	

      Workshop Publications

	
		Linda Briesemeister, Grit Denker, Daniel Elenius, Ian Mason, Srivatsan Varadarajan, Devesh Bhatt, Brendan Hall, Gabor Madl, Wilfried Steiner: Quantitative Fault Propagation Analysis for Networked Cyber-Physical Systems, In Proceedings of AVICPS, 2011.
	

	
		Gabor Madl, Nikil Dutt: Domain-specific Modeling of Power Aware Distributed Real-time Embedded Systems, Proceedings of the 6th Workshop on Embedded Computer Systems: Architectures, Modeling, and Simulation (SAMOS), Pages 59-68, July 2006. Presentation. Bibtex.
	

      Technical Report

	
		Brendan Hall, Kevin R. Driscoll, Gabor Madl: Investigating System Dependability Modeling Using AADL, NASA Technical Report NASA/CR-2013-217961, 2013.
	

	
		Gabor Madl, Brendan Hall, Kevin R. Driscoll: System-level Modeling and Analysis of Byzantine Fault-tolerance, Honeywell Technical Report, 2013.
	

	
		Kevin R. Driscoll, Gabor Madl, Brendan Hall: Modeling and Analysis of Mixed Synchronous/Asynchronous Systems, NASA Technical Report NASA/CR-2012-217765, 2012.
	

	
		Sam Owre, Natarajan Shankar, Devesh Bhatt, Gabor Madl, David Oglesby: An Evidential Tool Bus for Flight-Critical Software: Draft Option Year 1 Report, SRI Technical Report, October 2012.
	

	
		Grit Denker, Linda Briesemeister, Daniel Elenius, Shalini Ghosh, Ian Mason, Ashish Tiwari, Devesh Bhatt, Haftay Hailu, Gabor Madl, Siamak Nikbin, Srivatsan Varadarajan, Guenther Bauer, Wilfried Steiner, Xenofon Koutsoukos, Tihamer Levendovszky: META II: Probabilistic, Compositional, Multidimension Model-Based Verification (PROMISE), DARPA Final Report, October 2011.
	

	
		Gabor Madl, Nikil Dutt: Tutorial for the Open-Source DREAM Tool, Draft v1.2, CECS technical report, 2006. Bibtex.
	

	
		Gabor Madl, Sherif Abdelwahed: Formal Verification of Distributed Preemptive Real-time Scheduling, ISIS Technical Report, 2005. Bibtex.
	

      Poster

	
		Gabor Madl, Nikil Dutt, Sherif Abdelwahed: Model-based Design and Analysis of Distributed Real-time Embedded Systems, Poster, Bren Hall Dedication 2007.
	

	
		Gabor Madl, Nikil Dutt, Sherif Abdelwahed: Distributed Real-time Embedded Analysis Method - DREAM, Poster, Emsoft 2005.
	

	
		Gabor Madl, Tivadar Szemethy, Sherif Abdelwahed, Gabor Karsai, Janos Sztipanovits: Embedded System Verification via Platform Modeling, Model Transformations and Model Checking, Poster, ITR review, UC Berkeley, November, 2004.
	

    

    
      
		Valid XHTML & CSS
##------------------URL-------------------------##
http://sprout.ics.uci.edu/projects/attestation/people.html
##-----------------TITLE------------------------##
Remote Attestation of Embedded Devices
##------------------TEXT------------------------##
Remote Attestation of Embedded Devices
		
      
	  
		
			Home
		  
			People
		  
			Publications
		  
      
	  
	        
		 Aurelien Francillon
		
	        
		  Quan Nguyen
		
		
		  Daniele Perito
		
	        
		  Kasper Bonne Rasmussen
		
		
		  Gene Tsudik
		
	  
	  
        
		  Copyright 2010, sprout.ics.uci.edu
        
        
		  webmaster
##------------------URL-------------------------##
http://sprout.ics.uci.edu/projects/attestation/index.html
##-----------------TITLE------------------------##
Remote Attestation of Embedded Devices
##------------------TEXT------------------------##
Remote Attestation of Embedded Devices
		
      
	  
		
			Home
		  
		    People
		  
			Publications
		  
      
	  
		
		
Embedded computing devices (such as actuators, controllers and sensors of various sizes) increasingly permeate many aspects of modern life: from medical to automotive, from building and factory automation to weapons,
from critical infrastructures to home entertainment. Despite their specialized nature as well as limited resources and connectivity, these devices are now becoming an increasingly popular and attractive target for attacks, especially, malware infestations. A number of research proposals have been made to detect and/or mitigate such attacks. They vary greatly in terms of application generality and underlying assumptions. However, one common theme is the need for Remote Attestation, a distinct security service that allows a trusted party (verifier) to check the internal state of a remote untrusted embedded device
(prover).

In this project, we stay clear of both efficient-but-limited 
software-based techniques and heavy-weight TPM-based 
approaches to attestation. We focus on the design space
area that has not been previously explored by utilizing
a software/hardware co-design approach to architect an
attestation mechanism with minimal hardware requirements.
		
	  
	  
        
		  Copyright 2010, sprout.ics.uci.edu
        

        
		  webmaster
##------------------URL-------------------------##
http://sprout.ics.uci.edu/projects/attestation/publications.html
##-----------------TITLE------------------------##
Remote Attestation of Embedded Devices
##------------------TEXT------------------------##
Remote Attestation of Embedded Devices
		
      
	  
		
			Home
		  
			People
		  
			Publications
		  
      
	  
		Publications
		 A. Francillon, Q. Nguyen, K.B. Rasmussen and G. Tsudik 

Systematic Treatment of Remote Attestation (ePrint)
IEEE/ACM Design, Automation, and Test in Europe (DATE), 2014. Q. Nguyen 

Issues in Software-based Attestation
CyberSecurity for the Next Generation, North American Round, 2012.K. Eldefrawy, A. Francillon, D. Perito and G. Tsudik SMART: Secure and Minimal Architecture for (Establishing Dynamic) Root of Trust
ISOC Symposium on Network and Distributed System Security (NDSS), 2012.D. Perito and G. Tsudik
Secure Code Update for Embedded Devices via Proofs of Secure Erasure
European Symposium on Research in Computer Security (ESORICS), 2010.
	  
	  
        
		  Copyright 2010, sprout.ics.uci.edu
        

        
		  webmaster
##------------------URL-------------------------##
http://sprout.ics.uci.edu/projects/privacy-dna/pubs.html
##-----------------TITLE------------------------##
Security and Privacy in Genomics
##------------------TEXT------------------------##
S.P.I.G.
		Security and Privacy in Genomics
	

	
	
	
	
		Site Pages
	
		
			HomeCodePublications
		
	

		  
	
	
	

	
        Publications
        
        Emiliano De Cristofaro, Sky Faber, Gene Tsudik
                Secure Genomic Testing with Size- and Position-Hiding Private Substring Matching
                12th ACM Workshop on Privacy in the Electronic Society (WPES 2013)
            Erman Ayday, Emiliano De Cristofaro, Jean-Pierre Hubaux, Gene Tsudik
                The Chills and Thrills of Whole Genome SequencingIEEE Computer, to appear, 2013
                Also presented as a poster at Usenix Security 2013 and discussed at HotSec 2013
            Emiliano De Cristofaro, Sky Faber, Paolo Gasti, Gene Tsudik
                GenoDroid: Are Privacy-Preserving Genomic Tests Ready for Prime Time?
                11th ACM Workshop on Privacy in the Electronic Society (WPES 2012)
                Media Coverage: [NewScientist]
                [Privacy Surgeon]
                [UCIrvine News]
                [OC Register]
                
                [IEEE Computer Society]
                [MHealthWatch]
                [FierceMobileHealthCare]
                [OC Weekly]
                
                [UCIrvine News]
                [KPCC]
                [KTLA]
                [eWEEK]
                [About]
                [MobiHealth News]
                
                
            
                Pierre Baldi, Roberta Baronio, Emiliano De Cristofaro, Paolo Gasti, Gene Tsudik 
                Countering GATTACA: Efficient and Secure Testing of Fully-Sequenced Human Genomes 
                18th ACM Conference on Computer and Communications Security (CCS 2011) 
                Media Coverage: [MIT Technology Review]
                [NewScientist]
                [Kurzweilai]
            
        
        
        
        
        
        
    
	
    
	
	
		Webmaster S. Faber
##------------------URL-------------------------##
http://sprout.ics.uci.edu/projects/privacy-dna/code.html
##-----------------TITLE------------------------##
Security and Privacy in Genomics
##------------------TEXT------------------------##
S.P.I.G.
		Security and Privacy in Genomics
	

	
	
	
	
		Site Pages
	
		
			HomeCodePublications
		
	

		  
	
	
	

	
	
	Code
    Privacy-preserving Genomic Testing Toolkit: genodroid.tar.gz
        
        
        
        
        
        
    
    
    
    

    
	
	
		Webmaster S. Faber
##------------------URL-------------------------##
http://sprout.ics.uci.edu/projects/privacy-dna/index.html
##-----------------TITLE------------------------##
Security and Privacy in Genomics
##------------------TEXT------------------------##
S.P.I.G.
		Security and Privacy in Genomics
	

	
	
	
	
		Site Pages
	
		
			HomeCodePublications
		
	

		  
	
	
	

	
	
    Highligts
     Recent advances in DNA sequencing technologies have put ubiquitous availability of fully sequenced human genomes within reach. It is no longer hard to imagine the day when everyone will have the means to obtain and store one's own DNA sequence. Widespread and affordable availability of fully sequenced genomes immediately opens up important opportunities in a number of health-related fields. In particular, common genomic applications and tests performed in vitro today will soon be conducted computationally, using digitized genomes. New applications will be developed as genome-enabled medicine becomes increasingly preventive and personalized. However, this progress also prompts significant privacy challenges associated with potential loss, theft, or misuse of genomic data. 
    We begin to address genomic privacy by focusing on a number of important applications: Paternity Tests, Ancestry Testing, Personalized Medicine, and Genetic Compatibility Tests. We investigate real-world practicality and usability of (as well as interest in) some of proposed privacy-preserving genomic tests.
    Motivated by both medical and social applications, we aim to test viability of privacy-agile computational genomic tests in a portable and pervasive setting of modern smartphones. We also design a personal genomic toolkit (called GenoDroid) and implement it on the Android platform.
    FatherFinder – an Android app that, on input of two simulated genomes, compute the paternal lineage between the two without revealing any other information about either parties DNA, is available from Google Play.
    
    
    
    
    
    People
    Emiliano De Cristofaro, Computer Science Dept., University College LondonSky Faber, Computer Science Dept., UC IrvinePaolo Gasti, Computer Science Dept., New York Institute of TechnologyGene Tsudik, Computer Science Dept., UC Irvine
    
    Collaborators
    Pierre Baldi, Institute for Genomics and Bioinformatics., UC IrvineRoberta Baronio, Institute for Genomics and Bioinformatics., UC Irvine
	
    
	
	
		Webmaster S. Faber
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/cs141/FinalGrades.html
##-----------------TITLE------------------------##
CompSci 141 / CSE 141 / Informatics 101 Spring 2013, Final Course Grades
##------------------TEXT------------------------##
CompSci 141 / CSE 141 / Informatics 101 Spring 2013 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








CompSci 141 / CSE 141 / Informatics 101 Spring 2013
   Final Course Grades







Explanation (please read this first!)

Please spend a couple of minutes reading this section.  It will answer many of the questions that you may have about the grading process, and will save you a lot of upset waiting for a response to an email question.

Here are the final grades for CompSci 141, CSE 141, and Informatics 101.  By University regulations, at this stage, the cutpoints and the grades are non-negotiable, unless we made a clerical error, such as recording a score incorrectly.  (Seriously!  This means you!  Despite this warning, I often get at least an email that begins with a phrase like "I know you said that the cutpoints are non-negotiable, but..."  There is no "but" here.)  We also can no longer accept new regrade requests on the projects.

There were 47 points possible on the Final.  The average score on the Final was 31.72 (67.49%), with a high score of 47.

How do I know which scores are mine?

Each student is identified here by a Rank, beginning with the highest overall percentage and ending with the lowest.  Each of you should have received an email from me (at your @uci.edu email address) identifying your rank.

What do the columns mean?

Here is an explanation of the various columns:

The Rank column is a rank, from highest to lowest, for each student.The Proj1..Proj5 columns are your raw scores on each project.The ProjTotal column lists the weighted sum of the scores on the projects, with each score adjusted to a 100-point scale (because each, ultimately, had an equal weight).  The total number of points possible on all the projects was 500.  There is also a column titled AdjProjTotal;  this contains your total project score after adjusting it for the differences between graders.  Those differences were removed by attempting to equalize the percentage of points lost, so that students in the "harder" groups ended up with scores that look more like those from the "easiest" group.  (Note that very low scores were not modified in this way; the assumption is that very low scores would have been very low in any group.)The MT and Final columns contain your raw scores on the Midterm and Final Exam.The TotalPct column is your overall percentage in the class, figured by adding the weighted percentages of the Midterm, Final, and AdjProjTotal, as described in the Course Reference.The Grade column indicates the grade that has been submitted.

There are a few words to be said about the selection of cutpoints.  People are cutpoints; whole-numbered percentages are not.  That means that the cutpoint for a particular grade is simply the lowest-scoring person who received that grade.  For the sake of argument, if you received a percentage of 54.99% in the class, and someone who received a 55.52% received a higher grade than you (with no person in between), you didn't miss the cutpoint by 0.01%; you missed it by 0.53% — a substantial margin.



Enjoy your summer.  I hope I'll see you again sometime.







The grades

RankProj1Proj2Proj3Proj4Proj5ProjTotalAdjProjTotalMTFinalTotalPctGrade143.5633.54470.45476.35504797.43%A+2446643.5487.50492.0249.54596.38%A+344603.53.5465.91478.23504595.84%A+444613.54479.92479.9246.54795.62%A+543.56544485.98488.784943.594.62%A63.53.5603.54453.41467.88464693.76%A744653.54485.98485.9846.54392.58%A83.546344482.95482.95444491.81%A9446044490.91492.72464090.14%A1044643.54484.47484.474640.590.07%A11436644475.00479.99483989.68%A123.54583.54462.88476.294441.589.28%A1344663.54487.50489.994439.588.40%A1444613.54479.92487.184141.588.20%A1544633.54482.95489.1144.538.587.79%A16446644500.00500.0039.54187.68%A1743.5633.54470.45470.4539.54387.61%A1843.5663.54475.00482.404339.587.37%A1943.5633.52.5432.95452.814341.587.30%A2034513.53.5427.27441.7844.54187.07%A21446643.5487.50489.9940.53985.96%A22346044465.91478.2341.53985.83%A2333.5593.53.5426.89453.3139.541.585.31%A24446644500.00500.0040.537.585.28%A25446644500.00500.00443585.17%A263.53.5663.54462.50473.6032.544.585.04%A273.54662.54450.00459.9838.54184.70%A28336644450.00465.53374184.17%A293.54623.54468.94468.94453583.89%A3043.56043.5465.91472.713838.583.05%A3124653.54435.98455.86393983.04%A323.54663.54475.00479.9938.537.582.93%A3344653.53.5473.48481.3437.53882.86%A3444603.54478.41486.21413582.61%A353.546643.5475.00482.763936.582.53%A363.54663.54475.00475.0038.53782.20%A373.53643.53.5434.47454.82364082.10%A38446144492.42495.163934.581.57%A3944623.54481.44481.4444.53180.94%A40446644500.00500.003833.580.43%A413.54663.53450.00465.533736.580.34%A42336444446.97462.6730.54180.25%A433.54633.54470.45481.133635.579.85%A4434523.54441.29462.5135.53779.72%A45446544498.48498.9332.53679.32%A-463.53.5603.54453.41467.2032.53879.12%A-4734633.52.5420.45445.1632.53978.65%A-4843.5663.54475.00482.4033.535.578.48%A-4943663.51.5400.00411.65373878.39%A-5033.5633.54445.45461.603436.578.38%A-513.54603.54465.91476.0037.53378.28%A-523.54573.53.5448.86459.0735.535.578.24%A-5344663.54487.50491.38373278.06%A-5444663.54487.50487.5043.527.577.75%A-5544663.54487.50491.3838.530.577.65%A-563.53593.54439.39439.3941.53277.54%A-573.53.5623.54456.44472.18333577.16%A-5844600.54403.41403.41314176.98%A-59346043.5453.41462.7036.53376.91%A-6044563.54472.35472.35343476.89%A-612.53.56634425.00439.963535.576.80%A-623.53623.53.5431.44431.4435.53576.15%B+6333.5663.53.5437.50456.91313675.94%B+6434533.53.5430.30455.49283875.82%B+6534583.54450.38468.31313575.77%B+6624663.53.5425.00452.1035.53375.69%B+67445544483.33483.33323375.55%B+6843663.53437.50449.9737.531.575.44%B+693.54573.54461.36461.36313575.35%B+7042603.53.5415.91415.9138.53375.25%B+7143.5633.52.5432.95452.8138.53074.91%B+72046323.5332.95353.7735.53974.90%B+73346344470.45476.3531.53374.84%B+74436542.5435.98435.9828.537.574.52%B+7534633.53.5445.45461.602438.574.31%B+7624603.54428.41450.64363174.19%B+77436244468.94468.94283574.08%B+783.54603.53.5453.41462.70333274.03%B+7944663.53.5475.00479.9927.534.574.03%B+8033463.52.5369.70416.7932.535.573.97%B+8134663.54462.50469.9831.53273.61%B82445232403.79403.793335.573.48%B8342.5653.54448.48463.743728.573.43%B84334722.5333.71393.81373373.06%B8533523.53.5403.79432.27243972.97%B8643483.53.5422.73445.61402772.79%B8744603.54478.41482.723229.572.53%B8832653.53385.98427.1925.537.572.26%B89345734436.36459.3637.52772.17%B903.53.56042.5428.41454.2832.530.571.96%B9144603.53.5465.91476.00283271.95%B9242.5543.52381.82416.81402871.92%B93446644500.00500.002631.571.81%B94436343.5457.95471.01283271.65%B9504572.54348.86348.863336.571.03%B9644663.54487.50489.9931.527.570.98%B9723.5573.53386.36409.0326.536.570.89%B9824593.54426.89453.3130.530.570.75%B9943.5573.54461.36469.073923.570.64%B10034603.54453.41467.2026.53270.55%B10134593.54451.89451.892732.570.35%B1023.53.5453.54430.68455.733129.570.33%B10333533.53.5405.30405.30343170.32%B10443603.53428.41449.6133.52870.13%B10544623.52431.44431.442733.569.97%B1063.53.55621334.85334.852839.569.86%B10734553.53.5433.33433.3331.53069.70%B10834613.54454.92471.21292969.68%B10933.5633.54445.45465.17292969.32%B-110146322.5332.95361.542836.568.91%B-11123.56332.5370.45396.30283468.87%B-11234603.53.5440.91459.2626.530.568.80%B-11343663.53437.50456.00203568.69%B-114416331320.45320.4538.53268.67%B-1153.53503.54425.76452.593425.568.47%B-11603.5633.53.5357.95366.343133.568.38%B-117446644500.00500.0027.52667.99%B-1183.54603.53440.91462.2628.526.566.73%B-11903543.51.5281.82299.1128.53866.73%B-1203.53.5513.53414.77441.24282866.46%B-121336033.5403.41422.68213466.41%B-12234603.52.5415.91442.0225.529.566.34%B-12324633.52.5395.45427.922431.566.33%B-124346223.5406.44434.1430.526.566.20%B-125445933439.39457.343223.565.90%C+126345734436.36449.062429.565.90%C+1273.53.5583.52.5412.88438.672827.565.88%C+128246643.5437.50456.9118.53265.32%C+12943573.52.5411.36411.36312664.69%C+130235122.5314.77381.71283064.59%C+13133.5613.52.5404.92439.2828.525.564.50%C+13244513.51389.77389.7723.531.563.75%C+1333.53.5563.54447.35447.35212963.64%C+1343.546642437.50456.00272463.36%C13502603.53.5315.91340.81332863.32%C136046034365.91365.913524.563.00%C13733.5633.52.5407.95435.21242762.94%C13833.5573.54436.36459.3623.525.562.82%C13932.5433.53365.15413.882527.562.66%C1403.53.5633.52.5420.45444.013021.562.25%C1413.53.5603.53428.41449.61242562.10%C1423.53.5573.53423.86446.411630.561.97%C1433.53533.54430.30455.49262361.90%C14433583.53.5412.88444.3625.52461.80%C145325722.5323.86359.0035.52361.60%C14643.56633437.50449.9731.51961.34%C14713603.54378.41392.8817.531.560.48%C14823603.52.5365.91407.552425.560.00%C14933592.53.5389.39422.1423.524.559.74%C1503.50503.53.5338.26360.5710.53759.18%C-15130353.54315.53315.53312658.94%C-15232603.52353.41396.812722.558.53%C-15333623.52.5393.94426.882520.557.48%C-1543.536633.5425.00448.292121.557.31%C-15532.5543.52.5369.32409.902321.556.16%C-156323632304.55343.54262456.04%C-15733.5603.53.5428.41454.2825.51655.59%C-15822.5623.53.5381.44405.0923.519.554.46%C-15902623.52281.44316.542424.553.69%C-16022.5322.53298.48345.071528.553.61%C-1613.52.5443.52354.17406.872318.553.43%C-162215832.5300.38339.081528.553.25%C-16333662.50312.50339.6726.52052.69%D+1643.53603.53.5428.41442.6914.520.552.37%D+16533.5402.51310.61310.61212451.18%D+1663.525732348.86393.612415.550.65%D+167205233278.79302.9717.52650.40%D+1683.52603.52365.91405.611619.550.16%D+169005712.5173.86184.0726.52648.46%D1703.51463.51294.70294.70232047.97%D171023432226.52289.212121.547.77%D1722.53372.51281.06281.0613.52646.78%D17322451.51230.68278.3217.52346.37%D1743.51583.53.5375.38375.3814.517.545.78%D17513473.52308.71350.741617.545.17%D17623182.52264.77315.247.525.544.94%D177233701206.06249.0419.52244.92%D17802.5173.52225.76255.3716.523.544.84%D179233532303.03342.3311.517.542.07%D-18023511.50239.77270.1211.52140.71%D-1813.50020137.50160.092518.539.77%D-18224613.50329.92355.2524035.16%I18300131169.7069.701724.534.84%D-18444020250.00250.0024028.85%I185206000140.91152.7012.5016.37%NR1860002050.0068.07004.08%NR
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/inf102/LabManual/ErlangTutorial.html
##-----------------TITLE------------------------##
Informatics 102 Spring 2012: Erlang Tutorial
##------------------TEXT------------------------##
Informatics 102 Spring 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
Code Examples |
About Alex








Informatics 102 Spring 2012
   Erlang Tutorial







Background

Erlang is a functional programming language that has direct, built-in support for concurrency — the ability to perform more than one task simultaneously on a machine — and distribution — the ability to perform cooperating tasks on multiple machines.  In an era of networked, multicore computers, concurrency and distribution are becoming increasingly important.  While Erlang doesn't do anything so special that it can't be done in other languages, it clearly demonstrates the difference between a language that allows you to build infrastructure that supports concurrency and distribution (like Java) and one that has this infrastrucfture built in.

Some of Erlang's features and syntax will be familiar from your past experience with other programming languages that you may have seen in prerequisite coursework, such as Scheme, Haskell, and Prolog.  I'll point these similarities out as they arise in this tutorial.  Though some aspects of Erlang will be familiar, where it becomes especially mind-opening is when it diverges from these similarities.









Using Erlang in the ICS labs

A reasonably-recent (good enough for us) version of Erlang is installed on the Windows workstations in the ICS labs for your use.  You can execute the Erlang interpreter from any command prompt by executing the command erl, though you may first need to execute these commands each time you start a new command prompt window:


set PATH=%PATH%;"C:\Program Files\erl5.9.0\bin"
set ERLANG_HOME="C:\Program Files\erl5.9.0"








Installing Erlang on your own machine

Erlang is open source, so downloading and installing it is free.  It is distributed as a package called Erlang/OTP.  (OTP is a library for building concurrent, fault tolerant applications.  We won't be covering OTP in this course.)  The latest version is Erlang/OTP R15B01.

Erlang/OTP is actually distributed as a source code bundle, which you can compile on many operating systems, given a C compiler and the right ancillary tools.  Downloading and compiling source code can be cumbersome, though, so there are prebuilt installations available if you know where to look; where to look depends on what operating system you want to install Erlang/OTP on.

Installing Erlang/OTP on Windows

An installer for the latest version of Erlang/OTP is available on the download page at erlang.org.  The download page lists the most recent several versions along the right-hand side; be sure you choose the latest (R15B01).  To download the Windows installer, click the download link titled R15B01 Windows binary.

After downloading the installer, execute it, then follow these steps.

The first screen is titled "Choose Components."  Accept the defaults by clicking Next.The next screen asks where you'd like to install Erlang.  The default is C:\Program Files\erl5.9.1, but I suggest something shorter (that, importantly, contains no spaces); install to C:\erl5.9.1 instead.  Either way, make a note of where you chose to install Erlang; you'll need it later.  The rest of these instructions assume you installed to C:\erl5.9.1.The next screen asks whether and where you'd like Erlang on your start menu.  Do whatever you prefer here, then click Install.

Once the installer is complete, you're not quite finished.  Next on the agenda, you'll need to alter some Windows settings that will allow you to run the Erlang interpreter from the command line.

Right-click on the My Computer icon on your desktop (or right-click it in Windows Explorer, if you can't find it on your desktop) and select Properties.  Select the Advanced tab.  Click the Environment Variables... button.  Under "System variables," find the PATH variable and add this to the end of it:


;C:\erl5.9.1\bin


Then, also under "System variables," click the New button and create a new variable named ERLANG_HOME with this value:


C:\erl5.9.1


You can now execute the Erlang interpreter from any command prompt by typing the command erl.  If, after executing the erl command, you receive the following prompt, your installation was successful:


    Eshell V5.9.1 (abort with ^G)
    1>


Installing Erlang/OTP on Other Operating Systems

A consulting company called Erlang Solutions maintains a set of documentation and downloadable files for installing Erlang R15B01 on other operating systems (and also Windows, but the "official" release for Windows is just as simple).  Head to this link.

Others maintain scrips that you can run to download the source code, compile it, and install it.  For example, this GitHub "gist" is a script that installs Erlang R15B01 on Ubuntu Linux.  It takes a while to run, but I've tested this on an Ubuntu Server 11.10 virtual machine to good effect.







The Erlang interpreter

Whether you're using it in the ICS labs or you've installed it on your own machine, the Erlang interpreter can be executed from a command prompt or terminal window using the command erl, upon which you'll see something like this:


    Eshell V5.9.1  (abort with ^G)
    1> 


An Erlang interpreter, which is also called an Erlang shell, is a lot like the interpreters for other functional languages like Scheme or Haskell; it is centrally a read-evaluate-print loop (or REPL), in which it reads an expression from the keyboard, evaluates that expression, then prints its value.  The 1> that you see when you first start the interpreter is a prompt asking you to enter an expression.  So, for example, we could type a mathematical expression, then get a response, like this:


    1> 2 + 4.
    6
    2>


Note that each expression you type into the interpreter must be terminated with a period (.) character, so this is an expression that adds the integers 2 and 4.  After evaluating the expression and printing its result (6), the interpreter asks for another expression; the prompt changes to 2> as this will be the second expression we've entered since starting the interpreter.

When you want to stop the interpreter, there are at least a couple of ways to do it.  One is to call the function q, like this:


    2> q().


Another (which at least works on Windows) is to press Ctrl+C, which terminates the interpreter immediately.  You can also restart the interpreter by typing Ctrl+G, then Enter; this is equivalent to stopping the interpreter and starting it again.  The prompts will begin from 1> again.  Also, notably, the values of variables will all be cleared, which is important since variables can only be assigned once within a particular scope; more about this later in the tutorial.

As I proceed through the examples in this tutorial, I'll do a couple of things to aid readability:

Things you should type will be in boldface, while things that the interpreter prints out will be in normal text.I'll restart the command numbers whenever I'm starting a new example.  You might want to do the same (using the Ctrl+G "abort" trick described above), to prevent variable names from one example from conflicting with variable names from another.







Numbers and mathematical operators

Erlang offers support for two kinds of numbers.

Integers, which can be written like their counterparts in many languages (including Java).
    Example integer values are 34 and 709.  Unlike Java, but like Scheme, integers can be arbitrarily large, meaning that 7621348123950871235376234786012935871235 is a perfectly legal integer value in Erlang.There is also a syntax for integers in bases other than 10.  For example, 2#100101 is 1001012 or 37.  16#fe34 is fe3416 or 65076.  This can be handy for dealing with binary, octal, and hexadecimal values, though any base from 2 through 36 is supported.
  Floating-point numbers, which are equivalent to double values in Java.  They are written using the same syntax as Java.
    Example double values are 2.54 and 2.74878e11.
  

As in most programming languages, Erlang supports basic mathematical operators: addition, subtraction, multiplication, division, and remainder (modulus).  Below are some examples:


    1> 2 + 4.
    6
    2> 6 - 8.
    -2
    3> 7 * 5.
    35
    4> 7 div 2.
    3
    5> 7 / 2.
    3.5
    6> 5 rem 4.
    1
    7> 6 rem 4.
    2
    8> 7 rem 4.
    3
    9> 8 rem 4.
    0
    10> 2 + 3 * 5.
    17
    11> (2 + 3) * 5.
    25


We can see a few things from these examples:

There are two kinds of division, indicated by different operators.  (There are two kinds of division in Java, too, but they're both written with the same operator and are differentiated by context.)
    Integer division, which is specified by the div operator, with the result of i div j being floor(i / j).
      Floating-point division, which is specified by the / operator.  Note that the / operator indicates floating-point division even when its two arguments are integers, so 7 / 2 is 3.5.
  The rem operator indicates a remainder or modulus, analogous to Java's % operator.  (The % symbol has meaning in Erlang, too; it is used for commenting, which will be familiar if you've ever seen Prolog.  Erlang's syntax is influenced in several places by the syntax of Prolog.)A fairly standard set of precedence rules govern mathematical expressions.  For example, we see in the second-to-last expression above that multiplication has a higher precedence than addition; we see in the last expression that parentheses can be used to override precedence.







Variables

Erlang supports variables.  As in Prolog, variables are distinguished by names that start with an uppercase letter.  Example variable names are A, Alex, and U2.

Being a functional language, Erlang places a restriction on variables: they can't vary!  Once they've been assigned a value, they can never be reassigned while they are in scope.  In the interpreter, this is a harsh rule; once you've assigned a variable, you can never use it again.  However, this rule isn't as restrictive as it sounds because of scoping rules that are like those in other languages; variables declared within a function, for example, are only bound while that function is executing, and do not conflict with variables in other functions that have the same name.

Assigning a value to a variable can be done using the = operator.  In its simplest form, the = operator is just like its counterpart in Java: the expression on the right-hand side is evaluated, its value is assigned into the variable on the left-hand side, and its result is that value.  For example:


    1> X = 3.
    3
    2> X + 2.
    5
    3> Y = X + 9.
    12
    4> Y div X
    4


There's more to = than this, but first we need to learn a few other things.







Dynamic typing

Notice that when we assign a value to a variable, we aren't required to declare the variable first, and we aren't required to declare its type.  This is because Erlang, like Scheme, is dynamically typed, which means that types are determined entirely at run-time, and that type errors are all run-time errors.  For example, consider this situation:


    1> X = 2.5.
    2.5
    2> X div 2.
    ** exception error: bad argument in an arithmetic expression
         in operator  div/2
            called as 2.5 div 2


The div operator only works when its two operands are integer values.  In this case, X has a floating-point value, so our attempt to use div fails with an error message.

Had the expression X div 2 been in a function that we'd called, and had X been an argument to that function, we would have received a run-time error in that function when it executed.  There is no up-front type checking done in Erlang; dynamic typing means that type checking is done on an as-needed basis at run-time.







Atoms

Atoms are global, automatically-generated, named constants, which are distinguished by names that start with a lowercase letter; that lowercase letter can be followed by upper- and lowercase letters, underscores, and @ symbols.  Simply using the atom alex means that you've declared a new atom called alex.

Atoms can also have names that don't conform to the rules above if surrounded by single-quotes.  For example, 'EXIT', and 'I am happy today' are both atoms.  'alex' is an atom, which is equivalent to the atom alex.







Tuples

In Java, when we want to collect a fixed-size group of values together, we write a class and declare these values as fields.  For example, we might write a Point class, representing a point on the x/y plane, like this one:


    public class Point
    {
        private double x;
        private double y;
        
        // constructors, getters, setters, etc.
    }


Erlang offers a mechanism for collecting a fixed-size group of values together, as well; it's called a tuple.  Tuples are simpler to use than their counterparts in Java — though, to be fair, they don't do as much.

Tuples are written as a sequence of expressions, separated by commas, and surrounded by curly braces.  For example:


    1> P = {point, 10, 20}.
    {point, 10, 20}
    2> P.
    {point, 10, 20}


Here, we see that it's possible to assign a tuple into a variable, then get that tuple back when we evaluate the variable.  Notice, too, that the first value in our tuple is the atom point; it's very common in Erlang for the first value of a tuple to be an atom that specifies what "kind" of value it represents.  We can then use that atom as a way to decide what to do, in a similar way to Java's use of polymorphism to determine which version of a method to call based on the type of the object it's being called on.

Of course, we need a way to get the individual elements of a tuple.  One way is to ask for them based on their index.  The element function can do this job.  Continuing the previous example:


    3> element(1, P).
    point
    4> element(2, P).
    10
    5> element(3, P).
    20


But this is ultimately unsatisfying, because it requires us to do so much work to unpackage the values in a tuple, one at a time, just like calling accessor methods in Java.  It would be nice if we could unpackage them in one fell swoop.





Pattern matching

The = operator in Erlang is actually not an assignment operator, as in Java.  It's actually something else: a pattern matching operator.  Its job is to take the value of the expression on the right, then match it to the pattern on the left, where the pattern on the left generally contains variables.  Its job is to answer this question: Does the value on the right look like the pattern on the left and, if so, is there some set of values I can give to the variables on the left to make the two sides have the same value?  If so, the variables on the left are given their new values.

When we use = as we do in Java, the pattern match is trivial: to make the thing on the left have the same value as the thing on the right, give the thing on the left the value of the thing on the right.  That's what makes this example work:


    1> X = 3.
    3
    2> X.
    3


But we can express more complicated patterns on the left.  For example, we can write a tuple on the left, which can be used to unpackage a tuple's elements all at once.


    1> P = {point, 10, 20}.
    {point, 10, 20}
    2> {point, X, Y} = P.
    {point, 10, 20}
    3> X.
    10
    4> Y.
    20


Here, the interpreter is saying "Is there some set of values I can give to X and Y that make the thing on the left look like the value of P?"  P's value is the tuple {point, 10, 20}.  The interpreter correctly deduces the right set of values: if X were 10 and Y were 20, both sides of the = operator would be the value {point, 10, 20}.  So, the matching succeeds, and X and Y take their new values.

(The algorithm used to do this matching is called unification.  If you've ever worked with Prolog before, you'll recognize this algorithm as one that is used in Prolog to match variables with values as rules are searched and applied.  It's not especially useful to know the details of how unification works; most of the time, your intuition will lead you to the right expectations.)

As we discussed earlier in the tutorial, variables in Erlang cannot take on a new value once they've been given a value.  This rule affects pattern matching in the sense that it requires variables that already have values to retain those values; pattern matching will succeed only if the values of bound variables — those that already have values — do not need to change in order for matching to succeed.  Consider the following example:


    1> A = {person, "Alex", "Thornton"}.
    {person, "Alex", "Thornton"}
    2> {person, FirstName, LastName} = A.
    {person, "Alex", "Thornton"}
    3> FirstName.
    "Alex"
    4> LastName.
    "Thornton"
    5> {person, FirstName, LastName2} = A.
    {person, "Alex", "Thornton"}
    6> LastName2.
    "Thornton"
    7> {person, LastName, LastName2} = A.
    ** exception error: no match of right hand side value {person,"Alex","Thornton"}


(Side note: Notice that Erlang supports strings, much like those in many other programming languages.  More about them later.)

The pattern match in expression 2 succeeded, because neither FirstName nor LastName already had a value, so they could be given the values "Alex" and "Thornton," respectively.  The pattern match in expression 5 succeeded, even though FirstName already had a value, since it had the same value as the second element of A: "Alex."  The pattern match in expression 7, on the other hand, failed, since LastName already had the value "Thornton," which did not match the value in the second element of A.

Sometimes you want to match only some values but others you don't care about.  In this case, you can use anonymous variables, which have names that begin with an underscore (or are just an underscore by themselves).  For example:


    1> Person = {person, "Alex", "Thornton"}.
    {person, "Alex", "Thornton"}
    2> {person, FirstName, _} = Person.
    {person, "Alex", "Thornton"}
    3> FirstName.
    "Alex"


Anonymous variables are never bound to a value.  Using an anonymous variable in a pattern matching expression is a way of saying "I don't care what the value of this part of the pattern is."  In the example above, only the second element is actually pulled out of the tuple; the third element is irrelevant.

Pattern matching is supported in some other languages — Haskell is an example you may have seen before — and is a feature that generally leads to shorter, clearer code than you can write without it.  Erlang supports pattern matching in several places, as we'll see, in addition to just expressions that use the = operator; it works the same way in every place that it occurs.







Lists

Lists are sequences of elements.  They are implemented in Erlang in the same way as they are in other functional languages like Scheme and Haskell: fundamentally, lists are implemented as a head (the first element) and a tail (the list containing everything except the first element).

Syntactically, lists appear like their counterparts in Haskell, with elements separated by commas and surrounded by brackets.  For example, [1, 2, 3] and [a, b, c, d, e, f, g, h, i, j] are lists.  Unlike in Haskell (but as in Scheme), Erlang permits lists to have any combination of kinds of elements, so [1, a, 2, b, 3, c] is also a valid list.

One way to break a list into pieces is to use the built-in functions hd and tl, which return the head and the tail of a list, respectively.  Examples:


    1> X = [1, 2, 3, 4, 5].
    [1, 2, 3, 4, 5]
    2> hd(X).
    1
    3> tl(X).
    [2, 3, 4, 5]
    4> tl(tl(X)).
    [3, 4, 5]
    5> hd(tl(tl(X))).
    3


Pattern matching provides us with a better approach, however, so hd and tl are rarely used in practice.  The syntax [H | T] (which you might recognize from Prolog) is used to describe a list whose head is H and whose tail is T.  (This is analogous to the syntax (x:xs) that appears in Haskell.)  Depending on where you put it, this syntax can be used to create a new list or to split up an existing list.  Examples:


    1> L = [1, 2, 3, 4].
    [1, 2, 3, 4]
    2> [H | T] = L.
    [1, 2, 3, 4]
    3> H.
    1
    4> T.
    [2, 3, 4]
    5> [H1, H2, H3 | TT] = L.
    [1, 2, 3, 4]
    6> H1.
    1
    7> H2.
    2
    8> H3.
    3
    9> TT.
    [4]
    10> L2 = [H2 | TT].
    [2, 4]
    11> L2.
    [2, 4]


In expression 2, we used pattern matching to split the list L into a head and a tail, storing the head in H and the tail in T; the reason that expression 2 splits the list is because the [H | T] syntax appears on the left hand side of the = operator, which means that Erlang will find a value for H and T that make [H | T] look like the list L.  Expression 5 is a variant of this syntax, in which we store the first three elements of the list H1, H2, and H3, then the remaining elements in TT.  Expression 10 builds a new list, since it appears on the right side of the = operator.

There are other ways to manipulate lists.  For example, there is a concatenation operator, ++, which can be used to concatenate two lists together.


    1> [1, 2, 3] ++ [4, 5, 6].
    [1, 2, 3, 4, 5, 6]


It should be noted that list concatenation is more expensive than building a list using the [H | T] notation, so it should be avoided if possible.







Strings

Erlang supports strings.  Strings are actually not a special, separate data type; they're implemented as a list of integers, where each integer is a character code for some character.  For example, the string "Alex" is equivalent to the list [65, 108, 101, 120], since the character code for 'A' is 65, the character code for 'l' is 108, and so on.

This leads us to an interesting question: if strings are lists of integers, how does the interpreter know whether to print a string value like "Alex" or a list of integers like [65, 108, 101, 120].  If you're accustomed to Java, the answer will surprise you: Erlang decides based on the contents of the list.  If the list contains only character codes for printable characters, the list is printed as a string; otherwise, it's printed as a list.  Examples:


    1> [1, 2, 3, 4].
    [1, 2, 3, 4]
    2> [65, 108, 101, 120].
    "Alex"
    3> "Alex".
    "Alex"


It's not necessary to know what character code corresponds to a particular character; if you need it, you can ask for it using the syntax $x, which evaluates to the character code for the character x.  Examples:


    1> $A.
    65
    2> [$A, $b, $c].
    "Abc"


Since strings are implemented as lists, all of the things we can do with lists can be done with strings, as well, including built-in list-processing functions like map, filter, and so on.







Modules and functions

A language implementation with only a REPL and interactive commands is only of limited use; at some point, we'd like to be able to write code, save it into a file, then load it up when we need it.  Erlang allows us to do this by writing modules.

Modules are collections of functions.  Functions serve the same purpose that they do in Scheme or Haskell; they describe how to calculate a result given a sequence of arguments.

An example module follows:


    -module(mymath).
    -export([fib/1]).
    
    fib(0) -> 0;
    fib(1) -> 1;
    fib(N) -> fib(N - 1) + fib(N - 2).


This code should be written in a file named mymath.erl (i.e., the name of the file should match the name of the module, with the extension .erl added).

In order to use this module, we first need to compile it.  There are two ways to compile it:

From an operating system command prompt or terminal window, type the command erlc mymath.erl.From the Erlang interpreter, type the command c(mymath)..

Either way, a compiled version of the file, named mymath.beam, will be generated.  Erlang is similar to Java, in the sense that the compiler translates Erlang source code to a virtual machine language, which is then executed by the interpreter.  .erl files are analogous to .java files, while .beam files are analogous to .class files.

Once compiled, it is possible to call any of the module's exported functions — those that appear in the export list denoted by the -export directive — from the interpreter prompt (or from other modules).  Modules are permitted to export as many functions as they'd like; in this case, we've just exported one of them.  The name of a function is the name of the module combined with the name of the function, separated by a colon.  So, for example, the name of the function exported by this module is mymath:fib.  Example:


    1> c(mymath).
    {ok, mymath}
    2> mymath:fib(10).
    55
    3> mymath:fib(20).
    6765


Note that the call to the c function is only necessary if the module has not already been compiled.

There are a few other things worth noting here:

The fib function takes one argument, but nowhere is the type of that argument defined.  Remember that Erlang is dynamically typed, which means that the compiler does no type checking; type checking is done when the function is called, based on what the function does.When necessary, the name of the function includes its arity (i.e., the number of arguments it accepts).  For example, in the -export directive, the function is listed as fib/1, which means "a function called fib that takes one argument."  This is important, because it's possible to overload a function with different numbers of arguments.  Note that since you cannot specify the types of arguments, you cannot overload a function on the basis of its argument types; you can overload only on the number of arguments it accepts.The fib function is made up of three function clauses.  Each clause consists of a head (a signature) and a body (how to calculate a result).  The clauses are separated by semicolons and the last one is terminated with a period.Pattern matching is used to choose which clause should execute in any given situation, which is often used as a replacement for some kind of "if" or "case" expression.  The actual parameters are pattern-matched against the clauses in the order specified; the first match is the one that is executed.  So, if fib is passed 0, it returns 0; if it is passed 1, it returns 1; if it is passed some other value N, it returns the sum of calling fib on N-1 and N-2.  Order is important here; had we placed the last clause first, there would be no base case and the recursion will continue unabated (until the run-time stack overflows), since any value would match N.







Funs

Funs are anonymous functions.  Funs are data, as is typical of functions in functional languages like Scheme and Haskell.  (Note that, unlike Scheme and Haskell, functions are not data.)  This means that funs can be passed as arguments, returned as results, stored in tuples and lists, and so on.

Syntactically, a fun is written in this form: fun(arguments) -> body end; it is an expression whose result is the fun itself.  Here is an example of creating and calling a fun:


    1> Square = fun(N) -> N * N end.
    #Fun
    2> Square(3).
    9


More interestingly, though, funs can be used with higher-order functions, as they can in other functional languages like Scheme and Haskell.  A predefined module called lists contains a variety of higher-order functions that may be familiar to you, like map, filter, foldl, and zip.  These functions accept funs as their "function" arguments.  Examples:


    1> Square = fun(N) -> N * N end.
    #Fun
    2> lists:map(Square, [1, 2, 3, 4]).
    [1, 4, 9, 16]
    3> IsPositive = fun(N) -> N > 0 end.
    #Fun
    4> lists:filter(IsPositive, [1, -1, 2, -2, 3, -3]).
    [1, 2, 3]


Note that you can't pass a function as an argument; only funs can be passed this way.  However, there is a shorthand mechanism for wrapping a function as a fun:


    1> lists:map(fun mymath:fib/1, [1, 2, 3, 4, 5, 6]).
    [1, 1, 2, 3, 5, 8]








Equals vs. identical

There are two ways in Erlang to compare values for equality.

The =:= and =/= operators mean "identical" and "not identical," respectively.  They can be used to compare any two values to see if they are identical to one another (e.g., two numbers that are the same type and have the same value, two lists that have the same sequence of values).The == and /= operators mean "equal" and "not equal," respectively.  They behave just like the =:= and =/= operators, except where numbers are concerned.  For numbers, == and /= enable comparisons between integer and floating-point values.  (This means that there is a performance benefit in using =:= and =/=, as no type checking and type coercion is done.)

Some examples of these follow:


    1> [1, 2, 3] =:= [2, 3, 4].
    false
    2> [1, 2, 3] =:= [1, 2, 3].
    true
    3> 3 =:= 3.
    true
    4> 3.0 =:= 3.
    false
    5> 3.0 == 3.
    true


(Side note: Notice that Erlang has boolean constants true and false.)







Recursion and the importance of tail recursion

Being a functional language, Erlang does not offer loops, for the simple reason that it doesn't offer the mutable variables that are necessary to support them.  This doesn't mean that repetition is impossible; it just means that recursion is the only practical way to do it.  (If you've written code in Scheme or Haskell before, this will come as no surprise.)

The potential downside of recursion is the need for the run-time stack to grow the deeper you want to recurse, as an activation record is stored on the stack for each recursive call.  This can be a serious problem for functions that are intended to process very long lists; it can be an insurmountable problem for the kinds of functions we'll write later, which are effectively like infinite loops.

Perhaps surprisingly, it is possible to write functions that recurse infinitely without running out of stack space, though it does require some care.  It requires the use of a special form of recursion called tail recursion.

A tail recursive call (or, more broadly, a tail call) is a function call that is the last act that a function will perform; whatever that function call returns, its caller will also return, with no further calculations done.

Tail calls allow an important optimization.  A normal function call requires a new activation record to be pushed on to the run-time stack, carrying a variety of information, including the parameters, local variables, and return address.  Tail calls can be handled differently; when a function f makes a tail call to a function g, the new activation record for g replaces the activation record for f, since f will have no more work to do after g returns.  Recursion using only tail calls (i.e., tail recursion) can run infinitely, since the stack space used does not grow as the recursion deepens.

Tail calls are also faster than non-tail calls, which makes tail recursion an important approach in practice, even when you expect recursion to be relatively shallow.

It should be noted that not all programming languages optimize tail calls.  Java is a notable example of a language that does not, though this may someday change.  But for a language that performs this optimization, it's worth paying attention to.  Some things in Erlang absolutely require it; for example, we'll soon be writing potentially long-running servers as single, infinitely-recursive functions, which would soon run out of stack space if they aren't tail recursive.

The following module demonstrates two versions of a factorial function: one that uses tail recursion and one that does not.


    -module(factest).
    -export([fac/1, factail/1]).

    
    % A non-tail-recursive version
    fac(0) -> 1;
    fac(N) -> N * fac(N - 1).

        
    % A tail-recursive version
    factail(N) -> factail(N, 1).
    
    factail(0, Product) -> Product;
    factail(N, Product) -> factail(N - 1, N * Product).








Concurrency

Thus far, there is probably little about Erlang that you haven't seen before in at least one programming language, even if you haven't seen very many of them.  Where Erlang really shines, and where it delves into territory that will be less familiar and more mind-opening, is its built-in support for concurrency, which allows you to easily write programs that are capable of doing more than one thing at a time.  This is important for at least a couple of reasons:

If you intend to run your program on a machine with multiple processors — a scenario that has, and will continue to, become increasingly common — it becomes necessary to write your program so that it can do more than one thing at a time.Even if you don't have a lot of cores, concurrency provides a nice way to break up a complex program into a set of separate, simpler tasks.

Lots of programming languages support concurrency in one way or another.  Erlang is very particular in how it supports it.  An Erlang program is a set of concurrently-running processes.  Processes are entirely isolated from one another, sharing no memory at all; they communicate with one another, when necessary, by sending messages to one another.  Processes communicate the same way if they are all running on one machine or if they are running on many machines spread across the Internet; Erlang hides virtually all of the details about how the processes communicate, which makes building distributed systems not much harder than building concurrent ones that run on a single machine.  Erlang also provides other important mechanisms, such as the ability for one process to know that another one has died, which is the backbone of fault-tolerance, the ability for a system to systematically and swiftly react to what would otherwise be catastrophic problems.

Note that Erlang's flavor of concurrency is very different from the one available in Java.  Java programs are a set of running threads.  Each thread has its own run-time stack, but all threads share the same heap; in other words, all objects are shared.  This makes it necessary to carefully coordinate access to these objects, understanding which objects are actually being shared and which happen to be isolated (implicitly, since only one thread happens to touch them); access to those that are shared must be carefully synchronized, so, for example, they won't become corrupted if modified simultaneously by multiple threads.  This kind of synchronization turns out to be difficult to get right, which is one of the reasons why Erlang's model of concurrency is so attractive; it promises a simplicity that's often impossible to achieve in Java.







Spawning a new process

When we want to run a function concurrently with other functions, we spawn a new process to execute that function.  The new process runs until the function completes — either normally or due to an error — at which time it dies.

Spawning a new process can be done by calling the spawn function.  There are a few variants of the spawn function, but the simplest one takes a fun as an argument and executes that fun in a new process.  Here's an example:


    1> WaitAndPrint = fun() ->
                          timer:sleep(5000),
                          io:format("Hello!~n")
                      end.
    2> spawn(WaitAndPrint).
    <0.33.0>


After calling spawn, you'll notice that you immediately get the next prompt from the interpreter, which is ready and able to accept additional expressions from you.  Meanwhile, in the background, the WaitAndPrint fun is executing.  Notice a couple of things about the WaitAndPrint fun:

It consists of two expressions, separated by commas.  This is legal in Erlang and is useful for situations like this, where functions have side effects, but also for taking complex expressions and breaking them into separate ones with results stored in local variables.The timer:sleep function pauses the process that calls it for the given number of milliseconds; the process won't be able to do anything for that length of time.  Our call here will pause the calling process for five seconds.   Note that no other processes will be affected; they'll still be able to continue processing expressions as normal.io:format is analogous to System.out.format in Java; it prints formatted output to the console.  The ~n placeholder means "newline character."

So even though we're sleeping for five seconds, the interpreter will still accept expressions as input.  Why?  Because the interpreter process is separate from the one we spawned; they're running concurrently.

After five seconds, no matter what we're doing in the interpreter, we'll see the text Hello! pop up in the interpreter window.  Granted, seeing text pop up in the interpreter, colliding with other text you're typing, isn't especially convenient.  But if processes are doing other kinds of things, like writing files, communicating across networks, or drawing graphics in isolated windows, this kind of concurrency becomes very handy indeed.







Pids, mailboxes and message passing

Concurrent processes are of relatively limited use if they are isolated from one another and have no means of interacting.  While there is wisdom in trying to limit the amount of interaction when possible, some interaction is necessary, just as it's usually necessary, when you hire people to work for you, that they communicate with each other (and with you) at least some of the time.

Though Erlang processes are isolated from one another, in the sense that they share no memory, they are capable of sending messages to one another.  This section details the mechanisms that are needed for message passing.

Pids

In the example above, notice that the call to spawn returned the value <0.33.0>.  Every process has a unique process identifier, or pid, associated with it.  The pid associated with the process we created in the example above was <0.33.0>.  (You may notice a slightly different return value when you run this code, as you won't always get the same pid back when you create a process, but the value will have a similar structure.)

The syntax <0.33.0> is the printable representation of a pid in the Erlang shell, but it does not literally build a pid in Erlang.  There is a built-in function called pid that does; for example, pid(0, 33, 0) would return the pid <0.33.0>.)  However, it will most often be more convenient to store pids in variables, pass them as parameters, etc.  For example:


    1> WaitAndPrint = fun() ->
                          timer:sleep(5000),
                          io:format("Hello!~n")
                      end.
    2> Pid = spawn(WaitAndPrint).
    <0.33.0>
    3> Pid.
    <0.33.0>


Mailboxes

Every process has its own mailbox, which collects messages sent to that process.  As messages are received by a process, they are removed from the mailbox.  In order to make use of mailboxes, we'll need to learn two things: how to send messages and how to receive them.

Sending a message to a process

The simplest way to send a message to a process is to use its pid.  The ! operator is used to send a message to a process.  It is a binary operator, with the pid of the receiving process on the left-hand side and the message on the right-hand side.  Messages are not special; a message can be any Erlang term (i.e., any Erlang data structure, such as a number, an atom, a list, a tuple, a fun, etc.).

Continuing the previous example:


    4> Pid ! 35.
    35


This expression sends the message 35 to the process we created previously.

One important thing to understand about sending messages is that it will never appear to fail, so long as we place a pid on the left-hand side of the !.  If the pid is not associated with any currently-running process, the message will quietly be lost.  There will also be no notification provided when the other process receives the message.  We say that this kind of message passing is fire and forget, meaning that we send messages with little regard to whether they'll get to where they need to go.  (That said, we can build our own mechanisms for checking whether messages were received, such as expecting receivers to send us responses.  But no such mechanism is automatically provided.)

Receiving a message from a process' mailbox

A process receives one message from its mailbox using the receive expression.  The general structure of a receive expression is:


    receive
        Pattern1 ->
            Expressions1;
        Pattern2 ->
            Expressions2;
        ...
        PatternN ->
            ExpressionsN
    end


When a receive expression is evaluated, the first message in the process' mailbox is removed and matched against the patterns in the order they're listed, using the same kind of pattern matching that's done on function arguments and by the = operator.  The expressions corresponding to the first pattern that matches the message are evaluated, with the result of the receive expression being the result of the last corresponding expression.

If there are no patterns that match the first message, the second message is tried, then the third, and so on, until a message matches a pattern.  If no messages match any patterns (or if there are no messages in the mailbox at all), the receive expression blocks the process until a matching message arrives.  By "blocks," I mean that the process will not be able to do any additional work until a message arrives that matches one or more of the patterns in the receive expression.

Example:


    1> Pid = spawn(fun() ->
                       receive
                           hello ->
                               io:format("Hello!~n");
                           goodbye ->
                               io:format("Goodbye!~n");
                           _Other ->
                               io:format("Unknown message~n")
                       end
                   end).
    <0.53.0>
    2> Pid ! goodbye.
    Goodbye!
    goodbye


Expression 1 spawns a new process, executing a function that expects one of three kinds of messages: the atom hello, the atom goodbye, or anything else (note the underscore at the beginning of the variable name, which is a way of saying "I don't care what this value is").  Expression 2 sends the goodbye message.  Notice that the spawned process prints Goodbye! to the output in response.

Receive with timeout

A variant of the receive expression supports a timeout, so that a process won't be blocked indefinitely if no messages arrive.  This variant looks like this:


    receive
        Pattern1 ->
            Expressions1;
        Pattern2 ->
            Expressions2;
        ...
        PatternN ->
            ExpressionsN
    after TimeInMilliseconds ->
        TimeoutExpressions
    end


The only difference between this variant and the previous one is that it will evaluate the TimeoutExpressions if no message arrives before the given timeout, with the result of the receive expression being the result of the last of the TimeoutExpressions.







Process registration

Pids can be inconvenient to deal with, since it is often necessary to pass them to many processes and store them.  For this reason, Erlang offers the ability to register a process.  Registering a process is to associate it with an atom that functions as its name.  Once a process is registered, its registered name is available globally to all other processes; other processes can send messages to it using its registered name instead of its pid.  Example:


    1> register(handler, spawn(fun connection_handler:handle_connection/0)).
    true
    2> handler ! 35.
    35
    3> unregister(handler).
    true


Expression 1 spawns a new process and registers it with the name handler.  Expression 2 sends the message 35 to that process.  Finally, Expression 3 unregisters handler, making that name available to other processes; only one process can be registered with a particular name at any given time.







That's it?  Where can I learn more?

This concludes the Erlang tutorial.  Note that we haven't covered the entire Erlang language, nor have we covered every detail of the features that we've discussed.  If you'd like to learn more, there are a few places you can go.

Of course, we'll cover several detailed code examples in lecture, which will be posted here on the course web site afterward.If you're interested in reference material, there is a fair amount of documentation available at erlang.org's documentation page and also at erldocs.com.If you're interested in a much more thorough book on the subject, there is a wonderful, free online book titled Learn You Some Erlang for Great Good, which, despite its peculiar title, is an excellent book.







A few tweaks and fixes by Alex Thornton, Spring 2012.Some additions, clarifications, and link updates added by Alex Thornton, Winter 2010.Originally written by Alex Thornton, Winter 2009.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/inf102/CourseReference.html
##-----------------TITLE------------------------##
Informatics 102 Spring 2012, Course Reference
##------------------TEXT------------------------##
Informatics 102 Spring 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
Code Examples |
About Alex








Informatics 102: Concepts of Programming Languages II
   Spring 2012
   Course Reference







Instructor information

Alex ThorntonOffice: DBH 4048Email:  thornton@ics.uci.edu

Office hours: I will be available on Tuesdays and Thursdays from 7:15-8:50pm in ICS 243 — not my office, as it's in a building that will be locked during at least part of that time — during which all course-related issues will have the highest priority.  If you catch me in my office at other times during the week and I'm not working on something urgently, I'll be glad to chat with you about whatever's on your mind.

Contacting me: I tend to be much easier to reach via email than by phone, so I would suggest using email to contact me under normal circumstances.  When you write me an email, please take a few moments to make sure that the following information is placed somewhere in your message: your name, your student ID#, and which course you're enrolled in (I'm teaching more than one this quarter).







Times and places

The lecture meets on Tuesdays and Thursdays from 5:00-6:20pm in DBH 1200.







Textbooks

This course has no assigned textbook, as we'll be covering a variety of material that is not consolidated into any single text.  The textbook you used in CompSci 141 / CSE 141 / Informatics 101 (a prerequisite for this course) may well come in handy from time to time as a reference, as some of the topics typically covered in that course (e.g., regular expressions and grammars, details of programming paradigms like functional programming or object-oriented programming) will be relied upon in this one.







Obtaining additional assistance

Asking questions of course staff

You can most easily get course questions answered by coming to the lecture, the lab section, or office hours and asking them.  I am happy to help you in person when I'm available.  You can also ask questions by sending email to me; I check my email frequently throughout the day, so you can usually get an answer to course-related questions within a few hours (and often much more quickly).  If the questions require a complex or lengthy response, I may ask you to see me in person, though I'll try to give you at least enough information to get started on solving your problem.  As projects approach their due date, particularly on days when projects are due, I begin to receive quite a bit of email all at once, so I may not be able to respond to all messages before the project is due.  I'm not ignoring you on purpose, but unfortunately it's not always possible for me to answer questions from a large number of students at once.

Accommodations for disabilities

Any students who feel that they may need an accommodation based on the impact of a disability should contact me privately to discuss these specific needs.  Also, contact the Disability Services Center online or by phone at (949) 824-7494 as soon as possible to better ensure that such accommodations, such as alternative test-taking environments or note-taking services, can be arranged for you in a timely way.







Grading

Weights of graded artifacts

Your course grade will be determined from the weighted combination of your scores on five programming projects and one Final Exam.  The weights of each of these are:

Five programming assignments, 60% (weighted equally at 12% each)Final Exam, 40%

Determining final grades

Course grades will be determined neither on a normal curve nor a straight scale.  It is guaranteed that overall scores over 90% will receive an A- or better, scores over 80% will receive a B- or better, and scores over 70% will receive a C or better.  However, the actual cutoffs may be lowered at the end of the quarter.  In short, it is not my intention to fail half of the students, nor am I planning on giving only 2% of the students A's, but I prefer not to constrain myself with either a straight scale or a formalized curve.

If you're curious about how you're doing in the course, I'm happy to discuss your estimated grade at any time.  It's generally best to have this conversation in person, so that we can explore issues other than just the raw numbers; I'm happy to have this conversation at any time that I'm available, and I'm also glad to do it via email if we can't find a mutually available time.







Dropping the course or changing grade option

Through the end of Week 2 (Friday, April 13), you may drop the course by simply going to WebReg and dropping it.  If you wish to drop the course after that date, you will need to use the Enrollment Exceptions system to request a drop; the Dean of the Bren School (and your major, if you are majoring in something outside of the Bren School) must approve it.  Not doing well in a course is not an accepted reason for dropping it after Week 2, and a drop request filed on those grounds will almost certainly be denied.

Similarly, changing your grade option (to Pass/NotPass or back again) can be done via WebReg through the end of Week 2 (Friday, April 13), after which you must use the Enrollment Exceptions system to request the change.  As with exceptional drops, you must receive approval from the appropriate Deans.







Academic honesty

The policy

As Informatics 102 students, you are expected to know and follow the academic honesty policies of both the Bren School of ICS and the University as a whole.  Please take a few minutes to read the policies, which can be found at this link.

All of your lab work is expected to be completed solely by you.    Note that "high-level discussion of course material for better understanding" is permitted and encouraged, but when it comes time to sit down and write code, that is expected to be done by you and you alone.  All submissions are compared to one another using an automated plagiarism detection system.  This system is extraordinarily good at finding similarities between submissions, even when there are superficial differences.  (Note that we also compare your submissions to those submitted during previous quarters whenever one of these assignments was given during a previous quarter, so it is an exceedingly bad idea to turn in, or even refer to, code written by a friend of yours who took the course already.)

Since all of your work is expected to be completed solely by you , you will be held responsible even if you plagiarize only a small portion of someone else's work.

Academic honesty is a two-way street.  Providing your code to other students for them to turn in as their own is not permitted anymore than turning in someone else's code.  Resist the temptation to give code to your friends "for reference."  Based on my experience, I can say that your "friends" may very well betray you and turn it in, anyway.

Naturally, the Midterm and Final Exam are also expected to be individual efforts.  Dishonest behavior during an exam will not be tolerated.

Violators of academic honesty policies are subject to the penalties described in the Bren School of ICS policy.  They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade.  Also be aware that a single documented case of academic dishonesty may preclude you from switching into computing majors, registering for computing minors, joining the ICS Honors Program, and graduating from a computing major with honors.

The lesson

Okay, so the moral of the story is that it's wise to avoid cheating.  I believe that it's relatively rare that students enter a course with the conscious intent to cheat their way through it; why come to UCI if you're not planning to get something out of the coursework?  So why do people cheat every quarter in every course?  The answers vary, but here's the easiest way I can boil down the numerous conversations I've had with students caught cheating in my courses over the years: I fell behind and couldn't figure out how to catch up.  Things happen and ten-week quarters are unforgiving.  You might get sick, you might have issues crop up in your family, you might have an off-campus job that's demanding too much of your time, you might be trying to decide whether you're on the path you want to be on... Any of those things (and many others) can make it hard to keep up.  You fall a little behind, you fall a little further behind, and pretty soon the situation seems hopeless.  You're under pressure, temptation gets the better of you...

If you feel like you're beginning to slip off course or things are getting beyond your control, the best thing to do is to talk to us sooner rather than later.  We're here to help; we understand.  But the reality of taking large-sized courses at a large-sized institution is that we're not going to know you're in need unless you tell us.  If things are happening in your life, tell us; you don't have to be specific if you're not comfortable with it.  Before the fact, there's often a way to work things out.  After the fact, it's usually too late.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/inf102/index.html
##-----------------TITLE------------------------##
Informatics 102 Spring 2012
##------------------TEXT------------------------##
Informatics 102 Spring 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
Code Examples |
About Alex








Informatics 102 Spring 2012
   Course News







Check back here every day or so.  I will generally post important coursewide announcements here.  They will be listed in reverse-chronological order (i.e., newest items first).

Date AddedNews ItemF 6/8I've postponed the due date of Assignment #5 to Sunday at 11:59pm, since it looked like a fair number of you wouldn't be able to finish it.Sa 6/2Last week's code example of designing and implementing a simple domain-specific language is now available.Tu 5/30Assignment #5 is now available.Su 5/27Last week's code examples are now available, along with a Schedule update.Su 5/27I added a clarification to Part 2 of Assignment #4.  You will not be permitted to write a single message containing a repeated field with all of the exercises; instead, I want you to confront the issue of writing a stream of multiple messages and figuring out, on your own, what the type of each message is.  The goal is to understand what Protocol Buffers does and does not do for you automatically.M 5/21Last Thursday's code example is now available.F 5/18Some new updates are available today:
      This week's code examples are now available.Assignment #4 is now available.The Schedule has been updated.
    W 5/9Yesterday's code example of implementing the MapReduce algorithm in Erlang is now available.  Note, too, that Part 3 of Assignment #3 has been updated to reflect the new version of that code example we wrote this quarter; fundamentally, the problem hasn't changed, but a few of the requirements have been changed to be more in line with the way we solved the problem in lecture this quarter.Th 5/3A few updates are available tonight:
      The Schedule has been updated.  Note that there are readings associated with some recent lectures.Today's code examples are up.Assignment #3 is available.  Note that Part 3 of the assignment makes reference to a code example that we've not yet covered and is not yet available on the web site, but we've certainly covered enough to allow you to work through the first two parts.
    Th 5/3An Erlang tutorial is now available; the Erlang-based third assignment will follow soon.Th 4/19The QuickUnit code example is now available.Tu 4/17Today's code examples are now available.Tu 4/17The latest batch of Schedule updates is now available.M 4/16Assignment #2 is available.Th 4/12New code examples are available.Tu 4/10The code examples from today's lecture are now available.Th 4/5Today's code examples are now available.M 4/2
      Welcome!  A few things:
      The first lecture will meet on Tuesday, April 3.  For more information about meeting times and course policies, see the Course Reference.  For information about lecture material and readings, see the Schedule.I encourage you to spend some time reading through the material on this course web site.  Notice the set of links at the top of this (and every) page, leading you to the Course Reference, the Schedule, and the Lab Manual, as well as a set of commented Code Examples that will be posted during the course of the quarter.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/inf102/Schedule.html
##-----------------TITLE------------------------##
Informatics 102 Spring 2012, Schedule
##------------------TEXT------------------------##
Informatics 102 Spring 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
Code Examples |
About Alex








Informatics 102 Spring 2012
   Schedule







There is no textbook for this course, but I may assign online readings from time to time that are germane, which will become fair game for the Midterm and Final Exam.  When readings are assigned, they will be listed here.

The schedule is a work in progress that will be built as we go along, depending on our progress (and, perhaps toward the end, your areas of interest).  I will try to post the lecture schedule and readings at least a week ahead of where we are in lecture, so you'll know what to expect, at least in the short term.

DateLecture TopicsReadingsAssignment DueWeek 1Tu 4/3
      Course introductionWhy variety in programming languages mattersCategorizing programming languagesUnderstanding one's goals and finding languages that meet themThe case for mixing programming languages in a single project
    Th 4/5
      Separation of concernsCrosscutting concernsThe case for aspect-oriented programming (AOP)Aspect-oriented programming using AspectJJoin pointsPointcutsBefore and after advice
    The AspectJ Programming GuideAssignment #0 due 5:00pmWeek 2Tu 4/10
      Aspect-oriented programming using AspectJ (continued)Aspects that affect only one class (or a few classes)Inter-type declarationsAround adviceAltering existing inheritance hierarchies
    Th 4/12
      Dynamic pointcuts and control flowThe need for metadata in programsJava annotationsPointcuts that match against annotationsUsing declare error and declare warning to extend compile-time error checking
    
      Java Annotations
    Week 3Tu 4/17
      Annotations that carry additional information with themGeneralizing aspects using annotations and genericsBinding, revisitedThe tradeoff between early and late bindingEarly and late binding in Java
    
      The AspectJ 5 Developer's Notebook - Ch. 2 and 6
    Assignment #1 due 11:59pmTh 4/19
      Java reflectionUsing annotations with reflection in JavaA more thorough example of using reflection: QuickUnit
    
      Java Reflection Tutorial
    Week 4Tu 4/24
      How to choose a programming language for a "real" projectApplying requirements to the choice of programming language
    Th 4/26
      Why you should learn "weird" programming languages (briefly)Why Erlang?Sequential functional programming in Erlang
    
      Why You Should Learn "Weird" Languages
    Week 5Tu 5/1
      Sequential functional programming in Erlang (continued)Message passing concurrency in Erlang
    
      The Free Lunch Is OverWelcome to the Jungle
    W 5/2Assignment #2 due 11:59pmTh 5/3
      Message passing concurrency in Erlang (continued)
    
      Erlang Tutorial
    Week 6Tu 5/8
      What is the MapReduce algorithm?The MapReduce algorithm in ErlangDistributed programming using Erlang (briefly)
    
      
    Th 5/10
      The case for mixed-language programmingWays that programs in different languages can communicate with each other
    Week 7Tu 5/15
      Combining Erlang and Java in a single project using Erlang portsThe importance of communication protocols when connecting separate programs
    W 5/16Assignment #3 due 11:59pmTh 5/17
      Language design as a response to a set of requirementsHow Erlang's design requirements led directly to its feature setDomain-specific languages (DSLs)When you need a domain-specific languageAn example of a DSL: Google's Protocol BuffersCombining Protocol Buffers with Java
    
      Protocol Buffers Developer GuideProtocol Buffers Developer Guide — About Generated Code in Java
    Week 8Tu 5/22
      Using Protocol Buffers to streamline communication between Erlang and JavaA brief overview of domain-specific language design issuesThe parsing problemHow grammars and regular expressions are related to language design and parsingAlgorithms for parsing (briefly)Recursive-descent parsing using JavaRecognizing that a grammar can be parsed using recursive descent
    
      
    Th 5/24
      The value of separating scanning from parsingWriting a custom scannerDesigning a scanner that accommodates the needs of typical parsers
    Week 9M 5/28University Holiday: Memorial DayTu 5/29
      Designing a simple domain-specific languageSyntax considerations: designing a parsable, readable syntax (briefly)Finding the appropriate boundary between run-time libraries and generated codeCompiling our domain-specific language to Java
    W 5/30Assignment #4 due 11:59pmTh 5/31
      Compiling our domain-specific language to Java (continued)
    Week 10Tu 6/5
      More details about Assignment #5
    Th 6/7
      Where we've been and where we can go from hereConclusion
      
    Su 6/10Assignment #5 due 11:59pmFinals WeekTh 6/14
      FINAL EXAM: 4:00pm-6:00pm, DBH 1200
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics65/Schedule.html
##-----------------TITLE------------------------##
ICS 65 Fall 2012, Schedule
##------------------TEXT------------------------##
ICS 65 Fall 2012 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 65 Fall 2012
   Schedule







All assigned readings are from the Savitch text, 5th Edition.  It is a good idea to skim the assigned reading before the lecture for the main ideas, attend lecture, and then to go through the assigned reading again to fill in the details that you missed, both in your initial skim of the reading and in the lecture.

Some lectures have little or no reading corresponding to them.  In some cases, this is because a block of reading corresponds to more than one lecture.  In other cases, the material covered in that lecture is not discussed in the textbook.

DateLecture TopicsReadingsProject DueWeek 0Th 9/27
      Course introduction and goalsThe challenge of learning a second programming languageThe challenge of learning C++ as a second programming languageHistorical perspective and philosophical backdropThe design goals of C++
    
      
    Week 1Tu 10/2
      The main() functionTypes and static type checkingBasic built-in data typesExpressions and statementsControl structuresThe distinction between lvalues and rvaluesDeclaration vs. definitionCalling and declaring functionsParameters and arguments
    
      Ch. 1Ch. 2.1 - 2.3Ch. 3
    Th 10/4
      Behind the scenes of a C++ programThe Von Neumann architecture (briefly)Registers, instruction pointers, stack pointers, and frame pointersCalling conventionsReferencesPass-by-value vs. pass-by-reference
    
      Ch. 4.1
    Week 2Tu 10/9
      Function overloading (briefly)Default argumentsSeparate compilation and linkingThe #include directiveGuarding against multiple inclusion
    
      Ch. 4.2Ch. 11.1
    Th 10/11
      The std::string typeBehind the scenes of a C++ program (continued)The heap (also known as: the free store)Heap-based memory allocationThe importance of cleaning up heap-allocated memoryStrings as parametersPointersnew and deleteThe nullptr constant
    
      Ch. 9.1Ch. 9.3Ch. 10.1
    Week 3Tu 10/16
      Single-dimension arraysStatically-allocated arraysDynamically-allocated arraysHow arrays and pointers are relatedPassing arrays as parameters to functionsPointer arithmeticThe delete[] operatorC-style strings (and why we mostly avoid them)Constants and the const qualifierHow const affects references and pointers
    
      Ch. 5.1 - 5.3Ch. 10.2
    Th 10/18
      On the need for creating new typesStructuresMember variables in a structureStatically- and dynamically-allocated structuresThe . and -> operatorsBehind the scenes of a C++ program (continued)How structures are laid out in memoryWhy padding is sometimes added between member variables of a structureThe (lack of a) distinction between built-in types and user-defined typesClasses
    
      Ch. 6
    Week 4Tu 10/23
      Declaring classesAccess control (public and private)ConstructorsMember variables and member functions in a classThe this pointerSeparating interface from implementationMaking a class const-awareStatically- and dynamically-allocated objects
    
      Ch. 7.1 - 7.2
    W 10/24Project #1 due 11:59pmTh 10/25
      Managing object lifetimeDestructorsCopy constructorsOverloading the assignment operatorGuarding against self-assignmentBuilding a "well-behaved" Vector class
    
      Ch. 10.3
    Week 5Tu 10/30
      MIDTERM — regular lecture time and location
    
      
    Th 11/1
      std: The C++ standard libraryStandard collections: vector and listIterators
    
      Ch. 19
    Week 6Tu 11/6
      Iterators (continued)auto and type inference (briefly)Generic algorithmsstd::function and lambda expressions
    
      
    W 11/7Project #2 due 11:59pmTh 11/8
      InheritanceConstructors and derived classesOrder of construction and destruction of class membersVirtual functions and polymorphism
    
      Ch. 14Ch. 15
    Week 7M 11/12University Holiday — Veterans' DayTu 11/13
      Why destructors sometimes need to be virtual, but constructors don't (and can't!)"Pure" virtual functions and abstract base classesBehind the scenes of a C++ program (continued)How inheritance and polymorphism are implemented
        Why virtual functions have an added cost
    
      
    Th 11/15
      Implicit type conversionsExplicit constructorsOperator overloading
    
      Ch. 8
    Week 8M 11/19Project #3 due 11:59pmTu 11/20
      Operator overloading (continued)Friend functions and friend classesTemplate functionsWhy C++ provides lousy error messages when you misuse a template
    
      Ch. 16.1
    Th 11/22University Holiday — Thanksgiving (NO LECTURE TODAY)F 11/23University Holiday — ThanksgivingWeek 9Tu 11/27
      Designing classes more carefullyContractsPreconditions and postconditionsClass invariantsDocumenting contractsExceptions in C++Throwing and catching exceptionsException safety: making sure that contracts hold true even when exceptions are thrown
    
      Ch. 18
    Th 11/29
      Exception safety and guaranteesThe basic guarantee, the strong guarantee, and no throw guaranteeImplementing an exception-safe version of our Vector class template
    
      
    Week 10M 12/3Project #4 due 11:59pmTu 12/4
      Implementing a standard-library-compliant containerWhat needs to be implemented in order to be standard-library-compliantHow to implement iterators, begin(), end(), rbegin(), and rend()
    
      
    Th 12/6
      Inheriting implementations with interfacesPrivate and protected inheritance
    
      
    Su 12/9Project #5 due 11:59pmFinals WeekTu 12/11
      FINAL EXAM: 4:00pm-6:00pm, ICS 174
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics65/CourseReference.html
##-----------------TITLE------------------------##
ICS 65 Fall 2012, Course Reference
##------------------TEXT------------------------##
ICS 65 Fall 2012 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 65: Programming in C++ as a Second Language
   Fall 2012
   Course Reference







Instructor information

Alex ThorntonOffice: DBH 4048Email:  thornton@ics.uci.edu

Contacting me: I tend to be much easier to reach via email than any other way, so I would suggest using email to contact me under normal circumstances.  When you write me an email, please take a few moments to make sure that the following information is placed somewhere in your message: your name, your student ID#, and which course you're enrolled in (important since I'm teaching more than one this quarter).







Teaching assistants

We have one teaching assistant this quarter, Duy Lai (laid AT uci DOT edu), who will be supervising the project grading and also will have some student contact hours scheduled, despite the fact that there are no discussions or labs officially scheduled for the course; more information on those will follow soon.







Times and places

Lecture

A lecture meets on Tuesdays and Thursdays from 3:30-4:50pm in ICS 174.  Given the course's size, attendance is not graded, but we certainly recommend it.  (Naturally, attendance is required on the days when exams are held, which are listed in the Schedule.)

TA hours

Duy, our TA, will be available in ICS 189 at these times, during which you are free to stop by and ask about projects, lecture material, or whatever is on your mind.

Tuesdays from 5:00-6:00pmThursdays from 5:00-7:00pmFridays from 2:00-4:00pm

Office hours

I will be available on Tuesdays and Thursdays from 7:15-8:45pm in ICS 253 — not my office, as it's in a building that will be locked during at least part of that time — during which I'm available to chat with you about whatever's on your mind.  (Note that this block of time is listed as an ICS 22 / CSE 22 discussion in the UCI Schedule of Classes, but it is actually my office hours, so you do not have to feel obligated to enroll in the discussion, nor to attend it, and you do not have to be enrolled in order to attend.)







Textbooks

There is an optional textbook for the course, listed below.

Absolute C++, 5th Edtionby Walter Savitch and Kenrick MockAddison-Wesley 2012ISBN 0-132-83071-XOPTIONAL

There are at least a couple of ways to get the textbook: purchasing a hard copy from online booksellers such as Amazon, or renting an electronic edition from CourseSmart, with the CourseSmart option being significantly cheaper but only allowing you to view the text for six months.

Note that while I will be assigning readings from this textbook that correspond to our lectures, the goal is to complement the lecture material and help you fill in details that you missed while listening to me speak for eighty minutes.  I will not be testing you on details from the textbook that were not discussed in lecture or covered on projects.  If you find that you'd prefer to work without a textbook, or even work with a different book (or online supplements of your own choosing), that's fine; the overall goal is to learn C++, and I'm not especially finicky about how you do it.







Obtaining additional assistance

Asking questions of course staff

You can most easily get course questions answered by coming to the lecture, TA hours, or office hours and asking them.  I am happy to help you in person when I'm available.  You can also ask questions by sending email to me or your TA (or both); we check our email frequently throughout the day, so you can usually get an answer to course-related questions within a few hours (and often much more quickly).  If the questions require a complex or lengthy response, we may ask you to see one of us in person.  As projects approach their due date, particularly on days when projects are due, we begin to receive quite a bit of email all at once, so we may not be able to respond to all messages before the project is due.  We aren't ignoring you on purpose, but unfortunately it's not always possible for the relatively small course staff to answer questions from a large number of students at once.

Accommodations for disabilities

Any students who feel that they may need an accommodation based on the impact of a disability should contact me privately to discuss these specific needs.  Also, contact the Disability Services Center online or by phone at (949) 824-7494 as soon as possible to better ensure that such accommodations, such as alternative test-taking environments or note-taking services, can be arranged for you in a timely way.







Grading

Weights of graded artifacts

Your course grade will be determined from the weighted combination of your scores on each of six programming projects, one Midterm, and one Final Exam.  The weights of each of these are:

Five or six programming projects (to be determined), 50% (weighted equally at either 10% or 8.3%)Midterm, 20%Final Exam, 30%

Determining final grades

Course grades will be determined neither on a normal curve nor a straight scale.  It is guaranteed that overall scores over 90% will receive an A- or better, scores over 80% will receive a B- or better, and scores over 70% will receive a C or better.  However, the actual cutoffs may be lowered at the end of the quarter.  In short, it is not my intention to fail half of the students, nor am I planning on giving only 2% of the students A's, but I prefer not to constrain myself with either a straight scale or a formalized curve.

If you're curious about how you're doing in the course, I'm happy to discuss your estimated grade at any time.  It's generally best to have this conversation in person, so that we can explore issues other than just the raw numbers; I'm happy to have this conversation at any time that I'm available, and I'm also glad to do it via email if we can't find a mutually available time.







Dropping the course or changing grade option

Through the end of Week 2 (Friday, October 12), you may drop the course by simply going to WebReg and dropping it.  If you wish to drop the course after that date, you will need to use the Enrollment Exceptions system to request a drop; I do not have the final say over those, ultimately, as the Dean of the Bren School (and your major, if you are majoring in something outside of the Bren School) must approve them.  It is not generally the case that an exception will be accepted simply because you're not doing well in a course, though extenuating circumstances are certainly considered.

Similarly, changing your grade option (to Pass/NotPass or back again) can be done via WebReg through the end of Week 2 (Friday, October 12), after which you must use the Enrollment Exceptions system to request the change.  As with exceptional drops, you must receive approval from the appropriate Deans.







Academic honesty

The policy

As ICS 65 students, you are expected to know and follow the academic honesty policies of both the Bren School of ICS and the University as a whole.  Please take a few minutes to read the policies, which can be found at this link.

All of your lab work is expected to be completed solely by you.  Worker in larger groups and/or sharing of code between students that are not partners is not permitted.  Note that "high-level discussion of course material for better understanding" is permitted and encouraged, but when it comes time to sit down and write code, that is expected to be done by you and you alone.  All submissions are compared to one another using an automated plagiarism detection system.  This system is extraordinarily good at finding similarities between submissions, even when there are superficial differences.  (Note that we also compare your submissions to those submitted during previous quarters whenever one of these assignments was given during a previous quarter, so it is an exceedingly bad idea to turn in, or even refer to, code written by a friend of yours who took the course already.)

Since all of your work is expected to be completed solely by you, you will be held responsible even if you plagiarize only a small portion of someone else's work.

Academic honesty is a two-way street.  Providing your code to other students for them to turn in as their own is not permitted anymore than turning in someone else's code.  Resist the temptation to give code to your friends "for reference."  Based on my experience, I can say that your "friends" may very well betray you and turn it in, anyway.

Naturally, the Midterm and Final Exam are also expected to be individual efforts.  Dishonest behavior during an exam will not be tolerated.

Violators of academic honesty policies are subject to the penalties described in the Bren School of ICS policy.  They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade.  Also be aware that a single documented case of academic dishonesty may preclude you from switching into computing majors, registering for computing minors, joining the ICS Honors Program, and graduating from a computing major with honors.

The lesson

Okay, so the moral of the story is that it's wise to avoid cheating.  I believe that it's relatively rare that students enter a course with the conscious intent to cheat their way through it; why come to UCI if you're not planning to get something out of the coursework?  So why do people cheat every quarter in every course?  The answers vary, but here's the easiest way I can boil down the numerous conversations I've had with students caught cheating in my courses over the years: I fell behind and couldn't figure out how to catch up.  Things happen and ten-week quarters are unforgiving.  You might get sick, you might have issues crop up in your family, you might have an off-campus job that's demanding too much of your time, you might be trying to decide whether you're on the path you want to be on... Any of those things (and many others) can make it hard to keep up.  You fall a little behind, you fall a little further behind, and pretty soon the situation seems hopeless.  You're under pressure, temptation gets the better of you...

If you feel like you're beginning to slip off course or things are getting beyond your control, the best thing to do is to talk to us sooner rather than later.  We're here to help; we understand.  But the reality of taking large-sized courses at a large-sized institution is that we're not going to know you're in need unless you tell us.  If things are happening in your life, tell us; you don't have to be specific if you're not comfortable with it.  Before the fact, there's often a way to work things out.  After the fact, it's usually too late.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics65/FinalGrades.html
##-----------------TITLE------------------------##
ICS 65 Fall 2012, Final Course Grades
##------------------TEXT------------------------##
ICS 65 Fall 2012 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 65 Fall 2012
   Final Course Grades







Explanation (please read this first!)

Please spend a couple of minutes reading this section.  It will answer many of the questions that you may have about the grading process, and will save you a lot of upset waiting for a response to an email question.

Here are the final grades for ICS 65.  By University regulations, at this stage, the cutpoints and the grades are non-negotiable, unless we made a clerical error, such as recording a score incorrectly.  (Seriously!  This means you!  Despite this warning, I often get at least an email that begins with a phrase like "I know you said that the cutpoints are non-negotiable, but..."  There is no "but" here.)  We also can no longer accept new regrade requests on the projects.

There were 53 points possible on the Final.  The average score on the Final was 36.24 (68.38%), with a high score of 51.5.

How do I know which scores are mine?

Each student is identified here by a Rank, beginning with the highest overall percentage and ending with the lowest.  Each of you should have received an email from me (at your @uci.edu email address) identifying your rank.

What do the columns mean?

Here is an explanation of the various columns:

The Rank column is a rank, from highest to lowest, for each student.The Proj1..Proj5 columns are your scores (out of 30) on each project.The ProjTotal column lists the sum of the scores on the projects.  The total number of points possible on all the projects was 150.  There is also a column titled AdjProjTotal;  this contains your total project score after adjusting it for the differences between graders.  (In general, the course was divided into four "sections", with some projects divided up so that different people graded different sections.)  Those differences were removed by attempting to equalize the percentage of points lost, so that students in the "harder" sections ended up with scores that look more like those from the "easiest" section.  (Note that very low scores were not modified in this way; the assumption is that very low scores would have been very low in any section.)The MT and Final columns contain your raw scores on the Midterm and Final Exam.The TotalPct column is your overall percentage in the class, figured by adding the weighted percentages of the Midterm, Final, and AdjProjTotal together, as described in the Course Reference.The Grade column indicates the grade that has been submitted.

There are a few words to be said about the selection of cutpoints.  People are cutpoints; whole-numbered percentages are not.  That means that the cutpoint for a particular grade is simply the lowest-scoring person who received that grade.  For the sake of argument, if you received a percentage of 54.99% in the class, and someone who received a 55.52% received a higher grade than you (with no person in between), you didn't miss the cutpoint by 0.01%; you missed it by 0.53% — a substantial margin.

This was a wild quarter for us all, but I hope you had as much fun as I did.  I hope I'll see you again sometime.







The grades

RankProj1Proj2Proj3Proj4Proj5ProjTotalAdjProjTotalMTFinalTotalPctGrade13030303030150.00150.0044.54995.54%A+23029303030149.00149.0044.547.594.35%A+32630273030143.00144.3644.549.593.94%P43015273030132.00135.494651.592.71%A52829303030147.00147.0045.544.592.39%A62430273030141.00141.004347.591.09%A72630283029143.00144.9939.544.589.32%A83029173023129.00133.07395088.26%A92830283030146.00147.14404188.25%A103028263020134.00137.1040.546.588.22%A113015282830131.00134.6844.54487.60%A122421263030131.00136.41384787.27%A133025213030136.00140.42374587.08%A142625273030138.00140.3335.54687.01%A153026303025141.00141.004141.586.89%A162429283030141.00143.8441.537.585.77%A17303030300120.00120.004449.585.62%A182630263030142.00143.55423785.59%A192827283015128.00134.9537.544.585.17%A202625303019130.00135.7037.54485.14%A212430262428132.00135.4944.53985.04%A222230153030127.00133.5544.54084.96%A232226263020124.00129.0441.543.584.24%P242610283023117.00117.0043.547.583.29%A253027303029146.00146.7834.53582.54%A-262625303010121.00123.5636.545.581.54%A-272223262929129.00134.983837.581.42%A-283030302828146.00146.783135.581.42%A-292619303028133.00137.84294281.32%A-302615152224102.00115.6742.54581.03%P312620103028114.00114.0043.54580.87%A-323027173028132.00132.0036.538.580.39%B+331822202030110.00121.3933.546.580.18%B+343030283015133.00138.373634.580.05%B+351830272830133.00133.0038.535.579.83%B+363020102915104.00111.40384879.50%B+372628172030121.00130.16353979.46%B+382827123027124.00124.00403979.41%B+392529252426129.00129.0034.539.579.16%B+403010303013113.00113.00444279.04%B+412827123021118.00127.113738.578.96%B+422830303030148.00148.572931.578.95%B+432815153028116.00126.7436.53978.92%B+443026152915115.00121.783242.577.45%B+452815123015100.00109.694141.576.45%B461930252915118.00118.0037.53976.41%B472430172830129.00133.0730.533.575.52%B481530183030123.00128.2334.533.575.51%B492626153030127.00134.2630.53275.07%B502624193030129.00133.073131.574.59%B512626231815108.00119.96274274.56%B522627123027122.00130.8430.53374.49%B532625153024120.00128.5428.535.574.34%B542623143015108.00116.1439.53574.32%B551527263030128.00128.00313474.31%B562624102830118.00121.4236.533.574.03%B572817151830108.00108.0035.54273.97%B583020153030125.00132.1229.53273.95%B592220163030118.00118.00313973.81%B602824262510113.00113.00393673.64%B612222152828115.00121.7825.539.573.15%B623019253019123.00123.00363172.95%B632630122715110.00117.7532.535.572.35%B-642626151830115.00121.78283672.17%B-652631262515123.00130.69273171.91%B-66221512301594.00111.69373571.84%B-672819103018105.00109.85343871.72%B-682615203027118.00127.1129.529.570.87%B-69251610202899.00108.79313970.74%B-702625122017100.00115.79323470.64%B-71243003027111.00111.00353470.25%B-72142410203098.00104.20323969.61%B-73222115201896.00113.0627.53669.06%C+743020103030120.00123.1621.533.568.62%C+75241515182698.00108.0825.539.568.58%C+7626260291899.00105.633433.567.77%C+772225273016120.00125.81183166.69%C+782622123028118.00127.11252566.52%C+79261515281599.00113.53223566.45%C+802820203015113.00113.002731.566.30%C+8126180281587.0096.40363465.78%C822228122815105.00119.213022.564.47%C83241515161585.00103.5126.533.564.07%C84301512101582.0095.6731.53463.74%C85221710201382.0082.0033.540.563.66%C861325152724104.00104.002632.563.46%C872415152230106.00118.53173063.29%C8830108101573.0073.003742.563.19%C89222518287100.00107.6926.52862.35%C90261810181082.0087.4334.53361.62%C91202510161586.0098.533327.561.61%C92302212161595.0095.00243158.81%C-93302415101493.00104.6926.519.556.53%C-942625043085.0087.56222853.84%D+9522180161571.0086.48242753.71%D+9628006034.0034.63374250.12%D+9726000026.0026.783642.547.38%I9819010201059.0064.98252646.38%D992415061560.0071.37212043.51%NP10022161061569.0079.5425.511.543.22%D-101261520043.0048.41322543.09%D-10210151043069.0073.74261342.34%D-103241702043.0049.002421.538.10%NP104151666043.0048.6220.518.534.88%F105301500045.0049.7423830.31%NP1062410083072.0072.000024.00%NR107000000.000.0024.513.517.44%F10803000030.0030.000010.00%NR
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics65/index.html
##-----------------TITLE------------------------##
ICS 65 Fall 2012
##------------------TEXT------------------------##
ICS 65 Fall 2012 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 65 Fall 2012
   Course News







Check back here every day or so.  I will generally post important coursewide announcements here.  They will be listed in reverse-chronological order (i.e., newest items first).

Date AddedNews ItemW 12/19The final course grades are now available.Sa 12/8The remaining code example and a final Schedule update are now available.W 12/5Recent code examples demonstrating exceptions, exception safety, and building standard-library-compliant containers are now available.Su 12/2Project #5 is now available.F 11/30Project #4 is now due on Monday, December 3 at 11:59pm.W 11/28A new code example demonstrating the "polymorphic clone" pattern, which is useful in Project #4, is now available.W 11/21Yesterday's code examples — detailing the use of template functions, template classes, and pseudorandom number generation — are now available.Tu 11/20I've changed the due date of Project #4 to Friday, November 30 to accommodate the holiday this week, making sure there are two more days I'll be on campus before it's due.M 11/19Project #4 is now available.  One section of the write-up, detailing the use of the random number generators built into the C++ standard library, is still unwritten; I'll add it as soon as it's ready, but there's plenty to chew on for the time being.Sa 11/17Thursday's code example is now available.W 11/14All of the missing code examples are now available.Th 11/8Project #3 is now available.W 11/7A Schedule update is now available.Su 10/28I've extended the Project #2 deadline to Wednesday, November 7, for the benefit of those of you who would prefer to spend more time studying for the midterm.F 10/26Project #2 is now available.  Also, a bug was found in the "well-behaved" Vector code example.  In the assignment operator, this line:
      arrayCopy(newItems, items, v.sz);
    should be this instead:
      arrayCopy(newItems, v.items, v.sz);
    The code example has been updated to include the fix.
    F 10/26Yesterday's code example is now available.Th 10/25Tuesday's code example is now available.Sa 10/20Two new code examples and a schedule update are now available.Tu 10/16Today's talk about arrays has been wrapped up into an "odds-and-ends" code example.M 10/15There are now "TA hours" scheduled for this course.  See the Course Reference for times and locations.Su 10/14Project #1 is now available.  Some aspects of this project depend on things we'll be discussing in the upcoming week, but it should certainly be possible to get started on it.  Additionally, a Schedule update is available.W 10/10Yesterday's code examples are now available, along with a minor Schedule update.Su 10/7A Schedule update is now available.Th 9/27
      Welcome!  I encourage you to spend some time reading through the material on this course web site, and also to keep an eye on it as it evolves throughout the quarter.  Notice the set of links at the top of this (and every) page, leading you to the Course Reference, the Schedule, and the Project Guide, as well as a set of commented Code Examples that will be posted during the course of the quarter.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics22/FinalGrades.html
##-----------------TITLE------------------------##
ICS 22 / CSE 22 Fall 2012, Final Course Grades
##------------------TEXT------------------------##
ICS 22 / CSE 22 Fall 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
Code Examples |
About Alex








ICS 22 / CSE 22 Fall 2012
   Final Course Grades







Explanation (please read this first!)

Please spend a couple of minutes reading this section.  It will answer many of the questions that you may have about the grading process, and will save you a lot of upset waiting for a response to an email question.

Here are the final grades for ICS 22 and CSE 22.  By University regulations, at this stage, the cutpoints and the grades are non-negotiable, unless we made a clerical error, such as recording a score incorrectly.  (Seriously!  This means you!  Despite this warning, I often get at least an email that begins with a phrase like "I know you said that the cutpoints are non-negotiable, but..."  There is no "but" here.)  We also can no longer accept new regrade requests on the projects.

There were 59 points possible on the Final.  The average score on the Final was 40.47 (68.59%), with a high score of 59.

How do I know which scores are mine?

Each student is identified here by a Rank, beginning with the highest overall percentage and ending with the lowest.  Each of you should have received an email from me (at your @uci.edu email address) identifying your rank.

What do the columns mean?

Here is an explanation of the various columns:

The Rank column is a rank, from highest to lowest, for each student.The Proj1..Proj6 columns are your scores (out of 15) on each project.  Project 6 was worth 33 points originally, but its relative weight was intended to be the same as the others, so I've scaled all of the scores on it.  (For example, if you got 27/33, or 81.8%, your score will be listed as 12.27, which is 81.8% of 15 points.)The ProjTotal column lists the sum of the scores on the projects.  The total number of points possible on all the projects was 90.  There is also a column titled AdjProjTotal;  this contains your total project score after adjusting it for the differences between graders.  Those differences were removed by attempting to equalize the percentage of points lost, so that students in the "harder" sections ended up with scores that look more like those from the "easiest" section.  (Note that very low scores were not modified in this way; the assumption is that very low scores would have been very low in any section.)The MT and Final columns contain your raw scores on the Midterm and Final Exam.The TotalPct column is your overall percentage in the class, figured by adding the weighted percentages of the Midterm, Final, and AdjProjTotal, and PairModifier together, as described in the Course Reference.The Grade column indicates the grade that has been submitted.

There are a few words to be said about the selection of cutpoints.  People are cutpoints; whole-numbered percentages are not.  That means that the cutpoint for a particular grade is simply the lowest-scoring person who received that grade.  For the sake of argument, if you received a percentage of 54.99% in the class, and someone who received a 55.52% received a higher grade than you (with no person in between), you didn't miss the cutpoint by 0.01%; you missed it by 0.53% — a substantial margin.

Enjoy your break.  I hope I'll see you again sometime.







The grades

RankProj1Proj2Proj3Proj4Proj5Proj6ScaledProjTotalAdjProjTotalMTFinalTotalPctGrade115151414.51515.0088.5088.50485998.33%A+2151515151515.0090.0090.00505698.22%A+3151515151415.0089.0089.26485797.48%A+4151515151515.0090.0090.00465696.22%A+5151515151515.0090.0090.0044.55594.88%A6151514141513.6486.6487.984654.594.43%A7141515151515.0089.0089.24475294.01%A81514.514.5151515.0089.0089.264354.593.50%A914.51515151515.0089.5089.704651.593.42%A10141515151315.0087.0087.784652.593.16%A11151415151415.0088.0088.4844.552.592.72%A12141215151115.0082.0084.08465492.40%A13141515141515.0088.0088.004353.592.35%A1414.51515151515.0089.5089.504054.592.11%A1514.514.514151515.0088.0088.00435392.05%A1614.51315151515.0087.5087.5038.555.591.06%A171512151412.515.0083.5086.10435290.61%A1814.51514131515.0086.5086.50435190.20%A1914.514.515131515.0087.0087.0036.55690.14%A2014.514.514.5151515.0088.5088.89395189.26%A21111315151115.0080.0082.60415489.25%A22131114141415.0081.0083.34415388.98%A231415141312.515.0083.5086.103752.587.91%A241414.515141515.0087.5088.5038.54987.65%A251414.5151512.515.0086.0087.0438.55087.60%A26141515151515.0089.0089.263550.587.13%A271414.51514.51515.0088.0088.48414586.52%A281314.513.5141515.0085.0087.00424586.36%A29131512141515.0084.0085.45424686.27%A30131215131515.0083.0085.80384986.20%A31141515151515.0089.0089.0036.54785.69%A3214.51514.5151515.0089.0089.263944.585.57%A3315131414.51415.0085.5085.504938.585.34%A-34131315141515.0085.0086.3034.55085.27%A-3514.514.514131215.0083.0083.004543.585.19%A-361414.514.5141115.0083.0085.8035.54984.95%A-371514.515151515.0089.5089.5032.548.584.80%A-38141515151515.0089.0089.00374584.75%A-39141514151415.0087.0087.72334984.56%A-40151113.515915.0078.5081.49365184.47%A-41151215141513.6484.6485.933845.584.18%A-4214.51515141515.0088.5088.8628.55184.00%A-43151515151513.6488.6489.18344683.92%A-44121515151515.0087.0087.7830.55083.92%A-4515119.5151415.0079.5083.7033.550.583.91%A-4614.5159.512913.6473.6473.644349.583.59%A-47131312.5151215.0080.5082.80394683.59%A-481314.514.591515.0081.0083.3442.542.583.50%A-4914.514151514.515.0088.0088.52364483.44%A-5014.51515151515.0089.5089.5025.55283.38%A-51151514151415.0088.0088.48384283.24%A-521114.514.5141515.0084.0085.56344782.91%A-5314.515141512.515.0086.0086.00404182.54%A-54151315101515.0083.0085.80344682.42%A-5513.51515131515.0086.5087.413444.582.25%A-56141513.5151515.0087.5088.1039.53881.45%B+5715157.591215.0073.5080.1041.54281.27%B+5814.51313141315.0082.5084.45354481.14%B+5914.510.514.5121515.0081.5084.9034.54481.09%B+6014.514.514.5151515.0088.5088.503044.580.73%B+611313.514.51414.515.0084.5084.5036.54280.72%B+6213.51415151215.0084.5085.8329.546.580.48%B+63141415151415.0087.0087.72334280.40%B+64151414.5101312.2778.7781.6936.543.580.36%B+6514.51514.5151215.0086.0086.00324480.32%B+6615151514.51413.6487.1488.2832.541.580.11%B+671213.513131015.0076.5081.90413980.04%B+6814.5111091215.0071.5076.3138.54579.86%B+691514.515151515.0089.5089.50294379.79%B+7014.514.51513810.4575.4581.2834.543.579.18%B+711414.51191215.0075.5079.0028.55079.02%B+7214.514.5814.51515.0081.5084.9033.54178.81%B+731210.514.5158.515.0075.5081.3030.54678.67%B+7414.5159.5151515.0084.0084.003738.578.67%B+7514.51515121515.0086.5086.503240.578.47%B+76131414.51212.515.0081.0083.34334278.46%B+77141514.5141415.0086.5087.35284378.33%B+7814.514.514.5151515.0088.5088.502544.578.23%B+79141114151115.0080.0082.4231.543.578.18%B+801415151513.515.0087.5088.1027.541.577.53%B811214.515131115.0080.5084.3029.542.577.43%B82151315151515.0088.0088.003237.577.36%B83141515151515.0089.0089.2429.538.577.25%B8414.51115131515.0083.5085.0741.531.577.25%B851591012912.2767.2776.373245.576.93%B8614.51514111215.0081.5084.903040.576.76%B8714100121115.0062.0065.1441.545.576.69%B8811.5141313.51515.0082.0084.0827.54376.63%B891314.514.512.51515.0084.5086.70254376.54%B9013.51114.5151315.0082.0085.2026.542.576.33%B9114.51514.5101515.0084.0086.402839.575.83%B9214.515121211.515.0080.0082.60393375.79%B9314.51514151413.6486.1486.14264175.60%B94151110.5131515.0079.5083.7028.540.575.48%B9514.51214141215.0081.5084.90333575.00%B9615151511.51515.0086.5087.9029.535.574.88%B9714.515111312.515.0081.0081.00294174.82%B98131214121015.0076.0079.6430.54074.37%B-99151188815.0065.0071.5031.54574.22%B-100141111121415.0077.0082.2028.53973.92%B-10114.51515151515.0089.5089.502734.573.74%B-102141515151115.0085.0086.213827.573.63%B-103151113101215.0076.0081.60343473.44%B-104131214.5141515.0083.5086.10263773.22%B-1051514781415.0073.0077.4229.540.573.18%B-10614.51515131413.6485.1485.14293573.10%B-10714.51512.513715.0077.0077.003337.572.97%B-1081514.515151415.0088.5088.5024.53572.35%B-10913.51214131215.0079.5083.70253872.24%B-110141415111215.0081.0083.17323271.95%B-11114.51311151115.0079.5079.503233.571.21%C+11214.51511151315.0083.5083.50303271.09%C+113141414.5151515.0087.5088.1023.53471.08%C+114131512.50715.0062.5065.5236.53970.51%C+115121514.591212.2774.7780.87174369.95%C+116151311131515.0082.0085.20253369.94%C+11713.51211118.515.0071.0078.60263769.88%C+1181314010515.0057.0059.0838.54169.83%C+11901414.515815.0066.5068.55363669.82%C+12011.51515131515.0084.5086.701936.569.69%C+121151412.515715.0078.5081.28303169.51%C+12215129.59815.0068.5077.1025.537.569.26%C+123151514.5111315.0083.5083.502830.569.20%C+12413.515915815.0075.5079.002040.569.14%C+12513911.512.51515.0076.0081.6020.53869.06%C+12615148131415.0079.0081.86233568.65%C12714.599.5101215.0070.0078.0024.53668.27%C12813.598.5121215.0070.0078.002733.568.04%C12914.513.513.5121415.0082.5082.5021.534.567.88%C130151515121515.0087.0087.78242867.62%C13113.51310111513.6476.1476.1419.54067.32%C132121111121115.0072.0072.0027.53667.11%C133141514.512415.0074.5076.3026.533.567.03%C1341311131111.515.0074.5074.5027.53366.44%C135141313101515.0080.0082.42252966.33%C13614.51513.5121213.6480.6480.64302666.26%C137151513.515815.0081.5083.5525.52665.31%C138151513.515915.0082.5082.50272565.00%C139141212.5121115.0076.5079.76173564.71%C140141513.51314.515.0085.0085.002325.564.40%C14114.51511151515.0085.5085.50163164.39%C142131514151515.0087.0087.7219.525.563.87%C-14301210.59915.0055.5060.21313663.62%C-1441311815115.0063.0066.14253663.25%C-14514.51515151315.0087.5088.152122.563.03%C-1461213.51515915.0079.5079.50212661.26%C-147131415151515.0087.0087.72182261.04%C-14812.51311.515815.0075.0075.0024.52560.41%C-14914121215915.0077.0080.142021.558.37%D+150151515151515.0090.0090.0022.51258.37%D+1511513.5610015.0059.5059.50243257.43%D+152151411.5101215.0077.5080.75201655.38%D1531114801415.0062.0065.1412.532.554.48%D15414.5158.511815.0072.0076.681223.554.02%D15514159.511815.0072.5076.737.51647.34%D-15612.51512141115.0079.5079.5031445.14%D-15714149.5000.0037.5039.31201536.37%D-1581214.500012.2738.7740.3914729.10%F159998.51100.0037.5042.9419.5028.83%I16014140000.0028.0028.4832028.66%NR16113110000.0024.0026.4023.5023.48%I16214120000.0026.0027.6021022.77%NR16314110000.0025.0026.216014.65%NR16415130000.0028.0028.520012.68%F16514140000.0028.0028.480012.66%NR
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics23/MidtermAnswerKey.html
##-----------------TITLE------------------------##
ICS 23 / CSE 23 Summer 2012, Midterm Answer Key
##------------------TEXT------------------------##
ICS 23 / CSE 23 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 23 / CSE 23 Summer 2012
   Midterm Answer Key







The answers

There were 25 questions, each of which is worth one point, for a total possible score of 25 points.  There were two versions of the exam, distinguishable by the third digit of the test number.  The answer keys for each of the versions follow.

If the third digit of your test number was 1, 2, or 3, the correct answers are...

CDBABDCBECBCEDBEDBCBADDCC

If the third digit of your test number was 4, 5, or 6, the correct answers are...

BACDCBECBABBCBEDCEDDDBDCA
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics23/index.html
##-----------------TITLE------------------------##
ICS 23 / CSE 23 Summer 2012
##------------------TEXT------------------------##
ICS 23 / CSE 23 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 23 / CSE 23 Summer 2012
   Course News







Check back here every day or so.  I will generally post important coursewide announcements here.  They will be listed in reverse-chronological order (i.e. newest items first).

Date AddedNews ItemM 9/3The final course grades are now available.Th 8/30The final exam answer key is now available.Tu 8/14Project #5 is now available.Tu 8/7A Schedule update is now available, constituting an estimate for the remainder of the quarter.Sa 8/4Project #4 is now available.Th 8/2The results of the Othello tournament are now available.  In the spirit of the Olympics, our "medal winners" are:
      Gold: LCD Monitor (58-4)Silver: Frank Einstein (56-6)Bronze: Ronald McDonald (51-10-1, with 2735 tiles)Honorable Mention: A cheeseburger (51-10-1, with 2506 tiles)
    Th 7/26The midterm answer key is now available.W 7/18Project #3 is now available.Sa 7/7A Schedule update and Project #2 are now available.M 6/25Welcome!  A couple of things you should be aware of:
      The lab sections will begin meeting on Thursday, June 28, so there is no need to attend lab on Tuesday, June 26.I encourage you to spend some time reading through the material on this course web site.  Notice the set of links at the top of this (and every) page, leading you to the Course Reference, the Schedule, and the Lab Manual.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics23/CourseReference.html
##-----------------TITLE------------------------##
ICS 23 / CSE 23 Summer 2012, Course Reference
##------------------TEXT------------------------##
ICS 23 / CSE 23 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 23 / CSE 23: Fundamental Data Structures
   Summer 2012
   Course Reference







Instructor information

Alex ThorntonOffice: DBH 4048Email:  thornton@ics.uci.edu

Contacting me: I tend to be much easier to reach via email than any other way, so I would suggest using email to contact me under normal circumstances.  When you write me an email, please take a few moments to make sure that the following information is placed somewhere in your message: your name, your student ID#, and which course you're enrolled in (important since I'm teaching more than one this quarter).







Teaching assistant

There is one teaching assistant for this course: Arjun Satish, whose email address is his first name @ics.uci.edu.







Times and places

Lecture

The lecture meets on Tuesdays and Thursdays from 5:00pm-6:20pm in PSCB 140.

Labs (The ICS 23 Help Center)

There are two lab sections, meeting on Tuesdays and Thursdays from 1:00-4:50pm in ICS 183.  Collectively, we will refer to these as the ICS 23 Help Center.  You are not required to be enrolled in a lab section in order to be enrolled in the course, and you are generally gree to attend the ICS 23 Help Center whenever you need it, regardless of which lab section you are enrolled in.  While it is not a required part of the course, and nothing will be graded there this quarter, attendance does offer some significant benefits:

You will have a chance to consult a TA and/or a lab tutor regarding your work; this kind of instant feedback and help can be invaluable as you work through your projects.You will be surrounded by a large group of other people facing the same problems that you're facing.  This kind of shared journey will build a social network that will last you, in some cases, for the rest of your life.  Don't squander that opportunity!

Office hours

Beginning on Thursday, June 28, I will be available on Tuesdays and Thursdays from 7:15-8:50pm in ICS 253 — not my office, as it's in a building that will be locked during at least part of that time — during which I'm available to chat with you about whatever's on your mind.  (Note that this block of time may be listed as a discussion in the UCI Schedule of Classes, but it is actually my office hours, so you do not have to feel obligated to enroll in the discussion in order to attend, and attendance is purely optional.)







Textbooks

Data Structures and Algorithms in Java, 5th Editionby Michael T. Goodrich and Roberto TamassiaJohn Wiley & Sons, Inc. 2010ISBN 0-470-38326-7RECOMMENDED

You may also find a Java reference book to be useful.  If you took an introductory programming course using Java (e.g., ICS 21 / CSE 21), you'll probably find your textbook from that course to be sufficient as a reference.  If not, there are many suitable ones out there, and different styles will appeal to different people, so I suggest going to a local bookstore and finding one that you feel comfortable with.







Obtaining additional assistance

Asking questions of course staff

You can most easily get course questions answered by coming to the lecture, the ICS 23 Help Center, or office hours and asking them.  I am happy to help you in person when I'm available.  You can also ask questions by sending email to me or your TA (or both); we check our email frequently throughout the day, so you can usually get an answer to course-related questions within a few hours (and often much more quickly).  If the questions require a complex or lengthy response, we may ask you to see one of us in person.  As projects approach their due date, particularly on days when projects are due, we begin to receive quite a bit of email all at once, so we may not be able to respond to all messages before the project is due.  We aren't ignoring you on purpose, but unfortunately it's not always possible for the relatively small course staff to answer questions from a large number of students at once.

Accommodations for disabilities

Any students who feel that they may need an accommodation based on the impact of a disability should contact me privately to discuss these specific needs.  Also, contact the Disability Services Center online or by phone at (949) 824-7494 as soon as possible to better ensure that such accommodations, such as alternative test-taking environments or note-taking services, can be arranged for you in a timely way.







Grading

Weights of graded artifacts

Your course grade will be determined from the weighted combination of your scores on each of five projects, one Midterm, and one Final Exam.  The weights of each of these are:

Five programming projects, 35% (weighted equally at 7% each)Midterm, 30%Final Exam, 35%

Determining final grades

Course grades will be determined neither on a normal curve nor a straight scale.  It is guaranteed that overall scores over 90% will receive an A- or better, scores over 80% will receive a B- or better, and scores over 70% will receive a C or better.  However, the actual cutoffs may be lowered at the end of the quarter.  In short, it is not my intention to fail half of the students, nor am I planning on giving only 2% of the students A's, but I find that I'm able to achieve a fairer outcome overall by not constraining myself to a rigid scale up front.

If you're curious about how you're doing in the course, I'm happy to discuss your estimated grade at any time.  It's generally best to have this conversation in person, so that we can explore issues other than just the raw numbers; I'm happy to have this conversation at any time that I'm available, and I'm also glad to do it via email if we can't find a mutually available time.







Dropping the course or changing grade option

During Summer Session, you may drop the course or change grade option until the end of Week 8 (Friday, August 17), though refunds of course fees are not issued if you drop after the end of Week 4 (Friday, July 20).

I should point out here that I'm generally not able to be on campus on Fridays, so the last day that I'll be able to sign required forms for this course is Thursday, August 16 (or Thursday, July 19 to be eligible for any kind of refund).







Academic honesty

The policy

As ICS 23 or CSE 23 students, you are expected to know and follow the academic honesty policies of both the Bren School of ICS and the University as a whole.  Please take a few minutes to read the policies, which can be found at this link.

All of your lab work is expected to be completed solely by you.  Worker in larger groups and/or sharing of code between students is not permitted.  Note that "high-level discussion of course material for better understanding" is permitted and encouraged, but when it comes time to sit down and write code, that is expected to be done by you and you alone.  All submissions are compared to one another using an automated plagiarism detection system.  This system is extraordinarily good at finding similarities between submissions, even when there are superficial differences.  (Note that we also compare your submissions to those submitted during previous quarters whenever one of these assignments was given during a previous quarter, so it is an exceedingly bad idea to turn in, or even refer to, code written by a friend of yours who took the course already.)

Since all of your work is expected to be completed solely by you, you will be held responsible even if you plagiarize only a small portion of someone else's work.

Academic honesty is a two-way street.  Providing your code to other students for them to turn in as their own is not permitted anymore than turning in someone else's code.  Resist the temptation to give code to your friends "for reference."  Based on my experience, I can say that your "friends" may very well betray you and turn it in, anyway.

Naturally, the Midterm and Final Exam are also expected to be individual efforts.  Dishonest behavior during an exam will not be tolerated.

Violators of academic honesty policies are subject to the penalties described in the Bren School of ICS policy.  They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade.  Also be aware that a single documented case of academic dishonesty may preclude you from switching into computing majors, registering for computing minors, joining the ICS Honors Program, and graduating from a computing major with honors.

The lesson

Okay, so the moral of the story is that it's wise to avoid cheating.  I believe that it's relatively rare that students enter a course with the conscious intent to cheat their way through it; why come to UCI if you're not planning to get something out of the coursework?  So why do people cheat every quarter in every course?  The answers vary, but here's the easiest way I can boil down the numerous conversations I've had with students caught cheating in my courses over the years: I fell behind and couldn't figure out how to catch up.  Things happen and ten-week quarters are unforgiving.  You might get sick, you might have issues crop up in your family, you might have an off-campus job that's demanding too much of your time, you might be trying to decide whether you're on the path you want to be on... Any of those things (and many others) can make it hard to keep up.  You fall a little behind, you fall a little further behind, and pretty soon the situation seems hopeless.  You're under pressure, temptation gets the better of you...

If you feel like you're beginning to slip off course or things are getting beyond your control, the best thing to do is to talk to us sooner rather than later.  We're here to help; we understand.  But the reality of taking large-sized courses at a large-sized institution is that we're not going to know you're in need unless you tell us.  If things are happening in your life, tell us; you don't have to be specific if you're not comfortable with it.  Before the fact, there's often a way to work things out.  After the fact, it's usually too late.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics23/FinalAnswerKey.html
##-----------------TITLE------------------------##
ICS 23 / CSE 23 Summer 2012, Final Answer Key
##------------------TEXT------------------------##
ICS 23 / CSE 23 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 23 / CSE 23 Summer 2012
   Final Answer Key







The answers

There were 25 questions, each of which is worth one point, for a total possible score of 25 points.  There were two versions of the exam, distinguishable by which pair of digits in the test number were the same.  The answers for each version are below.

If the first and second digits of your test number were the same, the answers are...

BECBEEAADBDBACCCBCDEBDADD

If the second and third digits of your test number were the same, the answers are...

AADBDBEBDADBECBEEACCCBCDD
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics23/FinalGrades.html
##-----------------TITLE------------------------##
ICS 23 / CSE 23 Summer 2012, Final Course Grades
##------------------TEXT------------------------##
ICS 23 / CSE 23 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 23 / CSE 23 Summer 2012
   Final Course Grades







Explanation (please read this first!)

Please spend a couple of minutes reading this section.  It will answer many of the questions that you may have about the grading process, and will save you a lot of upset waiting for a response to a question asked via email.

Here are the final grades for ICS 23 and CSE 23.  By University regulations, at this stage, the cutpoints and the grades are non-negotiable, unless we made a clerical error, such as recording a score incorrectly.  (Seriously!  This means you!  Despite this warning, I often get at least an email that begins with a phrase like "I know you said that the cutpoints are non-negotiable, but..."  There is no "but" here.)  We also can no longer accept new regrade requests on the projects.

There were 25 points possible on the Final.  The average score on the Final was 14.29 (57.14%), with a high score of 22.

How do I know which scores are mine?

Each student is identified here by a Rank, beginning with the highest overall percentage and ending with the lowest.  Each of you should have received an email from me (at your @uci.edu email address) identifying your rank.

What do the columns mean?

Here is an explanation of the various columns:

The Rank column is a rank, from highest to lowest, for each student.The Proj1..Proj5 columns are your scores (out of 4) on each project.The ProjTotal column lists the sum of the scores on the projects.  The total number of points possible on all the projects was 90.  There is also a column titled AdjProjTotal; this column has no special meaning this quarter, since it's normally used to adjust for differences between graders, but everyone was graded by the same TA.  The Midterm and Final columns contain your raw scores on the Midterm and Final Exam.The TotalPct column is your overall percentage in the class, figured by adding the weighted percentages of the Midterm, Final, and AdjProjTotal, as described in the Course Reference.The Grade column indicates the grade that has been submitted.

There are a few words to be said about the selection of cutpoints.  People are cutpoints; whole-numbered percentages are not.  That means that the cutpoint for a particular grade is simply the lowest-scoring person who received that grade.  For the sake of argument, if you received a percentage of 54.99% in the class, and someone who received a 55.52% received a higher grade than you (with no person in between), you didn't miss the cutpoint by 0.01%; you missed it by 0.53% — a substantial margin.

Enjoy your post-summer break.  I enjoyed spending the summer with you, and I hope we'll cross paths again sometime.







The grades

RankProj1Proj2Proj3Proj4Proj5ProjTotalAdjProjTotalMidtermFinalTotalPctGrade1444442020.00192085.80%A+2443.54419.519.50162284.13%A+34431.5315.515.50232184.13%A+4444442020.00171982.00%A5444442020.00161980.80%A6443.53418.518.50181980.58%A7443.54419.519.50151877.33%A8341.52414.514.50192076.18%A9444241818.00151976.10%A10144441717.00211575.95%A1144443.519.519.50181475.33%A12442.84418.818.80141874.90%A-13443.54419.519.50151674.53%A-14143.54416.516.50181774.28%A-15443241717.00181673.75%A-16441.52415.515.50211573.33%A-17433441818.00161673.10%A-18444442020.00141572.80%A-19423211212.00221872.60%A-20444442020.00121570.40%B+21444442020.00141268.60%B22444442020.00151168.40%B2334333.516.516.50151567.88%B24241.53.541515.00161566.45%B2544243.517.517.50171166.43%B26444411717.00121463.75%B-27441.53.541717.00121463.75%B-28444442020.00111163.60%B-29443.54217.517.50141061.43%C+30440441616.00101561.00%C+31243.523.51515.00111560.45%C+32141141111.00131860.05%C+33341.53.541616.0081660.00%C+3414023.510.510.50181459.58%C35441.521.51313.00131559.35%C36431.54113.513.50121559.03%C37442.50.53.514.514.50161058.58%C38341.52111.511.50181258.53%C3942323.514.514.50111356.78%C40421.52110.510.50131656.38%C41432.53.52.515.515.50101255.93%C42403.50411.511.50121555.53%C43440021010.00151455.10%C44444001212.00121455.00%I45241.5018.58.50161352.28%C-46041.5016.56.50141549.18%C-47441.523.51515.0051249.05%C-481410.517.57.50171148.93%C-491402188.00151147.40%C-50442.511.51313.0011745.75%D+510200022.00151542.50%D524410099.0012841.35%D53111.5418.58.5010736.68%D-5404001.55.55.5011834.03%D-55241.5007.57.509632.33%D-5644012.511.511.5010032.13%NR570000000.0016830.40%D-58141.5006.56.509022.18%I590401055.0011021.95%F604000044.00007.00%NR611000011.00001.75%NR620000000.00000.00%NR
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics23/TournamentResults.html
##-----------------TITLE------------------------##
ICS 23 / CSE 23 Summer 2012, Tournament Results
##------------------TEXT------------------------##
ICS 23 / CSE 23 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 23 / CSE 23 Summer 2012
   Tournament Results







A few words of explanation

In order to understand the results as presented, here is an explanation of how the tournament was structured:

Any AI that didn't compile was immediately thrown out.For all pairs of AIs i and j, i played two games against j: once with i as the black player and once with i as the white player.Any AI that threw an exception, returned an invalid move, did not have a chooseMove() method with the proper signature, did not implement the OthelloAI interface, or took too long to make a move (5 CPU seconds on my machine) was immediately disqualified and was not allowed to play any more games.  (I should have also disqualified any AI that printed any output to System.out, but I opted to look past this problem.  I redirected all console output to a file and that file was almost 500MB when the tournament was done.  As ICS 23 / CSE 23 students, you shouldn't be turning in code that dumps debug output to the console anymore.)After all the games were played, the results of all games between pairs of AIs that were not disqualified were tabulated.  Any games played by an AI that was subsequently disqualified were thrown out.  As a result, the number of games counted for each AI was the same.  There were 32 AIs that were not disqualified.  Each of them played 62 games (two games against each of the other 31 qualifying AIs).The order of finish in the tournament was determined by two factors:
    The winning percentage, which was calculated using the formula: (wins + (ties / 2.0)) / games_played.The total number of tiles earned in all games played, which was used as a tiebreaker if there was a tie on winning percentage.
  

20 AIs that compiled were disqualified.  Most of these disqualifications were the result of taking too long to make a move.  One AIs thre an ArrayIndexOutOfBoundsException and a few others made illegal moves.  Four others were disqualified because they didn't compile.

One more reminder: The results of this tournament are purely for entertainment purposes and will not reflect on your grade at all.







The results

Player is the name returned by the getName() method in your OthelloAI implementation.  (Two AIs returned null from the getName() method; they are both listed as "(null)" below.)  Total Record indicates your AI's total number of wins, losses, and ties in games played.  Win Pct is your AI's winning percentage.  Total Tiles is the total number of tiles your AI earned in all of the games it played.  Record as Black and Record as White show the number of wins, losses, and ties in games played as the black and white player, respectively.

PlayerTotal RecordWin PctTotal TilesRecord as BlackRecord as WhiteLCD Monitor58- 4- 00.935309628- 3- 030- 1- 0Frank Einstein56- 6- 00.903251828- 3- 028- 3- 0Ronald McDonald51-10- 10.831273528- 2- 123- 8- 0A cheeseburger51-10- 10.831250626- 4- 125- 6- 0Frankenstein Sassafras, King of Polka49-12- 10.798268326- 5- 023- 7- 1AI SUPER DUPER AWESOMEEEEEEEEEEE47-15- 00.758248423- 8- 024- 7- 0Its a dumb Machine46-16- 00.742231824- 7- 022- 9- 0Paranoid Android42-19- 10.685220823- 8- 019-11- 1AMYDliabl41-21- 00.661245120-11- 021-10- 0Evelina's Game38-24- 00.613199820-11- 018-13- 0IT'S ADVENTURE TIME!37-25- 00.597224818-13- 019-12- 0(null)33-29- 00.532196814-17- 019-12- 0SweetTea28-32- 20.468187016-14- 112-18- 1WylingusVicious28-33- 10.46016669-22- 019-11- 1The18%26-35- 10.42717898-22- 118-13- 0GG-NO-RE25-34- 30.427176012-17- 213-17- 192526-36- 00.419162111-20- 015-16- 0xXEdwinDaGreatXx22-33- 70.411179915-16- 07-17- 7Pipsicles24-37- 10.395154512-18- 112-19- 08374245523-37- 20.387152710-19- 213-18- 0Katherine Lee23-38- 10.379150511-19- 112-19- 0The Almighty Zeus Bow DOWN!23-38- 10.379160120-10- 13-28- 0Silly_15123-38- 10.379152611-19- 112-19- 0Algo Attack!23-38- 10.379159211-20- 012-18- 1HAL 0.00922-39- 10.363154712-18- 110-21- 0(null)22-39- 10.36315139-21- 113-18- 0Angela Mendez20-41- 10.33115699-21- 111-20- 0Doctor Wut19-42- 10.315155510-21- 09-21- 1Dogcow17-43- 20.29015679-21- 18-22- 1The Konkani Guy13-49- 00.21013656-25- 07-24- 0CitySCAPE13-49- 00.21013035-26- 08-23- 0KyleBot7-54- 10.12112211-30- 06-24- 1SkynetDISQUALIFIED (took too long)Se7enDISQUALIFIED (took too long)Phileas FoggDISQUALIFIED (took too long)gnresTDISQUALIFIED (took too long)MUNDO'S NAME IS AS LONG AS HE PLEASES :DISQUALIFIED (took too long)Goku-116DISQUALIFIED (took too long)DefenestratorDISQUALIFIED (took too long)I like apple pieDISQUALIFIED (took too long)RBDVDISQUALIFIED (took too long)Brothello, The Destroyer of DreamsDISQUALIFIED (illegal move)TurochampDISQUALIFIED (took too long)CowLickerDISQUALIFIED (took too long)MarleyDISQUALIFIED (took too long)BlockHeadDISQUALIFIED (took too long)MyNameGoesHereDISQUALIFIED (java.lang.ArrayIndexOutOfBoundsException)BlackachuDISQUALIFIED (took too long)heyyyjayDISQUALIFIED (illegal move)NYOthelloAIDISQUALIFIED (took too long)Overflow ErrorDISQUALIFIED (illegal move)Mr.DerpDISQUALIFIED (took too long)
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics23/Schedule.html
##-----------------TITLE------------------------##
ICS 23 / CSE 23 Summer 2012, Course Schedule
##------------------TEXT------------------------##
ICS 23 / CSE 23 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 23 / CSE 23 Summer 2012
   Schedule







This schedule is a work in progress and will be updated throughout the quarter; check in before each lecture for updates.  In general, I'll try to keep the schedule at least a week or so ahead, so that you can anticipate where we're headed.

All assigned readings are from the Goodrich text.  It is a good idea to skim the assigned reading before the lecture for the main ideas, attend lecture, and then to go through the assigned reading again to fill in the details that you missed, both in your initial skim of the reading and in the lecture.

Several lectures have little or no reading corresponding to them.  In some cases, this is because a block of reading corresponds to more than one lecture.  In other cases, the material covered in that lecture is not discussed in the textbook.

A few of the early lectures include material that is a review of ICS 22 / CSE 22.  Some of the readings corresponding to these lectures were also assigned in ICS 22 / CSE 22.  This course expands on those topics.

DateLecture TopicsReadingsProject DueWeek 1Tu 6/26
      Course introduction and policiesArrays vs. ArrayLists, revisitedMultidimensional arraysO-, Ω-, and Θ-notation
    
      Ch. 1.5Ch. 4
    Th 6/28
      O-, Ω-, and Θ-notation (continued)Analyzing linked list variations using these notationsStacks, queues, and deques"Alternative" forms of algorithm analysisAmortized analysis (briefly)
    
      Ch. 5Ch. 6.1 (especially the analysis in 6.1.5)
    Week 2Tu 7/3
      Analyzing the performance of recursionRecurrencesGeneral treesGeneral tree implementation (briefly)
    
      Ch. 11.1.5Ch. 7.1
    W 7/4University Holiday: Independence DayTh 7/5
      Breadth-first tree traversalsPreorder and postorder tree traversalsN-ary and binary treesBinary search treesInorder tree traversals
    
      Ch. 7.2 - 7.3Ch. 10.1
    F 7/6Project #1 due 11:59pmWeek 3Tu 7/10
      Binary search trees (continued)The importance of keeping binary search trees balancedAVL trees
    
      Ch. 10.2
    Th 7/12
      AVL trees (continued)Priority queues (briefly)Implementing a priority queue using a min heap or max heap
    
      Ch. 8.1 - 8.3
    Week 4Tu 7/17
      Skip listsProbabilistic analysis (briefly)Hashing and hash tablesSeparate chaining"Good" hash functions
    
      Ch. 9.4Ch. 9.2
    Th 7/19
      Open addressingLinear probingHashing objects other than numbers
    
      
    F 7/20Project #2 due 11:59pmWeek 5Tu 7/24
      Data compression (brief overview)Huffman codes and Huffman code trees
    
      
    Th 7/26
      MIDTERM: regular lecture time and location
    
      
    Week 6Tu 7/31
      Graphs: definition and terminologyDirected graphsDirected acyclic graphs (DAGs)Graph implementation trade-offs
    
      Ch. 13.1 - 13.2, Ch. 13.4
    Th 8/2
      Undirected graphsDepth-first graph traversal
    
      Ch. 13.3
    F 8/3Project #3 due 11:59pmWeek 7Tu 8/7
      Connectedness of a graphStrong connectedness vs. weak connectednessDijkstra's shortest path algorithm
    
      Ch. 13.5
    Th 8/9
      Breadth-first graph traversalTopological ordering of a DAGMinimum spanning trees
    
      Ch. 13.6
    Week 8Tu 8/14
      The sorting problemSorting in O(n2) time (insertion and selection sort)Sorting in O(n log n) time (mergesort, quicksort, treesort, heapsort)
    
      Ch. 11.1 - 11.2
    Th 8/16
      Sorting in O(n log n) time (continued)A lower bound for comparison-based sortingLinear time sorting (counting sort)
    
      Ch. 11.3
    F 8/17Project #4 due 11:59pmWeek 9Tu 8/21
      Linear time sorting (bucket sort and radix sort)The memory hierarchy (briefly)Performance differences between memory and external storage
    
      
    Th 8/23
      Searching on external mediaB-treesSorting on external media (briefly)
    
      Ch. 14.3 - 14.4
    Week 10Tu 8/28
      Equivalence classesThe Union-Find algorithm
    
      Ch. 11.4.3
    Project #5 due 11:59pmTh 8/30
      FINAL EXAM: regular lecture time and location
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics32/ProjectGuide/Project3/example.html
##-----------------TITLE------------------------##
ICS 32 Winter 2016, Project #3: Ride Across the River, Example Implementation
##------------------TEXT------------------------##
ICS 32 Winter 2016 |
News |
Course Reference |
Schedule |
Project Guide |
Notes and Examples |
About Alex








ICS 32 Winter 2016
   Project #3: Ride Across the River
   Example Implementation







Instructions

If you want to see the correct output for a given input, you'll simply need to do three things:

Fill in the API Key field below with your MapQuest API Key.  If you don't have one, you'll need to get it created before you can proceed; check out the Project #3 write-up for more details.Fill in the Test Input field with input in the format described in the Project #3 write-up.Click the Run button.

After you click Run, the test results will be displayed below the Run button; you can clear those results subsequently by clicking the Clear button that will appear below them.

Note that while the example implementation does lightly check its input, it's only intended to support input that conforms to the specified format; anything else may behave in any number of ways, up to and including crashing.


















Newly implemented by Alex Thornton, Fall 2015, based loosely on a previous implementation.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics184/Schedule.html
##-----------------TITLE------------------------##
ICS 184 / EECS 116 Summer 2006, Schedule
##------------------TEXT------------------------##
ICS 184 / EECS 116 Summer 2006 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.184 newsgroup |
About Alex








ICS 184 / EECS 116 Summer 2006
   Schedule







All assigned readings are from the Silberschatz text.  It is a good idea to skim the assigned reading before the lecture for the main ideas, attend lecture, and then to go through the assigned reading again to fill in the details that you missed, both in your initial skim of the reading and in the lecture.

Some lectures have little or no reading corresponding to them.  In some cases, this is because a block of reading corresponds to more than one lecture.  In other cases, the material covered in that lecture is not discussed in the textbook.

DateLecture TopicsReadingsAssignment DueWeek 1M 6/26
      Course introductionWhat are databases?An overview of databases, DBMS's, and applications built around them
    
      Ch. 1
    W 6/28
      The relational modelRelations, tuples, and attributesUsing relational algebra to write queries
    
      Ch. 2
    Week 2M 7/3
      Using relational algebra to write queries (continued)
    
      
    W 7/5
      Using relational algebra to write queries (continued)
    
      
    Week 3M 7/10
      The effect of nulls in the relational modelOuter joinsWhat is SQL?Data definition vs. data manipulationData definition in SQL (briefly)
    
      Ch. 3.1 - 3.5
    W 7/12
      Writing queries in SQL
    
      
    Assignment #1 due 11:59pmWeek 4M 7/17
      Nested SQL queriesThe effect of nulls in SQLData modification in SQL
    
      Ch. 3.6 - 3.8Ch. 3.10
    W 7/19
      Modification of data in SQLIntegrity constraintsPRIMARY KEY, CHECK, UNIQUE, NOT NULLForeign key relationships
    
      Ch. 4.2
    Week 5M 7/24
      Foreign key relationships (continued)Assertions — the most general kind of constraint
    
      
    Assignment #2 due 11:59pmW 7/26
      Views in SQLModification of views (briefly)Materialized views (briefly)TransactionsStored procedures and functions in MySQL
    
      Ch. 3.9Ch. 15.1 - 15.2Ch. 4.6
    Week 6M 7/31
      Stored procedures and functions in MySQL (continued)Triggers in MySQL
    
      Ch. 8.6
    W 8/2
      Triggers in MySQL (continued)Indexing (briefly)
    
      
    F 8/4Assignment #3 due 11:59pmWeek 7M 8/7
      MIDTERM: regular lecture time and location
    
      
    W 8/9
      The Entity-Relationship (E-R) modelEntities and relationshipsE-R diagrams
    
      Ch. 6.1 - 6.8
    Week 8M 8/14
      Extending the E-R model with additional features
    
      
    W 8/16
      Converting E-R diagrams to relational database tables
    
      Ch. 6.9 - 6.10
    Week 9M 8/21
      Assessing the quality of a database designFunctional dependency theoryFirst Normal Form (1NF)Boyce-Codd Normal Form (BCNF)Third Normal Form (3NF)
    
      Ch. 7.1 - 7.3
    Assignment #4 due 2:00pm (in lecture)W 8/23
      Using a database as a component in a larger software systemConnecting to a database from outside a DBMSUsing JDBC to connect to a database from a Java program
    
      
    Week 10M 8/28
      More about JDBCThe need for object/relational mappingThe Java Persistence API (briefly)
    
      
    Assignment #5 due 2:00pmW 8/30
      XML as a data interchange formatA few remaining odds and endsConcluding observations
    
      Skim Ch. 10
    F 9/1
      FINAL EXAM: 2:00-4:00pm, IERF 101
    Su 9/3Assignment #6 (extra credit) due 11:59pm
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics184/CourseReference.html
##-----------------TITLE------------------------##
ICS 184 / EECS 116 Summer 2006, Course Reference
##------------------TEXT------------------------##
ICS 184 / EECS 116 Summer 2006 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.184 newsgroup |
About Alex








ICS 184 / EECS 116: Introduction to Data Management
   Summer 2006
   Course Reference







Instructor information

Alex ThorntonOffice: CS 408FPhone: (949) 824-6624Email:  thornton@ics.uci.edu

Office hours: I will be available in or around my office on Mondays and Wednesdays from 3:30-4:50pm, during which all course-related issues will have the highest priority.  I'm in my office at many other times during the week, and if I'm not working on something urgently, I'll be glad to sit down and talk with you.

Contacting me: I tend to be much easier to reach via email than by phone, so I would suggest using email to contact me under normal circumstances.  When you write me an email, please take a few moments to make sure that the following information is placed somewhere in your message: your name, your student ID#, and which course you're enrolled in (as I'm teaching more than one).







Times and places

The lecture meets on Mondays and Wednesdays from 2:00-3:20pm in CS 174.







Textbooks

There is one textbook that accompanies the material in this course:

Database System Concepts, 5th Editionby Silberschatz, Korth, and SudarshanMcGraw-Hill 2006ISBN 0-07-295886-3REQUIRED







Discussion section and TA information

There is a discussion section for this course; the discussion section is an hour once a week, during which your TA will answer questions and discuss assignments and/or lecture material with you.  You are not required to be enrolled in the discussion section in order to attend, and you are not required to attend the discussion as part of the course; however, we strongly recommend that you take the time to attend, as it's a great way to get help as you work through the course material.

Discussions will begin meeting Wednesday, July 5, and will continue to meet every Wednesday from 4:00-4:50pm in CS 180.

Our TA this quarter is Vibhav Gogate, whose email address is the first letter of his first name, followed by his entire last name, followed by @ics.uci.edu.







Obtaining additional assistance

You can most easily get course questions answered by coming to your lecture or discussion and asking them.  I am available in my office at various times throughout the week, and am happy to help you in person.

You can also ask questions by sending email to me and/or the TA; both of us read our email fairly often throughout the day (and, at least in my case, often into the evening).  Thus, you can usually get a response to your course-related questions within a few hours (sometimes less frequently on weekends and holidays).  If the questions require a complex or lengthy response, we may ask you to see one of us in person.  As assignments approach their due date, particularly on days when assignments are due, we begin to receive quite a bit of email all at once, so we may not be able to respond to all messages before the assignment is due; if that's the case, we will not send a response if we can't get to it before the assignment is due.  We aren't ignoring you on purpose, but unfortunately it's not always possible for the relatively small course staff to answer questions from a large number of students at once.

You are encouraged to participate on the ics.184 newsgroup.  I hope that this will become an effective mechanism for discussion throughout the quarter, and that students can help other students.  At the very least, read it periodically, as the TA and I may be using it to make coursewide or section-wide announcements.  You are responsible for knowing what goes on there.  Please make sure that you read the ground rules that I've posted there, as I will expect that you follow them.  If you don't know what a newsgroup is or how to connect to it, no problem!  I've written a document that explains everything you'll need to know to get connected.

Any students who feel that they may need an accommodation based on the impact of a disability should contact me privately to discuss these specific needs.  Also, contact the Disability Services Center at (949) 824-7494 as soon as possible to better ensure that such accommodations, such as alternative test-taking environments or note-taking services, are implemented in a timely fashion.







Grading

Your course grade will be determined from the weighted combination of your scores on each of six assignments, one Midterm, and one Final Exam.  The weights of each of these are:

Six assignments, 30% (weighted equally at 5% each)Midterm, 30%Final Exam, 40%

Course grades will be determined neither on a normal curve nor a straight scale.  It is guaranteed that overall scores over 90% will receive an A- or better, scores over 80% will receive a B- or better, and scores over 70% will receive a C or better.  However, the actual cutoffs may be lowered at the end of the quarter.  In short, it is not my intention to fail half of the students, nor am I planning on giving only 2% of the students A's, but I prefer not to constrain myself with either a straight scale or a formalized curve.







Dropping the course or changing grade option

During Summer Session, you may drop the course or change grade option until the end of the eighth week (Friday, August 18).







Academic dishonesty

As students in this offering of ICS 184 or EECS 116, you are expected to know and follow the academic honesty policies of both the School of ICS and the University as a whole.  Please take a few minutes to read the policies, which can be found at this link.

All of your lab work is expected to be completed solely by you.  Group work and/or sharing of code or answers between students is not permitted.  Note that "high-level discussion of course material for better understanding" is permitted and encouraged, but when it comes time to sit down and write your solution, that is expected to be done by you and you alone.  All submissions are compared to one another using an automated plagiarism detection system.  This system is extraordinarily good at finding similarities between submissions, even when there are superficial differences.  (Note that we also compare your submissions to those submitted during previous quarters whenever one of these assignments was given during a previous quarter, so it is an exceedingly bad idea to turn in, or even refer to, code written by a friend of yours who took the course already.)

Since all of your work is expected to be completed solely by you, you will be held responsible even if you plagiarize only a small portion of someone else's assignment.

Academic dishonesty is a two-way street.  Providing your work to other students for them to turn in as their own is not permitted anymore than turning in someone else's work.  Resist the temptation to give work to your friends "for reference."  Based on my experience, I can say that your "friends" may very well betray you and turn it in, anyway.

Violators of academic honesty policies are subject to the penalties described in the School of ICS policy.  They are also subject to an immediate course grade of F, without the possibility of dropping the course to avoid the grade.  Also, be aware that a single documented case of academic dishonesty may preclude you from switching into a computing major, registering for a computing minor, joining the ICS Honors Program, and graduating with honors.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics184/LabManual/UsingNewsgroup.html
##-----------------TITLE------------------------##
ICS 184 / EECS 116 Summer 2006, How to Use the Course Newsgroup
##------------------TEXT------------------------##
ICS 184 / EECS 116 Summer 2006 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.184 newsgroup |
About Alex








ICS 184 / EECS 116 Summer 2006
   How to Use the Course Newsgroup







What is a newsgroup?

Before there was a World Wide Web, a common form of communication on the Internet was via newsgroups.  A newsgroup is a bulletin board that allows users to conduct discussions centered around a particular topic, somewhat like today's Web logs (commonly called "blogs").  Despite their declining popularity, tens of thousands of newsgroups still exist on the Internet, covering a wide variety of topics.

Since newsgroups predate the existence of the Web, they operate on a completely different protocol.  As a result, you can't read newsgroups with a Web browser.  Instead, you need software called a news reader.  Fortunately, one of the most common email software packages for Windows, Microsoft Outlook Express, contains a news reader.  The full Netscape/Mozilla package does, too, as part of its email software (which is called Communicator); similarly, Mozilla's Thunderbird package also provides this support.

If you prefer, you can download dedicated news reader software, such as Forte Free Agent.  Dedicated news readers tend to have a great deal more functionality (such as extracting binary files from sets of combined newsgroup messages), at the cost of a substantial increase in complexity.  If you're new to this stuff, I suggest using Outlook Express or one of the Mozilla products.







Connecting to a news server

In order to set up any news reader software, you need at least the following pieces of information:

News server or NNTP server: news.service.uci.eduUsername/password: your UCInetID and password

In order to read a newsgroup, you need to connect to a news server (also known as an NNTP server).  News servers keep copies of messages from a wide variety of groups and allow you to download them.  Some groups, like alt.music.counting-crows, are distributed worldwide.  Our course newsgroup, ics.184, is distributed only on the UCI news server, since it concerns only UCI students.

Most news servers require a login and password.  UCI's news service requires you to log in with your UCInetID and password.

With this information, you should be able to configure any news reader software properly, though it can be a bit tricky if you're not familiar with the software.  So, in the following section, I'll explain how to set up Outlook Express as your news reader.







Setting up Outlook Express as your news reader

Follow this set of steps and you should be able to read and write messages on our newsgroup:

Connect yourself to the Internet.  You need to be connected when you first set up your news reader software.Start up Outlook Express.  Go to the Tools menu and select "Accounts..."On the ensuing dialog, click the "Add" button and select "News..." on the resulting menu.Next, you'll be taken through the "Internet Connection Wizard".  Enter your name and email, as requested, clicking the "Next" button after each.Now enter news.service.uci.edu into the field marked "News (NNTP) server".  Be sure to check the box marked "My news server requires me to log on", then click the "Next" button.Into the field marked "Account name", type your UCInetID.Into the field marked "Password", type your UCInetID's password.  Go ahead and check the "Remember password" box, so you won't have to re-type your password every time.  Don't check the box marked "Log on using Secure Password Authentication (SPA)".Click the "Next" button, then click "Finish" and you're ready to connect.Next, you'll be asked if you want to download a list of newsgroups.  Click the "Yes" button.  (If you're on a dial-up connection, this may take a little time, but it only has to be done once.)Now you should see a list of newsgroups.  Select ics.184 from the list and click the "Subscribe" button.Finally, press the "Go To" button, and you should see a list of all of the messages on our newsgroup!







What should I do if I don't want to use Outlook Express?

Get yourself some other news reader software and read its documentation.  I don't have any other news reader software installed, so you'll be on your own to figure out how to set it up.  Just remember, the things you need to know are:

News server or NNTP server: news.service.uci.eduLogin and password are required.Your login is your UCInetID, your password is your UCInetID password.







A few minor changes made by Alex Thornton, Fall 2005.Originally written by Alex Thornton, Winter 2003.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics184/FinalGrades.html
##-----------------TITLE------------------------##
ICS 184 / EECS 116 Summer 2006, Final Course Grades
##------------------TEXT------------------------##
ICS 184 / EECS 116 Summer 2006 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.184 newsgroup |
About Alex








ICS 184 / EECS 116 Summer 2006
   Final Course Grades







Explanation (please read this first!)

Please spend a couple of minutes reading this section.  It will answer the majority of the questions that you may have about the grading process, and will save me a lot of time answering emails, and, most importantly, save you a lot of upset waiting for a response.

Here are the final grades for ICS 184 and EECS 116.  By University regulations, at this stage, the cutpoints and the grades are non-negotiable, unless we made a clerical error, such as recording a score incorrectly.  (Seriously!  This means you!  Every quarter, I get at least one email that begin with the phrase "I know you said that the cutpoints are non-negotiable, but...")  We also will no longer accept new regrade requests on the assignments.

There were 80 points possible on the Final, and the average score was 59.17 (73.96%).

The IDSuffix column contains the last four digits of your UCI ID# or Access ID#.  The A1..A6 columns are your raw scores (out of 100) on each assignment.  The TotalPct column is your overall percentage in the class, figured by adding the weighted percentages of the Midterm, Final, and assignment scores together, using the updated formula we decided on after Assignment #6 was dropped as an official requirement due to scheduling constraints:

Assignments 1 through 5 are worth 25% total (5% each)The Midterm is worth 30%The Final Exam is worth 40%An extra 5% is allocated to either your Midterm or your Final Exam (whichever score was higher on a percentage basis)Assignment 6 is worth 5% of extra credit

The grades were initially calculated before factoring in the scores on the extra credit assignment.  Then I plugged in the extra credit scores and raised several people's grades as a result.

There are a few words to be said about the selection of cutpoints.  People are cutpoints; whole-numbered percentages are not.  That means that the cutpoint for a particular grade is simply the lowest-scoring person who received that grade.  For the sake of argument, if you received a percentage of 54.99% in the class, and someone who received a 55.52% received a higher grade than you (with no person in between), you didn't miss the cutpoint by 0.01%; you missed it by 0.53% — a substantial margin.

It was a great quarter.  Best of luck to all of you going forward.







The grades

IDSuffixA1A2A3A4A5A6MTFinalTotalPctGrade105979857870603542.553.573.66%B11949498100708704456.578.20%B+16091003527858540395771.56%B-168410088809089046.563.583.16%A1691476548000008.00%NR18218442999580100455178.63%B+21146067828060503450.566.57%C+31987456637076037.541.561.14%C-346710010010090976553.57397.54%A+3700831009200044041.25%NR38291009007594854571.586.53%A39959078629095805262.588.50%A441384879490859542.56284.39%A4872909093859097497595.69%A+5306565127959303760.569.95%B-558010010010080899539.544.575.14%B598090733200304358.567.38%C+62189592988091044.562.581.86%A-63486863478080100375974.91%B63711600000000.80%NR639586939788958036.55577.44%B64968988927510010043.560.584.64%A730695868880978046.565.588.11%A797540357700033.5028.54%NR80768110010090801004469.590.22%A835668879080600415873.88%B8471948480659405575.592.98%A856992748675755040.54771.41%B-87059794948010070566795.25%A+89319493868090954964.589.78%A98098155487559031.532.551.84%D
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics184/MidtermScores.html
##-----------------TITLE------------------------##
ICS 184 / EECS 116 Summer 2006, Midterm Scores
##------------------TEXT------------------------##
ICS 184 / EECS 116 Summer 2006 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.184 newsgroup |
About Alex








ICS 184 / EECS 116 Summer 2006
   Midterm Scores







A few comments

Here are the scores for the Midterm.  There were 60 points possible.  The average score was 43.19 (77.1%), with a high score of 56.

The Midterms are available in my office for redistribution starting on Wednesday, August 16.  Note that once you leave my office with your Midterm, I will no longer entertain any regrade requests, so be sure to take a quick look through it before leaving my office.  To that end, it may be helpful to print and bring a copy of the solutions with you, so you can refer to them as you look through your exam.

Please note that I do not assign letter grades to individual components of your final course grade, so there is no official correlation between Midterm scores and letter grades.  I only deal with letter grades once, at the end of the quarter.  I am, however, happy to discuss your situation with you and give you a rough estimate of where you currently stand.







The scores

The IDSuffix column lists the last four digits of your UCI ID# (or Access ID#).  (In a couple of cases, I had to list the last five digits to disambiguiate.)  The Score column lists your raw score out of 60 points possible.

IDSuffixScore105942.5119444160939168446.516910182145211434319837.5346753.5370044382945399552441342.5487249530637558039.5598043621844.563483763710639536.5649643.5730646.5797533.5807644835641847155856940.5870556893149980931.5
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics184/index.html
##-----------------TITLE------------------------##
ICS 184 / EECS 116 Summer 2006
##------------------TEXT------------------------##
ICS 184 / EECS 116 Summer 2006 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.184 newsgroup |
About Alex








ICS 184 / EECS 116 Summer 2006
   Course News







Check back here every day or so.  I will generally post important coursewide announcements here.  They will be listed in reverse-chronological order (i.e. newest items first).

Date AddedNews ItemTh 9/7The final course grades are now available.Sa 8/26The JDBC code examples (including one that we didn't cover yet in lecture) are now available, so that you can get an early start on Assignment #6.W 8/23Two updates tonight:
      The solutions to the midterm are now available.The extra-credit Assignment #6 is now available, for those of you who want to get an early start on it.
    W 8/16The midterm scores are now available.Su 8/13An estimate of the Schedule for the remainder of the quarter has been updated.  The due dates for Assignment #4 and Assignment #5 have been updated, as discussed in Wednesday's lecture.M 8/7Two updates today:
      The Final Exam has been scheduled for Friday, September 1, 2:00-4:00pm in IERF 101.  (Note that this is not the same room where our lecture meets.)Assignment #4 and Assignment #5 are now available.
    M 7/31The examples of stored procedures, functions, and triggers from lecture are now available.M 7/31The Schedule has been updated.T 7/18Assignment #3 is now available, along with the latest batch of Schedule updates.W 7/12Two changes tonight:
      Assignment #2 is now available.The Schedule has been updated.
    W 7/5The discussion section will begin meeting today, and will continue to meet every Wednesday (but not Monday) for the remainder of the quarter.M 7/3I will be holding office hours on Mondays and Wednesdays from 3:30-4:50pm in my office (CS 408F) for the remainder of this quarter.Su 6/25
      Welcome!  A few things:
      The discussion section is canceled until further notice.  (On account of relatively low enrollment, the course presently has no TA assigned to it.)For information about lecture material and readings, see the Schedule.I urge you to spend some time reading through the material on this course Web site.  Notice the set of links at the top of this (and every) page, leading you to the Course Reference, the Schedule, the Lab Manual, and the newsgroup.This course will be a work in progress throughout the quarter, with the Schedule and Lab Manual updated periodically throughout.  Keep an eye on this page — check back every day or so — for information about updates.
    









This course Web site has been validated against the XHTML 1.1 and CSS 2.0 standards.  To ensure that your own Web pages meet established Web standards, visit validator.w3.org.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics184/MidtermSolutions.html
##-----------------TITLE------------------------##
ICS 184 / EECS 116 Summer 2006, Midterm Solutions
##------------------TEXT------------------------##
ICS 184 / EECS 116 Summer 2006 |
News |
Course Reference |
Schedule |
Lab Manual |
ics.184 newsgroup |
About Alex








ICS 184 / EECS 116 Summer 2006
   Midterm Solutions







Introduction

The following are possible solutions to the Midterm.  For all of these problems except the first one, there were multiple reasonable solutions, and I did my best to accept anything that worked, assigning partial credit as appropriate when solutions partially worked.

It's a good idea to print this document out and bring a copy of it with you when you view your exam, as it may help you to quickly see where you went wrong on a question.







The solutions


Problem 1

a) chain_name

b) rest_id

c) emp_ssn

d) emp_ssn, mentor_emp_ssn

e) rest_id, the_date


Problem 2

(In the solutions below, I've used NJ to stand for natural join, since the natural join symbol is not supported in the typical character sets used by some browsers, including Internet Explorer.)

I graded this problem with the understanding that there are multiple reasonable ways to solve each problem; the solutions I'm showing here provide one way to solve each problem, but these solutions are not unique and are not even necessarily the "best."

a)

Πrest_city, rest_state
(σcuisine = "Cantonese"
(restaurant NJ chain))


b)

no_mentor_emp_id ←
Πemp_id (employee)
− Πemp_id (mentor)



Πemp_name, salary
(no_mentor_emp_id NJ employee)


c)

ca_it_rest ←
Πrest_id
(σrest_state = "California" ∧
cuisine = "Italian"
(restaurant NJ chain))



march_revenue ←
σthe_date ≥ 3/1/2005 ∧
the_date ≤ 3/31/2005
(revenue_cost)



ca_it_march_rev ←
rest_id
G sum (revenue) as total_revenue
(march_revenue NJ ca_it_rest)



Πrest_id
(G max (total_revenue) as total_revenue (ca_it_march_rev)
NJ ca_it_march_rev)



d)

march31_profit ←
Πrest_id, chain_name, revenue −
cost as profit
(σthe_date = 3/31/2006
(revenue_cost NJ restaurant))



no_revenue_on_march31 ←
Πrest_id, chain_name, 0 as profit
((Πrest_id (restaurant)
−
Πrest_id
(march31_profit)) NJ restaurant)



march31_profit ∪ no_revenue_on_march31




Problem 3

As with the relational algebra problem, I graded this problem with the understanding that there are multiple reasonable ways to solve each part.

a)


SELECT emp_name, emp_ssn
FROM employee, restaurant
WHERE employee.rest_id = restaurant.rest_id
  AND chain_name = 'Regina\'s Bistro'


b)


SELECT emp_name
FROM employee
WHERE emp_ssn NOT IN (SELECT mentor_emp_ssn
                      FROM mentor)


c)


SELECT rest_id, SUM(revenue) AS total_revenue
FROM revenue_cost
WHERE the_date BETWEEN '2004-01-01' AND '2004-12-31'
GROUP BY rest_id
ORDER BY SUM(revenue) DESC
LIMIT 5



Problem 4

From a syntax perspective, I was somewhat lenient about grading this problem.  In particular, I was open to many ways of expressing the assertion, so long as you used an assertion to solve the problem of ensuring that no more than 100 employees can work for a particular restaurant.


CREATE TABLE restaurant(
    rest_id INTEGER NOT NULL,
    chain_name VARCHAR(30) NOT NULL,
    rest_city VARCHAR(20) NOT NULL,
    rest_state VARCHAR(15) NOT NULL,
    manager_ssn INTEGER NOT NULL,
    PRIMARY KEY(rest_id),
    UNIQUE(manager_ssn),
    FOREIGN KEY(chain_name) REFERENCES chain(chain_name),
    FOREIGN KEY(manager_ssn) REFERENCES employee(emp_ssn))

CREATE TABLE employee(
    emp_ssn INTEGER NOT NULL,
    emp_name VARCHAR(30) NOT NULL,
    rest_id INTEGER NOT NULL,
    salary NUMERIC(11, 2) NOT NULL,
    PRIMARY KEY(emp_ssn),
    FOREIGN KEY(rest_id) REFERENCES restaurant(rest_id),
    CHECK(salary >= 0.00))

CREATE TABLE revenue_cost(
    rest_id INTEGER NOT NULL,
    the_date DATE NOT NULL,
    revenue NUMERIC(11, 2) NOT NULL,
    cost NUMERIC(11, 2) NOT NULL,
    PRIMARY KEY(rest_id, the_date),
    CHECK(revenue >= 0.00),
    CHECK(cost >= 0.00),
    CHECK(the_date >= '2004-01-01'),
    FOREIGN KEY(rest_id) REFERENCES restaurant(rest_id)
        ON DELETE RESTRICT)

CREATE ASSERTION restaurant_employee_limit
CHECK (100 ALL (SELECT COUNT(*)
                   FROM employee
                   GROUP BY rest_id))



Problem 5

a)


CREATE VIEW salesperson_count_by_state AS
    SELECT base_state AS salesperson_state, COUNT(*) AS salesperson_count
    FROM salesperson
    GROUP BY base_state


b) The statement has no effect on the database.  The update is erroneous, because it's attempting to update a value derived from the result of an aggregate function.  (Consider what might happen if a database engine allowed this update.  Where would the extra California-based salesperson come from?  Would a new one be created?  What would the new salesperson's name and base city be?)
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics33/CourseReference.html
##-----------------TITLE------------------------##
ICS 33 Summer 2013, Course Reference
##------------------TEXT------------------------##
ICS 33 Summer 2013 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 33 / CSE 43: Intermediate Programming
   Summer 2013
   Course Reference







Instructor information

Alex ThorntonOffice: DBH 4048Email:  thornton@ics.uci.edu

Contacting me: I tend to be much easier to reach via email than any other way, so I would suggest using email to contact me under normal circumstances.  When you write me an email, please take a few moments to make sure that the following information is placed somewhere in your message: your name, your student ID#, and which course you're enrolled in .







Course staff

In addition to me, this course is staffed by a teaching assistant, David Carrillo (carrild1@uci.edu), who will be attending lab sections, assisting with grading, and will provide an additional resource you can turn to when you need help with course material.







Times and places

Lecture

A lecture meets on Tuesdays and Thursdays from 5:00-6:20pm in PSCB 120.  Given the course's size, attendance is not graded, but we certainly recommend it.  (Naturally, attendance is required on the days when exams are held, which are listed in the Schedule.)

Labs (The ICS 33 Help Center)

There are two lab sections, meeting in the afternoons preceding lectures on Tuesdays and Thursdays each week.  Collectively, we will refer to all of these hours as the ICS 33 Help Center, which meet at the following locations and times:

Tuesdays and Thursdays from 1:00-4:50pm in ICS 183

While you are required to be enrolled in a lab section — and this enrollment does determine who will grade your projects — you are generally free to attend the ICS 32 Help Center whenever you need it, regardless of which lab section you are enrolled in, with one caveats: you will be guaranteed a seat in your enrolled lab section — and, hence, it is possible that you may occasionally be asked to leave to make room for someone else if we are full beyond capacity and you are not officially enrolled in a section.

While it is not a required part of the course, and nothing will be graded in the labs this quarter, attendance does offer some significant benefits:

You will have a chance to consult a TA  regarding your work; this kind of instant feedback and help can be invaluable as you work through your projects.You will be surrounded by a large group of other people facing the same problems that you're facing.  This kind of shared journey will build a social network that will last you, in some cases, for the rest of your life.  Don't squander that opportunity!


Office hours

I will be available on Tuesdays and Thursdays from 7:30-9:15pm in PSCB 120 — not my office, as it's in a building that will be locked during at least part of that time — during which I'm available to chat with you about whatever's on your mind.







Textbooks

This course has no official textbook and I will not be assigning readings.  I will provide some written material on this course web site that will mirror and augment techniques we learn in lecture, and much of what you learn will be through writing programs in Python.

If you took ICS 31 and 32, you might also find your textbook(s) from those courses to be valuable resources that you can refer back to, but they are not required and I won't be assigning reading from them.







Obtaining additional assistance

Asking questions of course staff

You can most easily get course questions answered by coming to the lecture, the ICS 33 Help Center, or office hours and asking them.  I am happy to help you in person when I'm available.  You can also ask questions by sending email to me or your TA (or both); we check our email frequently throughout the day, so you can usually get an answer to course-related questions within a few hours (and often much more quickly).  If the questions require a complex or lengthy response, we may ask you to see one of us in person.  As projects approach their due date, particularly on days when projects are due, we begin to receive quite a bit of email all at once, so we may not be able to respond to all messages before the project is due.  We aren't ignoring you on purpose, but unfortunately it's not always possible for the relatively small course staff to answer questions from a large number of students at once.

Accommodations for disabilities

Any students who feel that they may need an accommodation based on the impact of a disability should contact me privately to discuss these specific needs.  Also, contact the Disability Services Center online or by phone at (949) 824-7494 as soon as possible to better ensure that such accommodations, such as alternative test-taking environments or note-taking services, can be arranged for you in a timely way.







Grading

Weights of graded artifacts

Your course grade will be determined from the weighted combination of your scores on each of six programming projects, one Midterm, and one Final Exam.  The weights of each of these are:

Four programming projects, 32% (weighted equally at 8% each)Midterm, 30%Final Exam, 38%

Determining final grades

Course grades will be determined neither on a normal curve nor a straight scale.  It is guaranteed that overall scores over 90% will receive an A- or better, scores over 80% will receive a B- or better, and scores over 70% will receive a C or better.  However, the actual cutoffs may be lowered at the end of the quarter.  In short, it is not my intention to fail half of the students, nor am I planning on giving only 2% of the students A's, but I prefer not to constrain myself with either a straight scale or a formalized curve.

If you're curious about how you're doing in the course, I'm happy to discuss your estimated grade at any time.  It's generally best to have this conversation in person, so that we can explore issues other than just the raw numbers; I'm happy to have this conversation at any time that I'm available, and I'm also glad to do it via email if we can't find a mutually available time.







Dropping the course or changing grade option

During Summer Session, you may drop the course or change grade option until the end of Week 8 (Friday, August 16), though refunds of course fees are not issued if you drop after the end of Week 4 (Friday, July 19).  You will generally need to get a signature from me to drop the course; I should point out here that I'm generally not able to be on campus on Fridays, so the last day I'll be able to sign required forms for this course is Thursday, August 15 (or Thursday, July 18 to be eligible for any kind of refund).







Academic honesty

The policy

As ICS 33 or CSE 43 students, you are expected to know and follow the academic honesty policies of both the Bren School of ICS and the University as a whole.  Please take a few minutes to read the policies, which can be found at this link.

All of your project work is expected to be completed solely by you.  Worker in larger groups and/or sharing of code between students that are not partners is not permitted.  Note that "high-level discussion of course material for better understanding" is permitted and encouraged, but when it comes time to sit down and write code, that is expected to be done by you and you alone.  All submissions are compared to one another using an automated plagiarism detection system.  This system is extraordinarily good at finding similarities between submissions, even when there are superficial differences.  (Note that we also compare your submissions to those submitted during previous quarters whenever one of these assignments was given during a previous quarter, so it is an exceedingly bad idea to turn in, or even refer to, code written by a friend of yours who took the course already.)

Since all of your work is expected to be completed solely by you, you will be held responsible even if you plagiarize only a small portion of someone else's work.

Academic honesty is a two-way street.  Providing your code to other students for them to turn in as their own is not permitted any more than turning in someone else's code.  Resist the temptation to give code to your friends "for reference."  Based on my experience, I can say that your "friends" may very well betray you and turn it in, anyway, and then you'll have a lot to answer for; many academic dishonesty cases have their roots in this kind of betrayal.

Naturally, the Midterm and Final Exam are also expected to be individual efforts.  Dishonest behavior during an exam will not be tolerated.

Violators of academic honesty policies are subject to the penalties described in the Bren School of ICS policy.  They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade.  Also be aware that a single documented case of academic dishonesty may preclude you from switching into computing majors, registering for computing minors, joining the ICS Honors Program, and graduating from a computing major with honors.

The lesson

Okay, so the moral of the story is that it's wise to avoid cheating.  I believe that it's relatively rare that students enter a course with the conscious intent to cheat their way through it; why come to UCI if you're not planning to get something out of the coursework?  So why do people cheat every quarter in every course?  The answers vary, but here's the easiest way I can boil down the numerous conversations I've had with students caught cheating in my courses over the years: I fell behind and couldn't figure out how to catch up.  Things happen and ten-week quarters are unforgiving.  You might get sick, you might have issues crop up in your family, you might have misunderstood one of the earlier topics in the course on which later topics dependend, you might have an off-campus job that's demanding too much of your time, you might be trying to decide whether you're on the path you want to be on... Any of those things (and many others) can make it hard to keep up.  You fall a little behind, you fall a little further behind, and pretty soon the situation seems hopeless.  You're under pressure, temptation gets the better of you, and suddenly it seems better to submit someone else's work than to submit nothing.  It's not.

If you feel like you're beginning to slip off course or things are getting beyond your control, the best thing to do is to talk to us sooner rather than later.  We're here to help; we understand.  But the reality of taking large-sized courses at a large-sized institution is that we're not going to know you're in need unless you tell us.  If things are happening in your life, tell us; you don't have to be specific if you're not comfortable with it.  Before the fact, there's often a way to work things out.  After the fact, it's usually too late.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics33/Schedule.html
##-----------------TITLE------------------------##
ICS 33 Summer 2013, Schedule
##------------------TEXT------------------------##
ICS 33 Summer 2013 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 33 Summer 2013
   Schedule







This is a schedule of what we'll be covering in lecture, what days exams will be given, and other key dates (including project due dates) during the quarter.  As this course has no textbook, there will be no assigned textbook readings, though I may occasionally assign online reading from the Internet; when that happens, it will be listed in the Readings column below.

DateLecture TopicsReadingsProject WorkWeek 1Tu 6/25
      Course introduction and goalsNames and bindingNamespacesWhy dictionaries are used to implement namespaces
    
      
    Th 6/27
      Classes in Python, revisitedWhat's really inside of an object?The length of an objectThe "booleanness" of an objectShort-circuited boolean operatorsSpecial methods and operator overloading
    
      
    
      Lab sections begin meeting todayComplete Assignment #0 by the end of lab todayStart Project #1 in lab today
    Week 2Tu 7/2
      Special methods and operator overloading (continued)
    
      
    Th 7/4
      University Holiday — Independence Day — NO LECTURE OR LABS TODAY
    
      
    
      
    Week 3Tu 7/9
      Why write unit tests?The unittest module in PythonTest-driven development
    
      
    W 7/10Project #1 due 11:59pmTh 7/11
      Namespaces, revisitedThe namespaces belonging to objects, classes, modules, and functionsAccessing a namespace using the __dict__ attributeLookup rulesInheritance in Python
    
      
    
      
    Week 4Tu 7/16
      Inheritance in Python (continued)Superclasses and subclassesLookup rules in the presence of inheritanceHow inheritance is different from duck typing
    
      
    Th 7/18
      Containers in Python (briefly)Why implement custom containers?Implementing indexing and the in (and not in) operators
    
      
    
      
    Week 5M 7/22Project #2 due 11:59pmTu 7/23
      Implementing slicingA more complete example of a custom container
    
      
    Th 7/25
      MIDTERM — regular lecture time and location
    
      
    
      
    Week 6Tu 7/30
      "Protocols" (or, interfaces) in PythonContainers, sequences, and mappingsIterables and iterators
    
      
    Th 8/1
      Classes, functions, and modules as objectsWhat it really means to create a classWhat it really means to create a functionCreating functions or classes inside of other functions or classesBrief introduction to functional programmingHigher-order functions (briefly)
    
      
    
      
    Week 7Tu 8/6
      Algorithm analysis and O-notation
    
      
    Th 8/8
      Algorithm analysis and O-notation (continued)Analyzing loops in Python using O-notation
    
      
    
      
    F 8/9Project #3 due 11:59pmWeek 8Tu 8/13
      Analyzing algorithms you haven't written yetUnderstanding and analyzing the implementation of lists in PythonStacksQueuesObjects and references in Python (revisited)Immutable and mutable objects
    
      
    Th 8/15
      Linked listsNodes and how they are linkedVariations on linked listsWriting a linked list class in Python
    
      
    
      
    Week 9Tu 8/20
      The importance of a layered software designConsidering the design of Project #4 in detailGenerators in Python using yield
    
      
    Th 8/22
      Generators in Python using yield (continued)Recursive functions, revisitedTreesBinary search trees
    
      
    
      
    Week 10M 8/26Project #4 due 11:59pmTu 8/27
      Binary search trees (continued)Recursive generators using yield from
    
      
    Th 8/29
      FINAL EXAM: 5:00-6:20pm, PSCB 120
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics33/index.html
##-----------------TITLE------------------------##
ICS 33 Summer 2013
##------------------TEXT------------------------##
ICS 33 Summer 2013 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 33 Summer 2013
   Course News







Check back here every day or so.  I will generally post important coursewide announcements here.  They will be listed in reverse-chronological order (i.e., newest items first).

Date AddedNews ItemM 9/2The final course grades are now available.Th 8/22An estimate of the remaining lecture Schedule is now available.W 8/21A set of sanity-checking unit tests for your LinkedList and Queue classes has been added to Project #4.Tu 8/20One new code example is now available, along with a Schedule update.M 8/12Project #4 is now available.  Note that there will not be a fifth project — I'd rather have you be able to spend longer on this project and wrap it up early enough to have time to study for the final in mid-Week 10 — so this change has been noted in the Course Reference.W 8/7A set of "sanity-check" tests has been included in Project #3.  You can use these tests to verify that your lotterysets module has everything it's supposed to have (i.e., functions and methods have names that are spelled correctly, etc.).  See the new section of the Project #3 write-up titled Sanity-checking your 'lotteryset' module for more details and a link to the test module.W 8/7A new code example is now available, along with a Schedule update.Tu 7/30Project #3 is now available.Tu 7/23A small but important update was made to the inheritance code example.  I had inadvertantly swapped the terms superclass and subclass when defining them; that's been fixed.Th 7/18The code example from the inheritance lectures is now available.W 7/17A minor bug was found in the example Bumpkin interpreter.  The IF statement had been implemented to expect the == operator to be used to check for equality, but Bumpkin uses = (a single equals sign) instead.  That's now been fixed.M 7/15A detailed code example showing a step-by-step test-driven development process and the use of the unittest module in the Python standard library is now available.Th 7/11An example Bumpkin interpreter that runs in your browser is now available, so you can experiment with the language and become comfortable with it as you proceed with Project #2.W 7/10Project #2 is now available.Su 7/7The due date for Project #1 has been postponed until Wednesday, July 10 at 11:59pm, opening up Tuesday's lab section for those of you who want to ask more questions before completing your work.W 7/3The code example we completed in yesterday's lecture is now available.Tu 7/2I've added a new error message to the PURCHASE and PAYMENT commands in Project #1.  Based on the documentation, both of these commands are expected to fail when given a nonpositive (i.e., zero or negative) amount, but I had no error message to express that scenario.  So I added a NONPOSITIVE_AMOUNT error message to both commands.Tu 7/2My office hours have been scheduled for Tuesdays and Thursdays from 7:30-9:15pm in PSCB 120 (the same room where our lecture meets).Th 6/27Project #1 is now available, along with a Schedule update.Tu 6/25I've made a minor adjustment to the Schedule.  It seems I had the calendar dates wrong starting at about Week 5, which led me to quote the wrong dates for the Midterm and Final Exams in lecture this afternoon.  This has been adjusted to match my original intent.M 6/24
      Welcome!  Please note a couple of things as we get started this quarter:
      The first lecture will meet on Tuesday, June 25.  Lab sections will begin meeting on Thursday, June 27.  For more information about meeting times of lab sections, see the Course Reference.  For information about lecture material and readings, see the Schedule.I encourage you to spend some time reading through the material on the course web site.  It will be updated periodically throughout the quarter, and there will always be an announcement here describing each update.  For now, notice the set of links at the top of this (and every) page, leading you to the Course Reference, the Schedule, and the Project Guide, as well as a set of Code Examples — mostly emanating from the lectures — that will be posted throughout the quarter.For those of you planning on using your own machines for at least some of your work — and who didn't take ICS 32 with me previously — it might be worth spending some time working through Assignment #0, which provides instructions on getting the necessary software installed and configured.  (Read the Project Guide page first, for some context on the necessary software and some background on what we're going to be doing.)
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics33/ProjectGuide/Project2/Bumpkin.html
##-----------------TITLE------------------------##
ICS 33 Summer 2013, Project #2: Eight Line Poem, Experiment with Bumpkin
##------------------TEXT------------------------##
ICS 33 Summer 2013 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 33 Summer 2013
   Project #2: Eight Line Poem
   Experiment with Bumpkin







Program

In the text area below, enter a Bumpkin program that you'd like to execute.  Click RUN to execute the program and you'll see its output.  Click TRACE instead if you'd like to see the program's output include line-by-line tracing (i.e., every line that executes will show you its line number and its text).




  Run
  Trace
  








Output

Here is the output of your program.




  Clear












Originally written by Alex Thornton, Summer 2013
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics33/FinalGrades.html
##-----------------TITLE------------------------##
ICS 33 Summer 2013, Final Course Grades
##------------------TEXT------------------------##
ICS 33 Summer 2013 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex









ICS 33 Summer 2013
   Final Course Grades







Explanation (please read this first!)

Please spend a couple of minutes reading this section.  It will answer many of the questions that you may have about the grading process, and will save you a lot of upset waiting for a response to an email question.

Here are the final grades for ICS 33 and CSE 43.  By University regulations, at this stage, the cutpoints and the grades are non-negotiable, unless we made a clerical error, such as recording a score incorrectly.  (Seriously!  This means you!  Despite this warning, I often get at least an email that begins with a phrase like "I know you said that the cutpoints are non-negotiable, but..."  There is no "but" here.)  We also can no longer accept new regrade requests on the projects.

There were 55 points possible on the Final.  The average score on the Final was 31.38 (57.88%), with a high score of 53.5.

How do I know which scores are mine?

Each student is identified here by a Rank, beginning with the highest overall percentage and ending with the lowest.  Each of you should have received an email from me (at your @uci.edu email address) identifying your rank.

What do the columns mean?

Here is an explanation of the various columns:

The Rank column is a rank, from highest to lowest, for each student.The Proj1..Proj4 columns are your scores (out of 30) on each project.The ProjTotal column lists the sum of the scores on the projects.  The total number of points possible on all the projects was 120.  The MT and Final columns contain your raw scores on the Midterm and Final Exam.The TotalPct column is your overall percentage in the class, figured by adding the weighted percentages of the Midterm, Final, and ProjTotal together, as described in the Course Reference.The Grade column indicates the grade that has been submitted.

There are a few words to be said about the selection of cutpoints.  People are cutpoints; whole-numbered percentages are not.  That means that the cutpoint for a particular grade is simply the lowest-scoring person who received that grade.  For the sake of argument, if you received a percentage of 54.99% in the class, and someone who received a 55.52% received a higher grade than you (with no person in between), you didn't miss the cutpoint by 0.01%; you missed it by 0.53% — a substantial margin.

I enjoyed the course, and I hope you got something out of the experience, too.  I'll look forward to seeing you again sometime!







The grades

RankProj1Proj2Proj3Proj4ProjTotalMTFinalTotalPctGrade129303029118.006153.597.48%A+229262928.5112.505750.592.03%A+328282926.5111.505252.590.77%A+429293029117.005744.589.09%A530272828.5113.505347.588.32%A628222926.5105.50524886.06%A727303029.5116.50424984.92%A828272928.5112.504942.582.70%A92926.528.527111.004743.582.04%A10292827.525.5110.004246.581.46%A1130293029118.00503780.84%A1226252927107.00464480.84%A1330283027.5115.50434179.60%A-1430232927109.00464179.30%A-152623.52723.5100.00484379.23%A-1627272823.5105.50434479.01%A-172817302499.005238.577.76%A-1829303026.5115.50562977.50%A-1928293027.5114.50493477.36%A-2027273028.5112.50493376.13%B+21231824.52691.504344.575.62%B+22252524.528.5103.003942.575.40%B+23292727.522.5106.00493475.09%B+24252522.527.5100.005033.573.62%B253029.529.529118.00383473.05%B26292928.525111.50403472.27%B2728212721.597.504535.571.96%B28242023.521.589.004537.571.07%B29272528.524.5105.003736.570.84%B30262926.528.5110.00393370.70%B31272020.520.588.00404070.15%B3224301927.5100.50492869.48%B-33272526.527.5106.00433069.47%B-34302829.525112.50482469.44%B-3528272526106.004428.568.91%B-36262425.52398.50373668.76%B-3729262823106.00403068.04%B-3826282824.5106.5040.528.567.38%B-39291529.528.5102.00373266.93%B-40222529.528104.50462365.66%C+412524162388.00363665.48%C+4225242925.5103.503627.563.74%C43182425.52188.50383062.42%C4425025050.00463962.18%C4526.52627.527107.003524.562.13%C4623029052.0046.535.560.54%C473015292397.003521.557.39%C-4828203028106.003418.557.24%C-492426122385.00392256.44%C-5029220051.00323955.78%C-51222320.523.589.004116.554.66%C-522223272092.00322154.28%C-532027282095.00292153.65%C-542925.52528107.50261551.41%D+5523202822.593.50252151.35%D+56265222376.00391750.58%D+572521.5231685.50301849.52%D+5828192520.592.502617.549.14%D+591032123.557.5028.528.548.60%D+602120242287.00261646.64%D+612422.521.51684.00351045.98%D+6221132018.572.501923.544.62%D+632717152180.002317.544.38%D+642425233.00481642.71%D653000030.00511240.58%D6627012039.00389.535.06%D-67191623.5058.5026027.98%NR682100021.00005.60%NR6900000.00000.00%NR7000000.00000.00%NR
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics46/CourseReference.html
##-----------------TITLE------------------------##
ICS 46 Spring 2015, Course Reference
##------------------TEXT------------------------##
ICS 46 Spring 2015 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 46 / CSE 46: Data Structure Implementation and Analysis
   Spring 2015
   Course Reference







Instructor information

Alex ThorntonOffice: DBH 4048Email:  thornton@ics.uci.edu

Contacting me: I tend to be much easier to reach via email than any other way, so I would suggest using email to contact me under normal circumstances.  When you write me an email, please take a few moments to make sure that the following information is placed somewhere in your message: your name, your student ID#, and which course you're enrolled in (important since I'm teaching more than one this quarter).







Course staff

In addition to me, this course is staffed by a number of folks in a couple of different roles.  They are listed below.

Teaching assistants

There are two teaching assistants, who will share the duties of attending the lab meetings, and will be the primary points of contact with regard to the grading of projects.

Laleh A. Beni (laghabab AT uci DOT edu)Sabur Baidya (sbaidya AT uci DOT edu)

Readers

Additionally, we have two readers, who will be primarily tasked with grading projects.

Nitin Agarwal (agarwal AT uci DOT edu)Siavash Rezaei (siavashr AT uci DOT edu)

Lab tutors

In addition to the TAs, the following lab tutors will also be staffing the labs at various times, specified further below.

Andrew LuongGeorge WangKyle WangMatt Butrovich







Times and places

Lecture

A lecture meets on Tuesdays and Thursdays from 6:30-7:50pm in SSH 100.  Given the course's size, attendance is not graded, but we certainly recommend it.  (Naturally, attendance is required on the days when exams are held, which are listed in the Schedule.)

Lab Meetings

While there are no scheduled lab sections in this course, we will be offering informal lab meetings on the following days and times.

Monday 8:00-8:50am in ICS 192 (Andrew Luong)Tuesday 4:00-4:50pm in ICS 364A (Sabur Baidya and Kyle Ma)Tuesday 5:00-5:50pm in ICS 364A (Sabur Baidya and George Wang)Wednesday 8:00-8:50am in ICS 192 (Andrew Luong)Wednesday 6:00-7:50pm in ICS 192 (Laleh Beni and George Wang)Thursday 4:00-4:50pm in ICS 364A (Sabur Baidya and Kyle Ma)Thursday 5:00-5:50pm in ICS 364A (Sabur Baidya and George Wang)Friday 9:00am-9:50am in ICS 192 (Matt Butrovich)Friday 10:00am-10:50am in ICS 192 (Andrew Luong, Kyle Ma, and Matt Butrovich)Friday 11:00am-11:50am in ICS 192 (Andrew Luong and Kyle Ma)Friday 12:00pm-12:50pm in ICS 192 (Andrew Luong)Friday 5:00-6:50pm in ICS 183 (Laleh Beni)

During these times, some combination of TAs and lab tutors will be available to help you as you work through your projects.  C++ requires an attention to detail that is uncharacteristically high, even for programming, so it will be handy to have a place you can go to get help; keep this on your calendar.  You're free to come and go as you'd like within that time; there are no "sections" or other formal arrangement, and you do not need an appointment to attend.

Lab meetings are not a required part of the course, and nothing will be graded in the labs this quarter, but attendance does offer some significant benefits:

You will have a chance to consult a TA and one or more lab tutors regarding your work; this kind of instant feedback and help can be invaluable as you work through your projects.You will be surrounded by a large group of other people facing the same problems that you're facing.  This kind of shared journey will build a social network that will last you, in some cases, for the rest of your life.  Don't squander that opportunity!


Office hours

I will be available on Tuesdays and Thursdays from 8:15-9:30pm in ICS 253 — not my office, as it's in a building that will be locked during at least part of that time — during which I'm available to chat with you about whatever's on your mind.  Office hours begin on Thursday, April 2 and continue throughout the quarter, you don't need an appointment to visit, and you can always assume that I will be there as scheduled unless you hear from me otherwise.







Textbooks

There is an optional textbook for the course, listed below.

Data Structures and Algorithms in C++, 2nd Editionby Michael T. Goodrich, Roberto Tamassia, and David M. MountWiley 2011ISBN 978-0-470-38327-8OPTIONAL

There are at least a couple of ways to get the textbook: purchasing a hard copy from online booksellers such as Amazon, or renting an electronic edition from CourseSmart, with the CourseSmart option being significantly cheaper but only allowing you to view the text for six months.

Note that while I will be assigning readings from this textbook that correspond to our lectures, the goal is to complement the lecture material and help you fill in details that you missed while listening to me speak for eighty minutes.  I will not be testing you on details from the textbook that were not discussed in lecture or covered on projects.  If you find that you'd prefer to work without a textbook, or even work with a different book (or online supplements of your own choosing), that's fine; the overall goal is to learn the course material, and I'm not especially finicky about how you do it.







Obtaining additional assistance

Asking questions of course staff

You can most easily get course questions answered by coming to the lecture, the lab meetings, or office hours and asking them.  I am happy to help you in person when I'm available.  You can also ask questions by sending email to me or your TA (or both); we check our email frequently throughout the day, so you can usually get an answer to course-related questions within a few hours (and often much more quickly).  If the questions require a complex or lengthy response, we may ask you to see one of us in person.  As projects approach their due date, particularly on days when projects are due, we begin to receive quite a bit of email all at once, so we may not be able to respond to all messages before the project is due.  We aren't ignoring you on purpose, but unfortunately it's not always possible for the relatively small course staff to answer questions from a large number of students at once.  A great way to mitigate this problem is to get started early and ask questions sooner in the process.

Accommodations for disabilities

Any students who feel that they may need an accommodation based on the impact of a disability should contact me privately to discuss these specific needs.  Also, contact the Disability Services Center online or by phone at (949) 824-7494 as soon as possible to better ensure that such accommodations, such as alternative test-taking environments or note-taking services, can be arranged for you in a timely way.







Grading

Weights of graded artifacts

Your course grade will be determined from the weighted combination of your scores on each of six programming projects, one Midterm, and one Final Exam.  The weights of each of these are:

One "set-up" project, 2%Five projects, 35%Midterm, 25%Final Exam, 38%

Determining final grades

Course grades will be determined neither on a normal curve nor a straight scale.  It is guaranteed that overall scores over 90% will receive an A- or better, scores over 80% will receive a B- or better, and scores over 70% will receive a C or better.  However, the actual cutoffs may be lowered at the end of the quarter.  In short, it is not my intention to fail half of the students, nor am I planning on giving only 2% of the students A's, but I prefer not to constrain myself with either a straight scale or a formalized curve.

If you're curious about how you're doing in the course, I'm happy to discuss your estimated grade at any time.  It's generally best to have this conversation in person, so that we can explore issues other than just the raw numbers; I'm happy to have this conversation at any time that I'm available, and I'm also glad to do it via email if we can't find a mutually available time.







Dropping the course or changing grade option

Through the end of Week 2 (Friday, April 10), you may drop the course by simply going to WebReg and dropping it.  If you wish to drop the course after that date, you will need to use the Enrollment Exceptions system to request a drop; I do not have the final say over those, ultimately, as the Dean of the Bren School (and your major, if you are majoring in something outside of the Bren School) must approve them.  It is not generally the case that an exception will be accepted simply because you're not doing well in a course, though extenuating circumstances are certainly considered.

Similarly, changing your grade option (to Pass/NotPass or back again) can be done via WebReg through the end of Week 2 (Friday, April 10), after which you must use the Enrollment Exceptions system to request the change.  As with exceptional drops, you must receive approval from the appropriate Deans.







Academic honesty

The policy

As ICS 46 or CSE 46 students, you are expected to know and follow the academic honesty policies of both the Bren School of ICS and the University as a whole.  Please take a few minutes to read the policies, which can be found at this link.

All of your project work is expected to be completed solely by you.  Worker in larger groups and/or sharing of code between students that are not partners is not permitted.  Note that "high-level discussion of course material for better understanding" is permitted and encouraged, but when it comes time to sit down and write code, that is expected to be done by you and you alone.  All submissions are compared to one another using an automated plagiarism detection system.  This system is extraordinarily good at finding similarities between submissions, even when there are superficial differences.  (Note that we also compare your submissions to those submitted during previous quarters whenever one of these assignments was given during a previous quarter, so it is an exceedingly bad idea to turn in, or even refer to, code written by a friend of yours who took the course already.)

Since all of your work is expected to be completed solely by you, you will be held responsible even if you plagiarize only a small portion of someone else's work.

Academic honesty is a two-way street.  Providing your code to other students for them to turn in as their own is not permitted any more than turning in someone else's code.  Resist the temptation to give code to your friends "for reference."  Based on my experience, I can say that your "friends" may very well betray you and turn it in, anyway, and then you'll have a lot to answer for.

Naturally, the Midterm and Final Exam are also expected to be individual efforts.  Dishonest behavior during an exam will not be tolerated.

Violators of academic honesty policies are subject to the penalties described in the Bren School of ICS policy.  They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade.  Also be aware that a single documented case of academic dishonesty may preclude you from switching into computing majors, registering for computing minors, joining the ICS Honors Program, and graduating from a computing major with honors.

The lesson

Okay, so the moral of the story is that it's wise to avoid cheating.  I believe that it's relatively rare that students enter a course with the conscious intent to cheat their way through it; why come to UCI if you're not planning to get something out of the coursework?  So why do people cheat every quarter in every course?  The answers vary, but here's the easiest way I can boil down the numerous conversations I've had with students caught cheating in my courses over the years: I fell behind and couldn't figure out how to catch up.  Things happen and ten-week quarters are unforgiving.  You might get sick, you might have issues crop up in your family, you might have misunderstood one of the earlier topics in the course on which later topics dependend, you might have an off-campus job that's demanding too much of your time, you might be trying to decide whether you're on the path you want to be on... Any of those things (and many others) can make it hard to keep up.  You fall a little behind, you fall a little further behind, and pretty soon the situation seems hopeless.  You're under pressure, temptation gets the better of you, and suddenly it seems better to submit someone else's work than to submit nothing.  It's not.

If you feel like you're beginning to slip off course or things are getting beyond your control, the best thing to do is to talk to us sooner rather than later.  We're here to help; we understand.  But the reality of taking large-sized courses at a large-sized institution is that we're not going to know you're in need unless you tell us.  If things are happening in your life, tell us; you don't have to be specific if you're not comfortable with it.  Before the fact, there's often a way to work things out.  After the fact, it's usually too late.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics46/TournamentResults.html
##-----------------TITLE------------------------##
ICS 46 Spring 2015, Tournament Results
##------------------TEXT------------------------##
ICS 46 Spring 2015 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 46 Spring 2015
   Tournament Results







A few words of explanation

In order to understand the results as presented, here is an explanation of how the tournament was structured:

Any AI that didn't compile was immediately thrown out.For all pairs of AIs i and j, i played two games against j: once with i as the black player and once with i as the white player.Any AI that threw an exception from its chooseMove() function, returned an invalid move, crashed, or took too long to make a move (3 CPU seconds on my machine) was immediately disqualified and was not allowed to play any more games.  Any games involving disqualification AIs were thrown out of the results.After all the games were played, the results of all games between pairs of AIs that were not disqualified were tabulated.  Any games played by an AI that was subsequently disqualified were thrown out.  As a result, the number of games counted for each AI was the same.  There were 185 AIs that were not disqualified.  Each of them played 368 games (two games against each of the other 184 qualifying AIs).The order of finish in the tournament was determined by two factors:
    The winning percentage, which was calculated using the formula: (wins + (ties / 2.0)) / games_played.The total number of tiles earned in all games played, which was used as a tiebreaker if there was a tie on winning percentage.
  

61 AIs that compiled were disqualified.  Most of these disqualifications were the result of taking too long to make a move, or of choosing a move that was invalid.  A handful of others crashed or threw exceptions.  16 others, which are not listed here, were disqualified because they didn't compile or didn't follow the rules about using namespaces (and, so, could not be linked against the rest of the code submitted by everyone else).

One more reminder: The results of this tournament are purely for entertainment purposes and will not reflect on your grade, except that we will make a note of AIs that didn't compile or that didn't survive the tournament without being disqualified, as one way to determine that there are issues in your implementation.







The results

AI Name is the name under which the AI was registered using the ICS46_DYNAMIC_FACTORY_REGISTER macro.  Games indicates how many of the AI's games are included in the results.  Total Record indicates the AI's total number of wins, losses, and ties in all games.  Tiles For is the total number of tiles the AI earned in all of the games it played, while Tiles Against is the total number of tiles the AI's opponent earned in all of the games it played.  Separately, a record and a number of tiles for and against is shown when the AI was playing as black and as white.

AI NameGamesRecordTiles ForTiles AgainstRecord (as Black)Tiles For (as Black)Tiles Against (as Black)Record (as White)Tiles For (as White)Tiles Against (as White)Typing Level: Thornton (Required)368360-8-0212262168181-3-0212262168179-5-000ULTRON PLAYS OTHELLO368353-14-1200983440178-6-0200983440175-8-100Calcifer (Required)368353-15-0187984601175-9-0187984601178-6-000Boo is Love, Boo is Life368350-18-0185383420174-10-0185383420176-8-000swhi's AI (depth = 3) (Required)368345-23-0176785556172-12-0176785556173-11-000Notice Me Senpai368344-23-1179163732174-10-0179163732170-13-100XCYL Othello AI (Required)368337-29-2175375852169-14-1175375852168-15-100Billy's AI (Required)368333-32-3153268222165-17-2153268222168-15-100tn2702 (Required)368333-34-1162425967167-16-1162425967166-18-000Barb went to Oxford (Required)368332-35-1171934348170-14-0171934348162-21-100im da bes368330-34-4166406732165-17-2166406732165-17-200Allera Intelligence AI (Required)368322-44-2161754597165-18-1161754597157-26-100DJ JD (Required)368318-43-7159137426160-20-4159137426158-23-300Dan's OthelloAI(Required)368314-41-13151164759166-18-0151164759148-23-1300OthelloAI002368319-46-3157007584152-32-0157007584167-14-300OthelloAI005368314-45-9159597297161-18-5159597297153-27-400Ford's AI (Required)368308-58-2149987740155-29-0149987740153-29-200Itsuki Koizumi (Required)368306-61-1157056941160-24-0157056941146-37-100Wesley's AI (Required)368303-59-6149907863161-22-1149907863142-37-500I miss seeing Boo in the class!(Required)368299-63-6156187729155-27-2156187729144-36-400Solomon's Nightmare (Required)368299-64-5151138303157-22-5151138303142-42-000OthelloAI006368298-65-5157897369147-34-3157897369151-31-200iMajorInTheatre (Required)368295-68-5151968012153-31-0151968012142-37-500BASIC WON'T WIN (Required)368292-72-4138936256157-26-1138936256135-46-300FastIago AI (extra, for Tournament)368287-75-6149836465151-29-4149836465136-46-200ThomasOthelloAI (Required)368281-82-5135899012142-38-4135899012139-44-100TrungOthelloAI (Required)368279-85-4142419054143-40-1142419054136-45-300Ford's AI v1.0368278-89-1143898105149-34-1143898105129-55-000can i win pls368278-89-1139799474143-41-0139799474135-48-100RoY BaTTy (Required)368261-96-11139866848152-26-6139866848109-70-500Othello_AI_aiz (Required)368262-97-9145018508148-31-5145018508114-66-400UniOthelloAI(Required)368259-97-12136697844126-50-8136697844133-47-400Average Joe368261-100-7134338846132-45-7134338846129-55-000Othellinator3000 (Required)368257-98-13137557851123-52-9137557851134-46-400Kimochi (Required)368258-107-3131397835143-41-0131397835115-66-300Cortana (Required).368255-104-9135669220127-50-7135669220128-54-200PoorThello (Required)368251-115-2130129163118-65-1130129163133-50-100OthelloAI004368246-113-913958867199-77-8139588671147-36-100Old Herp Derp AI368246-115-7133459767126-54-4133459767120-61-300My reversi AI(Required)368244-122-2135799537136-47-1135799537108-75-100Alvin's Othello AI (Required)368236-124-8134319764137-45-213431976499-79-600My AI (Required)368235-132-1134838091116-67-1134838091119-65-000Darby's Algorithm (Required)368233-130-5131399828115-65-4131399828118-65-100MasterOthello(Required)368228-130-10138519492117-62-5138519492111-68-500psuri: boo's clues (Required)368230-135-313844959093-89-2138449590137-46-100Ciros (Required)368219-125-241325210181116-66-21325210181103-59-2200YOLOSWAG (Required)368227-134-71270510596122-62-01270510596105-72-700My Stupid AI (Required)368228-136-41287610185105-79-01287610185123-57-400Treadstone (Required)368214-153-1122089300117-66-112208930097-87-000Cool AI (Required)368210-156-21101810365114-69-1110181036596-87-100Colin Son's MyOthelloAI (Required)368208-159-1121739475112-71-112173947596-88-000This Ay Eye(Required)368205-161-21188811310121-62-1118881131084-99-100mingyal1_OthelloAI (Required)368203-160-51195911241111-69-4119591124192-91-100Cassie's AI (Required)368204-163-11218610917113-71-0121861091791-92-100Kweh (Required)368202-161-51200311363106-75-3120031136396-86-200Blackbriar368199-160-91179110989121-62-1117911098978-98-800Recursive Tree Based AI (Required)368200-162-61220010869109-71-4122001086991-91-200Bryan's AI (Required)368198-166-41091610122106-74-4109161012292-92-000lamtwAI (Required)368199-168-11176210466104-80-0117621046695-88-100AverageAI (Required)368197-167-41097110145105-75-4109711014592-92-000Hurdles Turtles AI (Required)368197-168-31194311141108-73-3119431114189-95-000Joshwin's AI (Required)368195-167-61186211124125-56-3118621112470-111-300IZAI(REQUIRED)368193-166-9125151073099-79-6125151073094-87-300Justin's AyeEye (Required)368195-169-4109711145978-103-31097111459117-66-100(required) Derek's AI368194-169-51142212017102-78-4114221201792-91-100HAL1368194-171-31168211399106-75-3116821139988-96-000Awesome AI (Required)368193-172-31168311432105-76-3116831143288-96-0001 Corinthians 15:57 (Required)368191-171-61147311598100-79-5114731159891-92-100Ricardio the AI368190-173-51134611778102-77-5113461177888-96-000AI - Othello Tourney (Required)368190-175-31157211538104-77-3115721153886-98-000Doppy AI(Required)368189-175-41266310012102-78-4126631001287-97-000KingOthello368189-175-4104561100394-88-2104561100395-87-200Herp Derp AI (Required)368179-181-81228011269103-76-5122801126976-105-300Depth Search (required)368181-184-31167011578100-83-1116701157881-101-200genius AI(required)368181-184-31166711600100-83-1116671160081-101-200hbao1_student_AI368164-169-35113341146580-100-4113341146584-69-3100Zack's Othello(Required)368169-177-22108161197460-103-211081611974109-74-100Ben's AI368168-178-22116511053992-90-2116511053976-88-2000QueenOthello368177-187-4110871213863-121-01108712138114-66-4008929 (Required)368174-187-7104341110052-128-41043411100122-59-300RoyalOthello368177-191-0114421091963-121-01144210919114-70-000MY AI (Required)368163-179-26109451185856-103-251094511858107-76-100Nayan's AI (Required)368164-181-23111811185481-99-4111811185483-82-1900My Othello Class368162-179-27110161226455-104-251101612264107-75-200dsfisher AI (Required)368158-181-29108961239153-104-271089612391105-77-200Rushed (REQUIRED)368170-195-3107741239765-118-11077412397105-77-200Bastion (Required)368168-199-1109811186590-93-1109811186578-106-000My uniquely incredible AI (Required)368156-188-24109821228074-107-3109821228082-81-2100Teh AI (Required)368161-201-6108271218969-113-2108271218992-88-400Less Is Moor(Required)368158-205-594741340363-116-594741340395-89-000AzureSkyOthelloAI (Required)368156-210-2107061221077-106-1107061221079-104-100ghetto_othello368152-211-5101281193575-107-2101281193577-104-300I despise Reversi368150-210-8104571189746-135-31045711897104-75-500Masterpiece(Required)368150-213-5103311254884-99-1103311254866-114-400T_T (REQUIRED)368147-211-1094181300485-96-394181300462-115-700UWotM8 (Required)368147-216-5105471259674-107-3105471259673-109-200tungplGUNTEK (Required)368148-219-196971343253-131-096971343295-88-100Jeff's AI (Required)368144-217-7101441306775-107-2101441306769-110-500 Oh Hell No (Required) 368145-218-599851333081-103-099851333064-115-500Huntsman AI (Required)368143-217-8101701274674-108-2101701274669-109-600Vincent is Awesome!368145-220-3101911286271-111-2101911286274-109-100Brian's Brain (Required)368142-217-9100911313472-110-2100911313470-107-700AutoIago (Required)368142-218-8101041312072-110-2101041312070-108-600Zero_AI368142-218-8100941311674-107-3100941311668-111-500Nico's Othello AI (Required)368144-220-499211339581-103-099211339563-117-400zzz(Required)368142-219-7101531308571-111-2101531308571-108-500Leprechaun AI (Required)368142-219-7101141309772-110-2101141309770-109-500pocheng OthelloAI (Required)368142-219-7100831313673-109-2100831313669-110-500livuthp(Required)368142-219-7100631314874-108-2100631314868-111-500Tree Mover (Required)368141-219-8100881314771-110-3100881314770-109-500Cyrus' AI (required)368141-219-8100831314272-110-2100831314269-109-600tlewelleOthello (Required)368143-221-499021337878-106-099021337865-115-400Strawberry Kurosaki (Required)368143-221-499121340480-104-099121340463-117-400YoOthelloAI(Required)368143-222-399791294973-111-099791294970-111-300Jonathst AI (Required)368141-220-7101041309772-110-2101041309769-110-500Lloyd's AI (Required)368141-220-7100911310374-108-2100911310367-112-500AWWEI Othello (Required)368141-220-7101081312772-110-2101081312769-110-500Custom Othello AI368141-220-7100901312070-112-2100901312071-108-500CHINCHILLIN(Required)368141-220-7100231317071-111-2100231317070-109-500OthelloAI001 (Required)368140-220-8111691224845-134-5111691224895-86-300Plotin AI(Required)368140-220-8100611316473-109-2100611316467-111-600Zero Shades Of Grey (Required)368140-221-7100971311473-109-2100971311467-112-500My AI(Required)368140-221-7100431314271-111-2100431314269-110-500VitzJG Othello AI (Required)368140-221-7100471315371-111-2100471315369-110-500Rudimentary AI (Required)368142-223-391071233453-130-191071233489-93-200HUNANYAN (Required)368141-223-498971341877-107-098971341864-116-400bscheng AI (REQUIRED)368139-222-7100071322069-113-2100071322070-109-500Wise Old Japanese Man (Required)368140-224-4101811317239-143-21018113172101-81-200LazyAI (Required)368138-224-6930313133105-77-293031313333-147-400Mike's AI (Required)368135-223-10102481285960-122-2102481285975-101-800ArtInt Class AI (Required)368130-219-1995061300572-109-395061300558-110-1600THE WASHINGTON (Required)368134-226-8108561246083-97-4108561246051-129-400jbeel AI implementation (Required)368137-229-2103191290365-118-1103191290372-111-100Oh Hello (Required)368134-227-795761297860-118-695761297874-109-100Probably Inferior Technology (Optional)368136-229-394551307972-110-294551307964-119-100A Jew's AI (Required)368131-224-1392361356545-129-1092361356586-95-300Tyrion Lannister (REQUIRED)368130-231-793741281352-127-593741281378-104-200JessAI(Required)368129-231-893301322156-121-793301322173-110-100Rimoun's Othello AI (Required)368129-232-794491298856-122-694491298873-110-100CrushingSmart (Required)368128-231-993261322656-120-893261322672-111-100wtf am i even doing (Required)368128-232-893241319954-123-793241319974-109-100My OthelloAI Class by the one Korean (Required)368131-235-293071319563-120-193071319568-115-100Best AI(Required)368128-232-892941323054-123-792941323074-109-100Homework Two (Required)368128-232-892901323356-122-692901323372-110-200Po the Dragon Warrior (Required)368128-233-792961322657-121-692961322671-112-100Minjae's Othello AI (Required)368130-235-391771356226-157-1917713562104-78-200eecuevas' AI (Required)368130-236-299431322761-123-099431322769-113-200EagleEye AI (Required)368127-233-893181320654-124-693181320673-109-200Adil Rafaa(Required)368127-233-893081323454-124-693081323473-109-200YES THIS IS AI368127-234-793111324156-122-693111324171-112-100csetty AI (required)368125-232-1192511334355-123-692511334370-109-500JZOthello368127-235-692211315554-125-592211315573-110-100cruzjb_othelloAI368126-234-892731325454-123-792731325472-111-100The best AI ever (Required)368125-233-1092271329653-124-792271329672-109-300BlueKnightJr(Required)368126-235-795391286552-127-595391286574-108-200Taco AI (Required)368126-235-792591329353-125-692591329373-110-100swAI(Required)368126-235-792361327954-124-692361327972-111-100DKAI (Required)368128-237-392971398961-123-092971398967-114-300MyOthelloAI - zhsu (Required)368115-225-2894841344176-107-194841344139-118-2700The Unstoppable, Winning AI Designed for Losing (Required)368128-238-291881329961-122-191881329967-116-100Gunning for last place AI (Required)368124-236-891811333953-124-791811333971-112-100jchen35 OAI (Required)368126-240-290611343161-122-190611343165-118-100Lsienta Othello AI(Required)368112-230-26979913019106-74-49799130196-156-2200Carol's Othello AI (REQUIRED)368121-242-5108831260351-130-3108831260370-112-200Elle::AI368118-240-1098741335750-128-698741335768-112-400Aaron's Othello AI368118-243-794661363251-127-694661363267-116-100WubGrace (Required)368117-246-594591358153-129-294591358164-117-300If you lost to this AI...(Required)368114-246-895721363951-129-495721363963-117-400Random AI for testing368111-243-1494651372859-116-994651372852-127-500MyAI368111-245-1295501355453-127-495501355458-118-800Ming's Othello AI (Required)368102-240-2689611318636-124-2489611318666-116-200Random AI (extra, for testing only)368103-254-1190971406647-133-490971406656-121-700Bernard, Othello Master (Required)368101-257-1086451339149-128-786451339152-129-300Yoshi Rocks (Required)368101-260-789491375357-124-389491375344-136-400goat AI (Required)36897-262-983831482654-126-483831482643-136-500A Tired Writer's AI (Required)36873-248-4788101416955-103-2688101416918-145-2100My AI (REQUIRED)36881-280-788891363732-147-588891363749-133-200Kick-My-Butt(Required)36876-288-471821555821-161-271821555855-127-200ChloeOthelloAI (Required)36861-301-665941509814-167-365941509847-134-300Jacobs AI(Required)36860-301-778951483848-132-478951483812-169-300It's something...36857-306-577921560229-152-377921560228-154-200TK AI (required)36857-308-358551519827-155-258551519830-153-100cjfong1 (Required)36845-317-659081470210-172-259081470235-145-400Big_Ugly (Required)36838-324-67285153689-171-472851536829-153-200BEAST_AI3689-356-35640158353-180-15640158356-176-200

The following AIs were disqualified, for the reasons listed.

AI NameDisqualification Reason Othello AI 08 (required)took too long to make a move1 Kelly AI (Required)took too long to make a move38073392 (Required)made an invalid moveAn AI (required)took too long to make a moveAnne Caballero (Required)took too long to make a moveBig Hero (Required)took too long to make a moveBrando's OthelloAI (Required)made an invalid moveCitizen Kane (Required)made an invalid moveCouldBaeSmartyerAI (Required)made an invalid movecpjung_Othello_AItook too long to make a moveDavidRayOthelloAI (Required)took too long to make a moveDefinitely not last place (Required)took too long to make a moveDizonOthelloAI(Required)took too long to make a moveElle::AI (Required)made an invalid moveEmile (Required)took too long to make a moveET(Required)took too long to make a moveEveningCross (Required)made an invalid moveFalmata's OthelloAImade an invalid moveGrandmaster Othello(Required)crashed (segmentation fault, SIGSEGV)Gregs AI (Required)made an invalid moveGucciAI Depth 5(Required)took too long to make a moveGucciAI Depth 6(Challenge)took too long to make a movehandc1 Othello AIcrashed (illegal instruction, SIGILL)Hard Mode (Required)crashed (illegal instruction, SIGILL)Haseeb's Othello AI (Required)made an invalid moveHodor (Required)took too long to make a moveI hope I'll not be disqualified (Required)took too long to make a moveIago AI (Required)took too long to make a moveJingyinz's Othello AI(Required)took too long to make a moveJTOTHELLO(REQUIRED)made an invalid moveKing Boo (Required)made an invalid moveKKTran2 OAI (Required)took too long to make a moveLa Soldadera (Required)made an invalid moveLeianne's Algorithm (Required)crashed (segmentation fault, SIGSEGV)Logically Unsound (Required)took too long to make a moveMax's Unbeatable AI (Required)took too long to make a moveMio's Simple AI (Required)took too long to make a moveMisook's Othello(Required)made an invalid moveMudassir's Othello AIthrew an exception other than an OthelloExceptionMy First Othello AI (Required)made an invalid moveMY OTHELLO AI (REQUIRED)made an invalid movemyOthello(Required)made an invalid moveMyOthelloAI (Required)made an invalid moveNeuromancertook too long to make a moveNotSmartEnough AI (Required)made an invalid moveOthelloAI003took too long to make a moveProject 2 AItook too long to make a moveProject AI (Required)took too long to make a moveRaelene's AI (Required)crashed (segmentation fault, SIGSEGV)Reversi AI (Required)took too long to make a moveRyan's Othello AImade an invalid moveSlightly Less Inferior Tech (Required)made an invalid moveSpecial Othello AI (Required)made an invalid moveSteven's AI (Required)took too long to make a moveStokesc_AI (Required)took too long to make a moveSwadAItook too long to make a moveswhi's AI (depth = 4)took too long to make a moveTrungOthelloAI2took too long to make a moveUltron(Required)crashed (segmentation fault, SIGSEGV)Vincent! (Required)made an invalid moveYourOthelloIsBettermade an invalid move
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics46/Schedule.html
##-----------------TITLE------------------------##
ICS 46 Spring 2015, Schedule
##------------------TEXT------------------------##
ICS 46 Spring 2015 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 46 Spring 2015
   Schedule







All assigned readings are from the (optional) Goodrich text. It is a good idea to skim the assigned reading before the lecture for the main ideas, attend lecture, and then to go through the assigned reading again to fill in the details that you missed, both in your initial skim of the reading and in the lecture.

Several lectures have litle or no reading corresponding to them. In some cases, this is because a block of reading corresponds to more than one lecture. In other cases, the material covered in that lecture is not discussed in the textbook.

DateLecture TopicsReadingsProject WorkWeek 1Tu 3/31
      Course introductionSome necessary, additional C++ backgroundFunction templatesWhy templates are generally written in header files
    
      
    Th 4/2
      Class templatesSeparating interface from implementation, even in header filesMember function templates
    
      Ch. 2 (some is review)
    Week 2Tu 4/7
      ContractsFunction contracts: Preconditions, postconditions, and side effectsClass contracts: Class invariantsExceptions and exception safetyWhy exceptions affect design so profoundly in C++
    
      
    Th 4/9
      The "resource acquisition is initialization" (RAII) technique in C++Automating the release of resources, even when exceptions are thrown, using RAIISmart pointers (as an RAII technique for memory management)std::shared_ptr, std::unique_ptr, and std::weak_ptr
    
      Using C++11's Smart Pointers
    F 4/10Project #0 due 11:59pmWeek 3Tu 4/14
      Random number generation in C++11 (briefly)Random devices, random engines, and random distributionsMultidimensional arrays (briefly)Options for storing multidimensional data in C++Recursion (briefly)Managing parameters and results in recursion in C++
    
      Random Number Generation in C++11Ch. 3.1Ch. 3.5
    Th 4/16
      O-, Ω-, and Θ-notationBest-, worst-, and average-case analysisVariations on linked listsAnalyzing linked list variations using O-, Ω-, and Θ-notation
    
      Ch. 4
    Week 4Tu 4/21
      Stacks, queues, and deques"Alternative" forms of algorithm analysisAmortized analysis (briefly)Why std::vector's reallocations aren't as bad as you might think
    
      Ch. 5
    W 4/22Project #1 due 11:59pmTh 4/23
      Analyzing the performance of recursionRecurrencesGeneral trees
    
      Ch. 11.1.5Ch. 7.1
    Week 5Tu 4/28
      An in-depth look at Project #2General tree implementation
    
      Ch. 7.2
    Th 4/30
      Breadth-first tree traversalsDepth-first tree traversals (preorder and postorder)Comparing the performance (time and memory) of tree traversalsN-ary and binary treesInternal vs. external nodesThe importance of logarithms in computer science
    
      Ch. 7.3
    Week 6Tu 5/5
      Binary search treesThe importance of keeping binary search trees balancedWhat is a "good" balance condition?
    
      Ch. 10.1
    Project #2 due 11:59pmTh 5/7
      MIDTERM — regular lecture time and location
    
      
    Week 7Tu 5/12
      AVL treesSkip lists
    
      Ch. 10.2
    Th 5/14
      Skip lists (continued)Probabilistic analysis (briefly)Hashing and hash tablesSeparate chaining"Good" hash functionsOpen addressingLinear probingHashing objects other than numbers
    
      Ch. 9.2
    Week 8Tu 5/19
      Priority queues (briefly)Implementing a priority queue using a min heap or max heapGraphs: definition and terminologyDirected graphsDirected acyclic graphs (DAGs)Undirected graphs
    
      Ch 8.1 - 8.3Ch. 13.1
    Th 5/21
      Graph implementation trade-offsAdjacency lists vs. adjacency matrix implementationsDepth-first graph traversalBreadth-first graph traversal
    
      Ch. 13.2 - 13.3
    Week 9M 5/25University Holiday: Memorial Day — NO LABS TODAYTu 5/26
      Why connectedness is an important factor in a graphConnectedness of a graphStrong connectedness vs. weak connectedness
    
      
    W 5/27Project #3 due 11:59pmTh 5/28
      Dijkstra's shortest path algorithmTopological ordering of a DAGThe sorting problemWhat can and cannot be sortedSorting in O(n2) timeInsertion sort
    
      Ch. 13.5
    Week 10Tu 6/2
      Selection sortSorting in O(n log n) timeTreesortHeapsortDivide and conquer algorithms (briefly)Quicksort
    
      Ch. 11.2
    Th 6/4
      MergesortA lower bound for comparison-based sortingModeling comparison-based sorts using decision treesHow to sort in linear time by using techniques other than comparisonsCounting sortRadix sortWhy radix sort can run in linear time (i.e., linear with respect to what?)
    
      Ch. 11.1Ch. 11.3
    Su 6/7Project #4 due 11:59pmFinals WeekTu 6/9
      FINAL EXAM: 7:00pm-9:00pm, SSH 100
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics46/index.html
##-----------------TITLE------------------------##
ICS 46 Spring 2015
##------------------TEXT------------------------##
ICS 46 Spring 2015 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 46 Spring 2015
   Course News







Check back here every day or so.  I will generally post important coursewide announcements here.  They will be listed in reverse-chronological order (i.e., newest items first).

Date AddedNews ItemW 6/17The final course grades are now available.F 6/5Project #4's due date has been extended to Sunday, June 7, 11:59pm.Th 5/28A Schedule update, covering the remainder of the quarter, is now available.M 5/25Project #4 is now available.M 5/18The Othello tournament results are now available.  Congratulations to the top finishers: Typing Level: Thornton, ULTRON PLAYS OTHELLO, and Calcifer.F 5/15Project #3 is available, along with a Schedule update, and an update to the grading formula in the Course Reference to account for the cancellation of the fifth project.Tu 5/5A minor Schedule update is now available.M 5/4The due date for Project #2 has been postponed to Tuesday, May 5, 11:59pm.Th 4/23The Schedule has been updated.W 4/22Project #2 is now available, though one fun new feature is still to come; the new feature will not affect your work directly, so it's safe to begin working now, but I do hope that the project becomes even more fun in the next few days.M 4/20The due date for Project #1 has been postponed to Wednesday, April 22, 11:59pm.Th 4/16The tutoring hours each Friday have been extended slightly; the new schedule is listed on the Course Reference page.Tu 4/14A Schedule update is now available, along with a completed lab schedule listed on the Course Reference page.Th 4/9Project #1 is now available.Th 4/9A short but complete example of an exception-safe class that uses dynamic allocation has been added to the "Exceptions" code example.Tu 4/7A partial version of today's code example is now available.  The write-up is complete; an actual code example will follow shortly.Su 4/5Thursday's code example is now available, and the due date for Project #0 has been postponed until Friday, April 10.F 4/3For the rest of the quarter, my office hours will be TuTh 8:15-9:30pm in ICS 253.M 3/30
      Welcome!  Please note a couple of things as we get started this quarter:
      The first lecture will meet on Tuesday, March 31.  There are no scheduled lab sections, but we will have informal lab meetings, which I expect will begin late this week, with times and days to be announced.  For more information about meeting times of lab meetings, see the Course Reference.  For information about lecture material and readings, see the Schedule.I encourage you to spend some time reading through the material on the course web site.  It will be updated periodically throughout the quarter, and there will always be an announcement here describing each update.  For now, notice the set of links at the top of this (and every) page, leading you to the Course Reference, the Schedule, and the Project Guide, as well as a set of Code Examples — mostly emanating from the lectures — that will be posted throughout the quarter.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics46/FinalGrades.html
##-----------------TITLE------------------------##
ICS 46 Spring 2015, Final Course Grades
##------------------TEXT------------------------##
ICS 46 Spring 2015 |
News |
Course Reference |
Schedule |
Project Guide |
Code Examples |
About Alex








ICS 46 Spring 2015
   Final Course Grades







Explanation (please read this first!)

Please spend a couple of minutes reading this section.  It will answer many of the questions that you may have about the grading process, and will save you a lot of upset waiting for a response to an email question.

Here are the final grades for ICS 46.  By University regulations, at this stage, the cutpoints and the grades are non-negotiable, unless we made a clerical error, such as recording a score incorrectly.  (Seriously!  This means you!  Despite this warning, I often get at least an email that begins with a phrase like "I know you said that the cutpoints are non-negotiable, but..."  There is no "but" here.)  We also can no longer accept new regrade requests on the projects.

There were 35 points possible on the Final.  The average score was 19.93 (56.95%), with a high score of 35.

How do I know which scores are mine?

Each student is identified here by a Rank, beginning with the highest overall percentage and ending with the lowest.  Each of you should have received an email from me (at your @uci.edu email address) identifying your rank.

What do the columns mean?

Here is an explanation of the various columns:

The Rank column is a rank, from highest to lowest, for each student.The Proj0 column is your score (out of 2) on Project 0.  Everyone who submitted did enough to get the two points (though some late penalties were applied).The Proj1..Proj5 columns are your scores (out of 30) on each project.  (Note that the Project 5 score is the average of your two highest scores on Projects 1 through 4, per our previous agreement when Project 5 was canceled.)The ProjTotal column lists the sum of the scores on the projects.  The total number of points possible on all the projects was 150.  There is also a column titled AdjProjTotal;  this contains your total project score after adjusting it for the differences between graders.  Those differences were removed by attempting to equalize the percentage of points lost, so that students in the "harder" groups ended up with scores that look more like those from the "easiest" group.  (Note that very low scores were not modified in this way; the assumption is that very low scores would have been very low in any section.)The MT and Final columns contain your raw scores on the Midterm and Final Exam.The TotalPct column is your overall percentage in the class, figured by adding the weighted percentages of the Midterm, Final, and AdjProjTotal together, as described in the Course Reference.The Grade column indicates the grade that has been submitted.

There are a few words to be said about the selection of cutpoints.  People are cutpoints; whole-numbered percentages are not.  That means that the cutpoint for a particular grade is simply the lowest-scoring person who received that grade.  For the sake of argument, if you received a percentage of 54.99% in the class, and someone who received a 55.52% received a higher grade than you (with no person in between), you didn't miss the cutpoint by 0.01%; you missed it by 0.53% — a substantial margin.

It was a bumpy ride, but I hope you enjoyed it.  I hope we'll cross paths again sometime.  Enjoy your summer!







The grades

RankProj0Proj1Proj2Proj3Proj4Proj5ProjTotalAdjProjTotalMTFinalTotalPctGrade123030303030150.00150.0025.53594.32%A+222928303030147.00147.0027.531.591.33%A+323030303030150.00150.0026.531.591.28%A+422830303030148.00148.5026.531.590.93%A+523030302930149.00149.2527.530.590.77%A+623030303030150.00150.002432.590.47%A+723030192930138.00141.0026.532.590.26%A+822424232625122.00129.0029.53289.19%A922830283030146.00147.0026.53088.95%A1022530313030.5146.50147.3825.530.588.82%A1122930302930148.00148.502828.588.80%A1223030213030141.00141.0023.532.587.99%A1322930263030145.00145.0023.531.587.84%A142302925.9228.4229.5142.84144.222430.586.95%A1523027.44302930146.44147.192528.586.23%A16230292728.529.5144.00145.5022.530.586.11%A1722930302930148.00148.5028.525.585.93%A1822818.81182928.5122.31129.1926.529.584.25%A1922924729.429.5118.90118.902234.583.87%A2022830302930147.00147.752625.583.86%A21229292119.529127.50133.1327.527.583.75%A222282915.8429.129.5131.44135.3226.527.583.51%A2322927303030146.00146.0026.52583.29%A2423028223030140.00140.0024.527.583.08%A2522730173030134.00134.0021.530.582.67%A2622830242829139.00141.751930.582.58%A2703030273030147.00147.752129.582.41%A2822830113030129.00129.002727.582.41%A2922830252929.5141.50141.502327.582.30%A30228303028.530146.50147.0022.526.582.12%A3123028293030147.00147.7523.525.581.96%A3222929162229125.00131.2523.528.581.37%A3322926251527.5122.50129.3826.526.581.03%A3422828243029139.00141.7521.52780.68%A3522930202929.5137.50140.632226.580.25%A36229283028.529.5145.00146.2519.52780.21%A3722530102127.5113.50117.6324.529.580.04%A3822828233029138.00141.00262379.57%A3923030233030143.00144.7520.52679.53%A4023030273030147.00147.002323.579.24%A4122330151026.5104.50110.8828.52778.78%A4222830302830146.00147.002620.578.25%A4322530252628134.00138.0018.527.578.07%A4422825262928.5136.50139.8825.52277.84%A45225271722.3226117.32125.072525.577.81%A4622730212528.5131.50136.132522.577.13%A4722730282929.5143.50145.131527.577.08%A4822523202324115.00123.7523.52676.91%A4922926212627.5129.50134.631827.576.91%A5022928211828.5124.50130.8819.52776.62%A512292721.342828.5133.84137.7218.52676.38%A5223030142230126.00132.0024.52376.33%A5322123252024113.00122.25232676.18%A54226231627.1627119.16126.662225.575.91%A5522530282829140.00142.501725.575.81%A56229261427.5529125.55131.30242375.79%A5722930271529.5130.50135.381825.574.91%A-5822526221425.5112.50121.882225.574.79%A-5923029.7222930140.70140.7017.524.574.69%A-6023021243030135.00138.7518.523.573.90%A-6122929221929128.00133.5020.52373.65%A-620273002628.5111.50116.88222773.25%A-632272592827.5116.50119.6317.527.573.03%A-6422927273029.5142.50144.3820.52072.93%A-65224281522.7726115.77124.272322.572.85%A-6622823132828120.00127.5014.527.572.59%A-6723030303030150.00150.0014.522.572.41%A-6822930262929.5143.50145.131324.572.31%A-69223261822.5424.5114.04122.9219.524.572.05%A-7022630302930145.00146.2520.518.571.74%B+7123030302830148.00148.5016.520.571.41%B+7223025141727.5113.50122.6323.52171.22%B+732222782425.5106.50111.8819.52671.11%B+74230261523.5228122.52122.522122.570.93%B+7522627201626.5115.50124.1320.522.570.92%B+7622530301030125.00125.00222170.63%B+7702130271728.5123.50130.13172570.38%B+78229302425.4829.5137.98137.9810.52670.38%B+7922825213029133.00137.2518.520.570.30%B+8021728182225110.00120.00172570.02%B+8122727221927122.00129.0020.520.569.89%B+82229302229.529.75140.25142.6915.52169.84%B+830.0828301202999.00104.2522.52669.68%B+841.783030111030111.00111.0021.523.569.48%B+85229247.229.129.5118.80118.80251969.29%B+8622930242929.5141.50143.631818.569.23%B+8722930242929.5141.50141.5014.52168.80%B8822830252929.5141.50143.631321.568.70%B8922530242929.5137.50140.6317.51968.70%B9023030182230130.00135.00221768.62%B912302472327111.00111.00222268.45%B9222626271926.5124.50130.8821.51868.37%B9322930301030129.00129.001721.568.32%B9422719.681822.7725.5112.95121.081524.568.21%B9522326182024.5111.50121.1320.520.568.05%B9622725152827.5122.50129.3823.516.567.90%B972292601527.597.50107.13212367.88%B9822830112029118.00121.25182267.81%B99229302128.830138.80138.80251367.44%B1002303072630123.00123.0020.519.567.40%B10122930271729.5132.50136.8820.516.567.38%B10222824926.7327.5115.23115.23192267.17%B10323025141827.5114.50123.38251667.10%B10428.0630242929.5120.56120.56172266.90%B10521530282429126.00132.0015.520.566.80%B10621428141722.595.50109.13172466.40%B10722930263030145.00145.0016.516.566.25%B10822228293029.5138.50141.3811.520.565.96%B10923030261030126.00126.0015.52165.94%B110230281517.4629119.46126.9619.51865.94%B11122824172828125.00131.251321.565.82%B11222830292829.5144.50145.881715.565.74%B11322930261029.5124.50124.5018.51965.69%B11421624242024108.00118.5020.518.565.27%B-1152183015.6813.5824101.26113.26172265.19%B-116230302729.530146.50147.3811.518.565.19%B-11722830121729116.00124.5018.518.565.15%B-11823030015.1230105.12105.6225.517.564.96%B-1192212881324.594.50102.882220.564.93%B-12022425131324.599.50112.1320.519.564.86%B-12122530252527.5132.50136.882014.564.83%B-12221927181323100.00112.502317.564.67%B-123229302227.529.5138.00141.00221264.60%B-124226.3230168.8229110.14114.351820.564.57%B-125226.7327.7220.372227.5124.32130.45181764.53%B-1262283082929.5124.50124.50142164.46%B-12722826232227126.00132.00823.564.37%B-12822723271327117.00125.2516.51964.35%B-129202921162591.0098.25192364.29%B-13022020271323.5103.50115.1316.52164.16%B-13122030141825107.00117.7519.51863.79%B-132229301010.7829.5109.28109.6014.52363.53%B-13322924162728124.00124.008.52463.43%B-13422826191427114.00123.0014.52063.40%B-13522930233030142.00144.001316.563.36%B-13621730112427109.00109.00172163.11%B-1372282410.5312.2226100.75114.8813.52262.92%B-1382302802829115.00118.501321.562.84%B-13922922161225.5104.50115.8821.51662.70%B-1402292792628119.00121.5017.517.562.61%B-14122230192527.5123.50130.1316.51662.23%C+14222729163029.5131.50136.13161562.17%C+14323030262330139.00141.759.51861.81%C+14422626252927.5133.50130.1314.51761.80%C+1452303093030129.00129.001417.561.71%C+14622330121626.5107.50118.1321.514.561.59%C+14722630162829129.00134.2516.514.561.57%C+148292112131772.0086.25192361.49%C+14922928262528.5136.50139.8812.51661.48%C+1501.922628231927123.00129.7515.51661.31%C+1512292830029.5116.50116.63221461.08%C+152227252328.527.75131.25135.9414.51560.99%C+15322223191722.5103.50115.131717.560.74%C+15422830243030142.00142.00181160.71%C+15522530162527.5123.50130.131813.560.66%C+15623025202527.5127.50133.13121760.61%C+15721823122825.5106.50117.3882360.42%C+158226.88019.5262799.38102.6322.51660.36%C+159024014.692269.6075.6022.523.560.20%C+160226262222.3126122.31129.0617.513.560.03%C+16122723492588.0091.7522.51860.00%C+1620262812.321227105.32115.57122259.94%C+163226272018.6226.5118.12126.001118.559.82%C+16421823152825.5109.50119.632013.559.72%C+165228262421.527126.50132.3811.516.559.51%C+166229201215.9625101.96112.7117.516.559.47%C+16722830002987.0087.75202059.34%C+1682132320921.586.5097.13172059.26%C+169226301002894.0095.50201858.98%C+170229300029.588.5092.1313.52358.69%C1712283001729104.00111.7523.511.558.36%C1722222812.871525102.87114.62171557.91%C1732293051029.5103.50103.5016.517.557.65%C174229308.51529.5112.00121.501911.557.23%C175225251127.7226.5115.22119.1012.516.557.17%C17621413192019.585.50101.631617.556.83%C1770630132326.598.5098.50162056.82%C17800206.869.62460.4660.4615.52856.25%C179230240102791.0091.0020.51656.14%C18021530202025110.00120.00131556.13%C18122801124.182992.1893.93181756.01%C1822282771027.599.5099.5016.516.555.63%C183228240132691.0096.0012.52055.58%C18402529.710.822.7527.5115.75125.3317.51255.53%C1852253015927.5106.50112.1316.513.555.32%C18622630392896.0097.501517.555.11%C18721313781354.0066.75221954.87%C18822824271827.5124.50130.88151054.76%C189222341619.564.5072.382515.554.66%C19023022002678.0081.0021.515.554.02%C-19123030262230138.00141.008.511.553.83%C-1922202413152294.00108.001414.553.55%C-19302824201726115.00123.751313.553.38%C-19422824252828133.00133.00121052.98%C-195219305924.587.5091.632112.552.86%C-196223261312.7424.599.24111.87141352.82%NP1972272342325102.00102.0012.51652.64%C-198228281202896.00102.0017.51252.09%C-19922830222929.5138.50141.38107.550.71%C-20021320111116.571.5081.6321.51250.36%C-20121830232728.5126.50126.50414.550.29%C-20201930151024.598.5098.5014.51550.25%C-2032429016.522.7572.2575.69201450.01%C-204227164.6526.7327101.38107.0413.511.549.69%D+20502425151924.5107.50118.13178.549.67%D+20621627121521.591.50106.1317949.41%D+207025191320.525102.50113.25161049.40%D+20821925201522.5101.50113.63813.549.23%D+20922430111527107.00113.00111148.64%D+2101.702801320.561.5068.631517.548.08%D+211291212141360.0077.2515.51548.05%D+21221520.478.8201963.2971.501913.547.73%D+21320281910.423.580.9092.63161147.68%D+21421214201341.0053.7517.51847.34%D+215262811719.571.5074.63151547.06%D+216218239.79920.580.2987.111313.546.83%D+217293025927.5100.50102.3812.510.546.76%D+218202412302793.0093.00161046.68%D+2191.613280.661.42164.0674.081117.546.22%D+22020010221648.0053.501518.545.93%D+22129134.6591146.6550.8115.518.545.68%D+222201317131558.0073.50191145.49%D+223283091321.581.5087.881510.545.27%D+2242281247.472071.4778.5910.515.545.12%D+2250182317.4620.3722100.83112.833.513.543.64%D2262132351418.573.5086.3813.51043.24%D227254.56142318.565.0673.3312.513.543.24%D2282222112.4814.421.591.38105.7661143.16%D2292133081021.582.5088.8811.510.542.85%D230010227.928.731664.6570.0613.51340.69%D231015014.56015.545.0655.94111638.76%D-232019011.8301646.8360.29208.538.45%D-23322028902481.0085.50126.538.10%D-23400.6423091648.6453.80161237.70%D-235250002.57.507.5016.51734.71%D-2360010.78509.525.2831.9813.51533.97%D-2370.1229.7233.12026.582.3284.7312.5029.36%F23829300019.558.5061.1315.5028.00%F23901222001751.0060.7515.5025.92%F24021517001648.0058.5012.5025.12%F2410000000.000.0014.511.523.47%F242270003.510.5010.50513.522.90%F24309300019.558.5061.139021.08%F2440000000.000.0011.51019.57%F2452000000.000.0010.5515.38%F246210000.51.501.5012.5011.82%F2472000000.000.00808.06%F248000160824.0027.50006.42%F2490103006.519.5019.50206.07%F25027.92000411.9211.92004.78%F
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics21/CourseReference.html
##-----------------TITLE------------------------##
ICS 21 / CSE 21 Summer 2012, Course Reference
##------------------TEXT------------------------##
ICS 21 / CSE 21 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 21 / CSE 21: Introduction to Computer Science I
   Summer 2012
   Course Reference







Instructor information

Alex ThorntonOffice: DBH 4048Email:  thornton@ics.uci.edu

Contacting me: I tend to be much easier to reach via email than by phone, so I would suggest using email to contact me under normal circumstances.  When you write me an email, please take a few moments to make sure that the following information is placed somewhere in your message: your name, your student ID#, and which course you're enrolled in (important since I'm teaching more than one this quarter).







Teaching assistant

There is one teaching assistant for this course: Kyle Benson (kebenson AT uci DOT edu).







Times and places

Lecture

The lecture meets on Tuesdays and Thursdays from 3:30-4:50pm in PSCB 140.

Labs (The ICS 21 Help Center)

There is a scheduled lab section, meeting on Tuesdays and Thursdays from 11:00am-12:50pm in ICS 183.  We will refer to this as the ICS 21 Help Center.  This is where you will do at least some of your work on the assignments, together with a partner, and is also where you will take lab exams; more on the labs below.

Office hours

Beginning on Thursday, June 28, I will be available on Tuesdays and Thursdays from 7:15-8:50pm in ICS 253 — not my office, as it's in a building that will be locked during at least part of that time — during which I'm available to chat with you about whatever's on your mind.  (Note that this block of time may listed as a discussion in the UCI Schedule of Classes, but it is actually my office hours, so you do not have to feel obligated to enroll in the discussion in order to attend, and attendance is purely optional.)







Textbooks

Java Concepts, 6th Editionby Cay HorstmannJohn Wiley & Sons, Inc. 2010ISBN 978-0-470-50947-0RECOMMENDED

The UCI Bookstore should have copies of this textbook available.  If you prefer, there a few other ways to get a copy of it:

Print copies are available, new and used, from a variety of sources online, including the usual suspects like Amazon.  They are available in paperback (loose leaf or bound), and may or may not come with an access code to the electronic version of the text.Online copies are available via the ICS 21 page of the Wiley Direct Student Bookstore.Downloadable, electronic copies are available from vitalsource.com.







Lab sections

In order to be enrolled in ICS 21 or CSE 21, you must be enrolled in both the lecture and a lab section.  Lab sections meet twice per week for two hours.  Your attendance at lab sections is not an explicit requirement of the course (in the sense that we will not be recording attendance) — except on certain days when "lab exams" are held — but it is expected that successful students in this course will attend almost every time.  The lab section offers real benefits:

You will have a chance to consult your TA regarding your work; this kind of instant feedback and help can be invaluable as you work through your projects.  Programming inevitably involves points at which you become stuck; having someone around to help you become unstuck so you can make progress again is a huge help.All of your work this quarter will be done in pairs using a technique called "pair programming."  The lab sections offer built-in overlap in your and your partner's schedules.You will be surrounded by a large group of other people facing the same problems that you're facing.  This kind of shared journey will build a social network that will last you, in some cases, for the rest of your life.  Don't squander the opportunity!

Lab sections will begin meeting Thursday, June 28.  Your TA will attend each lab section to help support you and your partner as you work.







Obtaining additional assistance

Asking questions of course staff

You can most easily get course questions answered by coming to the lecture, the ICS 21 Help Center, or office hours and asking them.  I am happy to help you in person when I'm available.  You can also ask questions by sending email to me or your TA (or both); we check our email frequently throughout the day, so you can usually get an answer to course-related questions within a few hours (and often much more quickly).  If the questions require a complex or lengthy response, we may ask you to see one of us in person.  As projects approach their due date, particularly on days when projects are due, we begin to receive quite a bit of email all at once, so we may not be able to respond to all messages before the project is due.  We aren't ignoring you on purpose, but unfortunately it's not always possible for the relatively small course staff to answer questions from a large number of students at once.

Accommodations for disabilities

Any students who feel that they may need an accommodation based on the impact of a disability should contact me privately to discuss these specific needs.  Also, contact the Disability Services Center online or by phone at (949) 824-7494 as soon as possible to better ensure that such accommodations, such as alternative test-taking environments or note-taking services, can be arranged for you in a timely way.







Grading

Weights of graded artifacts

Your course grade will be determined from the weighted combination of your scores on four lab assignments, four lab exams, one Midterm, and one Final Exam.  The weights of each of these are:

Four lab assignments, 0%Four lab exams, a minimum performance requirementMidterm, 40%Final Exam, 60%

Lab assignments

The lab assignments ask you to design, implement (in Java), and test computer programs.  Perhaps surprisingly, they are neither submitted nor graded — but you are well advised to do them, because each one prepares you for a corresponding lab exam.

Programming assignments almost always take longer to complete than you think they will.  (This is true not only of students, but also of professionals; programming is a difficult task to estimate.)  Start each assignment no later than suggested, come to your lab sections, work diligently, ask questions, and plan for significant additional time outside of your lab sections to complete your assignments, and you will be ready to take the lab exams.  Students who do not follow this advice typically have a much harder time passing the lab exams.

Lab exams

Lab exams are given in your lab section.  Each one corresponds to one of your assignments, and each asks you to complete tasks similar to those you did in that assignment.  In general, if you understand how to solve the assignment, you'll be able to pass the lab exam.

You must pass every lab exam to obtain a grade of C or better in the course.  If you fail to pass a lab exam, you can take that test again (and again) until you pass it.  If you need to retake an exam, you must do so during a scheduled retake section; these will be offered through the tenth week.

Even though you're permitted to retake lab exams, you are required to take each one when it is first offered for your section; you cannot take it later unless you have the instructor's specific approval.

Your TA has the responsibility of ensuring that your lab exam scores are accurate and correctly recorded.  If you think your exam was scored incorrectly, please take the matter up with your TA.  If your issue is not resolved, see the instructor.

Midterm and Final Exam

In addition to the lab exams, there are two on-paper exams.  You are required to take these when scheduled and you are not permitted to retake them.  More information about the format and content of these exams will be made available when they get closer.

Calculation of your course grade

Your final course grade will be determined using the following procedure:

We first determine your weighted total percentage for the Midterm and Final Exams.  For example, if you scored 80/100 on the Midterm and 70/100 on the Final Exam, your total percentage would be (80% of 40%) + (70% of 60%) = 32% + 42% = 74%.We may remove up to 8 points from your total (up to two points for each of your four partnerships) if you did not fully participate in pair programming, unless you've been granted a waiver to work alone.Next, we assign you a provisional course grade using the following scale, though the cutoffs may be, and often have been, lower:
    Grades in the A range (A−, A, A+): 80% and aboveGrades in the B range (B−, B, B+): 70-79%Grades in the C range (C−, C, C+): 60-69%Grades in the D range (D−, D, D+): 50-59%F grades below 50%
  Note that the provisional course grade is not awarded according to a curve; there is not pre-set number of students who will receive each grade.  This means that you are not graded in direct competition with your classmates.Then we determine how many exams you passed and, on that basis, decide what your lab exam grade will be.
    Passed ExamsLab Exam Grade4A+3C−2D+1D0D−
  Finally, we assign your final course grade by taking the lower of your provisional course grade and your lab exam grade.  Examples:
    If your provisional course grade is a B and you passed 2 lab exams, your final course grade is a D+.If your provisional course grade is a B− and you passed 4 lab exams, your final course grade is a B−.
  

Please note two particularly important consequences of the course grading algorithm:

If you fail to pass just one lab exam, your grade in this course will be no higher than C− — and the more exams you do not pass, the lower your grade in the course.  Note, too, that C− is not sufficient to move on to the next course in this sequence (ICS 22 / CSE 22).You can pass all the lab exams and still not get at least a C in the course.  Remember, your final course grade is primarily based on your Midterm and Final Exam scores; if those are low, your grade will be low.







Dropping the course or changing grade option

During Summer Session, you may drop the course or change grade option until the end of Week 8 (Friday, August 17), though refunds of course fees are not issued if you drop after the end of Week 4 (Friday, July 20).

I should point out here that I'm generally not able to be on campus on Fridays, so the last day that I'll be able to sign required forms for this course is Thursday, August 16 (or Thursday, July 19 to be eligible for any kind of refund).







Cooperation

As ICS 21 or CSE 21 students, you are expected to know and follow the academic honesty policies of both the Bren School of ICS and the University as a whole.  Please take a few minutes to read the policies, which can be found at this link.

In addition to those rules, there are some specific rules regarding student-with-student cooperation in this course:

You may cooperate on the assignments to any degree you wish, including, of course, asking questions of your partner and course staff.While taking exams, you must do your own work.  Among other things, this means you are not permitted to memorize someone else's code — particularly mine or your TA's — and just repeat it on the exam.  The tests are closed-book, closed-neighbor, closed-Internet, and closed-device.Lab exams must be taken at the times and in the rooms in which they are scheduled.

A violation of these rules will be considered acadenic dishonesty and dealt with accordingly.







Changes and additions by Alex Thornton, Summer 2012.Adapted from a combination of Norm Jacobson's ICS 21 Winter 2009 Course Reference and various of Alex Thornton's course reference pages.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics21/FinalGrades.html
##-----------------TITLE------------------------##
ICS 21 / CSE 21 Summer 2012, Final Course Grades
##------------------TEXT------------------------##
ICS 21 / CSE 21 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 21 / CSE 21 Summer 2012
   Final Course Grades







Explanation (please read this first!)

Please spend a couple of minutes reading this section.  It will answer many of the questions that you may have about the grading process, and will save you a lot of upset waiting for a response to a question asked via email.

Here are the final grades for ICS 21 and CSE 21.  By University regulations, at this stage, the cutpoints and the grades are non-negotiable, unless we made a clerical error, such as recording a score incorrectly.  (Seriously!  This means you!  Despite this warning, I often get at least one email that begin with a phrase like "I know you said that the cutpoints are non-negotiable, but..."  There is no "but" here.)

There were 25 points possible on the Final.  The average score on the Final was 13.12 (52.48%), with a high score of 20.

How do I know which scores are mine?

Each student is identified here by a Rank, beginning with the highest overall percentage and ending with the lowest.  In the event of a tie, ranks were assigned randomly, as their only purpose here is to provide a unique identifier.  Each of you should have received an email from me (at your @uci.edu email address) identifying your rank.

What do the columns mean?

Here is an explanation of the various columns:

The Rank column is a rank, from highest to lowest, for each student.The LabExamX columns indicate your score on each lab exam; also listed, parenthetically, is the number of attempts you made at taking it.  (Note that the number of attempts does not factor into your grade; it was fine to take the lab exams as many times as you wanted to.)The LabExamsPassed column indicates how many lab exams you passed out of the four that were given.The Midterm and Final columns contain your raw scores on the Midterm and Final Exam.The TotalPct column is your overall percentage in the class, figured by adding the weighted percentages of the Midterm and Final columns together, as described in the Course Reference.The LabExamGrade column lists your lab exam grade, as described in the Course Reference.The ProvGrade column lists your provisional grade, as described in the Course Reference.The Grade column lists your overall course grade, which is derived by combining your lab exam grade and your provisional grade as described in the Course Reference.

There are a few words to be said about the selection of cutpoints.  People are cutpoints; whole-numbered percentages are not.  That means that the cutpoint for a particular grade is simply the lowest-scoring person who received that grade.  For the sake of argument, if you received a percentage of 54.99% in the class, and someone who received a 55.52% received a higher grade than you (with no person in between), you didn't miss the cutpoint by 0.01%; you missed it by 0.53% — a substantial margin.

I enjoyed working with you this quarter.  Enjoy the rest of your summer!







The grades

RankLabExam1LabExam2LabExam3LabExam4LabExamsPassedMidtermFinalTotalPctLabExamGradeProvGradeGrade1P (1)P (1)P (1)P (1)4 of 4211876.80%A+A+A+2P (2)P (2)P (2)P (2)4 of 4182076.80%A+A+A+3P (2)P (1)P (1)P (1)4 of 4201772.80%A+AA4P (3)P (3)P (3)P (2)4 of 4201670.40%A+AA5P (2)P (1)P (1)P (1)4 of 4161868.80%A+AA6P (1)P (1)P (4)P (1)4 of 4201568.00%A+AA7P (1)P (1)P (1)P (1)4 of 4201568.00%A+AA8P (2)P (3)P (2)P (3)4 of 4131966.40%A+AA9P (1)P (1)P (2)P (2)4 of 4171665.60%A+AA10P (2)P (1)P (2)P (2)4 of 4151764.80%A+A-A-11P (3)P (1)P (1)P (1)4 of 4171563.20%A+A-A-12P (2)P (1)P (1)P (1)4 of 4171563.20%A+A-A-13P (4)P (2)P (3)P (2)4 of 4181462.40%A+A-A-14P (2)P (1)P (2)P (3)4 of 4161561.60%A+B+B+15P (1)P (2)P (1)P (1)4 of 4171460.80%A+B+B+16P (1)P (1)P (2)P (1)4 of 4181360.00%A+B+B+17P (3)P (1)P (2)P (1)4 of 4111758.40%A+BB18P (1)P (2)P (3)P (2)4 of 4171358.40%A+BB19P (2)P (3)P (2)P (2)4 of 4171358.40%A+BB20P (4)P (3)P (5)P (4)4 of 4131556.80%A+BB21P (2)P (1)P (1)P (1)4 of 4111656.00%A+BB22P (1)P (2)P (2)P (1)4 of 4171256.00%A+BB23P (2)P (4)P (1)P (2)4 of 4171256.00%A+BB24P (1)P (1)P (2)P (1)4 of 4131454.40%A+B-B-25P (3)P (1)P (2)P (1)4 of 420953.60%A+B-B-26P (1)P (1)P (3)P (4)4 of 4131352.00%A+C+C+27P (3)P (1)P (2)P (2)4 of 4171051.20%A+C+C+28P (1)P (1)P (3)P (3)4 of 4111451.20%A+C+C+29P (3)P (1)P (2)P (1)4 of 4141251.20%A+C+P30P (2)P (2)P (1)P (1)4 of 4151150.40%A+CC31P (1)P (2)P (1)P (1)4 of 491345.60%A+C-C-32P (1)P (1)P (3)P (1)4 of 4121043.20%A+C-C-33P (4)P (4)P (6)P (3)4 of 4101142.40%A+C-C-34P (3)P (2)P (4)P (1)4 of 414841.60%A+C-C-35P (5)P (3)P (2)P (2)4 of 471240.00%A+C-C-36P (3)P (3)P (8)P (5)4 of 471240.00%A+C-C-37P (1)P (3)P (1)P (1)4 of 410937.60%A+D+D+38P (3)P (2)P (1)P (4)4 of 414636.80%A+D+D+39P (3)P (2)P (2)P (2)4 of 481036.80%A+D+D+40P (1)P (5)P (2)P (4)4 of 411632.00%A+DD41P (3)P (4)P (2)P (1)4 of 48832.00%A+DD42P (1)P (2)P (3)P (1)4 of 46828.80%A+D-NP43P (3)P (1)XX2 of 415024.00%D+FNR44N (2)XXX0 of 410016.00%D-FNR45N (3)N (1)XX0 of 410016.00%D-FNR46N (1)N (1)XX0 of 47011.20%D-FNR47XXXX0 of 4000.00%D-FNR48N (1)XXX0 of 4000.00%D-FNR49N (1)XXX0 of 4000.00%D-FNR
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics21/Schedule.html
##-----------------TITLE------------------------##
ICS 21 / CSE 21 Summer 2012, Course Schedule
##------------------TEXT------------------------##
ICS 21 / CSE 21 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 21 / CSE 21 Summer 2012
   Schedule







This schedule is a work in progress and will be updated throughout the quarter; check in before each lecture for updates.  In general, I'll try to keep the schedule at least a week or so ahead, so that you can anticipate where we're headed.

All assigned readings are from the Horstmann text.  It is a good idea to skim the assigned reading before the lecture for the main ideas, attend lecture, and then to go through the assigned reading again to fill in the details that you missed, both in your initial skim of the reading and in the lecture.

Not all lectures have reading corresponding to them.  This is generally 
because a block of reading corresponds to more than one lecture.  Occasionally, 
the material covered may not be in the textbook.

DateLecture TopicsReadingsLab WorkWeek 1Tu 6/26
      Course introductionWhat is Java?Compiling and executing Java programs
    
      Ch. 1
    Th 6/28
      Our first Java programData abstractionClasses and fieldsObjectsDefining and calling methodspublic vs. privateParameter passingReturn valuesAccessors and mutatorsLocal variablesScopeConstantsImporting classes written by othersAssignment statements
    
      Ch. 2.1 - 2.7 (scan)Ch. 2.10Ch. 3.1 - 3.5Ch. 3.7 - 3.8Ch. 4
    
      First lab meetingSuggested start date for Lab 0
    Week 2Tu 7/3
      Our first Java program (continued)
    
      
    Suggested start date for Lab 1W 7/4University Holiday: Independence DayTh 7/5
      Our first Java program (continued)
    
      
    Week 3Tu 7/10
      Testing programsprint and printlnWorking incrementally
    
      Ch. 2.8Ch. 3.6
    Th 7/12
      Additional Java basicsNamed constantsStringsGenerating random numbersExpressionsOperators and precedenceShorthand operators
    
      Chs. 2, 3, and 4 in detail
    
      Lab Exam 1Suggested start date for Lab 2
    Week 4Tu 7/17
      Decision statements
    
      Ch. 5
    Th 7/19
      Decision statements (continued)Loops and simple loop algorithms
    
      Ch. 6.1 - 6.4
    Week 5Tu 7/24
      Loops and simple loop algorithms (continued)Nested statementsMore details about scope
    
      
    Th 7/26
      ListsArrayListsUsing generic classes
    
      Ch. 7.2 - 7.3Ch. 7.5
    
      Lab Exam 2
    Week 6Tu 7/31
      MIDTERM: regular lecture time and location
    
      
    
      Suggested start date for Lab 3
    Th 8/2
      Classic list algorithmsThe enhanced for loop
    
      Ch. 7.4Ch. 7.6
    Week 7Tu 8/7
      More about ArrayLists, as parameter and return typesClassic list algorithms (continued)CloningShallow vs. deep copyingNested data structures, particularly involving ArrayLists
    
      
    Th 8/9
      An introduction to fixed-size arraysReference and value parameters
    
      Ch. 7.1
    
      Lab Exam 3Suggested start date for Lab 4
    Week 8Tu 8/14
      Background on Lab Assignment 4Introduction to recursion
    
      Ch. 13.1 - 13.4
    Th 8/16
      Introduction to recursion (continued)ExceptionsException handling: basic concepts and approaches
    
      Ch. 11.3 - 11.6
    Week 9Tu 8/21
      Exception handling: basic concepts and approaches (continued)FilesText vs. binary filesReading input from text filesScanners and FileReaders
    
      Ch. 11.1 - 11.2
    
      Lab Exam 4
    Th 8/23
      An extended example of text file input and formatted output
    
      
    Week 10Tu 8/28
      Final Exam Review Session
    
      
    Th 8/30
      FINAL EXAM: regular lecture time and location
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics21/MidtermAnswerKey.html
##-----------------TITLE------------------------##
ICS 21 / CSE 21 Summer 2012, Midterm Answer Key
##------------------TEXT------------------------##
ICS 21 / CSE 21 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 21 / CSE 21 Summer 2012
   Midterm Answer Key







The answers

There were 25 questions, each of which is worth one point, for a total possible score of 25 points.  There were two versions of the exam, distinguishable by the second digit of the test number written on the front of the exam.  The answers for each version are below.

If the second digit of your test number was odd, the answers are...

Note that the answer to #22 has been updated since this was originally posted.

DADABCABBEECEADEEACCBBDCA

If the second digit of your test number was even, the answers are...

Note that the answer to #17 has been updated since this was originally posted.

ABDADEACCBABCECEBDCBEADEA
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics21/index.html
##-----------------TITLE------------------------##
ICS 21 / CSE 21 Summer 2012
##------------------TEXT------------------------##
ICS 21 / CSE 21 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 21 / CSE 21 Summer 2012
   Course News







Check back here every day or so.  I will generally post important coursewide announcements here.  They will be listed in reverse-chronological order (i.e., newest items first).

Date AddedNews ItemSa 9/1The final course grades are now available.Th 8/30The final exam answer key is now available.M 8/27The final lab exam retakes will be this week at the following times, during which all four lab exams will be available to be retaken.
      Tuesday, August 28, 10:00-10:50am in ICS 189Tuesday, August 28, 11:45am-12:35pm in ICS 183Tuesday, August 28, 1:00-1:50pm in ICS 189Thursday, August 30, 10:00-10:50am in ICS 189Thursday, August 30, 11:45am-12:35pm in ICS 183Thursday, August 30, 1:00-1:50pm in ICS 189
    M 8/20We'll be holding lab exam retakes on Thursday at the following times and locations.  All four lab exams will be available for retakes at all of these times.  There will also be lab exam retakes offered next week on both Tuesday and Thursday; a schedule of those will follow.
      Thursday, August 23, 10:00-10:50am in ICS 189Thursday, August 23, 11:45am-12:35pm in ICS 183 — this is during the regularly-scheduled lab sectionThursday, August 23, 1:00-1:50pm in ICS 189
      Additionally, a Schedule update, estimating the remaining lectures this quarter, is now available.
    M 8/13Our lab exam retakes this week will be at the following times and locations.  Lab Exams 1, 2, and 3 will be available for retakes at all of these times.
      Tuesday, August 14, 10:00-10:50am in ICS 189Thursday, August 16, 10:00-10:50am in ICS 189Thursday, August 16, 1:00-1:50pm in ICS 189
    W 8/8Lab Assignment 4 is now available.M 8/6This week's lab exam retakes, with both Lab Exam 1 and Lab Exam 2 available, will be:
      Tuesday, August 7, 10:00-10:50am in ICS 189Tuesday, August 7, 1:00-1:50pm in ICS 189
    W 8/1A mistake was found on the midterm answer key, affecting both versions.  The answer key has been updated accordingly (along with an indication of which answer changed).Tu 7/31Lab Assignment 3 is now available, along with a Schedule update.Tu 7/31The midterm answer key is now available.Tu 7/31This week's lab exam retakes will both be on Thursday, with both Lab Exam 1 and 2 being available for retake.  The times are:
      Thursday, August 2, 10:00-10:50am in ICS 189Thursday, August 2, 1:00-1:50pm in ICS 189
    Su 7/22Lab exam retakes for the upcoming week will be at the following dates, times, and places.  During this week's retakes, only Lab Exam 1 will be available; we'll make Lab Exam 2 available for retakes next week.
      Tuesday, July 24, 10:00-10:50am in ICS 189Thursday, July 26, 1:00-1:50pm in ICS 189
    Su 7/8A Schedule update is available, along with Lab 2.M 6/25
      Welcome!  A few things:
      Lab sections will begin meeting on Thursday, June 28.I encourage you to spend some time reading through the material on this course web site.  Notice the set of links at the top of this (and every) page, leading you to the Course Reference, the Schedule, and the Lab Manual.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics21/FinalAnswerKey.html
##-----------------TITLE------------------------##
ICS 21 / CSE 21 Summer 2012, Final Exam Answer Key
##------------------TEXT------------------------##
ICS 21 / CSE 21 Summer 2012 |
News |
Course Reference |
Schedule |
Lab Manual |
About Alex








ICS 21 / CSE 21 Summer 2012
   Final Exam Answer Key







The answers

There were 25 questions, each of which is worth one point, for a total possible score of 25 points.  There were two versions of the exam, distinguishable by which pair of digits in the test number were the same.  The answers for each version are below.

If the first and second digits of your test number were the same, the answers are...

DDCEECAAACABCDDDCEDDCCEDB

If the second and third digits of your test number were the same, the answers are...

AAACECACEDDCCEDBECBCDDDDD
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/inf45/CourseReference.html
##-----------------TITLE------------------------##
Informatics 45 Spring 2010, Course Reference
##------------------TEXT------------------------##
Informatics 45 Spring 2010 |
News |
Course Reference |
Schedule |
Lab Manual |
Code Examples |
About Alex








Informatics 45: Patterns of Software Construction
   Spring 2010
   Course Reference







Instructor information

Alex ThorntonOffice: DBH 4048Phone: (949) 824-6624Email:  thornton@ics.uci.edu

Office hours: I will be available on Tuesdays and Thursdays from 7:15-8:45pm in ICS 259 — not my office, as it's in a building that will be locked during that time — during which all course-related issues will have the highest priority.  If you catch me in my office at other times during the week and I'm not working on something urgently, I'll be glad to chat with you about whatever's on your mind.

Contacting me: I tend to be much easier to reach via email than by phone, so I would suggest using email to contact me under normal circumstances.  When you write me an email, please take a few moments to make sure that the following information is placed somewhere in your message: your name, your student ID#, and which course you're enrolled in (I'm teaching more than one this quarter).







Lecture times and places

The lecture meets on Tuesdays and Thursdays from 5:00-6:20pm in ICS 180.







Your TA and lab sections

Your TA this quarter is Ben Compani (companib@uci.edu).

In order to be enrolled in Informatics 45, you must be enrolled in both the lecture and the lab section.  Lab sections meet three times per week for two hours.  Your attendance at lab sections is not an explicit requirement of the course (in the sense that we will not be recording attendance), but it is expected that successful students in this course will attend almost every time.  The lab sections offer real benefits:

You will have a chance to consult your TA and lab tutor regarding your work.  You will find yourself working with a number of technologies and in a number of problem domains that you're not likely to be familiar with already, so this kind of instant feedback and help can be invaluable as you work through your programming projects.Some of your work this quarter may be done in pairs using the "pair programming" technique.  The lab sections offer built-in overlap in your and your partner's schedules.You will be surrounded by a large group of other people facing the same problems that you're facing.  This kind of shared journey will build a social network that will last you, in some cases, for the rest of your life.  Don't squander the opportunity!

The lab section will begin meeting on Wednesday, March 31, and will continue to meet on Mondays, Wednesdays, and Fridays from 4:00-5:50pm in ICS 189.







Textbooks

This course has no assigned textbook, though I may be assigning online reading from time to time.  This is not to say that there will not be a fair amount of reading in this course; real-world software development requires quite a bit of reading and digesting of technical documentation, though there's never a single book that tells you everything you need to know, and much of the information you need is best found on the web nowadays.

We'll be doing our work this quarter using Java, so you may find a Java reference book to be useful.  You'll probably find your textbook from prerequisite coursework to be sufficient as a reference.  If not, there are many suitable ones out there; different styles appeal to different people, so I suggest going to a local bookstore and finding one that you feel comfortable with.  One book that you might like is the second edition of a book titled Head First Java, which can be purchased at many bookstores; more information about this book is available at this link.







Obtaining additional assistance

Asking questions of course staff

You can most easily get course questions answered by coming to the lecture, the lab section, or office hours and asking them.  I am happy to help you in person when I'm available.  You can also ask questions by sending email to me or the TA (or both); we check our email frequently throughout the day, so you can usually get an answer to course-related questions within a few hours (and often much more quickly).  If the questions require a complex or lengthy response, we may ask you to see one of us in person.  As projects approach their due date, particularly on days when projects are due, we begin to receive quite a bit of email all at once, so we may not be able to respond to all messages before the project is due.  We aren't ignoring you on purpose, but unfortunately it's not always possible for the relatively small course staff to answer questions from a large number of students at once.



Accommodations for disabilities

Any students who feel that they may need an accommodation based on the impact of a disability should contact me privately to discuss these specific needs.  Also, contact the Disability Services Center at (949) 824-7494 as soon as possible to better ensure that such accommodations, such as alternative test-taking environments or note-taking services, can be provided to you in a timely way.







Grading

Weights of graded artifacts

Your course grade will be determined from the weighted combination of your scores on four programming projects and one Final Exam.  The weights of the individual components of your grade are:

Four programming projects, 75% (weighted equally at 18.75% each)Final Exam (take-home), 25%

You will notice from this breakdown that the programming projects make up a substantial portion of your overall grade.  This is no accident.  While we will discuss general patterns and approaches to constructing quality software, there is no substitute for experience; you can only really learn to build quality software by doing it.  We'll be asking you to write a lot of code this quarter, but you will be rewarded for it by having your grade weighted heavily in favor of that work.

Determining final grades

Course grades will be determined neither on a normal curve nor a straight scale.  It is guaranteed that overall scores over 90% will receive an A- or better, scores over 80% will receive a B- or better, and scores over 70% will receive a C or better.  However, the actual cutoffs may be lowered at the end of the quarter.  In short, it is not my intention to fail half of the students, nor am I planning on giving only 2% of the students A's, but I prefer not to constrain myself with either a straight scale or a formalized curve.

Some of the programming projects will permit the use of a technique called pair programming, which is discussed in more detail in the Lab Manual, though it will always be optional.  Each of you who pair up will also be asked to fill out an evaluation of your partner after each paired project is due; this will give you an opportunity to let us know, confidentially, whether your experience with your partner was a positive one.  I reserve the right to reduce your overall course grade by as much as 10% if the evaluations you receive from your partners are consistently problematic.

If you're curious about how you're doing in the course, I'm happy to discuss your estimated grade at any time.  It's generally best to have this conversation in person, so that we can explore issues other than just the raw numbers; I'm happy to have this conversation at any time that I'm available, and I'm also glad to do it via email if we can't find a mutually available time.







Dropping the course or changing grade option

You may drop the course or change your grade option through end of Week 6 (Friday, May 7).

During the first two weeks of the course, adds and drops are handled electronically via the Electronic Add/Drop feature of WebReg.  Beyond that time — or any time you want to change grade option — you'll need to obtain an add/drop/change card, which can be found in many places on campus (e.g., Aldrich Hall and the ICS Student Affairs Office, to name a couple), then get my signature on it.  (I will sign all of these cards, so please do not approach your TA with these cards.  Your TA is not authorized to sign them!)  I will not be on campus on Fridays this quarter, so the latest day to get a signature on one of these cards will be Thursday, May 6; I cannot offer exceptions to this under any circumstances.







Academic honesty

The policy

As Informatics 45 students, you are expected to know and follow the academic honesty policies of both the Bren School of ICS and the University as a whole.  Please take a few minutes to read the policies, which can be found at this link.

All of your lab work is expected to be completed solely by you (and your partner, on paired assignments).  Worker in larger groups and/or sharing of code between students that are not partners is not permitted.  Note that "high-level discussion of course material for better understanding" is permitted and encouraged, but when it comes time to sit down and write code, that is expected to be done by you and you alone.  All submissions are compared to one another using an automated plagiarism detection system.  This system is extraordinarily good at finding similarities between submissions, even when there are superficial differences.  (Note that we also compare your submissions to those submitted during previous quarters whenever one of these assignments was given during a previous quarter, so it is an exceedingly bad idea to turn in, or even refer to, code written by a friend of yours who took the course already.)

Since all of your work is expected to be completed solely by you (and your partner, on paired assignments), you will be held responsible even if you plagiarize only a small portion of someone else's work.



Academic honesty is a two-way street.  Providing your code to other students for them to turn in as their own is not permitted anymore than turning in someone else's code.  Resist the temptation to give code to your friends "for reference."  Based on my experience, I can say that your "friends" may very well betray you and turn it in, anyway.

Naturally, the Final Exam is expected to be an individual effort.  Dishonest behavior during an exam will not be tolerated.

Violators of academic honesty policies are subject to the penalties described in the Bren School of ICS policy.  They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade.  Also be aware that a single documented case of academic dishonesty may preclude you from switching into computing majors, registering for computing minors, joining the ICS Honors Program, and graduating from a computing major with honors.

The lesson

Okay, so the moral of the story is that it's wise to avoid cheating.  I believe that it's relatively rare that students enter a course with the conscious intent to cheat their way through it; why come to UCI if you're not planning to get something out of the coursework?  So why do people cheat every quarter in every course?  The answers vary, but here's the easiest way I can boil down the numerous conversations I've had with students caught cheating in my courses over the years: I fell behind and couldn't figure out how to catch up.  Things happen and ten-week quarters are unforgiving.  You might get sick, you might have issues crop up in your family, you might have an off-campus job that's demanding too much of your time, you might be trying to decide whether you're on the path you want to be on... Any of those things (and many others) can make it hard to keep up.  You fall a little behind, you fall a little further behind, and pretty soon the situation seems hopeless.  You're under pressure, temptation gets the better of you...

If you feel like you're beginning to slip off course or things are getting beyond your control, the best thing to do is to talk to us sooner rather than later.  We're here to help; we understand.  But the reality of taking large-sized courses at a large-sized institution is that we're not going to know you're in need unless you tell us.  If things are happening in your life, tell us; you don't have to be specific if you're not comfortable with it.  Before the fact, there's often a way to work things out.  After the fact, it's usually too late.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/inf45/index.html
##-----------------TITLE------------------------##
Informatics 45 Spring 2010
##------------------TEXT------------------------##
Informatics 45 Spring 2010 |
News |
Course Reference |
Schedule |
Lab Manual |
Code Examples |
About Alex








Informatics 45 Spring 2010
   Course News







Check back here every day or so.  I will generally post important coursewide announcements here.  They will be listed in reverse-chronological order (i.e., newest items first).

Date AddedNews ItemSu 6/13The final course grades are now available.Tu 6/1The Schedule has been updated to reflect the topics to be covered for the remainder of the quarter.Th 5/27The ball animation and ball-and-paddle game code examples are now available.Su 5/23Project #4 is now available.W 5/19The Othello game we wrote in lecture is now available as a commented code example.Th 5/13To accommodate a due date that many of you have in Informatics 43, I've postponed the Project #3 due date a bit.  Because of the fourth project, I can't postpone it further than I have, but I hope that this at least provides some relief.M 5/10Project #3, a Schedule update, and all missing code examples to date are now available.Th 4/29A Schedule update and tonight's code examples are now available.W 4/28Yesterday's code examples are now available.Th 4/22Tonight's sockets-and-GUIs code example is now available.Tu 4/20Our code example from today is available.Th 4/15The code example from tonight's lecture is now available.W 4/14Project #2 is now available, along with a Schedule estimate through Week 5.Th 4/8Tonight's code example, along with a preview of some things we'll be next week.W 4/7The code example from yesterday's lecture, along with a sneak preview of some of the things we'll do tomorrow, is now available.Th 4/1Today's code example is now available.M 3/29
      Welcome!  A few things:
      The first lecture will meet on Tuesday, March 30 and lab sections will begin meeting on Wednesday, March 31.  For more information about meeting times of labs, see the Course Reference.  For information about lecture material and readings, see the Schedule.I encourage you to spend some time reading through the material on this course web site.  Notice the set of links at the top of this (and every) page, leading you to the Course Reference, the Schedule, and the Lab Manual, as well as a set of commented Code Examples that will be posted during the course of the quarter.
    









This course web site has been validated against the XHTML 1.1 and CSS 2.0 standards.  To ensure that your own Web pages meet established Web standards, visit validator.w3.org.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/inf45/FinalGrades.html
##-----------------TITLE------------------------##
Informatics 45 Spring 2010, Final Course Grades
##------------------TEXT------------------------##
Informatics 45 Spring 2010 |
News |
Course Reference |
Schedule |
Lab Manual |
Code Examples |
About Alex








Informatics 45 Spring 2010
   Final Course Grades







Explanation (please read this first!)

Please spend a couple of minutes reading this section.  It will answer many of the questions that you may have about the grading process, and will save you a lot of upset waiting for a response to an email question.

Here are the final grades for Informatics 45.  By University regulations, at this stage, the cutpoints and the grades are non-negotiable, unnless we made a clerical error, such as recording a score incorrectly.  (Seriously!  This means you!  Almost every quarter, I get at least one email that begin with a phrase like "I know you said that the cutpoints are non-negotiable, but...")  We also can no longer accept new regrade requests on the projects.

There were 52 points possible on the Final.  The average score was 48.78 (93.80%), with many perfect scores.  Average project scores were also quite high and a fairly high proportion of A and A- grades were seen this time around.

Here is an explanation of the various columns:

The IDSuffix column contains the last four digits of your UCI ID# or Access ID#.The Proj1..Proj4 columns are your scores (out of 18) on each project.The Final column contains your raw score on the Final Exam.The TotalPct column is your overall percentage in the class, figured by adding the weighted percentages of the project scores and Final together, as described in the Course Reference.

There are a few words to be said about the selection of cutpoints.  People are cutpoints; whole-numbered percentages are not.  That means that the cutpoint for a particular grade is simply the lowest-scoring person who received that grade.  For the sake of argument, if you received a percentage of 54.99% in the class, and someone who received a 55.52% received a higher grade than you (with no person in between), you didn't miss the cutpoint by 0.01%; you missed it by 0.53% — a substantial margin.

I enjoyed working with you all this quarter and hope to see you again sometime down the road.







The grades

IDSuffixProj1Proj2Proj3Proj4FinalTotalPctGrade2360161310.5165282.81%B+318017.516.515185294.79%A324516.517.517184693.99%A41811215.2514.514.54379.27%B423210300013.54%F58131814.51414.54886.62%A-60151415.259125076.38%B65101014.511155277.60%B713017.7501604657.27%C71911612.515185088.10%A-722016.51317185091.23%A7328141414144780.93%B76698300011.46%NR795617.51616185295.31%A812617.751818185299.74%A+82141517.515185293.23%A826515.517.518184995.43%A8287171416154887.66%A-849016141115058.33%C888915.517.517184893.91%A9752161616.5184188.98%A-
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/inf45/Schedule.html
##-----------------TITLE------------------------##
Informatics 45 Spring 2010, Schedule
##------------------TEXT------------------------##
Informatics 45 Spring 2010 |
News |
Course Reference |
Schedule |
Lab Manual |
Code Examples |
About Alex








Informatics 45 Spring 2010
   Schedule







The schedule is a work-in-progress that will be built as we go along, depending on our progress (and, perhaps toward the end, your areas of interest).  I will try to keep the lecture schedule and readings at least a week ahead of us, so you'll know to expect, at least in the short term.

There will sometimes be online readings associated with lectures.  We will generally be talking about them, or about the issues raised in them, in lecture; it's best to do the readings before the lecture, so that you can participate in the discussion and get the most out of your time.

DateLecture TopicsReadingsDueWeek 1Tu 3/30
      Course introductionWhere are we going?Distinguishing characteristics of real-world software development
    
      
    Th 4/1
      Graphical user interfaces in Java using SwingLayoutEvent handling
    
      
    Week 2M 4/5Project #1 — Plan due 11:59pmTu 4/6
      Graphical user interfaces in Java using Swing (continued)Models vs. viewsSeparating the model from the view: Why and how?Custom events
    
      
    Th 4/8
      Graphical user interfaces in Java using Swing (continued)A more flexible layout manager: GridBagLayoutStoring and manipulating collections using JList
    
      
    Week 3Tu 4/13
      Using ListModels to help separate your model from your viewInput and output: How programs interface with the world around themInteroperabilityFile input and outputThe need for file formatsWhat kind of information is important in a file formatRecognizing how to process a file based on its contentsThe importance of gracefully handling ill-formed inputNetwork input and output
    
    W 4/14Project #1 — Program due 11:59pmTh 4/15
      SocketsNetwork protocolsThe importance of knowing who and what to trustUsing sockets in JavaMore about network addresses, ports, wireless routers, firewalls, etc.Listening and connectingImplementing a simple protocol
    F 4/16Project #1 — Lessons Learned due 11:59pmWeek 4Tu 4/20
      Implementing a simple protocol (continued)Protocol separation, and why it's as important as model-view separationHow to implement a protocol separately from the rest of your program
    
    Th 4/22
      Protocol separation (continued)ThreadsWhy threads are important when using socketsWhy threads are especially important in programs with GUIs
    
      
    F 4/23Project #2 — Project Plan due 11:59pmWeek 5Tu 4/27
      Mixing sockets with GUIs in Java
    
      
    Th 4/29
      Mixing sockets with GUIs in Java (continued)Why text is not always the appropriate encodingHow to read bytes directly from a fileHow to write bytes directly to a fileHow reading and writing bytes using a socket is the same
    
      
    Week 6Tu 5/4
      Pushing out the boundaries even further: the webURLsHTTPGET and POST requestsREST-based web service APIsWriting a Java program that manipulates Twitter
    
    Th 5/6
      The importance of using well-known file formats, revisitedXMLXML parsers built into JavaWriting a Java program that downloads information from Twitter as XML and parses it
    
      
    Week 7M 5/10Project #2 — Program due 11:59pmTu 5/11
      Issuing a Google query from a Java programJSON, as an alternative to XMLFinding and utilizing an open source library when your programming language library doesn't solve your problem
    
      
    W 5/12Project #2 — Lessons Learned due 11:59pmTh 5/13
      Writing a complete Othello gameDoing our own drawingChoosing our own fonts and colors2-D graphics basicsAntialiasing
    
    Sa 5/15Project #3 — Project Plan due 11:59pmWeek 8Tu 5/18
      Writing a complete Othello game (continued)Handling mouse input
    
      
    Th 5/20
      Writing a complete Othello game (continued)How game logic is a "model" and should be separated from our viewTwo-dimensional arraysEnums
    
    Week 9M 5/24Project #3 — Program due 11:59pmTu 5/25
      Animation in Java, using techniques we've learned alreadyAnimating a ball moving across the screenFrames, timing, and separating animation logic from presentation logicCustom coordinate systems
    
      
    Project #3 — Lessons Learned due 11:59pmTh 5/27
      Augmenting our ball animation — detecting collisions with walls
    
      
    F 5/28Project #4 — Project Plan due 11:59pmWeek 10M 5/31
      University Holiday: Memorial Day — NO LABS TODAY
    Tu 6/1
      Turning our ball animation into a game — adding a user-controlled paddle and scoringMore about threadsWhy synchronization and synchronized are importantThe representation of sound in a computerSound in Java — adding sampled sound effectss to our animation
    
      
    Th 6/3
      The importance of small classes, revisitedUnit testing using JUnitHow unit testing is more difficult when programs use external resourcesThird-party tools that assist in unit testing of programs that use external resources
    
      
    Su 6/6Project #4 — Program due 11:59pmFinals WeekTu 6/8Project #4 — Lessons Learned due 11:59pmTh 6/10
      NO IN-CLASS FINAL EXAM
    F 6/11Take-Home Final Exam due 11:59pm
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics139w/Grades.html
##-----------------TITLE------------------------##
ICS 139W Spring 2005, Grades
##------------------TEXT------------------------##
ICS 139W Spring 2005 |
News |
Course Reference |
Schedule |
Writing Assignments |
About Alex








ICS 139W Spring 2005
   Grades







Notes

These are the final course grades.  The weighted values of each of the components of the course grade are listed in the table below.The In-Class Participation score is the number of in-class activities that you've participated in thusfar.  Peer editing sessions, the sentence-editing and  typography/graphics exercises, the one-minute oral presentation, and oral presentation feedback are included.  There were 20 activities, with 18 being considered a "perfect score" (i.e. everyone got two "free" absences).







The grades

Legend

IDSuffix = last four digits of UCI student ID#WI = Writing InstructionsIP = Influencing PolicyIT = Introduction and TutorialCP = Change ProposalP = PromotionOP = Oral Presentation (five-minute)ICP = In-Class ParticipationTotalPct = Total Overall PercentageGrade = Final Course Grade

IDSuffixWIIPITCPPOPICPTotalPctGradePoints Poss.1001001001001001018Weight10%20%15%20%10%10%15%10369592937694101992.28%A13969789989993101997.13%A14288882828787102090.27%A14489095938494101993.98%P15559278988791101588.50%A15589096937999101892.85%A16199691918898102095.52%A17019596989499101897.10%A17518884725787101881.50%B+22100.00%F2414948749489391372.88%B-28179090959493102096.02%A29070.00%F30838687879192102093.12%A31159092938693102094.52%A33138079867090101582.20%B+34029694979996101796.52%A34189083948765101989.43%A35490.00%F37588984868894101688.93%A402610.83%F41247576888290102087.97%A41268788919893101994.68%A41800.00%F45539583867794101888.80%A47410.00%F48719590969490102096.37%A4894837864699892082.77%B+51769493999993102098.62%A52538586969195101892.80%A553691819379100102091.72%A56320.00%F57659288959892101693.18%A61539387878199102092.52%A61939988969997102098.07%A64219491957791101992.18%A67029278926191101481.57%B+67567865777620101773.72%B-69239584837096101988.18%A7202928072768991581.60%B+720395889385100101792.22%A72538967607190101476.17%B74116689865592101176.67%B74448380695889102081.82%P76809191656690101581.75%B+774810.83%F77599672838890101888.05%A77889685997794102092.92%A79559189959096101692.08%A80368490827797101787.97%A83359187754870101476.02%B89018791848890101991.93%A89398090807090101785.17%A-908292645793101161.87%C92177879878098101988.28%A965787512.87%F
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics139w/CourseReference.html
##-----------------TITLE------------------------##
ICS 139W Spring 2005, Course Reference
##------------------TEXT------------------------##
ICS 139W Spring 2005 |
News |
Course Reference |
Schedule |
Writing Assignments |
About Alex








ICS 139W: Technical Writing and Communication Skills
   Spring 2005
   Course Reference







Instructor information

Alex ThorntonOffice: CS 408FPhone: (949) 824-6624Email:  thornton@ics.uci.edu

Office hours: I will be available in or around my office Tuesdays and Thursdays from 3:45-5:15pm and Wednesdays from 3:30-4:30pm, during which all course-related issues will have the highest priority.  I'm in my office at many other times during the week, and if I'm not working on something urgently, I'll be glad to sit down and talk with you.

Contacting me: I tend to be much easier to reach via email than by phone, so I would suggest using email to contact me under normal circumstances.  When you write me an email, please take a few moments to make sure that the following information is placed somewhere in your message: your name, your student ID#, and which course you're enrolled in (as I'm teaching more than one).







Times and places

The lecture meets on Mondays, Wednesdays, and Fridays from 2:00-2:50pm in PSCB 120.







Textbooks

Writing from A to Z, 5th Editionby Ebest, Alred, Brusaw, and OliuMcGraw-Hill 2005RECOMMENDED

Writing from A to Z is the writing reference that is used in our lower-division writing classes at UCI, so many of you will already have it.  Those of you who don't should acquire either this book, an older version of this book, or some other writing reference that you prefer.  There won't be required readings from this text, but everyone in the course needs to have a general writing reference text available.  Writing from A to Z is a nice choice, since it's organized in alphabetical order by topic.  Want to know how to use dashes and hyphens appropiately?  Look under both dashes and hyphens.  Not sure about when to use who's and when to use whose?  Look under who's/whose.  It's that simple.







Discussion sections

Discussions will meet once per week, beginning Tuesday, April 12.  Much of the time, the discussion section will give you a chance to get individualized help on your writing.  See the Schedule for more information about what will be done in each discussion.

The meeting times and places are:

SectionTime/PlaceSec. 1T 2:00-2:50pmCS 243Sec. 2T 4:00-4:50pmCS 253









Obtaining additional assistance

You can most easily get course questions answered by coming to your lecture or discussion and asking them.  You can also ask questions by sending email to me and/or the TA.  Thus, you can usually get a response to your course-related questions within a few hours (sometimes less frequently on weekends and holidays).  If the questions require a complex or lengthy response, we may ask you to see one of us in person.

Any student who feels he or she may need an accommodation based on the impact of a disability should contact me privately to discuss his or her specific needs.  Also, contact the Disability Services Center at (949) 824-7494 as soon as possible to better ensure that such accommodations, such as alternative test-taking environments or note-taking services, are implemented in a timely fashion.







Grading

Your course grade will be determined from the weighted combination of the following components:

In-class writing sample (pass/fail).  On Wednesday, April 6, each of you will complete an in-class writing sample.  If you don't pass the first sample, you will have a second chance on Friday, April 8.  I will choose a topic for each sample that will be easy to write about, allowing you to concentrate on your writing rather than the underlying ideas.  During the 50-minute class period, I will require you to write roughly 250 words; this should give you plenty of time to revise and rewrite your passage.  To pass, your writing must have essentially perfect mechanics, grammar, and usage, and it must be reasonably clear and well-organized.  You may bring a dictionary or any other reference works if you wish.  Being able to produce clear and correct writing is a requirement for completing lower division writing, so we expect everyone in the class to be able to demonstrate this ability.  If you don't pass the in-class writing sample in two tries, your course grade is guaranteed to be no higher than C-, meaning that you will not be able to satisfy the upper-division writing requirement this quarter.Several writing assignments (80% total).  The assignments, which are described elsewhere on the course Web site, each consist of multiple parts and are weighted differently, depending on how comprehensive they are.Class attendance and participation (20%).  The importance of participation in this course is clear from its weight.  Much of the learning comes from activities we conduct in class, such as peer editing and oral presentations; there is no other way to make them up, and your grade will suffer if you miss them.

As this is a course in communication skills, in addition to writing, oral presentations will play an important role throughout the quarter.  Oral communication and presentation skills are as vital to your success as a computer scientist (or otherwise) as writing skills, whether you're going into a professional career or an academic one.  I know this will be difficult for some of you, but it's important to face the challenge now, when the stakes are relatively low, rather than waiting until your job, your research, or your venture capital funding depend on it.

There are no exams in this course.

Course grades will be determined neither on a normal curve nor a straight scale.  It is guaranteed that overall scores over 90% will receive an A- or better, scores over 80% will receive a B- or better, and scores over 70% will receive a C or better.  However, the actual cutoffs may be lowered at the end of the quarter.  In short, it is not my intention to fail half of the students, nor am I planning on giving only 2% of the students A's, but I prefer not to constrain myself with either a straight scale or a formalized curve.  Extra credit will not be offered in any form.

This course moves forward at a brisk pace, often with more than one assignment in progress simultaneously.  Therefore, late submission of work will not be accepted.







Dropping the course or changing grade option

You may drop the course or change your grade option through the end of Week 2 (Friday, April 15).  I will sign all drop and change cards, so please do not approach your TA with these cards.  Your TA is not authorized to sign them!







Academic dishonesty

As ICS 139W students, you are expected to know and follow the academic dishonesty policies of both the ICS Department and the University as a whole.  Please take a few minutes to read the policies, which can be found at this link.

Plagiarism means presenting somebody else's work as if it's your own.  You may use whatever outside sources are appropriate for an assignment, so long as you cite them.  Any time you use two or more words in a row that you didn't think up and write yourself, you must put the words in quotation marks and indicate where they came from.  (There could be situations where this two-word rule isn't appropriate.  If you think you have one, check with us.)  Even if you paraphrase (state in your own words) someone else's work or ideas, you should cite the source (e.g. "Dijkstra says that unrestricted branching is dangerous.").  Plagiarism is academically dishonest, and we expect that nobody in the class will engage in it.

All of your writing is expected to be completed solely by you, except where otherwise specified.  All submissions are compared to one another using an automated plagiarism detection system (turnitin.com), which compares your prose not only to others in this course, but others in previous quarters, and also millions of documents on the Internet.  Since all of your work is expected to be completed solely by you, you will be held responsible even if you plagiarize, or allow someone to plagiarize from you, only a small portion of a paper.

Violators of academic dishonesty policies are subject to the penalties described in the ICS Department's policy.  They are also subject to an immediate course grade of F, without the possibility of dropping the course to avoid the grade.  Also, be aware that a single documented case of academic dishonesty may preclude you from switching into the ICS major, registering for the ICS minor, joining the ICS Honors Program, and graduating from ICS with honors.







Partly written by Alex Thornton, with portions taken from, or inspired by, course materials by David Kay and Dan Frost.
##------------------URL-------------------------##
http://www.ics.uci.edu/~thornton/ics139w/OralPresentationSchedule.html
##-----------------TITLE------------------------##
ICS 139W Spring 2005, Oral Presentation Schedule
##------------------TEXT------------------------##
ICS 139W Spring 2005 |
News |
Course Reference |
Schedule |
Writing Assignments |
About Alex








ICS 139W Spring 2005
   Oral Presentation Schedule







The following table lists the schedule of oral presentations for this quarter.  Each of you is identified by your "IDSuffix," which is the last four digits of your UCI student ID#.  I've opted for a randomly-generated schedule — using a Java program I wrote, which performed the equivalent of drawing each of your names out of a hat — rather than soliciting preferences, since simultaneously respecting the wishes of 48 students would have been essentially impossible.

IDSuffixPresentation Date & Topic1036M 6/6 (Change Proposal)1396M 5/16 (Intro and Tutorial)1428F 5/27 (Change Proposal)1448F 5/27 (Change Proposal)1555F 5/27 (Change Proposal)1558F 6/3 (Change Proposal)1619F 5/13 (Intro and Tutorial)1701W 5/18 (Intro and Tutorial)1751W 5/18 (Intro and Tutorial)2414F 5/13 (Intro and Tutorial)2817F 6/3 (Change Proposal)3083M 5/16 (Intro and Tutorial)3115M 6/6 (Change Proposal)3313W 6/1 (Change Proposal)3402F 6/3 (Change Proposal)3418W 6/1 (Change Proposal)3758M 6/6 (Change Proposal)4124W 5/18 (Intro and Tutorial)4126W 6/1 (Change Proposal)4553M 5/16 (Intro and Tutorial)4871F 5/13 (Intro and Tutorial)4894F 5/13 (Intro and Tutorial)5176M 5/16 (Intro and Tutorial)5253M 5/16 (Intro and Tutorial)5536W 5/18 (Intro and Tutorial)5765M 5/16 (Intro and Tutorial)6153F 5/27 (Change Proposal)6193W 6/1 (Change Proposal)6421F 6/3 (Change Proposal)6702M 6/6 (Change Proposal)6756F 6/3 (Change Proposal)6923F 5/27 (Change Proposal)7202W 5/18 (Intro and Tutorial)7203M 6/6 (Change Proposal)7253W 6/1 (Change Proposal)7411F 5/13 (Intro and Tutorial)7444F 5/13 (Intro and Tutorial)7680W 6/1 (Change Proposal)7759W 6/1 (Change Proposal)7788W 5/18 (Intro and Tutorial)7955F 5/27 (Change Proposal)8036F 6/3 (Change Proposal)8335M 6/6 (Change Proposal)8901W 5/18 (Intro and Tutorial)8939F 5/27 (Change Proposal)9082M 5/16 (Intro and Tutorial)9217F 6/3 (Change Proposal)9657F 5/13 (Intro and Tutorial)
